import {Routes} from '@angular/router';
import {RouteService} from "../shared/service/route.service";
import {EntityListV2Component} from "./entity-list-v2/entity-list-v2.component";
import {TOSArmorEquipmentListResolver} from "./resolvers/items/tos-armor-equipment-list.resolver";

export const ROUTES_DATABASE: Routes = [
  {
    path: '',
    redirectTo: 'classes',
    pathMatch: 'full'
  },
  {
    path: 'items/armor',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityListV2Component,
    resolve: {
      list: TOSArmorEquipmentListResolver,
    },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  /*
  {
    path: 'attributes',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityListComponent,
    resolve: {
      configuration: AttributeListConfigurationResolver,
      response: TOSAttributeResolver,
    },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'attributes/:id',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityDetailComponent,
    resolve: { response: TOSAttributeResolver },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'books',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityListComponent,
    resolve: {
      configuration: BookListConfigurationResolver,
      response: TOSBookResolver,
    },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'books/:id',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityDetailComponent,
    resolve: { response: TOSBookResolver },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'cards',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityListComponent,
    resolve: {
      configuration: CardListConfigurationResolver,
      response: TOSCardResolver,
    },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'cards/:id',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityDetailComponent,
    resolve: { response: TOSCardResolver },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'classes',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityListComponent,
    resolve: {
      configuration: JobListConfigurationResolver,
      response: TOSJobResolver,
    },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'classes/:id',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityDetailComponent,
    resolve: { response: TOSJobResolver },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'collections',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityListComponent,
    resolve: {
      configuration: CollectionListConfigurationResolver,
      response: TOSCollectionResolver,
    },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'collections/:id',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityDetailComponent,
    resolve: { response: TOSCollectionResolver },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'cubes',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityListComponent,
    resolve: {
      configuration: CubeListConfigurationResolver,
      response: TOSCubeResolver,
    },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'cubes/:id',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityDetailComponent,
    resolve: { response: TOSCubeResolver },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'equipment',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityListComponent,
    resolve: {
      configuration: EquipmentListConfigurationResolver,
      response: TOSEquipmentResolver,
    },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'equipment/:id',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityDetailComponent,
    resolve: { response: TOSEquipmentResolver },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'equipment-sets',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityListComponent,
    resolve: {
      configuration: EquipmentSetListConfigurationResolver,
      response: TOSEquipmentSetResolver,
    },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'equipment-sets/:id',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityDetailComponent,
    resolve: { response: TOSEquipmentSetResolver },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'gems',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityListComponent,
    resolve: {
      configuration: GemListConfigurationResolver,
      response: TOSGemResolver,
    },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'gems/:id',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityDetailComponent,
    resolve: { response: TOSGemResolver },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'items',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityListComponent,
    resolve: {
      configuration: ItemListConfigurationResolver,
      response: TOSItemResolver,
    },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'items/:id',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityDetailComponent,
    resolve: { response: TOSItemResolver },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'maps',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityListComponent,
    resolve: {
      configuration: MapListConfigurationResolver,
      response: TOSMapResolver,
    },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'maps/:id',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityDetailMapComponent,
    resolve: { response: TOSMapResolver },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'monsters',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityListComponent,
    resolve: {
      configuration: MonsterListConfigurationResolver,
      response: TOSMonsterResolver,
    },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'monsters/:id',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityDetailComponent,
    resolve: { response: TOSMonsterResolver },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'npcs',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityListComponent,
    resolve: {
      configuration: NPCListConfigurationResolver,
      response: TOSNPCResolver,
    },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'npcs/:id',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityDetailComponent,
    resolve: { response: TOSNPCResolver },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'recipes',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityListComponent,
    resolve: {
      configuration: RecipeListConfigurationResolver,
      response: TOSRecipeResolver,
    },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'recipes/:id',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityDetailComponent,
    resolve: { response: TOSRecipeResolver },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'skills',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityListComponent,
    resolve: {
      configuration: SkillListConfigurationResolver,
      response: TOSSkillResolver,
    },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
  {
    path: 'skills/:id',
    canActivate: [RouteService],
    canDeactivate: [RouteService],
    component: EntityDetailComponent,
    resolve: { response: TOSSkillResolver },
    runGuardsAndResolvers: 'paramsOrQueryParamsChange',
  },
   */
];
