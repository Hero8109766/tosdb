// Copyright 2010 The Emscripten Authors.  All rights reserved.
// Emscripten is available under two separate licenses, the MIT license and the
// University of Illinois/NCSA Open Source License.  Both these licenses can be
// found in the LICENSE file.

// The Module object: Our interface to the outside world. We import
// and export values on it. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to check if Module already exists (e.g. case 3 above).
// Substitution will be replaced with actual code on later stage of the build,
// this way Closure Compiler will not mangle it (e.g. case 4. above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module = typeof Module !== 'undefined' ? Module : {};

// --pre-jses are emitted after the Module integration code, so that they can
// refer to Module (if they choose; they can also define Module)
// {{PRE_JSES}}

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
var key;
for (key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

Module['arguments'] = [];
Module['thisProgram'] = './this.program';
Module['quit'] = function(status, toThrow) {
  throw toThrow;
};
Module['preRun'] = [];
Module['postRun'] = [];

// Determine the runtime environment we are in. You can customize this by
// setting the ENVIRONMENT setting at compile time (see settings.js).

var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;
ENVIRONMENT_IS_WEB = typeof window === 'object';
ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;



// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)




// `/` should be present at the end if `scriptDirectory` is not empty
var scriptDirectory = '';
function locateFile(path) {
  if (Module['locateFile']) {
    return Module['locateFile'](path, scriptDirectory);
  } else {
    return scriptDirectory + path;
  }
}

if (ENVIRONMENT_IS_NODE) {
  scriptDirectory = __dirname + '/';

  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  var nodeFS;
  var nodePath;

  Module['read'] = function shell_read(filename, binary) {
    var ret;
      if (!nodeFS) nodeFS = require('fs');
      if (!nodePath) nodePath = require('path');
      filename = nodePath['normalize'](filename);
      ret = nodeFS['readFileSync'](filename);
    return binary ? ret : ret.toString();
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  if (process['argv'].length > 1) {
    Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });
  // Currently node will swallow unhandled rejections, but this behavior is
  // deprecated, and in the future it will exit with error status.
  process['on']('unhandledRejection', abort);

  Module['quit'] = function(status) {
    process['exit'](status);
  };

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
} else
if (ENVIRONMENT_IS_SHELL) {


  if (typeof read != 'undefined') {
    Module['read'] = function shell_read(f) {
      return read(f);
    };
  }

  Module['readBinary'] = function readBinary(f) {
    var data;
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof quit === 'function') {
    Module['quit'] = function(status) {
      quit(status);
    }
  }
} else
if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled
    scriptDirectory = self.location.href;
  } else if (document.currentScript) { // web
    scriptDirectory = document.currentScript.src;
  }
  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.
  // otherwise, slice off the final part of the url to find the script directory.
  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,
  // and scriptDirectory will correctly be replaced with an empty string.
  if (scriptDirectory.indexOf('blob:') !== 0) {
    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf('/')+1);
  } else {
    scriptDirectory = '';
  }


  Module['read'] = function shell_read(url) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url, false);
      xhr.send(null);
      return xhr.responseText;
  };

  if (ENVIRONMENT_IS_WORKER) {
    Module['readBinary'] = function readBinary(url) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, false);
        xhr.responseType = 'arraybuffer';
        xhr.send(null);
        return new Uint8Array(xhr.response);
    };
  }

  Module['readAsync'] = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
        return;
      }
      onerror();
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  Module['setWindowTitle'] = function(title) { document.title = title };
} else
{
}

// Set up the out() and err() hooks, which are how we can print to stdout or
// stderr, respectively.
// If the user provided Module.print or printErr, use that. Otherwise,
// console.log is checked first, as 'print' on the web will open a print dialogue
// printErr is preferable to console.warn (works better in shells)
// bind(console) is necessary to fix IE/Edge closed dev tools panel behavior.
var out = Module['print'] || (typeof console !== 'undefined' ? console.log.bind(console) : (typeof print !== 'undefined' ? print : null));
var err = Module['printErr'] || (typeof printErr !== 'undefined' ? printErr : ((typeof console !== 'undefined' && console.warn.bind(console)) || out));

// Merge back in the overrides
for (key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = undefined;

// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message



// Copyright 2017 The Emscripten Authors.  All rights reserved.
// Emscripten is available under two separate licenses, the MIT license and the
// University of Illinois/NCSA Open Source License.  Both these licenses can be
// found in the LICENSE file.

// {{PREAMBLE_ADDITIONS}}

var STACK_ALIGN = 16;


function dynamicAlloc(size) {
  var ret = HEAP32[DYNAMICTOP_PTR>>2];
  var end = (ret + size + 15) & -16;
  if (end <= _emscripten_get_heap_size()) {
    HEAP32[DYNAMICTOP_PTR>>2] = end;
  } else {
    return 0;
  }
  return ret;
}

function alignMemory(size, factor) {
  if (!factor) factor = STACK_ALIGN; // stack alignment (16-byte) by default
  return Math.ceil(size / factor) * factor;
}

function getNativeTypeSize(type) {
  switch (type) {
    case 'i1': case 'i8': return 1;
    case 'i16': return 2;
    case 'i32': return 4;
    case 'i64': return 8;
    case 'float': return 4;
    case 'double': return 8;
    default: {
      if (type[type.length-1] === '*') {
        return 4; // A pointer
      } else if (type[0] === 'i') {
        var bits = parseInt(type.substr(1));
        assert(bits % 8 === 0, 'getNativeTypeSize invalid bits ' + bits + ', type ' + type);
        return bits / 8;
      } else {
        return 0;
      }
    }
  }
}

function warnOnce(text) {
  if (!warnOnce.shown) warnOnce.shown = {};
  if (!warnOnce.shown[text]) {
    warnOnce.shown[text] = 1;
    err(text);
  }
}

var asm2wasmImports = { // special asm2wasm imports
    "f64-rem": function(x, y) {
        return x % y;
    },
    "debugger": function() {
        debugger;
    }
};



var jsCallStartIndex = 1;
var functionPointers = new Array(0);

// Wraps a JS function as a wasm function with a given signature.
// In the future, we may get a WebAssembly.Function constructor. Until then,
// we create a wasm module that takes the JS function as an import with a given
// signature, and re-exports that as a wasm function.
function convertJsFunctionToWasm(func, sig) {
  // The module is static, with the exception of the type section, which is
  // generated based on the signature passed in.
  var typeSection = [
    0x01, // id: section,
    0x00, // length: 0 (placeholder)
    0x01, // count: 1
    0x60, // form: func
  ];
  var sigRet = sig.slice(0, 1);
  var sigParam = sig.slice(1);
  var typeCodes = {
    'i': 0x7f, // i32
    'j': 0x7e, // i64
    'f': 0x7d, // f32
    'd': 0x7c, // f64
  };

  // Parameters, length + signatures
  typeSection.push(sigParam.length);
  for (var i = 0; i < sigParam.length; ++i) {
    typeSection.push(typeCodes[sigParam[i]]);
  }

  // Return values, length + signatures
  // With no multi-return in MVP, either 0 (void) or 1 (anything else)
  if (sigRet == 'v') {
    typeSection.push(0x00);
  } else {
    typeSection = typeSection.concat([0x01, typeCodes[sigRet]]);
  }

  // Write the overall length of the type section back into the section header
  // (excepting the 2 bytes for the section id and length)
  typeSection[1] = typeSection.length - 2;

  // Rest of the module is static
  var bytes = new Uint8Array([
    0x00, 0x61, 0x73, 0x6d, // magic ("\0asm")
    0x01, 0x00, 0x00, 0x00, // version: 1
  ].concat(typeSection, [
    0x02, 0x07, // import section
      // (import "e" "f" (func 0 (type 0)))
      0x01, 0x01, 0x65, 0x01, 0x66, 0x00, 0x00,
    0x07, 0x05, // export section
      // (export "f" (func 0 (type 0)))
      0x01, 0x01, 0x66, 0x00, 0x00,
  ]));

   // We can compile this wasm module synchronously because it is very small.
  // This accepts an import (at "e.f"), that it reroutes to an export (at "f")
  var module = new WebAssembly.Module(bytes);
  var instance = new WebAssembly.Instance(module, {
    e: {
      f: func
    }
  });
  var wrappedFunc = instance.exports.f;
  return wrappedFunc;
}

// Add a wasm function to the table.
function addFunctionWasm(func, sig) {
  var table = wasmTable;
  var ret = table.length;

  // Grow the table
  try {
    table.grow(1);
  } catch (err) {
    if (!err instanceof RangeError) {
      throw err;
    }
    throw 'Unable to grow wasm table. Use a higher value for RESERVED_FUNCTION_POINTERS or set ALLOW_TABLE_GROWTH.';
  }

  // Insert new element
  try {
    // Attempting to call this with JS function will cause of table.set() to fail
    table.set(ret, func);
  } catch (err) {
    if (!err instanceof TypeError) {
      throw err;
    }
    assert(typeof sig !== 'undefined', 'Missing signature argument to addFunction');
    var wrapped = convertJsFunctionToWasm(func, sig);
    table.set(ret, wrapped);
  }

  return ret;
}

function removeFunctionWasm(index) {
  // TODO(sbc): Look into implementing this to allow re-using of table slots
}

// 'sig' parameter is required for the llvm backend but only when func is not
// already a WebAssembly function.
function addFunction(func, sig) {


  var base = 0;
  for (var i = base; i < base + 0; i++) {
    if (!functionPointers[i]) {
      functionPointers[i] = func;
      return jsCallStartIndex + i;
    }
  }
  throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';

}

function removeFunction(index) {

  functionPointers[index-jsCallStartIndex] = null;
}

var funcWrappers = {};

function getFuncWrapper(func, sig) {
  if (!func) return; // on null pointer, return undefined
  assert(sig);
  if (!funcWrappers[sig]) {
    funcWrappers[sig] = {};
  }
  var sigCache = funcWrappers[sig];
  if (!sigCache[func]) {
    // optimize away arguments usage in common cases
    if (sig.length === 1) {
      sigCache[func] = function dynCall_wrapper() {
        return dynCall(sig, func);
      };
    } else if (sig.length === 2) {
      sigCache[func] = function dynCall_wrapper(arg) {
        return dynCall(sig, func, [arg]);
      };
    } else {
      // general case
      sigCache[func] = function dynCall_wrapper() {
        return dynCall(sig, func, Array.prototype.slice.call(arguments));
      };
    }
  }
  return sigCache[func];
}


function makeBigInt(low, high, unsigned) {
  return unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0));
}

function dynCall(sig, ptr, args) {
  if (args && args.length) {
    return Module['dynCall_' + sig].apply(null, [ptr].concat(args));
  } else {
    return Module['dynCall_' + sig].call(null, ptr);
  }
}

var tempRet0 = 0;

var setTempRet0 = function(value) {
  tempRet0 = value;
}

var getTempRet0 = function() {
  return tempRet0;
}


var Runtime = {
};

// The address globals begin at. Very low in memory, for code size and optimization opportunities.
// Above 0 is static memory, starting with globals.
// Then the stack.
// Then 'dynamic' memory for sbrk.
var GLOBAL_BASE = 1024;




// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html


if (typeof WebAssembly !== 'object') {
  err('no native wasm support detected');
}


/** @type {function(number, string, boolean=)} */
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for getValue: ' + type);
    }
  return null;
}




// Wasm globals

var wasmMemory;

// Potentially used for direct table calls.
var wasmTable;


//========================================
// Runtime essentials
//========================================

// whether we are quitting the application. no code should run after this.
// set in exit() and abort()
var ABORT = false;

// set by exit() and abort().  Passed to 'onExit' handler.
// NOTE: This is also used as the process return code code in shell environments
// but only when noExitRuntime is false.
var EXITSTATUS = 0;

/** @type {function(*, string=)} */
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');
  return func;
}

// C calling interface.
function ccall(ident, returnType, argTypes, args, opts) {
  // For fast lookup of conversion functions
  var toC = {
    'string': function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        var len = (str.length << 2) + 1;
        ret = stackAlloc(len);
        stringToUTF8(str, ret, len);
      }
      return ret;
    },
    'array': function(arr) {
      var ret = stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    }
  };

  function convertReturnValue(ret) {
    if (returnType === 'string') return UTF8ToString(ret);
    if (returnType === 'boolean') return Boolean(ret);
    return ret;
  }

  var func = getCFunc(ident);
  var cArgs = [];
  var stack = 0;
  if (args) {
    for (var i = 0; i < args.length; i++) {
      var converter = toC[argTypes[i]];
      if (converter) {
        if (stack === 0) stack = stackSave();
        cArgs[i] = converter(args[i]);
      } else {
        cArgs[i] = args[i];
      }
    }
  }
  var ret = func.apply(null, cArgs);
  ret = convertReturnValue(ret);
  if (stack !== 0) stackRestore(stack);
  return ret;
}

function cwrap(ident, returnType, argTypes, opts) {
  argTypes = argTypes || [];
  // When the function takes numbers and returns a number, we can just return
  // the original function
  var numericArgs = argTypes.every(function(type){ return type === 'number'});
  var numericRet = returnType !== 'string';
  if (numericRet && numericArgs && !opts) {
    return getCFunc(ident);
  }
  return function() {
    return ccall(ident, returnType, argTypes, arguments, opts);
  }
}

/** @type {function(number, number, string, boolean=)} */
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_DYNAMIC = 2; // Cannot be freed except through sbrk
var ALLOC_NONE = 3; // Do not allocate

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc,
    stackAlloc,
    dynamicAlloc][allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var stop;
    ptr = ret;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!runtimeInitialized) return dynamicAlloc(size);
  return _malloc(size);
}




/** @type {function(number, number=)} */
function Pointer_stringify(ptr, length) {
  abort("this function has been removed - you should use UTF8ToString(ptr, maxBytesToRead) instead!");
}

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAPU8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}


// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;

/**
 * @param {number} idx
 * @param {number=} maxBytesToRead
 * @return {string}
 */
function UTF8ArrayToString(u8Array, idx, maxBytesToRead) {
  var endIdx = idx + maxBytesToRead;
  var endPtr = idx;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  // (As a tiny code save trick, compare endPtr against endIdx using a negation, so that undefined means Infinity)
  while (u8Array[endPtr] && !(endPtr >= endIdx)) ++endPtr;

  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
  } else {
    var str = '';
    // If building with TextDecoder, we have already computed the string length above, so test loop end condition against that
    while (idx < endPtr) {
      // For UTF8 byte structure, see:
      // http://en.wikipedia.org/wiki/UTF-8#Description
      // https://www.ietf.org/rfc/rfc2279.txt
      // https://tools.ietf.org/html/rfc3629
      var u0 = u8Array[idx++];
      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
      var u1 = u8Array[idx++] & 63;
      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
      var u2 = u8Array[idx++] & 63;
      if ((u0 & 0xF0) == 0xE0) {
        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
      } else {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (u8Array[idx++] & 63);
      }

      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
      }
    }
  }
  return str;
}

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns a
// copy of that string as a Javascript String object.
// maxBytesToRead: an optional length that specifies the maximum number of bytes to read. You can omit
//                 this parameter to scan the string until the first \0 byte. If maxBytesToRead is
//                 passed, and the string at [ptr, ptr+maxBytesToReadr[ contains a null byte in the
//                 middle, then the string will cut short at that byte index (i.e. maxBytesToRead will
//                 not produce a string of exact length [ptr, ptr+maxBytesToRead[)
//                 N.B. mixing frequent uses of UTF8ToString() with and without maxBytesToRead may
//                 throw JS JIT optimizations off, so it is worth to consider consistently using one
//                 style or the other.
/**
 * @param {number} ptr
 * @param {number=} maxBytesToRead
 * @return {string}
 */
function UTF8ToString(ptr, maxBytesToRead) {
  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';
}

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array.
//                    This count should include the null terminator,
//                    i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) {
      var u1 = str.charCodeAt(++i);
      u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);
    }
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.
function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) ++len;
    else if (u <= 0x7FF) len += 2;
    else if (u <= 0xFFFF) len += 3;
    else len += 4;
  }
  return len;
}


// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;
function UTF16ToString(ptr) {
  var endPtr = ptr;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  var idx = endPtr >> 1;
  while (HEAP16[idx]) ++idx;
  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var i = 0;

    var str = '';
    while (1) {
      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
      if (codeUnit == 0) return str;
      ++i;
      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
      str += String.fromCharCode(codeUnit);
    }
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}

// Allocate heap space for a JS string, and write it there.
// It is the responsibility of the caller to free() that memory.
function allocateUTF8(str) {
  var size = lengthBytesUTF8(str) + 1;
  var ret = _malloc(size);
  if (ret) stringToUTF8Array(str, HEAP8, ret, size);
  return ret;
}

// Allocate stack space for a JS string, and write it there.
function allocateUTF8OnStack(str) {
  var size = lengthBytesUTF8(str) + 1;
  var ret = stackAlloc(size);
  stringToUTF8Array(str, HEAP8, ret, size);
  return ret;
}

// Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.
/** @deprecated */
function writeStringToMemory(string, buffer, dontAddNull) {
  warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');

  var /** @type {number} */ lastChar, /** @type {number} */ end;
  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }
  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}

function writeArrayToMemory(array, buffer) {
  HEAP8.set(array, buffer);
}

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}





function demangle(func) {
  return func;
}

function demangleAll(text) {
  var regex =
    /__Z[\w\d_]+/g;
  return text.replace(regex,
    function(x) {
      var y = demangle(x);
      return x === y ? x : (y + ' [' + x + ']');
    });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  var js = jsStackTrace();
  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
  return demangleAll(js);
}



// Memory management

var PAGE_SIZE = 16384;
var WASM_PAGE_SIZE = 65536;
var ASMJS_PAGE_SIZE = 16777216;

function alignUp(x, multiple) {
  if (x % multiple > 0) {
    x += multiple - (x % multiple);
  }
  return x;
}

var HEAP,
/** @type {ArrayBuffer} */
  buffer,
/** @type {Int8Array} */
  HEAP8,
/** @type {Uint8Array} */
  HEAPU8,
/** @type {Int16Array} */
  HEAP16,
/** @type {Uint16Array} */
  HEAPU16,
/** @type {Int32Array} */
  HEAP32,
/** @type {Uint32Array} */
  HEAPU32,
/** @type {Float32Array} */
  HEAPF32,
/** @type {Float64Array} */
  HEAPF64;

function updateGlobalBufferViews() {
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
}


var STATIC_BASE = 1024,
    STACK_BASE = 20272,
    STACKTOP = STACK_BASE,
    STACK_MAX = 5263152,
    DYNAMIC_BASE = 5263152,
    DYNAMICTOP_PTR = 20240;




var TOTAL_STACK = 5242880;

var INITIAL_TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
if (INITIAL_TOTAL_MEMORY < TOTAL_STACK) err('TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + INITIAL_TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');

// Initialize the runtime's memory







// Use a provided buffer, if there is one, or else allocate a new one
if (Module['buffer']) {
  buffer = Module['buffer'];
} else {
  // Use a WebAssembly memory where available
  if (typeof WebAssembly === 'object' && typeof WebAssembly.Memory === 'function') {
    wasmMemory = new WebAssembly.Memory({ 'initial': INITIAL_TOTAL_MEMORY / WASM_PAGE_SIZE, 'maximum': INITIAL_TOTAL_MEMORY / WASM_PAGE_SIZE });
    buffer = wasmMemory.buffer;
  } else
  {
    buffer = new ArrayBuffer(INITIAL_TOTAL_MEMORY);
  }
}
updateGlobalBufferViews();


HEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;






// Endianness check (note: assumes compiler arch was little-endian)

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Module['dynCall_v'](func);
      } else {
        Module['dynCall_vi'](func, callback.arg);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the main() is called

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
TTY.init();
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  FS.ignorePermissions = false;
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}

function addOnExit(cb) {
}

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}



var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_max = Math.max;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;



// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// Module.preRun (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function getUniqueRunDependency(id) {
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;






// Copyright 2017 The Emscripten Authors.  All rights reserved.
// Emscripten is available under two separate licenses, the MIT license and the
// University of Illinois/NCSA Open Source License.  Both these licenses can be
// found in the LICENSE file.

// Prefix of data URIs emitted by SINGLE_FILE and related options.
var dataURIPrefix = 'data:application/octet-stream;base64,';

// Indicates whether filename is a base64 data URI.
function isDataURI(filename) {
  return String.prototype.startsWith ?
      filename.startsWith(dataURIPrefix) :
      filename.indexOf(dataURIPrefix) === 0;
}




var wasmBinaryFile = 'lua-compiler.wasm';
if (!isDataURI(wasmBinaryFile)) {
  wasmBinaryFile = locateFile(wasmBinaryFile);
}

function getBinary() {
  try {
    if (Module['wasmBinary']) {
      return new Uint8Array(Module['wasmBinary']);
    }
    if (Module['readBinary']) {
      return Module['readBinary'](wasmBinaryFile);
    } else {
      throw "both async and sync fetching of the wasm failed";
    }
  }
  catch (err) {
    abort(err);
  }
}

function getBinaryPromise() {
  // if we don't have the binary yet, and have the Fetch api, use that
  // in some environments, like Electron's render process, Fetch api may be present, but have a different context than expected, let's only use it on the Web
  if (!Module['wasmBinary'] && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === 'function') {
    return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {
      if (!response['ok']) {
        throw "failed to load wasm binary file at '" + wasmBinaryFile + "'";
      }
      return response['arrayBuffer']();
    }).catch(function () {
      return getBinary();
    });
  }
  // Otherwise, getBinary should be able to get it synchronously
  return new Promise(function(resolve, reject) {
    resolve(getBinary());
  });
}

// Create the wasm instance.
// Receives the wasm imports, returns the exports.
function createWasm(env) {
  // prepare imports
  var info = {
    'env': env
    ,
    'global': {
      'NaN': NaN,
      'Infinity': Infinity
    },
    'global.Math': Math,
    'asm2wasm': asm2wasmImports
  };
  // Load the wasm module and create an instance of using native support in the JS engine.
  // handle a generated wasm instance, receiving its exports and
  // performing other necessary setup
  function receiveInstance(instance, module) {
    var exports = instance.exports;
    Module['asm'] = exports;
    removeRunDependency('wasm-instantiate');
  }
  addRunDependency('wasm-instantiate');

  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback
  // to manually instantiate the Wasm module themselves. This allows pages to run the instantiation parallel
  // to any other async startup actions they are performing.
  if (Module['instantiateWasm']) {
    try {
      return Module['instantiateWasm'](info, receiveInstance);
    } catch(e) {
      err('Module.instantiateWasm callback failed with error: ' + e);
      return false;
    }
  }

  function receiveInstantiatedSource(output) {
    // 'output' is a WebAssemblyInstantiatedSource object which has both the module and instance.
    // receiveInstance() will swap in the exports (to Module.asm) so they can be called
      // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.
      // When the regression is fixed, can restore the above USE_PTHREADS-enabled path.
    receiveInstance(output['instance']);
  }
  function instantiateArrayBuffer(receiver) {
    getBinaryPromise().then(function(binary) {
      return WebAssembly.instantiate(binary, info);
    }).then(receiver, function(reason) {
      err('failed to asynchronously prepare wasm: ' + reason);
      abort(reason);
    });
  }
  // Prefer streaming instantiation if available.
  if (!Module['wasmBinary'] &&
      typeof WebAssembly.instantiateStreaming === 'function' &&
      !isDataURI(wasmBinaryFile) &&
      typeof fetch === 'function') {
    WebAssembly.instantiateStreaming(fetch(wasmBinaryFile, { credentials: 'same-origin' }), info)
      .then(receiveInstantiatedSource, function(reason) {
        // We expect the most common failure cause to be a bad MIME type for the binary,
        // in which case falling back to ArrayBuffer instantiation should work.
        err('wasm streaming compile failed: ' + reason);
        err('falling back to ArrayBuffer instantiation');
        instantiateArrayBuffer(receiveInstantiatedSource);
      });
  } else {
    instantiateArrayBuffer(receiveInstantiatedSource);
  }
  return {}; // no exports yet; we'll fill them in later
}

// Provide an "asm.js function" for the application, called to "link" the asm.js module. We instantiate
// the wasm module at that time, and it receives imports and provides exports and so forth, the app
// doesn't need to care that it is wasm or asm.js.

Module['asm'] = function(global, env, providedBuffer) {
  // memory was already allocated (so js could use the buffer)
  env['memory'] = wasmMemory
  ;
  // import table
  env['table'] = wasmTable = new WebAssembly.Table({
    'initial': 298,
    'maximum': 298,
    'element': 'anyfunc'
  });
  // With the wasm backend __memory_base and __table_base and only needed for
  // relocatable output.
  env['__memory_base'] = 1024; // tell the memory segments where to place themselves
  // table starts at 0 by default (even in dynamic linking, for the main module)
  env['__table_base'] = 0;

  var exports = createWasm(env);
  return exports;
};

// === Body ===

var ASM_CONSTS = [];





// STATICTOP = STATIC_BASE + 19248;
/* global initializers */  __ATINIT__.push({ func: function() { ___emscripten_environ_constructor() } });








/* no memory initializer */
var tempDoublePtr = 20256

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
}

function copyTempDouble(ptr) {
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];
  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];
  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];
  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];
}

// {{PRE_LIBRARY}}


  
  var ENV={};function ___buildEnvironment(environ) {
      // WARNING: Arbitrary limit!
      var MAX_ENV_VALUES = 64;
      var TOTAL_ENV_SIZE = 1024;
  
      // Statically allocate memory for the environment.
      var poolPtr;
      var envPtr;
      if (!___buildEnvironment.called) {
        ___buildEnvironment.called = true;
        // Set default values. Use string keys for Closure Compiler compatibility.
        ENV['USER'] = ENV['LOGNAME'] = 'web_user';
        ENV['PATH'] = '/';
        ENV['PWD'] = '/';
        ENV['HOME'] = '/home/web_user';
        ENV['LANG'] = 'C.UTF-8';
        ENV['_'] = Module['thisProgram'];
        // Allocate memory.
        poolPtr = getMemory(TOTAL_ENV_SIZE);
        envPtr = getMemory(MAX_ENV_VALUES * 4);
        HEAP32[((envPtr)>>2)]=poolPtr;
        HEAP32[((environ)>>2)]=envPtr;
      } else {
        envPtr = HEAP32[((environ)>>2)];
        poolPtr = HEAP32[((envPtr)>>2)];
      }
  
      // Collect key=value lines.
      var strings = [];
      var totalSize = 0;
      for (var key in ENV) {
        if (typeof ENV[key] === 'string') {
          var line = key + '=' + ENV[key];
          strings.push(line);
          totalSize += line.length;
        }
      }
      if (totalSize > TOTAL_ENV_SIZE) {
        throw new Error('Environment size exceeded TOTAL_ENV_SIZE!');
      }
  
      // Make new.
      var ptrSize = 4;
      for (var i = 0; i < strings.length; i++) {
        var line = strings[i];
        writeAsciiToMemory(line, poolPtr);
        HEAP32[(((envPtr)+(i * ptrSize))>>2)]=poolPtr;
        poolPtr += line.length + 1;
      }
      HEAP32[(((envPtr)+(strings.length * ptrSize))>>2)]=0;
    }

  
  
  function _emscripten_get_now() { abort() }
  
  function _emscripten_get_now_is_monotonic() {
      // return whether emscripten_get_now is guaranteed monotonic; the Date.now
      // implementation is not :(
      return (0
        || ENVIRONMENT_IS_NODE
        || (typeof dateNow !== 'undefined')
        || (typeof performance === 'object' && performance && typeof performance['now'] === 'function')
        );
    }
  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      return value;
    }function _clock_gettime(clk_id, tp) {
      // int clock_gettime(clockid_t clk_id, struct timespec *tp);
      var now;
      if (clk_id === 0) {
        now = Date.now();
      } else if (clk_id === 1 && _emscripten_get_now_is_monotonic()) {
        now = _emscripten_get_now();
      } else {
        ___setErrNo(22);
        return -1;
      }
      HEAP32[((tp)>>2)]=(now/1000)|0; // seconds
      HEAP32[(((tp)+(4))>>2)]=((now % 1000)*1000*1000)|0; // nanoseconds
      return 0;
    }function ___clock_gettime(a0,a1
  /*``*/) {
  return _clock_gettime(a0,a1);
  }

  function ___lock() {}

  function ___map_file(pathname, size) {
      ___setErrNo(1);
      return -1;
    }

  
  
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up; up--) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/emscripten-core/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/emscripten-core/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(19);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(6);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(5);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(11);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(6);
          }
          try {
            for (var i = 0; i < length; i++) {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            }
          } catch (e) {
            throw new FS.ErrnoError(5);
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              // we will read data by chunks of BUFSIZE
              var BUFSIZE = 256;
              var buf = new Buffer(BUFSIZE);
              var bytesRead = 0;
  
              var isPosixPlatform = (process.platform != 'win32'); // Node doesn't offer a direct check, so test by exclusion
  
              var fd = process.stdin.fd;
              if (isPosixPlatform) {
                // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)
                var usingDevice = false;
                try {
                  fd = fs.openSync('/dev/stdin', 'r');
                  usingDevice = true;
                } catch (e) {}
              }
  
              try {
                bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
              } catch(e) {
                // Cross-platform differences: on Windows, reading EOF throws an exception, but on other OSes,
                // reading EOF returns 0. Uniformize behavior by treating the EOF exception to return 0.
                if (e.toString().indexOf('EOF') != -1) bytesRead = 0;
                else throw e;
              }
  
              if (usingDevice) { fs.closeSync(fd); }
              if (bytesRead > 0) {
                result = buf.slice(0, bytesRead).toString('utf-8');
              } else {
                result = null;
              }
            } else
            if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            out(UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            out(UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            err(UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val);
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            err(UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }}};
  
  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(1);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap,
                msync: MEMFS.stream_ops.msync
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
        var prevCapacity = node.contents ? node.contents.length : 0;
        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
        // avoid overshooting the allocation cap by a very large margin.
        var CAPACITY_DOUBLING_MAX = 1024 * 1024;
        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
        var oldContents = node.contents;
        node.contents = new Uint8Array(newCapacity); // Allocate new storage.
        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
        return;
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[2];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(39);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(39);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(22);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
  
          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) {
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
  
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else {
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(22);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(19);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(12);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        },msync:function (stream, buffer, offset, length, mmapFlags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(19);
          }
          if (mmapFlags & 2) {
            // MAP_PRIVATE calls need not to be synced back to underlying fs
            return 0;
          }
  
          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
          // should we check if bytesWritten and length are the same?
          return 0;
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        if (typeof indexedDB !== 'undefined') return indexedDB;
        var ret = null;
        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        assert(ret, 'IDBFS used, but indexedDB not supported');
        return ret;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        if (!req) {
          return callback("Unable to connect to IndexedDB");
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          if (!fileStore.indexNames.contains('timestamp')) {
            fileStore.createIndex('timestamp', 'timestamp', { unique: false });
          }
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          try {
            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
            transaction.onerror = function(e) {
              callback(this.error);
              e.preventDefault();
            };
  
            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
            var index = store.index('timestamp');
  
            index.openKeyCursor().onsuccess = function(event) {
              var cursor = event.target.result;
  
              if (!cursor) {
                return callback(null, { type: 'remote', db: db, entries: entries });
              }
  
              entries[cursor.primaryKey] = { timestamp: cursor.key };
  
              cursor.continue();
            };
          } catch (e) {
            return callback(e);
          }
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
          node.contents = MEMFS.getFileDataAsTypedArray(node);
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.chmod(path, entry.mode);
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function(e) {
          done(this.error);
          e.preventDefault();
        };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
        var flags = process["binding"]("constants");
        // Node.js 4 compatibility: it has no namespaces for constants
        if (flags["fs"]) {
          flags = flags["fs"];
        }
        NODEFS.flagsForNodeMap = {
          "1024": flags["O_APPEND"],
          "64": flags["O_CREAT"],
          "128": flags["O_EXCL"],
          "0": flags["O_RDONLY"],
          "2": flags["O_RDWR"],
          "4096": flags["O_SYNC"],
          "512": flags["O_TRUNC"],
          "1": flags["O_WRONLY"]
        };
      },bufferFrom:function (arrayBuffer) {
        // Node.js < 4.5 compatibility: Buffer.from does not support ArrayBuffer
        // Buffer.from before 4.5 was just a method inherited from Uint8Array
        // Buffer.alloc has been added with Buffer.from together, so check it instead
        return Buffer.alloc ? Buffer.from(arrayBuffer) : new Buffer(arrayBuffer);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(22);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // Node.js on Windows never represents permission bit 'x', so
            // propagate read bits to execute bits
            stat.mode = stat.mode | ((stat.mode & 292) >> 2);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(-e.errno); // syscall errnos are negated, node's are not
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsForNode:function (flags) {
        flags &= ~0x200000 /*O_PATH*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x800 /*O_NONBLOCK*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x8000 /*O_LARGEFILE*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x80000 /*O_CLOEXEC*/; // Some applications may pass it; it makes no sense for a single process.
        var newFlags = 0;
        for (var k in NODEFS.flagsForNodeMap) {
          if (flags & k) {
            newFlags |= NODEFS.flagsForNodeMap[k];
            flags ^= k;
          }
        }
  
        if (!flags) {
          return newFlags;
        } else {
          throw new FS.ErrnoError(22);
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            path = fs.readlinkSync(path);
            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
            return path;
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsForNode(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },read:function (stream, buffer, offset, length, position) {
          // Node.js < 6 compatibility: node errors on 0 length reads
          if (length === 0) return 0;
          try {
            return fs.readSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);
          } catch (e) {
            throw new FS.ErrnoError(-e.errno);
          }
        },write:function (stream, buffer, offset, length, position) {
          try {
            return fs.writeSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);
          } catch (e) {
            throw new FS.ErrnoError(-e.errno);
          }
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(-e.errno);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(22);
          }
  
          return position;
        }}};
  
  var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function (mount) {
        assert(ENVIRONMENT_IS_WORKER);
        if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();
        var root = WORKERFS.createNode(null, '/', WORKERFS.DIR_MODE, 0);
        var createdParents = {};
        function ensureParent(path) {
          // return the parent node, creating subdirs as necessary
          var parts = path.split('/');
          var parent = root;
          for (var i = 0; i < parts.length-1; i++) {
            var curr = parts.slice(0, i+1).join('/');
            // Issue 4254: Using curr as a node name will prevent the node
            // from being found in FS.nameTable when FS.open is called on
            // a path which holds a child of this node,
            // given that all FS functions assume node names
            // are just their corresponding parts within their given path,
            // rather than incremental aggregates which include their parent's
            // directories.
            if (!createdParents[curr]) {
              createdParents[curr] = WORKERFS.createNode(parent, parts[i], WORKERFS.DIR_MODE, 0);
            }
            parent = createdParents[curr];
          }
          return parent;
        }
        function base(path) {
          var parts = path.split('/');
          return parts[parts.length-1];
        }
        // We also accept FileList here, by using Array.prototype
        Array.prototype.forEach.call(mount.opts["files"] || [], function(file) {
          WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
        });
        (mount.opts["blobs"] || []).forEach(function(obj) {
          WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
        });
        (mount.opts["packages"] || []).forEach(function(pack) {
          pack['metadata'].files.forEach(function(file) {
            var name = file.filename.substr(1); // remove initial slash
            WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack['blob'].slice(file.start, file.end));
          });
        });
        return root;
      },createNode:function (parent, name, mode, dev, contents, mtime) {
        var node = FS.createNode(parent, name, mode);
        node.mode = mode;
        node.node_ops = WORKERFS.node_ops;
        node.stream_ops = WORKERFS.stream_ops;
        node.timestamp = (mtime || new Date).getTime();
        assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
        if (mode === WORKERFS.FILE_MODE) {
          node.size = contents.size;
          node.contents = contents;
        } else {
          node.size = 4096;
          node.contents = {};
        }
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },node_ops:{getattr:function (node) {
          return {
            dev: 1,
            ino: undefined,
            mode: node.mode,
            nlink: 1,
            uid: 0,
            gid: 0,
            rdev: undefined,
            size: node.size,
            atime: new Date(node.timestamp),
            mtime: new Date(node.timestamp),
            ctime: new Date(node.timestamp),
            blksize: 4096,
            blocks: Math.ceil(node.size / 4096),
          };
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
        },lookup:function (parent, name) {
          throw new FS.ErrnoError(2);
        },mknod:function (parent, name, mode, dev) {
          throw new FS.ErrnoError(1);
        },rename:function (oldNode, newDir, newName) {
          throw new FS.ErrnoError(1);
        },unlink:function (parent, name) {
          throw new FS.ErrnoError(1);
        },rmdir:function (parent, name) {
          throw new FS.ErrnoError(1);
        },readdir:function (node) {
          var entries = ['.', '..'];
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newName, oldPath) {
          throw new FS.ErrnoError(1);
        },readlink:function (node) {
          throw new FS.ErrnoError(1);
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          if (position >= stream.node.size) return 0;
          var chunk = stream.node.contents.slice(position, position + length);
          var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
          buffer.set(new Uint8Array(ab), offset);
          return chunk.size;
        },write:function (stream, buffer, offset, length, position) {
          throw new FS.ErrnoError(5);
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.size;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(22);
          }
          return position;
        }}};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        if (!path) return { path: '', node: null };
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(40);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
  
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(40);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var perms = ['r', 'w', 'rw'][flag & 3];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return 13;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return 13;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return 13;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return 13;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return 17;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return 20;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return 16;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return 21;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return 2;
        }
        if (FS.isLink(node.mode)) {
          return 40;
        } else if (FS.isDir(node.mode)) {
          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write
              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)
            return 21;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(24);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(29);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        FS.syncFSRequests++;
  
        if (FS.syncFSRequests > 1) {
          console.log('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function doCallback(err) {
          FS.syncFSRequests--;
          return callback(err);
        }
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return doCallback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            doCallback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(16);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(16);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(20);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(22);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(22);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(1);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdirTree:function (path, mode) {
        var dirs = path.split('/');
        var d = '';
        for (var i = 0; i < dirs.length; ++i) {
          if (!dirs[i]) continue;
          d += '/' + dirs[i];
          try {
            FS.mkdir(d, mode);
          } catch(e) {
            if (e.errno != 17) throw e;
          }
        }
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH.resolve(oldpath)) {
          throw new FS.ErrnoError(2);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(2);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(1);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(16);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(2);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(18);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(22);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(39);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(1);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(16);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(1);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(16);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(20);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // According to POSIX, we should map EISDIR to EPERM, but
          // we instead do what Linux does (and we must, as we use
          // the musl linux libc).
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(1);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(16);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(2);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(22);
        }
        return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(2);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(1);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(1);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(9);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(1);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(9);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(22);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(1);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(21);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(22);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(9);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(22);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(2);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(17);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(2);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // if asked only for a directory, then this must be one
        if ((flags & 65536) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(20);
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            console.log("FS.trackingDelegate error on read file: " + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(9);
        }
        if (stream.getdents) stream.getdents = null; // free readdir state
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
        stream.fd = null;
      },isClosed:function (stream) {
        return stream.fd === null;
      },llseek:function (stream, offset, whence) {
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(9);
        }
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(29);
        }
        if (whence != 0 /* SEEK_SET */ && whence != 1 /* SEEK_CUR */ && whence != 2 /* SEEK_END */) {
          throw new FS.ErrnoError(22);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(22);
        }
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(9);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(9);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(21);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(22);
        }
        var seeking = typeof position !== 'undefined';
        if (!seeking) {
          position = stream.position;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(29);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(22);
        }
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(9);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(9);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(21);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(22);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = typeof position !== 'undefined';
        if (!seeking) {
          position = stream.position;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(29);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+stream.path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(9);
        }
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(22);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(9);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(19);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(95);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(13);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(19);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },msync:function (stream, buffer, offset, length, mmapFlags) {
        if (!stream || !stream.stream_ops.msync) {
          return 0;
        }
        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
      },munmap:function (stream) {
        return 0;
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(25);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = UTF8ArrayToString(buf, 0);
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        var stream = FS.open(path, opts.flags, opts.mode);
        if (typeof data === 'string') {
          var buf = new Uint8Array(lengthBytesUTF8(data)+1);
          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);
        } else if (ArrayBuffer.isView(data)) {
          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);
        } else {
          throw new Error('Unsupported data type');
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (lookup.node === null) {
          throw new FS.ErrnoError(2);
        }
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(20);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function(stream, buffer, offset, length, pos) { return length; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto === 'object' && typeof crypto['getRandomValues'] === 'function') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else
        if (ENVIRONMENT_IS_NODE) {
          // for nodejs with or without crypto support included
          try {
            var crypto_module = require('crypto');
            // nodejs has crypto support
            random_device = function() { return crypto_module['randomBytes'](1)[0]; };
          } catch (e) {
            // nodejs doesn't have crypto support
          }
        } else
        {}
        if (!random_device) {
          // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096
          random_device = function() { abort("random_device"); };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createSpecialDirectories:function () {
        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the name of the stream for fd 6 (see test_unistd_ttyname)
        FS.mkdir('/proc');
        FS.mkdir('/proc/self');
        FS.mkdir('/proc/self/fd');
        FS.mount({
          mount: function() {
            var node = FS.createNode('/proc/self', 'fd', 16384 | 511 /* 0777 */, 73);
            node.node_ops = {
              lookup: function(parent, name) {
                var fd = +name;
                var stream = FS.getStream(fd);
                if (!stream) throw new FS.ErrnoError(9);
                var ret = {
                  parent: null,
                  mount: { mountpoint: 'fake' },
                  node_ops: { readlink: function() { return stream.path } }
                };
                ret.parent = ret; // make it look like a simple root node
                return ret;
              }
            };
            return node;
          }
        }, {}, '/proc/self/fd');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        var stdout = FS.open('/dev/stdout', 'w');
        var stderr = FS.open('/dev/stderr', 'w');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
          };
          this.setErrno(errno);
          this.message = 'FS error';
          // Node.js compatibility: assigning on this.stack fails on Node 4 (but fixed on Node 8)
          if (this.stack) Object.defineProperty(this, "stack", { value: (new Error).stack, writable: true });
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [2].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
        FS.createSpecialDirectories();
  
        FS.filesystems = {
          'MEMFS': MEMFS,
          'IDBFS': IDBFS,
          'NODEFS': NODEFS,
          'WORKERFS': WORKERFS,
        };
      },init:function (input, output, error) {
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        // force-flush all streams, so we get musl std streams printed out
        var fflush = Module['_fflush'];
        if (fflush) fflush(0);
        // close all of our streams
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(5);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(11);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(5);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(5);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
  
          var chunkSize = 1024*1024; // Chunk size in bytes
  
          if (!hasByteServing) chunkSize = datalength;
  
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
  
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
  
          if (usesGzip || !datalength) {
            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length
            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file
            datalength = this.getter(0).length;
            chunkSize = datalength;
            console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
          }
  
          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperties(lazyArray, {
            length: {
              get: function() {
                if(!this.lengthKnown) {
                  this.cacheLength();
                }
                return this._length;
              }
            },
            chunkSize: {
              get: function() {
                if(!this.lengthKnown) {
                  this.cacheLength();
                }
                return this._chunkSize;
              }
            }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperties(node, {
          usedBytes: {
            get: function() { return this.contents.length; }
          }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(5);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(5);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
        Browser.init(); // XXX perhaps this method should move onto Browser?
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname
        function processData(byteArray) {
          function finish(byteArray) {
            if (preFinish) preFinish();
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency(dep);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency(dep);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency(dep);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function (dirfd, path) {
        if (path[0] !== '/') {
          // relative path
          var dir;
          if (dirfd === -100) {
            dir = FS.cwd();
          } else {
            var dirstream = FS.getStream(dirfd);
            if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
            dir = dirstream.path;
          }
          path = PATH.join2(dir, path);
        }
        return path;
      },doStat:function (func, path, buf) {
        try {
          var stat = func(path);
        } catch (e) {
          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
            // an error occurred while trying to look up the path; we should just report ENOTDIR
            return -ERRNO_CODES.ENOTDIR;
          }
          throw e;
        }
        HEAP32[((buf)>>2)]=stat.dev;
        HEAP32[(((buf)+(4))>>2)]=0;
        HEAP32[(((buf)+(8))>>2)]=stat.ino;
        HEAP32[(((buf)+(12))>>2)]=stat.mode;
        HEAP32[(((buf)+(16))>>2)]=stat.nlink;
        HEAP32[(((buf)+(20))>>2)]=stat.uid;
        HEAP32[(((buf)+(24))>>2)]=stat.gid;
        HEAP32[(((buf)+(28))>>2)]=stat.rdev;
        HEAP32[(((buf)+(32))>>2)]=0;
        (tempI64 = [stat.size>>>0,(tempDouble=stat.size,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((buf)+(40))>>2)]=tempI64[0],HEAP32[(((buf)+(44))>>2)]=tempI64[1]);
        HEAP32[(((buf)+(48))>>2)]=4096;
        HEAP32[(((buf)+(52))>>2)]=stat.blocks;
        HEAP32[(((buf)+(56))>>2)]=(stat.atime.getTime() / 1000)|0;
        HEAP32[(((buf)+(60))>>2)]=0;
        HEAP32[(((buf)+(64))>>2)]=(stat.mtime.getTime() / 1000)|0;
        HEAP32[(((buf)+(68))>>2)]=0;
        HEAP32[(((buf)+(72))>>2)]=(stat.ctime.getTime() / 1000)|0;
        HEAP32[(((buf)+(76))>>2)]=0;
        (tempI64 = [stat.ino>>>0,(tempDouble=stat.ino,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((buf)+(80))>>2)]=tempI64[0],HEAP32[(((buf)+(84))>>2)]=tempI64[1]);
        return 0;
      },doMsync:function (addr, stream, len, flags) {
        var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
        FS.msync(stream, buffer, 0, len, flags);
      },doMkdir:function (path, mode) {
        // remove a trailing slash, if one - /a/b/ has basename of '', but
        // we want to create b in the context of this function
        path = PATH.normalize(path);
        if (path[path.length-1] === '/') path = path.substr(0, path.length-1);
        FS.mkdir(path, mode, 0);
        return 0;
      },doMknod:function (path, mode, dev) {
        // we don't want this in the JS API as it uses mknod to create all nodes.
        switch (mode & 61440) {
          case 32768:
          case 8192:
          case 24576:
          case 4096:
          case 49152:
            break;
          default: return -ERRNO_CODES.EINVAL;
        }
        FS.mknod(path, mode, dev);
        return 0;
      },doReadlink:function (path, buf, bufsize) {
        if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
        var ret = FS.readlink(path);
  
        var len = Math.min(bufsize, lengthBytesUTF8(ret));
        var endChar = HEAP8[buf+len];
        stringToUTF8(ret, buf, bufsize+1);
        // readlink is one of the rare functions that write out a C string, but does never append a null to the output buffer(!)
        // stringToUTF8() always appends a null byte, so restore the character under the null byte after the write.
        HEAP8[buf+len] = endChar;
  
        return len;
      },doAccess:function (path, amode) {
        if (amode & ~7) {
          // need a valid mode
          return -ERRNO_CODES.EINVAL;
        }
        var node;
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
        var perms = '';
        if (amode & 4) perms += 'r';
        if (amode & 2) perms += 'w';
        if (amode & 1) perms += 'x';
        if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {
          return -ERRNO_CODES.EACCES;
        }
        return 0;
      },doDup:function (path, flags, suggestFD) {
        var suggest = FS.getStream(suggestFD);
        if (suggest) FS.close(suggest);
        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
      },doReadv:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.read(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
          if (curr < len) break; // nothing more to read
        }
        return ret;
      },doWritev:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.write(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
        }
        return ret;
      },varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = UTF8ToString(SYSCALLS.get());
        return ret;
      },getStreamFromFD:function () {
        var stream = FS.getStream(SYSCALLS.get());
        if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return stream;
      },getSocketFromFD:function () {
        var socket = SOCKFS.getSocket(SYSCALLS.get());
        if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return socket;
      },getSocketAddress:function (allowNull) {
        var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
        if (allowNull && addrp === 0) return null;
        var info = __read_sockaddr(addrp, addrlen);
        if (info.errno) throw new FS.ErrnoError(info.errno);
        info.addr = DNS.lookup_addr(info.addr) || info.addr;
        return info;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        return low;
      },getZero:function () {
        SYSCALLS.get();
      }};function ___syscall10(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // unlink
      var path = SYSCALLS.getStr();
      FS.unlink(path);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      // Can't handle 64-bit integers
      if (!(offset_high == -1 && offset_low < 0) &&
          !(offset_high == 0 && offset_low >= 0)) {
        return -ERRNO_CODES.EOVERFLOW;
      }
      var offset = offset_low;
      FS.llseek(stream, offset, whence);
      (tempI64 = [stream.position>>>0,(tempDouble=stream.position,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((result)>>2)]=tempI64[0],HEAP32[(((result)+(4))>>2)]=tempI64[1]);
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall145(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // readv
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doReadv(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doWritev(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall196(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // SYS_lstat64
      var path = SYSCALLS.getStr(), buf = SYSCALLS.get();
      return SYSCALLS.doStat(FS.lstat, path, buf);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall221(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // fcntl64
      var stream = SYSCALLS.getStreamFromFD(), cmd = SYSCALLS.get();
      switch (cmd) {
        case 0: {
          var arg = SYSCALLS.get();
          if (arg < 0) {
            return -ERRNO_CODES.EINVAL;
          }
          var newStream;
          newStream = FS.open(stream.path, stream.flags, 0, arg);
          return newStream.fd;
        }
        case 1:
        case 2:
          return 0;  // FD_CLOEXEC makes no sense for a single process.
        case 3:
          return stream.flags;
        case 4: {
          var arg = SYSCALLS.get();
          stream.flags |= arg;
          return 0;
        }
        case 12:
        /* case 12: Currently in musl F_GETLK64 has same value as F_GETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */ {
          
          var arg = SYSCALLS.get();
          var offset = 0;
          // We're always unlocked.
          HEAP16[(((arg)+(offset))>>1)]=2;
          return 0;
        }
        case 13:
        case 14:
        /* case 13: Currently in musl F_SETLK64 has same value as F_SETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */
        /* case 14: Currently in musl F_SETLKW64 has same value as F_SETLKW, so omitted to avoid duplicate case blocks. If that changes, uncomment this */
          
          
          return 0; // Pretend that the locking is successful.
        case 16:
        case 8:
          return -ERRNO_CODES.EINVAL; // These are for sockets. We don't have them fully implemented yet.
        case 9:
          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fnctl() returns that, and we set errno ourselves.
          ___setErrNo(ERRNO_CODES.EINVAL);
          return -1;
        default: {
          return -ERRNO_CODES.EINVAL;
        }
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall330(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // dup3
      var old = SYSCALLS.getStreamFromFD(), suggestFD = SYSCALLS.get(), flags = SYSCALLS.get();
      if (old.fd === suggestFD) return -ERRNO_CODES.EINVAL;
      return SYSCALLS.doDup(old.path, old.flags, suggestFD);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall38(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // rename
      var old_path = SYSCALLS.getStr(), new_path = SYSCALLS.getStr();
      FS.rename(old_path, new_path);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall40(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // rmdir
      var path = SYSCALLS.getStr();
      FS.rmdir(path);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall5(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // open
      var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get() // optional TODO
      var stream = FS.open(pathname, flags, mode);
      return stream.fd;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
      switch (op) {
        case 21509:
        case 21505: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        case 21510:
        case 21511:
        case 21512:
        case 21506:
        case 21507:
        case 21508: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0; // no-op, not actually adjusting terminal settings
        }
        case 21519: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          var argp = SYSCALLS.get();
          HEAP32[((argp)>>2)]=0;
          return 0;
        }
        case 21520: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return -ERRNO_CODES.EINVAL; // not supported
        }
        case 21531: {
          var argp = SYSCALLS.get();
          return FS.ioctl(stream, op, argp);
        }
        case 21523: {
          // TODO: in theory we should write to the winsize struct that gets
          // passed in, but for now musl doesn't read anything on it
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        case 21524: {
          // TODO: technically, this ioctl call should change the window size.
          // but, since emscripten doesn't have any concept of a terminal window
          // yet, we'll just silently throw it away as we do TIOCGWINSZ
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        default: abort('bad ioctl syscall ' + op);
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall63(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // dup2
      var old = SYSCALLS.getStreamFromFD(), suggestFD = SYSCALLS.get();
      if (old.fd === suggestFD) return suggestFD;
      return SYSCALLS.doDup(old.path, old.flags, suggestFD);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall91(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // munmap
      var addr = SYSCALLS.get(), len = SYSCALLS.get();
      // TODO: support unmmap'ing parts of allocations
      var info = SYSCALLS.mappings[addr];
      if (!info) return 0;
      if (len === info.len) {
        var stream = FS.getStream(info.fd);
        SYSCALLS.doMsync(addr, stream, len, info.flags)
        FS.munmap(stream);
        SYSCALLS.mappings[addr] = null;
        if (info.allocated) {
          _free(info.malloc);
        }
      }
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___unlock() {}

  function _abort() {
      Module['abort']();
    }

  function _clock() {
      if (_clock.start === undefined) _clock.start = Date.now();
      return ((Date.now() - _clock.start) * (1000000 / 1000))|0;
    }

  function _difftime(time1, time0) {
      return time1 - time0;
    }

  function _emscripten_get_heap_size() {
      return HEAP8.length;
    }

  
  function abortOnCannotGrowMemory(requestedSize) {
      abort('OOM');
    }function _emscripten_resize_heap(requestedSize) {
      abortOnCannotGrowMemory(requestedSize);
    }

  function _exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      exit(status);
    }

  function _getenv(name) {
      // char *getenv(const char *name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/getenv.html
      if (name === 0) return 0;
      name = UTF8ToString(name);
      if (!ENV.hasOwnProperty(name)) return 0;
  
      if (_getenv.ret) _free(_getenv.ret);
      _getenv.ret = allocateUTF8(ENV[name]);
      return _getenv.ret;
    }

  
  var ___tm_current=20096;
  
  
  var ___tm_timezone=(stringToUTF8("GMT", 20144, 4), 20144);function _gmtime_r(time, tmPtr) {
      var date = new Date(HEAP32[((time)>>2)]*1000);
      HEAP32[((tmPtr)>>2)]=date.getUTCSeconds();
      HEAP32[(((tmPtr)+(4))>>2)]=date.getUTCMinutes();
      HEAP32[(((tmPtr)+(8))>>2)]=date.getUTCHours();
      HEAP32[(((tmPtr)+(12))>>2)]=date.getUTCDate();
      HEAP32[(((tmPtr)+(16))>>2)]=date.getUTCMonth();
      HEAP32[(((tmPtr)+(20))>>2)]=date.getUTCFullYear()-1900;
      HEAP32[(((tmPtr)+(24))>>2)]=date.getUTCDay();
      HEAP32[(((tmPtr)+(36))>>2)]=0;
      HEAP32[(((tmPtr)+(32))>>2)]=0;
      var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0);
      var yday = ((date.getTime() - start) / (1000 * 60 * 60 * 24))|0;
      HEAP32[(((tmPtr)+(28))>>2)]=yday;
      HEAP32[(((tmPtr)+(40))>>2)]=___tm_timezone;
  
      return tmPtr;
    }function _gmtime(time) {
      return _gmtime_r(time, ___tm_current);
    }

   

  
  function _llvm_log10_f32(x) {
      return Math.log(x) / Math.LN10; // TODO: Math.log10, when browser support is there
    }function _llvm_log10_f64(a0
  /*``*/) {
  return _llvm_log10_f32(a0);
  }

  
  function _llvm_log2_f32(x) {
      return Math.log(x) / Math.LN2; // TODO: Math.log2, when browser support is there
    }function _llvm_log2_f64(a0
  /*``*/) {
  return _llvm_log2_f32(a0);
  }

  
  
  function _tzset() {
      // TODO: Use (malleable) environment variables instead of system settings.
      if (_tzset.called) return;
      _tzset.called = true;
  
      // timezone is specified as seconds west of UTC ("The external variable
      // `timezone` shall be set to the difference, in seconds, between
      // Coordinated Universal Time (UTC) and local standard time."), the same
      // as returned by getTimezoneOffset().
      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html
      HEAP32[((__get_timezone())>>2)]=(new Date()).getTimezoneOffset() * 60;
  
      var winter = new Date(2000, 0, 1);
      var summer = new Date(2000, 6, 1);
      HEAP32[((__get_daylight())>>2)]=Number(winter.getTimezoneOffset() != summer.getTimezoneOffset());
  
      function extractZone(date) {
        var match = date.toTimeString().match(/\(([A-Za-z ]+)\)$/);
        return match ? match[1] : "GMT";
      };
      var winterName = extractZone(winter);
      var summerName = extractZone(summer);
      var winterNamePtr = allocate(intArrayFromString(winterName), 'i8', ALLOC_NORMAL);
      var summerNamePtr = allocate(intArrayFromString(summerName), 'i8', ALLOC_NORMAL);
      if (summer.getTimezoneOffset() < winter.getTimezoneOffset()) {
        // Northern hemisphere
        HEAP32[((__get_tzname())>>2)]=winterNamePtr;
        HEAP32[(((__get_tzname())+(4))>>2)]=summerNamePtr;
      } else {
        HEAP32[((__get_tzname())>>2)]=summerNamePtr;
        HEAP32[(((__get_tzname())+(4))>>2)]=winterNamePtr;
      }
    }function _localtime_r(time, tmPtr) {
      _tzset();
      var date = new Date(HEAP32[((time)>>2)]*1000);
      HEAP32[((tmPtr)>>2)]=date.getSeconds();
      HEAP32[(((tmPtr)+(4))>>2)]=date.getMinutes();
      HEAP32[(((tmPtr)+(8))>>2)]=date.getHours();
      HEAP32[(((tmPtr)+(12))>>2)]=date.getDate();
      HEAP32[(((tmPtr)+(16))>>2)]=date.getMonth();
      HEAP32[(((tmPtr)+(20))>>2)]=date.getFullYear()-1900;
      HEAP32[(((tmPtr)+(24))>>2)]=date.getDay();
  
      var start = new Date(date.getFullYear(), 0, 1);
      var yday = ((date.getTime() - start.getTime()) / (1000 * 60 * 60 * 24))|0;
      HEAP32[(((tmPtr)+(28))>>2)]=yday;
      HEAP32[(((tmPtr)+(36))>>2)]=-(date.getTimezoneOffset() * 60);
  
      // Attention: DST is in December in South, and some regions don't have DST at all.
      var summerOffset = new Date(2000, 6, 1).getTimezoneOffset();
      var winterOffset = start.getTimezoneOffset();
      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;
      HEAP32[(((tmPtr)+(32))>>2)]=dst;
  
      var zonePtr = HEAP32[(((__get_tzname())+(dst ? 4 : 0))>>2)];
      HEAP32[(((tmPtr)+(40))>>2)]=zonePtr;
  
      return tmPtr;
    }function _localtime(time) {
      return _localtime_r(time, ___tm_current);
    }

  
   
  
   
  
   function _longjmp(env, value) {
      _setThrew(env, value || 1);
      throw 'longjmp';
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
    }
  
   

   

  function _mktime(tmPtr) {
      _tzset();
      var date = new Date(HEAP32[(((tmPtr)+(20))>>2)] + 1900,
                          HEAP32[(((tmPtr)+(16))>>2)],
                          HEAP32[(((tmPtr)+(12))>>2)],
                          HEAP32[(((tmPtr)+(8))>>2)],
                          HEAP32[(((tmPtr)+(4))>>2)],
                          HEAP32[((tmPtr)>>2)],
                          0);
  
      // There's an ambiguous hour when the time goes back; the tm_isdst field is
      // used to disambiguate it.  Date() basically guesses, so we fix it up if it
      // guessed wrong, or fill in tm_isdst with the guess if it's -1.
      var dst = HEAP32[(((tmPtr)+(32))>>2)];
      var guessedOffset = date.getTimezoneOffset();
      var start = new Date(date.getFullYear(), 0, 1);
      var summerOffset = new Date(2000, 6, 1).getTimezoneOffset();
      var winterOffset = start.getTimezoneOffset();
      var dstOffset = Math.min(winterOffset, summerOffset); // DST is in December in South
      if (dst < 0) {
        // Attention: some regions don't have DST at all.
        HEAP32[(((tmPtr)+(32))>>2)]=Number(summerOffset != winterOffset && dstOffset == guessedOffset);
      } else if ((dst > 0) != (dstOffset == guessedOffset)) {
        var nonDstOffset = Math.max(winterOffset, summerOffset);
        var trueOffset = dst > 0 ? dstOffset : nonDstOffset;
        // Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.
        date.setTime(date.getTime() + (trueOffset - guessedOffset)*60000);
      }
  
      HEAP32[(((tmPtr)+(24))>>2)]=date.getDay();
      var yday = ((date.getTime() - start.getTime()) / (1000 * 60 * 60 * 24))|0;
      HEAP32[(((tmPtr)+(28))>>2)]=yday;
  
      return (date.getTime() / 1000)|0;
    }


   

  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? UTF8ToString(tm_zone) : ''
      };
  
      var pattern = UTF8ToString(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else {
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes
          // January 4th, which is also the week that includes the first Thursday of the year, and
          // is also the first week that contains at least four days in the year.
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of
          // the last week of the preceding year; thus, for Saturday 2nd January 1999,
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,
          // or 31st is a Monday, it and any following days are part of week 1 of the following year.
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
  
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          var twelveHour = date.tm_hour;
          if (twelveHour == 0) twelveHour = 12;
          else if (twelveHour > 12) twelveHour -= 12;
          return leadingNulls(twelveHour, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour >= 0 && date.tm_hour < 12) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53].
          // The first Sunday of January is the first day of week 1;
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week)
          // as a decimal number [01,53]. If the week containing 1 January has four
          // or more days in the new year, then it is considered week 1.
          // Otherwise, it is the last week of the previous year, and the next week is week 1.
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          }
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53].
          // The first Monday of January is the first day of week 1;
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      }
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }

  function _system(command) {
      // int system(const char *command);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/system.html
      // Can't call external programs.
      ___setErrNo(11);
      return -1;
    }


  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }
if (ENVIRONMENT_IS_NODE) {
    _emscripten_get_now = function _emscripten_get_now_actual() {
      var t = process['hrtime']();
      return t[0] * 1e3 + t[1] / 1e6;
    };
  } else if (typeof dateNow !== 'undefined') {
    _emscripten_get_now = dateNow;
  } else if (typeof performance === 'object' && performance && typeof performance['now'] === 'function') {
    _emscripten_get_now = function() { return performance['now'](); };
  } else {
    _emscripten_get_now = Date.now;
  };
FS.staticInit();;
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); var NODEJS_PATH = require("path"); NODEFS.staticInit(); };
var ASSERTIONS = false;

// Copyright 2017 The Emscripten Authors.  All rights reserved.
// Emscripten is available under two separate licenses, the MIT license and the
// University of Illinois/NCSA Open Source License.  Both these licenses can be
// found in the LICENSE file.

/** @type {function(string, boolean=, number=)} */
function intArrayFromString(stringy, dontAddNull, length) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      if (ASSERTIONS) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      }
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}


// ASM_LIBRARY EXTERN PRIMITIVES: Int8Array,Int32Array


function invoke_vii(index,a1,a2) {
  var sp = stackSave();
  try {
    dynCall_vii(index,a1,a2);
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

var asmGlobalArg = {}

var asmLibraryArg = {
  "abort": abort,
  "setTempRet0": setTempRet0,
  "getTempRet0": getTempRet0,
  "invoke_vii": invoke_vii,
  "___buildEnvironment": ___buildEnvironment,
  "___clock_gettime": ___clock_gettime,
  "___lock": ___lock,
  "___map_file": ___map_file,
  "___setErrNo": ___setErrNo,
  "___syscall10": ___syscall10,
  "___syscall140": ___syscall140,
  "___syscall145": ___syscall145,
  "___syscall146": ___syscall146,
  "___syscall196": ___syscall196,
  "___syscall221": ___syscall221,
  "___syscall330": ___syscall330,
  "___syscall38": ___syscall38,
  "___syscall40": ___syscall40,
  "___syscall5": ___syscall5,
  "___syscall54": ___syscall54,
  "___syscall6": ___syscall6,
  "___syscall63": ___syscall63,
  "___syscall91": ___syscall91,
  "___unlock": ___unlock,
  "__addDays": __addDays,
  "__arraySum": __arraySum,
  "__isLeapYear": __isLeapYear,
  "_abort": _abort,
  "_clock": _clock,
  "_clock_gettime": _clock_gettime,
  "_difftime": _difftime,
  "_emscripten_get_heap_size": _emscripten_get_heap_size,
  "_emscripten_get_now": _emscripten_get_now,
  "_emscripten_get_now_is_monotonic": _emscripten_get_now_is_monotonic,
  "_emscripten_memcpy_big": _emscripten_memcpy_big,
  "_emscripten_resize_heap": _emscripten_resize_heap,
  "_exit": _exit,
  "_getenv": _getenv,
  "_gmtime": _gmtime,
  "_gmtime_r": _gmtime_r,
  "_llvm_log10_f32": _llvm_log10_f32,
  "_llvm_log10_f64": _llvm_log10_f64,
  "_llvm_log2_f32": _llvm_log2_f32,
  "_llvm_log2_f64": _llvm_log2_f64,
  "_localtime": _localtime,
  "_localtime_r": _localtime_r,
  "_longjmp": _longjmp,
  "_mktime": _mktime,
  "_strftime": _strftime,
  "_system": _system,
  "_time": _time,
  "_tzset": _tzset,
  "abortOnCannotGrowMemory": abortOnCannotGrowMemory,
  "tempDoublePtr": tempDoublePtr,
  "DYNAMICTOP_PTR": DYNAMICTOP_PTR
}
// EMSCRIPTEN_START_ASM
var asm = (/** @suppress {uselessCode} */ function(global, env, buffer) {
'almost asm';

  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);
  var tempDoublePtr=env.tempDoublePtr|0;
  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;
var __THREW__ = 0;
var threwValue = 0;
var setjmpId = 0;
var tempInt = 0;
var tempBigInt = 0;
var tempBigIntS = 0;
var tempValue = 0;
var tempDouble = 0.0;
var nan = global.NaN;
var inf = global.Infinity;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_fround=global.Math.fround;
  var abort=env.abort;
  var setTempRet0=env.setTempRet0;
  var getTempRet0=env.getTempRet0;
  var invoke_vii=env.invoke_vii;
  var ___buildEnvironment=env.___buildEnvironment;
  var ___clock_gettime=env.___clock_gettime;
  var ___lock=env.___lock;
  var ___map_file=env.___map_file;
  var ___setErrNo=env.___setErrNo;
  var ___syscall10=env.___syscall10;
  var ___syscall140=env.___syscall140;
  var ___syscall145=env.___syscall145;
  var ___syscall146=env.___syscall146;
  var ___syscall196=env.___syscall196;
  var ___syscall221=env.___syscall221;
  var ___syscall330=env.___syscall330;
  var ___syscall38=env.___syscall38;
  var ___syscall40=env.___syscall40;
  var ___syscall5=env.___syscall5;
  var ___syscall54=env.___syscall54;
  var ___syscall6=env.___syscall6;
  var ___syscall63=env.___syscall63;
  var ___syscall91=env.___syscall91;
  var ___unlock=env.___unlock;
  var __addDays=env.__addDays;
  var __arraySum=env.__arraySum;
  var __isLeapYear=env.__isLeapYear;
  var _abort=env._abort;
  var _clock=env._clock;
  var _clock_gettime=env._clock_gettime;
  var _difftime=env._difftime;
  var _emscripten_get_heap_size=env._emscripten_get_heap_size;
  var _emscripten_get_now=env._emscripten_get_now;
  var _emscripten_get_now_is_monotonic=env._emscripten_get_now_is_monotonic;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _emscripten_resize_heap=env._emscripten_resize_heap;
  var _exit=env._exit;
  var _getenv=env._getenv;
  var _gmtime=env._gmtime;
  var _gmtime_r=env._gmtime_r;
  var _llvm_log10_f32=env._llvm_log10_f32;
  var _llvm_log10_f64=env._llvm_log10_f64;
  var _llvm_log2_f32=env._llvm_log2_f32;
  var _llvm_log2_f64=env._llvm_log2_f64;
  var _localtime=env._localtime;
  var _localtime_r=env._localtime_r;
  var _longjmp=env._longjmp;
  var _mktime=env._mktime;
  var _strftime=env._strftime;
  var _system=env._system;
  var _time=env._time;
  var _tzset=env._tzset;
  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;
  var STACKTOP = 20272;
  var STACK_MAX = 5263152;
  var tempFloat = Math_fround(0);
  const f0 = Math_fround(0);

// EMSCRIPTEN_START_FUNCS

function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
  
  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function _hello() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _LUA_INIT() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_luaL_newstate()|0);
 store4(18392,$0);
 _luaL_openlibs($0);
 return;
}
function _LUA_COMPILE($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = load4(18392);
 (_luaL_loadstring($1,$0)|0);
 return;
}
function _LUA_DUMP() {
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 store4(18396,0);
 $0 = load4(18392);
 (_lua_dump($0,1,18396,1)|0);
 $1 = load4(18392);
 _lua_close($1);
 $2 = load4(18396);
 return ($2|0);
}
function _LUA_WRITER($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = load4(18396);
 $5 = (_realloc($4,$2)|0);
 store4(18396,$5);
 _memcpy(($5|0),($1|0),($2|0))|0;
 return 0;
}
function _lua_checkstack($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$117 = 0, $$pre = 0, $$pre20 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 store4($2,$1);
 $3 = ((($0)) + 20|0);
 $4 = load4($3);
 $5 = ((($0)) + 28|0);
 $6 = load4($5);
 $7 = ((($0)) + 12|0);
 $8 = load4($7);
 $9 = (($6) - ($8))|0;
 $10 = $9 >> 4;
 $11 = ($10|0)>($1|0);
 $12 = $8;
 do {
  if ($11) {
   $25 = $12;$26 = $1;
  } else {
   $13 = ((($0)) + 32|0);
   $14 = load4($13);
   $15 = (($8) - ($14))|0;
   $16 = $15 >> 4;
   $17 = (($16) + 5)|0;
   $18 = (1000000 - ($1))|0;
   $19 = ($17|0)>($18|0);
   if ($19) {
    $$117 = 0;
    STACKTOP = sp;return ($$117|0);
   }
   $20 = (_luaD_rawrunprotected($0,1,$2)|0);
   $21 = ($20|0)==(0);
   if ($21) {
    $$pre = load4($7);
    $$pre20 = load4($2);
    $25 = $$pre;$26 = $$pre20;
    break;
   } else {
    $$117 = 0;
    STACKTOP = sp;return ($$117|0);
   }
  }
 } while(0);
 $22 = ((($4)) + 4|0);
 $23 = load4($22);
 $24 = (($25) + ($26<<4)|0);
 $27 = ($23>>>0)<($24>>>0);
 if (!($27)) {
  $$117 = 1;
  STACKTOP = sp;return ($$117|0);
 }
 store4($22,$24);
 $$117 = 1;
 STACKTOP = sp;return ($$117|0);
}
function _growstack($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = load4($1);
 _luaD_growstack($0,$2);
 return;
}
function _lua_xmove($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre = 0, $$pre16 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond17 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==($1|0);
 if ($3) {
  return;
 }
 $4 = ((($0)) + 12|0);
 $5 = load4($4);
 $6 = (0 - ($2))|0;
 $7 = (($5) + ($6<<4)|0);
 store4($4,$7);
 $8 = ($2|0)>(0);
 if (!($8)) {
  return;
 }
 $9 = ((($1)) + 12|0);
 $$pre = load4($9);
 ; store8($$pre,load8($7,8),8); store8($$pre+8 | 0,load8($7+8 | 0,8),8);
 $10 = load4($9);
 $11 = ((($10)) + 16|0);
 store4($9,$11);
 $exitcond17 = ($2|0)==(1);
 if ($exitcond17) {
  return;
 }
 $13 = 1;$14 = $11;
 while(1) {
  $$pre16 = load4($4);
  $12 = (($$pre16) + ($13<<4)|0);
  ; store8($14,load8($12,8),8); store8($14+8 | 0,load8($12+8 | 0,8),8);
  $15 = load4($9);
  $16 = ((($15)) + 16|0);
  store4($9,$16);
  $17 = (($13) + 1)|0;
  $exitcond = ($17|0)==($2|0);
  if ($exitcond) {
   break;
  } else {
   $13 = $17;$14 = $16;
  }
 }
 return;
}
function _lua_atpanic($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = load4($2);
 $4 = ((($3)) + 120|0);
 $5 = load4($4);
 store4($4,$1);
 return ($5|0);
}
function _lua_version($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0 = 6704;
  return ($$0|0);
 }
 $2 = ((($0)) + 16|0);
 $3 = load4($2);
 $4 = ((($3)) + 128|0);
 $5 = load4($4);
 $$0 = $5;
 return ($$0|0);
}
function _lua_absindex($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$off = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$off = (($1) + 1000999)|0;
 $2 = ($$off>>>0)>(1000999);
 if ($2) {
  $11 = $1;
  return ($11|0);
 }
 $3 = ((($0)) + 12|0);
 $4 = load4($3);
 $5 = ((($0)) + 20|0);
 $6 = load4($5);
 $7 = load4($6);
 $8 = (($4) - ($7))|0;
 $9 = $8 >> 4;
 $10 = (($9) + ($1))|0;
 $11 = $10;
 return ($11|0);
}
function _lua_gettop($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 12|0);
 $2 = load4($1);
 $3 = ((($0)) + 20|0);
 $4 = load4($3);
 $5 = load4($4);
 $6 = ((($5)) + 16|0);
 $7 = $6;
 $8 = (($2) - ($7))|0;
 $9 = $8 >> 4;
 return ($9|0);
}
function _lua_settop($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $scevgep = 0, $scevgep14 = 0, $scevgep17 = 0, $uglygep = 0, $uglygep16 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)>(-1);
 if (!($2)) {
  $19 = (($1) + 1)|0;
  $20 = ((($0)) + 12|0);
  $21 = load4($20);
  $22 = (($21) + ($19<<4)|0);
  store4($20,$22);
  return;
 }
 $3 = ((($0)) + 20|0);
 $4 = load4($3);
 $5 = load4($4);
 $6 = ((($0)) + 12|0);
 $7 = load4($6);
 $8 = ((($5)) + 16|0);
 $9 = (($8) + ($1<<4)|0);
 $10 = ($7>>>0)<($9>>>0);
 if ($10) {
  $11 = $7;
  $scevgep = (((($5) + ($1<<4)|0)) + 8|0);
  $scevgep14 = ((($scevgep)) + 4|0);
  $12 = (3 - ($11))|0;
  $uglygep = (($scevgep14) + ($12)|0);
  $uglygep16 = $uglygep;
  $13 = $uglygep16 >>> 4;
  $14 = (($13) + 1)|0;
  $16 = $7;
  while(1) {
   $15 = ((($16)) + 16|0);
   $17 = ((($16)) + 8|0);
   store4($17,0);
   $18 = ($15>>>0)<($9>>>0);
   if ($18) {
    $16 = $15;
   } else {
    break;
   }
  }
  $scevgep17 = (($7) + ($14<<4)|0);
  store4($6,$scevgep17);
 }
 store4($6,$9);
 return;
}
function _lua_rotate($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0193$i = 0, $$0193$i24 = 0, $$0193$i29 = 0, $$04$i = 0, $$04$i23 = 0, $$04$i28 = 0, $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $4 = ((($0)) + 12|0);
 $5 = load4($4);
 $6 = ((($5)) + -16|0);
 $7 = ((($0)) + 20|0);
 $8 = load4($7);
 $9 = ($1|0)>(0);
 do {
  if ($9) {
   $10 = load4($8);
   $11 = (($10) + ($1<<4)|0);
   $12 = ($11>>>0)<($5>>>0);
   $$luaO_nilobject_$i = $12 ? $11 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $13 = ($1|0)<(-1000999);
   if (!($13)) {
    $14 = (($5) + ($1<<4)|0);
    $$1$i = $14;
    break;
   }
   $15 = ($1|0)==(-1001000);
   if ($15) {
    $16 = ((($0)) + 16|0);
    $17 = load4($16);
    $18 = ((($17)) + 40|0);
    $$1$i = $18;
    break;
   }
   $19 = (-1001000 - ($1))|0;
   $20 = load4($8);
   $21 = ((($20)) + 8|0);
   $22 = load4($21);
   $23 = ($22|0)==(22);
   if ($23) {
    $$1$i = 18336;
   } else {
    $24 = load4($20);
    $25 = ((($24)) + 6|0);
    $26 = load1($25);
    $27 = $26&255;
    $28 = ($19|0)>($27|0);
    $29 = (($19) + -1)|0;
    $30 = (((($24)) + 16|0) + ($29<<4)|0);
    $31 = $28 ? 18336 : $30;
    $$1$i = $31;
   }
  }
 } while(0);
 $32 = ($2|0)>(-1);
 $33 = (0 - ($2))|0;
 $34 = (($6) + ($33<<4)|0);
 $35 = (($$1$i) + ($33<<4)|0);
 $36 = ((($35)) + -16|0);
 $37 = $32 ? $34 : $36;
 $38 = ($$1$i>>>0)<($37>>>0);
 if ($38) {
  $$0193$i29 = $37;$$04$i28 = $$1$i;
  while(1) {
   ; store8($3,load8($$04$i28,8),8); store8($3+8 | 0,load8($$04$i28+8 | 0,8),8);
   ; store8($$04$i28,load8($$0193$i29,8),8); store8($$04$i28+8 | 0,load8($$0193$i29+8 | 0,8),8);
   ; store8($$0193$i29,load8($3,8),8); store8($$0193$i29+8 | 0,load8($3+8 | 0,8),8);
   $39 = ((($$04$i28)) + 16|0);
   $40 = ((($$0193$i29)) + -16|0);
   $41 = ($39>>>0)<($40>>>0);
   if ($41) {
    $$0193$i29 = $40;$$04$i28 = $39;
   } else {
    break;
   }
  }
 }
 $42 = ((($37)) + 16|0);
 $43 = ($42>>>0)<($6>>>0);
 if ($43) {
  $$0193$i24 = $6;$$04$i23 = $42;
  while(1) {
   ; store8($3,load8($$04$i23,8),8); store8($3+8 | 0,load8($$04$i23+8 | 0,8),8);
   ; store8($$04$i23,load8($$0193$i24,8),8); store8($$04$i23+8 | 0,load8($$0193$i24+8 | 0,8),8);
   ; store8($$0193$i24,load8($3,8),8); store8($$0193$i24+8 | 0,load8($3+8 | 0,8),8);
   $44 = ((($$04$i23)) + 16|0);
   $45 = ((($$0193$i24)) + -16|0);
   $46 = ($44>>>0)<($45>>>0);
   if ($46) {
    $$0193$i24 = $45;$$04$i23 = $44;
   } else {
    break;
   }
  }
 }
 $47 = ($$1$i>>>0)<($6>>>0);
 if (!($47)) {
  STACKTOP = sp;return;
 }
 $$0193$i = $6;$$04$i = $$1$i;
 while(1) {
  ; store8($3,load8($$04$i,8),8); store8($3+8 | 0,load8($$04$i+8 | 0,8),8);
  ; store8($$04$i,load8($$0193$i,8),8); store8($$04$i+8 | 0,load8($$0193$i+8 | 0,8),8);
  ; store8($$0193$i,load8($3,8),8); store8($$0193$i+8 | 0,load8($3+8 | 0,8),8);
  $48 = ((($$04$i)) + 16|0);
  $49 = ((($$0193$i)) + -16|0);
  $50 = ($48>>>0)<($49>>>0);
  if ($50) {
   $$0193$i = $49;$$04$i = $48;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function _lua_copy($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1$i = 0, $$1$i20 = 0, $$1$i20$ph = 0, $$luaO_nilobject_$i = 0, $$luaO_nilobject_$i19 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 20|0);
 $4 = load4($3);
 $5 = ($1|0)>(0);
 do {
  if ($5) {
   $6 = load4($4);
   $7 = (($6) + ($1<<4)|0);
   $8 = ((($0)) + 12|0);
   $9 = load4($8);
   $10 = ($7>>>0)<($9>>>0);
   $$luaO_nilobject_$i = $10 ? $7 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $11 = ($1|0)<(-1000999);
   if (!($11)) {
    $12 = ((($0)) + 12|0);
    $13 = load4($12);
    $14 = (($13) + ($1<<4)|0);
    $$1$i = $14;
    break;
   }
   $15 = ($1|0)==(-1001000);
   if ($15) {
    $16 = ((($0)) + 16|0);
    $17 = load4($16);
    $18 = ((($17)) + 40|0);
    $$1$i = $18;
    break;
   }
   $19 = (-1001000 - ($1))|0;
   $20 = load4($4);
   $21 = ((($20)) + 8|0);
   $22 = load4($21);
   $23 = ($22|0)==(22);
   if ($23) {
    $$1$i = 18336;
   } else {
    $24 = load4($20);
    $25 = ((($24)) + 6|0);
    $26 = load1($25);
    $27 = $26&255;
    $28 = ($19|0)>($27|0);
    $29 = (($19) + -1)|0;
    $30 = (((($24)) + 16|0) + ($29<<4)|0);
    $31 = $28 ? 18336 : $30;
    $$1$i = $31;
   }
  }
 } while(0);
 $32 = ($2|0)>(0);
 do {
  if ($32) {
   $33 = load4($4);
   $34 = (($33) + ($2<<4)|0);
   $35 = ((($0)) + 12|0);
   $36 = load4($35);
   $37 = ($34>>>0)<($36>>>0);
   $$luaO_nilobject_$i19 = $37 ? $34 : 18336;
   $$1$i20$ph = $$luaO_nilobject_$i19;
  } else {
   $38 = ($2|0)<(-1000999);
   if (!($38)) {
    $39 = ((($0)) + 12|0);
    $40 = load4($39);
    $41 = (($40) + ($2<<4)|0);
    $$1$i20$ph = $41;
    break;
   }
   $42 = ($2|0)==(-1001000);
   if ($42) {
    $43 = ((($0)) + 16|0);
    $44 = load4($43);
    $45 = ((($44)) + 40|0);
    $$1$i20$ph = $45;
    break;
   }
   $46 = (-1001000 - ($2))|0;
   $47 = load4($4);
   $48 = ((($47)) + 8|0);
   $49 = load4($48);
   $50 = ($49|0)==(22);
   if ($50) {
    $$1$i20 = 18336;
   } else {
    $51 = load4($47);
    $52 = ((($51)) + 6|0);
    $53 = load1($52);
    $54 = $53&255;
    $55 = ($46|0)>($54|0);
    $56 = (($46) + -1)|0;
    $57 = (((($51)) + 16|0) + ($56<<4)|0);
    $phitmp = $55 ? 18336 : $57;
    $$1$i20 = $phitmp;
   }
   ; store8($$1$i20,load8($$1$i,8),8); store8($$1$i20+8 | 0,load8($$1$i+8 | 0,8),8);
   $58 = ((($$1$i)) + 8|0);
   $59 = load4($58);
   $60 = $59 & 64;
   $61 = ($60|0)==(0);
   if ($61) {
    return;
   }
   $62 = load4($3);
   $63 = load4($62);
   $64 = load4($63);
   $65 = ((($64)) + 5|0);
   $66 = load1($65);
   $67 = $66 & 4;
   $68 = ($67<<24>>24)==(0);
   if ($68) {
    return;
   }
   $69 = load4($$1$i);
   $70 = ((($69)) + 5|0);
   $71 = load1($70);
   $72 = $71 & 3;
   $73 = ($72<<24>>24)==(0);
   if ($73) {
    return;
   }
   _luaC_barrier_($0,$64,$69);
   return;
  }
 } while(0);
 ; store8($$1$i20$ph,load8($$1$i,8),8); store8($$1$i20$ph+8 | 0,load8($$1$i+8 | 0,8),8);
 return;
}
function _lua_pushvalue($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = load4($2);
 $4 = ((($0)) + 20|0);
 $5 = load4($4);
 $6 = ($1|0)>(0);
 do {
  if ($6) {
   $7 = load4($5);
   $8 = (($7) + ($1<<4)|0);
   $9 = ($8>>>0)<($3>>>0);
   $$luaO_nilobject_$i = $9 ? $8 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $10 = ($1|0)<(-1000999);
   if (!($10)) {
    $11 = (($3) + ($1<<4)|0);
    $$1$i = $11;
    break;
   }
   $12 = ($1|0)==(-1001000);
   if ($12) {
    $13 = ((($0)) + 16|0);
    $14 = load4($13);
    $15 = ((($14)) + 40|0);
    $$1$i = $15;
    break;
   }
   $16 = (-1001000 - ($1))|0;
   $17 = load4($5);
   $18 = ((($17)) + 8|0);
   $19 = load4($18);
   $20 = ($19|0)==(22);
   if ($20) {
    $$1$i = 18336;
   } else {
    $21 = load4($17);
    $22 = ((($21)) + 6|0);
    $23 = load1($22);
    $24 = $23&255;
    $25 = ($16|0)>($24|0);
    $26 = (($16) + -1)|0;
    $27 = (((($21)) + 16|0) + ($26<<4)|0);
    $28 = $25 ? 18336 : $27;
    $$1$i = $28;
   }
  }
 } while(0);
 ; store8($3,load8($$1$i,8),8); store8($3+8 | 0,load8($$1$i+8 | 0,8),8);
 $29 = load4($2);
 $30 = ((($29)) + 16|0);
 store4($2,$30);
 return;
}
function _lua_type($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = load4($2);
 $4 = ($1|0)>(0);
 do {
  if ($4) {
   $5 = load4($3);
   $6 = (($5) + ($1<<4)|0);
   $7 = ((($0)) + 12|0);
   $8 = load4($7);
   $9 = ($6>>>0)<($8>>>0);
   if ($9) {
    $$1$i = $6;
   } else {
    $34 = -1;
    return ($34|0);
   }
  } else {
   $10 = ($1|0)<(-1000999);
   if (!($10)) {
    $11 = ((($0)) + 12|0);
    $12 = load4($11);
    $13 = (($12) + ($1<<4)|0);
    $$1$i = $13;
    break;
   }
   $14 = ($1|0)==(-1001000);
   if ($14) {
    $15 = ((($0)) + 16|0);
    $16 = load4($15);
    $17 = ((($16)) + 40|0);
    $$1$i = $17;
    break;
   }
   $18 = (-1001000 - ($1))|0;
   $19 = load4($3);
   $20 = ((($19)) + 8|0);
   $21 = load4($20);
   $22 = ($21|0)==(22);
   if ($22) {
    $34 = -1;
    return ($34|0);
   }
   $23 = load4($19);
   $24 = ((($23)) + 6|0);
   $25 = load1($24);
   $26 = $25&255;
   $27 = ($18|0)>($26|0);
   $28 = (($18) + -1)|0;
   $29 = (((($23)) + 16|0) + ($28<<4)|0);
   if ($27) {
    $34 = -1;
    return ($34|0);
   } else {
    $$1$i = $29;
   }
  }
 } while(0);
 $30 = ($$1$i|0)==(18336|0);
 if ($30) {
  $34 = -1;
  return ($34|0);
 }
 $31 = ((($$1$i)) + 8|0);
 $32 = load4($31);
 $33 = $32 & 15;
 $34 = $33;
 return ($34|0);
}
function _lua_typename($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($1) + 1)|0;
 $3 = (1376 + ($2<<2)|0);
 $4 = load4($3);
 return ($4|0);
}
function _lua_iscfunction($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $narrow = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = load4($2);
 $4 = ($1|0)>(0);
 do {
  if ($4) {
   $5 = load4($3);
   $6 = (($5) + ($1<<4)|0);
   $7 = ((($0)) + 12|0);
   $8 = load4($7);
   $9 = ($6>>>0)<($8>>>0);
   $$luaO_nilobject_$i = $9 ? $6 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $10 = ($1|0)<(-1000999);
   if (!($10)) {
    $11 = ((($0)) + 12|0);
    $12 = load4($11);
    $13 = (($12) + ($1<<4)|0);
    $$1$i = $13;
    break;
   }
   $14 = ($1|0)==(-1001000);
   if ($14) {
    $15 = ((($0)) + 16|0);
    $16 = load4($15);
    $17 = ((($16)) + 40|0);
    $$1$i = $17;
    break;
   }
   $18 = (-1001000 - ($1))|0;
   $19 = load4($3);
   $20 = ((($19)) + 8|0);
   $21 = load4($20);
   $22 = ($21|0)==(22);
   if ($22) {
    $$1$i = 18336;
   } else {
    $23 = load4($19);
    $24 = ((($23)) + 6|0);
    $25 = load1($24);
    $26 = $25&255;
    $27 = ($18|0)>($26|0);
    $28 = (($18) + -1)|0;
    $29 = (((($23)) + 16|0) + ($28<<4)|0);
    $30 = $27 ? 18336 : $29;
    $$1$i = $30;
   }
  }
 } while(0);
 $31 = ((($$1$i)) + 8|0);
 $32 = load4($31);
 $33 = ($32|0)==(22);
 $34 = ($32|0)==(102);
 $narrow = $33 | $34;
 $35 = $narrow&1;
 return ($35|0);
}
function _lua_isinteger($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = load4($2);
 $4 = ($1|0)>(0);
 do {
  if ($4) {
   $5 = load4($3);
   $6 = (($5) + ($1<<4)|0);
   $7 = ((($0)) + 12|0);
   $8 = load4($7);
   $9 = ($6>>>0)<($8>>>0);
   $$luaO_nilobject_$i = $9 ? $6 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $10 = ($1|0)<(-1000999);
   if (!($10)) {
    $11 = ((($0)) + 12|0);
    $12 = load4($11);
    $13 = (($12) + ($1<<4)|0);
    $$1$i = $13;
    break;
   }
   $14 = ($1|0)==(-1001000);
   if ($14) {
    $15 = ((($0)) + 16|0);
    $16 = load4($15);
    $17 = ((($16)) + 40|0);
    $$1$i = $17;
    break;
   }
   $18 = (-1001000 - ($1))|0;
   $19 = load4($3);
   $20 = ((($19)) + 8|0);
   $21 = load4($20);
   $22 = ($21|0)==(22);
   if ($22) {
    $$1$i = 18336;
   } else {
    $23 = load4($19);
    $24 = ((($23)) + 6|0);
    $25 = load1($24);
    $26 = $25&255;
    $27 = ($18|0)>($26|0);
    $28 = (($18) + -1)|0;
    $29 = (((($23)) + 16|0) + ($28<<4)|0);
    $30 = $27 ? 18336 : $29;
    $$1$i = $30;
   }
  }
 } while(0);
 $31 = ((($$1$i)) + 8|0);
 $32 = load4($31);
 $33 = ($32|0)==(19);
 $34 = $33&1;
 return ($34|0);
}
function _lua_isnumber($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = ((($0)) + 20|0);
 $4 = load4($3);
 $5 = ($1|0)>(0);
 do {
  if ($5) {
   $6 = load4($4);
   $7 = (($6) + ($1<<4)|0);
   $8 = ((($0)) + 12|0);
   $9 = load4($8);
   $10 = ($7>>>0)<($9>>>0);
   $$luaO_nilobject_$i = $10 ? $7 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $11 = ($1|0)<(-1000999);
   if (!($11)) {
    $12 = ((($0)) + 12|0);
    $13 = load4($12);
    $14 = (($13) + ($1<<4)|0);
    $$1$i = $14;
    break;
   }
   $15 = ($1|0)==(-1001000);
   if ($15) {
    $16 = ((($0)) + 16|0);
    $17 = load4($16);
    $18 = ((($17)) + 40|0);
    $$1$i = $18;
    break;
   }
   $19 = (-1001000 - ($1))|0;
   $20 = load4($4);
   $21 = ((($20)) + 8|0);
   $22 = load4($21);
   $23 = ($22|0)==(22);
   if ($23) {
    $$1$i = 18336;
   } else {
    $24 = load4($20);
    $25 = ((($24)) + 6|0);
    $26 = load1($25);
    $27 = $26&255;
    $28 = ($19|0)>($27|0);
    $29 = (($19) + -1)|0;
    $30 = (((($24)) + 16|0) + ($29<<4)|0);
    $31 = $28 ? 18336 : $30;
    $$1$i = $31;
   }
  }
 } while(0);
 $32 = ((($$1$i)) + 8|0);
 $33 = load4($32);
 $34 = ($33|0)==(3);
 if ($34) {
  $35 = loadd($$1$i);
  stored($2,$35);
  $37 = 1;
  STACKTOP = sp;return ($37|0);
 } else {
  $36 = (_luaV_tonumber_($$1$i,$2)|0);
  $37 = $36;
  STACKTOP = sp;return ($37|0);
 }
 return (0)|0;
}
function _lua_isstring($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = load4($2);
 $4 = ($1|0)>(0);
 do {
  if ($4) {
   $5 = load4($3);
   $6 = (($5) + ($1<<4)|0);
   $7 = ((($0)) + 12|0);
   $8 = load4($7);
   $9 = ($6>>>0)<($8>>>0);
   $$luaO_nilobject_$i = $9 ? $6 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $10 = ($1|0)<(-1000999);
   if (!($10)) {
    $11 = ((($0)) + 12|0);
    $12 = load4($11);
    $13 = (($12) + ($1<<4)|0);
    $$1$i = $13;
    break;
   }
   $14 = ($1|0)==(-1001000);
   if ($14) {
    $15 = ((($0)) + 16|0);
    $16 = load4($15);
    $17 = ((($16)) + 40|0);
    $$1$i = $17;
    break;
   }
   $18 = (-1001000 - ($1))|0;
   $19 = load4($3);
   $20 = ((($19)) + 8|0);
   $21 = load4($20);
   $22 = ($21|0)==(22);
   if ($22) {
    $$1$i = 18336;
   } else {
    $23 = load4($19);
    $24 = ((($23)) + 6|0);
    $25 = load1($24);
    $26 = $25&255;
    $27 = ($18|0)>($26|0);
    $28 = (($18) + -1)|0;
    $29 = (((($23)) + 16|0) + ($28<<4)|0);
    $30 = $27 ? 18336 : $29;
    $$1$i = $30;
   }
  }
 } while(0);
 $31 = ((($$1$i)) + 8|0);
 $32 = load4($31);
 $33 = $32 & 15;
 $34 = (($33) + -3)|0;
 $35 = ($34>>>0)<(2);
 $36 = $35&1;
 return ($36|0);
}
function _lua_rawequal($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1$i = 0, $$1$i12 = 0, $$luaO_nilobject_$i = 0, $$luaO_nilobject_$i11 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 20|0);
 $4 = load4($3);
 $5 = ($1|0)>(0);
 do {
  if ($5) {
   $6 = load4($4);
   $7 = (($6) + ($1<<4)|0);
   $8 = ((($0)) + 12|0);
   $9 = load4($8);
   $10 = ($7>>>0)<($9>>>0);
   $$luaO_nilobject_$i = $10 ? $7 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $11 = ($1|0)<(-1000999);
   if (!($11)) {
    $12 = ((($0)) + 12|0);
    $13 = load4($12);
    $14 = (($13) + ($1<<4)|0);
    $$1$i = $14;
    break;
   }
   $15 = ($1|0)==(-1001000);
   if ($15) {
    $16 = ((($0)) + 16|0);
    $17 = load4($16);
    $18 = ((($17)) + 40|0);
    $$1$i = $18;
    break;
   }
   $19 = (-1001000 - ($1))|0;
   $20 = load4($4);
   $21 = ((($20)) + 8|0);
   $22 = load4($21);
   $23 = ($22|0)==(22);
   if ($23) {
    $$1$i = 18336;
   } else {
    $24 = load4($20);
    $25 = ((($24)) + 6|0);
    $26 = load1($25);
    $27 = $26&255;
    $28 = ($19|0)>($27|0);
    $29 = (($19) + -1)|0;
    $30 = (((($24)) + 16|0) + ($29<<4)|0);
    $31 = $28 ? 18336 : $30;
    $$1$i = $31;
   }
  }
 } while(0);
 $32 = ($2|0)>(0);
 do {
  if ($32) {
   $33 = load4($4);
   $34 = (($33) + ($2<<4)|0);
   $35 = ((($0)) + 12|0);
   $36 = load4($35);
   $37 = ($34>>>0)<($36>>>0);
   $$luaO_nilobject_$i11 = $37 ? $34 : 18336;
   $$1$i12 = $$luaO_nilobject_$i11;
  } else {
   $38 = ($2|0)<(-1000999);
   if (!($38)) {
    $39 = ((($0)) + 12|0);
    $40 = load4($39);
    $41 = (($40) + ($2<<4)|0);
    $$1$i12 = $41;
    break;
   }
   $42 = ($2|0)==(-1001000);
   if ($42) {
    $43 = ((($0)) + 16|0);
    $44 = load4($43);
    $45 = ((($44)) + 40|0);
    $$1$i12 = $45;
    break;
   }
   $46 = (-1001000 - ($2))|0;
   $47 = load4($4);
   $48 = ((($47)) + 8|0);
   $49 = load4($48);
   $50 = ($49|0)==(22);
   if ($50) {
    $62 = 0;
    return ($62|0);
   } else {
    $51 = load4($47);
    $52 = ((($51)) + 6|0);
    $53 = load1($52);
    $54 = $53&255;
    $55 = ($46|0)>($54|0);
    $56 = (($46) + -1)|0;
    $57 = (((($51)) + 16|0) + ($56<<4)|0);
    $58 = $55 ? 18336 : $57;
    $$1$i12 = $58;
    break;
   }
  }
 } while(0);
 $59 = ($$1$i|0)!=(18336|0);
 $60 = ($$1$i12|0)!=(18336|0);
 $or$cond = $59 & $60;
 if (!($or$cond)) {
  $62 = 0;
  return ($62|0);
 }
 $61 = (_luaV_equalobj(0,$$1$i,$$1$i12)|0);
 $62 = $61;
 return ($62|0);
}
function _lua_compare($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$1$i = 0, $$1$i23 = 0, $$luaO_nilobject_$i = 0, $$luaO_nilobject_$i22 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 20|0);
 $5 = load4($4);
 $6 = ($1|0)>(0);
 do {
  if ($6) {
   $7 = load4($5);
   $8 = (($7) + ($1<<4)|0);
   $9 = ((($0)) + 12|0);
   $10 = load4($9);
   $11 = ($8>>>0)<($10>>>0);
   $$luaO_nilobject_$i = $11 ? $8 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $12 = ($1|0)<(-1000999);
   if (!($12)) {
    $13 = ((($0)) + 12|0);
    $14 = load4($13);
    $15 = (($14) + ($1<<4)|0);
    $$1$i = $15;
    break;
   }
   $16 = ($1|0)==(-1001000);
   if ($16) {
    $17 = ((($0)) + 16|0);
    $18 = load4($17);
    $19 = ((($18)) + 40|0);
    $$1$i = $19;
    break;
   }
   $20 = (-1001000 - ($1))|0;
   $21 = load4($5);
   $22 = ((($21)) + 8|0);
   $23 = load4($22);
   $24 = ($23|0)==(22);
   if ($24) {
    $$1$i = 18336;
   } else {
    $25 = load4($21);
    $26 = ((($25)) + 6|0);
    $27 = load1($26);
    $28 = $27&255;
    $29 = ($20|0)>($28|0);
    $30 = (($20) + -1)|0;
    $31 = (((($25)) + 16|0) + ($30<<4)|0);
    $32 = $29 ? 18336 : $31;
    $$1$i = $32;
   }
  }
 } while(0);
 $33 = ($2|0)>(0);
 do {
  if ($33) {
   $34 = load4($5);
   $35 = (($34) + ($2<<4)|0);
   $36 = ((($0)) + 12|0);
   $37 = load4($36);
   $38 = ($35>>>0)<($37>>>0);
   $$luaO_nilobject_$i22 = $38 ? $35 : 18336;
   $$1$i23 = $$luaO_nilobject_$i22;
  } else {
   $39 = ($2|0)<(-1000999);
   if (!($39)) {
    $40 = ((($0)) + 12|0);
    $41 = load4($40);
    $42 = (($41) + ($2<<4)|0);
    $$1$i23 = $42;
    break;
   }
   $43 = ($2|0)==(-1001000);
   if ($43) {
    $44 = ((($0)) + 16|0);
    $45 = load4($44);
    $46 = ((($45)) + 40|0);
    $$1$i23 = $46;
    break;
   }
   $47 = (-1001000 - ($2))|0;
   $48 = load4($5);
   $49 = ((($48)) + 8|0);
   $50 = load4($49);
   $51 = ($50|0)==(22);
   if ($51) {
    $$0 = 0;
    return ($$0|0);
   } else {
    $52 = load4($48);
    $53 = ((($52)) + 6|0);
    $54 = load1($53);
    $55 = $54&255;
    $56 = ($47|0)>($55|0);
    $57 = (($47) + -1)|0;
    $58 = (((($52)) + 16|0) + ($57<<4)|0);
    $59 = $56 ? 18336 : $58;
    $$1$i23 = $59;
    break;
   }
  }
 } while(0);
 $60 = ($$1$i|0)!=(18336|0);
 $61 = ($$1$i23|0)!=(18336|0);
 $or$cond = $60 & $61;
 if (!($or$cond)) {
  $$0 = 0;
  return ($$0|0);
 }
 switch ($3|0) {
 case 0:  {
  $62 = (_luaV_equalobj($0,$$1$i,$$1$i23)|0);
  $$0 = $62;
  return ($$0|0);
  break;
 }
 case 1:  {
  $63 = (_luaV_lessthan($0,$$1$i,$$1$i23)|0);
  $$0 = $63;
  return ($$0|0);
  break;
 }
 case 2:  {
  $64 = (_luaV_lessequal($0,$$1$i,$$1$i23)|0);
  $$0 = $64;
  return ($$0|0);
  break;
 }
 default: {
  $$0 = 0;
  return ($$0|0);
 }
 }
 return (0)|0;
}
function _lua_stringtonumber($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = load4($2);
 $4 = (_luaO_str2num($1,$3)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  return ($4|0);
 }
 $6 = load4($2);
 $7 = ((($6)) + 16|0);
 store4($2,$7);
 return ($4|0);
}
function _lua_tonumberx($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $4 = ((($0)) + 20|0);
 $5 = load4($4);
 $6 = ($1|0)>(0);
 do {
  if ($6) {
   $7 = load4($5);
   $8 = (($7) + ($1<<4)|0);
   $9 = ((($0)) + 12|0);
   $10 = load4($9);
   $11 = ($8>>>0)<($10>>>0);
   $$luaO_nilobject_$i = $11 ? $8 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $12 = ($1|0)<(-1000999);
   if (!($12)) {
    $13 = ((($0)) + 12|0);
    $14 = load4($13);
    $15 = (($14) + ($1<<4)|0);
    $$1$i = $15;
    break;
   }
   $16 = ($1|0)==(-1001000);
   if ($16) {
    $17 = ((($0)) + 16|0);
    $18 = load4($17);
    $19 = ((($18)) + 40|0);
    $$1$i = $19;
    break;
   }
   $20 = (-1001000 - ($1))|0;
   $21 = load4($5);
   $22 = ((($21)) + 8|0);
   $23 = load4($22);
   $24 = ($23|0)==(22);
   if ($24) {
    $$1$i = 18336;
   } else {
    $25 = load4($21);
    $26 = ((($25)) + 6|0);
    $27 = load1($26);
    $28 = $27&255;
    $29 = ($20|0)>($28|0);
    $30 = (($20) + -1)|0;
    $31 = (((($25)) + 16|0) + ($30<<4)|0);
    $32 = $29 ? 18336 : $31;
    $$1$i = $32;
   }
  }
 } while(0);
 $33 = ((($$1$i)) + 8|0);
 $34 = load4($33);
 $35 = ($34|0)==(3);
 if ($35) {
  $36 = loadd($$1$i);
  stored($3,$36);
  $40 = 1;
 } else {
  $37 = (_luaV_tonumber_($$1$i,$3)|0);
  $38 = ($37|0)==(0);
  if ($38) {
   stored($3,0.0);
   $40 = 0;
  } else {
   $40 = $37;
  }
 }
 $39 = ($2|0)==(0|0);
 if ($39) {
  $41 = loadd($3);
  STACKTOP = sp;return (+$41);
 }
 store4($2,$40);
 $41 = loadd($3);
 STACKTOP = sp;return (+$41);
}
function _lua_tointegerx($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = i64(), $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = i64(), $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $4 = ((($0)) + 20|0);
 $5 = load4($4);
 $6 = ($1|0)>(0);
 do {
  if ($6) {
   $7 = load4($5);
   $8 = (($7) + ($1<<4)|0);
   $9 = ((($0)) + 12|0);
   $10 = load4($9);
   $11 = ($8>>>0)<($10>>>0);
   $$luaO_nilobject_$i = $11 ? $8 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $12 = ($1|0)<(-1000999);
   if (!($12)) {
    $13 = ((($0)) + 12|0);
    $14 = load4($13);
    $15 = (($14) + ($1<<4)|0);
    $$1$i = $15;
    break;
   }
   $16 = ($1|0)==(-1001000);
   if ($16) {
    $17 = ((($0)) + 16|0);
    $18 = load4($17);
    $19 = ((($18)) + 40|0);
    $$1$i = $19;
    break;
   }
   $20 = (-1001000 - ($1))|0;
   $21 = load4($5);
   $22 = ((($21)) + 8|0);
   $23 = load4($22);
   $24 = ($23|0)==(22);
   if ($24) {
    $$1$i = 18336;
   } else {
    $25 = load4($21);
    $26 = ((($25)) + 6|0);
    $27 = load1($26);
    $28 = $27&255;
    $29 = ($20|0)>($28|0);
    $30 = (($20) + -1)|0;
    $31 = (((($25)) + 16|0) + ($30<<4)|0);
    $32 = $29 ? 18336 : $31;
    $$1$i = $32;
   }
  }
 } while(0);
 $33 = ((($$1$i)) + 8|0);
 $34 = load4($33);
 $35 = ($34|0)==(19);
 if ($35) {
  $36 = load8($$1$i);
  store8($3,$36);
  $40 = 1;
 } else {
  $37 = (_luaV_tointeger($$1$i,$3,0)|0);
  $38 = ($37|0)==(0);
  if ($38) {
   store8($3,i64_const(0,0));
   $40 = 0;
  } else {
   $40 = $37;
  }
 }
 $39 = ($2|0)==(0|0);
 if ($39) {
  $41 = load8($3);
  STACKTOP = sp;return (i64($41));
 }
 store4($2,$40);
 $41 = load8($3);
 STACKTOP = sp;return (i64($41));
}
function _lua_toboolean($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = load4($2);
 $4 = ($1|0)>(0);
 do {
  if ($4) {
   $5 = load4($3);
   $6 = (($5) + ($1<<4)|0);
   $7 = ((($0)) + 12|0);
   $8 = load4($7);
   $9 = ($6>>>0)<($8>>>0);
   $$luaO_nilobject_$i = $9 ? $6 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $10 = ($1|0)<(-1000999);
   if (!($10)) {
    $11 = ((($0)) + 12|0);
    $12 = load4($11);
    $13 = (($12) + ($1<<4)|0);
    $$1$i = $13;
    break;
   }
   $14 = ($1|0)==(-1001000);
   if ($14) {
    $15 = ((($0)) + 16|0);
    $16 = load4($15);
    $17 = ((($16)) + 40|0);
    $$1$i = $17;
    break;
   }
   $18 = (-1001000 - ($1))|0;
   $19 = load4($3);
   $20 = ((($19)) + 8|0);
   $21 = load4($20);
   $22 = ($21|0)==(22);
   if ($22) {
    $$1$i = 18336;
   } else {
    $23 = load4($19);
    $24 = ((($23)) + 6|0);
    $25 = load1($24);
    $26 = $25&255;
    $27 = ($18|0)>($26|0);
    $28 = (($18) + -1)|0;
    $29 = (((($23)) + 16|0) + ($28<<4)|0);
    $30 = $27 ? 18336 : $29;
    $$1$i = $30;
   }
  }
 } while(0);
 $31 = ((($$1$i)) + 8|0);
 $32 = load4($31);
 switch ($32|0) {
 case 1:  {
  $33 = load4($$1$i);
  $34 = ($33|0)!=(0);
  $phitmp = $34&1;
  $35 = $phitmp;
  return ($35|0);
  break;
 }
 case 0:  {
  $35 = $32;
  return ($35|0);
  break;
 }
 default: {
  $35 = 1;
  return ($35|0);
 }
 }
 return (0)|0;
}
function _lua_tolstring($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$018 = 0, $$1$i = 0, $$luaO_nilobject_$i = 0, $$luaO_nilobject_$i19 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0;
 var $9 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 20|0);
 $4 = load4($3);
 $5 = ($1|0)>(0);
 do {
  if ($5) {
   $6 = load4($4);
   $7 = (($6) + ($1<<4)|0);
   $8 = ((($0)) + 12|0);
   $9 = load4($8);
   $10 = ($7>>>0)<($9>>>0);
   $$luaO_nilobject_$i = $10 ? $7 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $11 = ($1|0)<(-1000999);
   if (!($11)) {
    $12 = ((($0)) + 12|0);
    $13 = load4($12);
    $14 = (($13) + ($1<<4)|0);
    $$1$i = $14;
    break;
   }
   $15 = ($1|0)==(-1001000);
   if ($15) {
    $16 = ((($0)) + 16|0);
    $17 = load4($16);
    $18 = ((($17)) + 40|0);
    $$1$i = $18;
    break;
   }
   $19 = (-1001000 - ($1))|0;
   $20 = load4($4);
   $21 = ((($20)) + 8|0);
   $22 = load4($21);
   $23 = ($22|0)==(22);
   if ($23) {
    $$1$i = 18336;
   } else {
    $24 = load4($20);
    $25 = ((($24)) + 6|0);
    $26 = load1($25);
    $27 = $26&255;
    $28 = ($19|0)>($27|0);
    $29 = (($19) + -1)|0;
    $30 = (((($24)) + 16|0) + ($29<<4)|0);
    $31 = $28 ? 18336 : $30;
    $$1$i = $31;
   }
  }
 } while(0);
 $32 = ((($$1$i)) + 8|0);
 $33 = load4($32);
 $trunc = $33&255;
 $trunc$clear = $trunc & 15;
 switch ($trunc$clear<<24>>24) {
 case 4:  {
  $$0 = $$1$i;
  break;
 }
 case 3:  {
  label = 12;
  break;
 }
 default: {
  $34 = ($2|0)==(0|0);
  if ($34) {
   $$018 = 0;
   return ($$018|0);
  }
  store4($2,0);
  $$018 = 0;
  return ($$018|0);
 }
 }
 do {
  if ((label|0) == 12) {
   _luaO_tostring($0,$$1$i);
   $35 = ((($0)) + 16|0);
   $36 = load4($35);
   $37 = ((($36)) + 12|0);
   $38 = load4($37);
   $39 = ($38|0)>(0);
   if ($39) {
    _luaC_step($0);
   }
   $40 = load4($3);
   if ($5) {
    $41 = load4($40);
    $42 = (($41) + ($1<<4)|0);
    $43 = ((($0)) + 12|0);
    $44 = load4($43);
    $45 = ($42>>>0)<($44>>>0);
    $$luaO_nilobject_$i19 = $45 ? $42 : 18336;
    $$0 = $$luaO_nilobject_$i19;
    break;
   }
   $46 = ($1|0)<(-1000999);
   if (!($46)) {
    $47 = ((($0)) + 12|0);
    $48 = load4($47);
    $49 = (($48) + ($1<<4)|0);
    $$0 = $49;
    break;
   }
   $50 = ($1|0)==(-1001000);
   if ($50) {
    $51 = load4($35);
    $52 = ((($51)) + 40|0);
    $$0 = $52;
    break;
   }
   $53 = (-1001000 - ($1))|0;
   $54 = load4($40);
   $55 = ((($54)) + 8|0);
   $56 = load4($55);
   $57 = ($56|0)==(22);
   if ($57) {
    $$0 = 18336;
   } else {
    $58 = load4($54);
    $59 = ((($58)) + 6|0);
    $60 = load1($59);
    $61 = $60&255;
    $62 = ($53|0)>($61|0);
    $63 = (($53) + -1)|0;
    $64 = (((($58)) + 16|0) + ($63<<4)|0);
    $65 = $62 ? 18336 : $64;
    $$0 = $65;
   }
  }
 } while(0);
 $66 = ($2|0)==(0|0);
 if (!($66)) {
  $67 = load4($$0);
  $68 = ((($67)) + 4|0);
  $69 = load1($68);
  $70 = ($69<<24>>24)==(4);
  if ($70) {
   $71 = ((($67)) + 7|0);
   $72 = load1($71);
   $73 = $72&255;
   $76 = $73;
  } else {
   $74 = ((($67)) + 12|0);
   $75 = load4($74);
   $76 = $75;
  }
  store4($2,$76);
 }
 $77 = load4($$0);
 $78 = ((($77)) + 16|0);
 $$018 = $78;
 return ($$018|0);
}
function _lua_rawlen($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = i64(), $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = load4($2);
 $4 = ($1|0)>(0);
 do {
  if ($4) {
   $5 = load4($3);
   $6 = (($5) + ($1<<4)|0);
   $7 = ((($0)) + 12|0);
   $8 = load4($7);
   $9 = ($6>>>0)<($8>>>0);
   $$luaO_nilobject_$i = $9 ? $6 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $10 = ($1|0)<(-1000999);
   if (!($10)) {
    $11 = ((($0)) + 12|0);
    $12 = load4($11);
    $13 = (($12) + ($1<<4)|0);
    $$1$i = $13;
    break;
   }
   $14 = ($1|0)==(-1001000);
   if ($14) {
    $15 = ((($0)) + 16|0);
    $16 = load4($15);
    $17 = ((($16)) + 40|0);
    $$1$i = $17;
    break;
   }
   $18 = (-1001000 - ($1))|0;
   $19 = load4($3);
   $20 = ((($19)) + 8|0);
   $21 = load4($20);
   $22 = ($21|0)==(22);
   if ($22) {
    $$1$i = 18336;
   } else {
    $23 = load4($19);
    $24 = ((($23)) + 6|0);
    $25 = load1($24);
    $26 = $25&255;
    $27 = ($18|0)>($26|0);
    $28 = (($18) + -1)|0;
    $29 = (((($23)) + 16|0) + ($28<<4)|0);
    $30 = $27 ? 18336 : $29;
    $$1$i = $30;
   }
  }
 } while(0);
 $31 = ((($$1$i)) + 8|0);
 $32 = load4($31);
 $trunc = $32&255;
 $trunc$clear = $trunc & 63;
 switch ($trunc$clear<<24>>24) {
 case 4:  {
  $33 = load4($$1$i);
  $34 = ((($33)) + 7|0);
  $35 = load1($34);
  $36 = $35&255;
  $$0 = $36;
  return ($$0|0);
  break;
 }
 case 20:  {
  $37 = load4($$1$i);
  $38 = ((($37)) + 12|0);
  $39 = load4($38);
  $$0 = $39;
  return ($$0|0);
  break;
 }
 case 7:  {
  $40 = load4($$1$i);
  $41 = ((($40)) + 12|0);
  $42 = load4($41);
  $$0 = $42;
  return ($$0|0);
  break;
 }
 case 5:  {
  $43 = load4($$1$i);
  $44 = (i64(_luaH_getn($43)));
  $45 = i64_trunc($44);
  $$0 = $45;
  return ($$0|0);
  break;
 }
 default: {
  $$0 = 0;
  return ($$0|0);
 }
 }
 return (0)|0;
}
function _lua_touserdata($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $trunc = 0, $trunc$clear = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = load4($2);
 $4 = ($1|0)>(0);
 do {
  if ($4) {
   $5 = load4($3);
   $6 = (($5) + ($1<<4)|0);
   $7 = ((($0)) + 12|0);
   $8 = load4($7);
   $9 = ($6>>>0)<($8>>>0);
   $$luaO_nilobject_$i = $9 ? $6 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $10 = ($1|0)<(-1000999);
   if (!($10)) {
    $11 = ((($0)) + 12|0);
    $12 = load4($11);
    $13 = (($12) + ($1<<4)|0);
    $$1$i = $13;
    break;
   }
   $14 = ($1|0)==(-1001000);
   if ($14) {
    $15 = ((($0)) + 16|0);
    $16 = load4($15);
    $17 = ((($16)) + 40|0);
    $$1$i = $17;
    break;
   }
   $18 = (-1001000 - ($1))|0;
   $19 = load4($3);
   $20 = ((($19)) + 8|0);
   $21 = load4($20);
   $22 = ($21|0)==(22);
   if ($22) {
    $$1$i = 18336;
   } else {
    $23 = load4($19);
    $24 = ((($23)) + 6|0);
    $25 = load1($24);
    $26 = $25&255;
    $27 = ($18|0)>($26|0);
    $28 = (($18) + -1)|0;
    $29 = (((($23)) + 16|0) + ($28<<4)|0);
    $30 = $27 ? 18336 : $29;
    $$1$i = $30;
   }
  }
 } while(0);
 $31 = ((($$1$i)) + 8|0);
 $32 = load4($31);
 $trunc = $32&255;
 $trunc$clear = $trunc & 15;
 switch ($trunc$clear<<24>>24) {
 case 7:  {
  $33 = load4($$1$i);
  $34 = ((($33)) + 24|0);
  $$0 = $34;
  return ($$0|0);
  break;
 }
 case 2:  {
  $35 = load4($$1$i);
  $$0 = $35;
  return ($$0|0);
  break;
 }
 default: {
  $$0 = 0;
  return ($$0|0);
 }
 }
 return (0)|0;
}
function _lua_tothread($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = load4($2);
 $4 = ($1|0)>(0);
 do {
  if ($4) {
   $5 = load4($3);
   $6 = (($5) + ($1<<4)|0);
   $7 = ((($0)) + 12|0);
   $8 = load4($7);
   $9 = ($6>>>0)<($8>>>0);
   $$luaO_nilobject_$i = $9 ? $6 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $10 = ($1|0)<(-1000999);
   if (!($10)) {
    $11 = ((($0)) + 12|0);
    $12 = load4($11);
    $13 = (($12) + ($1<<4)|0);
    $$1$i = $13;
    break;
   }
   $14 = ($1|0)==(-1001000);
   if ($14) {
    $15 = ((($0)) + 16|0);
    $16 = load4($15);
    $17 = ((($16)) + 40|0);
    $$1$i = $17;
    break;
   }
   $18 = (-1001000 - ($1))|0;
   $19 = load4($3);
   $20 = ((($19)) + 8|0);
   $21 = load4($20);
   $22 = ($21|0)==(22);
   if ($22) {
    $$1$i = 18336;
   } else {
    $23 = load4($19);
    $24 = ((($23)) + 6|0);
    $25 = load1($24);
    $26 = $25&255;
    $27 = ($18|0)>($26|0);
    $28 = (($18) + -1)|0;
    $29 = (((($23)) + 16|0) + ($28<<4)|0);
    $30 = $27 ? 18336 : $29;
    $$1$i = $30;
   }
  }
 } while(0);
 $31 = ((($$1$i)) + 8|0);
 $32 = load4($31);
 $33 = ($32|0)==(72);
 if (!($33)) {
  $35 = 0;
  return ($35|0);
 }
 $34 = load4($$1$i);
 $35 = $34;
 return ($35|0);
}
function _lua_topointer($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = load4($2);
 $4 = ($1|0)>(0);
 do {
  if ($4) {
   $5 = load4($3);
   $6 = (($5) + ($1<<4)|0);
   $7 = ((($0)) + 12|0);
   $8 = load4($7);
   $9 = ($6>>>0)<($8>>>0);
   $$luaO_nilobject_$i = $9 ? $6 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $10 = ($1|0)<(-1000999);
   if (!($10)) {
    $11 = ((($0)) + 12|0);
    $12 = load4($11);
    $13 = (($12) + ($1<<4)|0);
    $$1$i = $13;
    break;
   }
   $14 = ($1|0)==(-1001000);
   if ($14) {
    $15 = ((($0)) + 16|0);
    $16 = load4($15);
    $17 = ((($16)) + 40|0);
    $$1$i = $17;
    break;
   }
   $18 = (-1001000 - ($1))|0;
   $19 = load4($3);
   $20 = ((($19)) + 8|0);
   $21 = load4($20);
   $22 = ($21|0)==(22);
   if ($22) {
    $$1$i = 18336;
   } else {
    $23 = load4($19);
    $24 = ((($23)) + 6|0);
    $25 = load1($24);
    $26 = $25&255;
    $27 = ($18|0)>($26|0);
    $28 = (($18) + -1)|0;
    $29 = (((($23)) + 16|0) + ($28<<4)|0);
    $30 = $27 ? 18336 : $29;
    $$1$i = $30;
   }
  }
 } while(0);
 $31 = ((($$1$i)) + 8|0);
 $32 = load4($31);
 $trunc = $32&255;
 $trunc$clear = $trunc & 63;
 switch ($trunc$clear<<24>>24) {
 case 5:  {
  $33 = load4($$1$i);
  $$0 = $33;
  return ($$0|0);
  break;
 }
 case 6:  {
  $34 = load4($$1$i);
  $$0 = $34;
  return ($$0|0);
  break;
 }
 case 38:  {
  $35 = load4($$1$i);
  $$0 = $35;
  return ($$0|0);
  break;
 }
 case 22:  {
  $36 = load4($$1$i);
  $$0 = $36;
  return ($$0|0);
  break;
 }
 case 8:  {
  $37 = load4($$1$i);
  $$0 = $37;
  return ($$0|0);
  break;
 }
 case 7:  {
  $38 = load4($$1$i);
  $39 = ((($38)) + 24|0);
  $$0 = $39;
  return ($$0|0);
  break;
 }
 case 2:  {
  $40 = load4($$1$i);
  $$0 = $40;
  return ($$0|0);
  break;
 }
 default: {
  $$0 = 0;
  return ($$0|0);
 }
 }
 return (0)|0;
}
function _lua_pushnil($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 12|0);
 $2 = load4($1);
 $3 = ((($2)) + 8|0);
 store4($3,0);
 $4 = ((($2)) + 16|0);
 store4($1,$4);
 return;
}
function _lua_pushnumber($0,$1) {
 $0 = $0|0;
 $1 = +$1;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = load4($2);
 stored($3,$1);
 $4 = ((($3)) + 8|0);
 store4($4,3);
 $5 = load4($2);
 $6 = ((($5)) + 16|0);
 store4($2,$6);
 return;
}
function _lua_pushinteger($0,$1) {
 $0 = $0|0;
 $1 = i64($1);
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = load4($2);
 store8($3,$1);
 $4 = ((($3)) + 8|0);
 store4($4,19);
 $5 = load4($2);
 $6 = ((($5)) + 16|0);
 store4($2,$6);
 return;
}
function _lua_pushlstring($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if ($3) {
  $4 = (_luaS_new($0,19032)|0);
  $8 = $4;
 } else {
  $5 = (_luaS_newlstr($0,$1,$2)|0);
  $8 = $5;
 }
 $6 = ((($0)) + 12|0);
 $7 = load4($6);
 store4($7,$8);
 $9 = ((($8)) + 4|0);
 $10 = load1($9);
 $11 = $10 | 64;
 $12 = $11&255;
 $13 = ((($7)) + 8|0);
 store4($13,$12);
 $14 = load4($6);
 $15 = ((($14)) + 16|0);
 store4($6,$15);
 $16 = ((($0)) + 16|0);
 $17 = load4($16);
 $18 = ((($17)) + 12|0);
 $19 = load4($18);
 $20 = ($19|0)>(0);
 if (!($20)) {
  $21 = ((($8)) + 16|0);
  return ($21|0);
 }
 _luaC_step($0);
 $21 = ((($8)) + 16|0);
 return ($21|0);
}
function _lua_pushstring($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $3 = ((($0)) + 12|0);
  $4 = load4($3);
  $5 = ((($4)) + 8|0);
  store4($5,0);
  $$0 = 0;$$pre$phiZ2D = $3;$16 = $4;
 } else {
  $6 = (_luaS_new($0,$1)|0);
  $7 = ((($0)) + 12|0);
  $8 = load4($7);
  store4($8,$6);
  $9 = ((($6)) + 4|0);
  $10 = load1($9);
  $11 = $10 | 64;
  $12 = $11&255;
  $13 = ((($8)) + 8|0);
  store4($13,$12);
  $14 = ((($6)) + 16|0);
  $$pre = load4($7);
  $$0 = $14;$$pre$phiZ2D = $7;$16 = $$pre;
 }
 $15 = ((($16)) + 16|0);
 store4($$pre$phiZ2D,$15);
 $17 = ((($0)) + 16|0);
 $18 = load4($17);
 $19 = ((($18)) + 12|0);
 $20 = load4($19);
 $21 = ($20|0)>(0);
 if (!($21)) {
  return ($$0|0);
 }
 _luaC_step($0);
 return ($$0|0);
}
function _lua_pushvfstring($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_luaO_pushvfstring($0,$1,$2)|0);
 $4 = ((($0)) + 16|0);
 $5 = load4($4);
 $6 = ((($5)) + 12|0);
 $7 = load4($6);
 $8 = ($7|0)>(0);
 if (!($8)) {
  return ($3|0);
 }
 _luaC_step($0);
 return ($3|0);
}
function _lua_pushfstring($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 store4($2,$varargs);
 $3 = (_luaO_pushvfstring($0,$1,$2)|0);
 $4 = ((($0)) + 16|0);
 $5 = load4($4);
 $6 = ((($5)) + 12|0);
 $7 = load4($6);
 $8 = ($7|0)>(0);
 if (!($8)) {
  STACKTOP = sp;return ($3|0);
 }
 _luaC_step($0);
 STACKTOP = sp;return ($3|0);
}
function _lua_pushcclosure($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$in = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if ($3) {
  $4 = ((($0)) + 12|0);
  $5 = load4($4);
  store4($5,$1);
  $6 = ((($5)) + 8|0);
  store4($6,22);
  $7 = load4($4);
  $8 = ((($7)) + 16|0);
  store4($4,$8);
  return;
 }
 $9 = (_luaF_newCclosure($0,$2)|0);
 $10 = ((($9)) + 12|0);
 store4($10,$1);
 $11 = ((($0)) + 12|0);
 $12 = load4($11);
 $13 = (0 - ($2))|0;
 $14 = (($12) + ($13<<4)|0);
 store4($11,$14);
 $$in = $2;$18 = $14;
 while(1) {
  $15 = (($$in) + -1)|0;
  $16 = (((($9)) + 16|0) + ($15<<4)|0);
  $17 = (($18) + ($15<<4)|0);
  ; store8($16,load8($17,8),8); store8($16+8 | 0,load8($17+8 | 0,8),8);
  $19 = ($15|0)==(0);
  $20 = load4($11);
  if ($19) {
   break;
  } else {
   $$in = $15;$18 = $20;
  }
 }
 store4($20,$9);
 $21 = ((($20)) + 8|0);
 store4($21,102);
 $22 = load4($11);
 $23 = ((($22)) + 16|0);
 store4($11,$23);
 $24 = ((($0)) + 16|0);
 $25 = load4($24);
 $26 = ((($25)) + 12|0);
 $27 = load4($26);
 $28 = ($27|0)>(0);
 if (!($28)) {
  return;
 }
 _luaC_step($0);
 return;
}
function _lua_pushboolean($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = load4($2);
 $4 = ($1|0)!=(0);
 $5 = $4&1;
 store4($3,$5);
 $6 = ((($3)) + 8|0);
 store4($6,1);
 $7 = load4($2);
 $8 = ((($7)) + 16|0);
 store4($2,$8);
 return;
}
function _lua_pushlightuserdata($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = load4($2);
 store4($3,$1);
 $4 = ((($3)) + 8|0);
 store4($4,2);
 $5 = load4($2);
 $6 = ((($5)) + 16|0);
 store4($2,$6);
 return;
}
function _lua_pushthread($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 12|0);
 $2 = load4($1);
 store4($2,$0);
 $3 = ((($2)) + 8|0);
 store4($3,72);
 $4 = load4($1);
 $5 = ((($4)) + 16|0);
 store4($1,$5);
 $6 = ((($0)) + 16|0);
 $7 = load4($6);
 $8 = ((($7)) + 124|0);
 $9 = load4($8);
 $10 = ($9|0)==($0|0);
 $11 = $10&1;
 return ($11|0);
}
function _lua_getglobal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = load4($2);
 $4 = ((($3)) + 40|0);
 $5 = load4($4);
 $6 = (_luaH_getint($5,i64_const(2,0))|0);
 $7 = (_luaS_new($0,$1)|0);
 $8 = ((($6)) + 8|0);
 $9 = load4($8);
 $10 = ($9|0)==(69);
 if ($10) {
  $11 = load4($6);
  $12 = (_luaH_getstr($11,$7)|0);
  $13 = ((($12)) + 8|0);
  $14 = load4($13);
  $15 = ($14|0)==(0);
  if ($15) {
   $$0$i = $12;
  } else {
   $16 = ((($0)) + 12|0);
   $17 = load4($16);
   ; store8($17,load8($12,8),8); store8($17+8 | 0,load8($12+8 | 0,8),8);
   $18 = load4($16);
   $19 = ((($18)) + 16|0);
   store4($16,$19);
   $30 = $19;
   $29 = ((($30)) + -8|0);
   $31 = load4($29);
   $32 = $31 & 15;
   return ($32|0);
  }
 } else {
  $$0$i = 0;
 }
 $20 = ((($0)) + 12|0);
 $21 = load4($20);
 store4($21,$7);
 $22 = ((($7)) + 4|0);
 $23 = load1($22);
 $24 = $23 | 64;
 $25 = $24&255;
 $26 = ((($21)) + 8|0);
 store4($26,$25);
 $27 = load4($20);
 $28 = ((($27)) + 16|0);
 store4($20,$28);
 _luaV_finishget($0,$6,$27,$27,$$0$i);
 $$pre$i = load4($20);
 $30 = $$pre$i;
 $29 = ((($30)) + -8|0);
 $31 = load4($29);
 $32 = $31 & 15;
 return ($32|0);
}
function _lua_gettable($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$1$i = 0, $$luaO_nilobject_$i = 0, $$pre = 0, $$pre$phi20Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = load4($2);
 $4 = ($1|0)>(0);
 do {
  if ($4) {
   $5 = load4($3);
   $6 = (($5) + ($1<<4)|0);
   $7 = ((($0)) + 12|0);
   $8 = load4($7);
   $9 = ($6>>>0)<($8>>>0);
   $$luaO_nilobject_$i = $9 ? $6 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $10 = ($1|0)<(-1000999);
   if (!($10)) {
    $11 = ((($0)) + 12|0);
    $12 = load4($11);
    $13 = (($12) + ($1<<4)|0);
    $$1$i = $13;
    break;
   }
   $14 = ($1|0)==(-1001000);
   if ($14) {
    $15 = ((($0)) + 16|0);
    $16 = load4($15);
    $17 = ((($16)) + 40|0);
    $$1$i = $17;
    break;
   }
   $18 = (-1001000 - ($1))|0;
   $19 = load4($3);
   $20 = ((($19)) + 8|0);
   $21 = load4($20);
   $22 = ($21|0)==(22);
   if ($22) {
    $$1$i = 18336;
   } else {
    $23 = load4($19);
    $24 = ((($23)) + 6|0);
    $25 = load1($24);
    $26 = $25&255;
    $27 = ($18|0)>($26|0);
    $28 = (($18) + -1)|0;
    $29 = (((($23)) + 16|0) + ($28<<4)|0);
    $30 = $27 ? 18336 : $29;
    $$1$i = $30;
   }
  }
 } while(0);
 $31 = ((($$1$i)) + 8|0);
 $32 = load4($31);
 $33 = ($32|0)==(69);
 if ($33) {
  $34 = load4($$1$i);
  $35 = ((($0)) + 12|0);
  $36 = load4($35);
  $37 = ((($36)) + -16|0);
  $38 = (_luaH_get($34,$37)|0);
  $39 = ((($38)) + 8|0);
  $40 = load4($39);
  $41 = ($40|0)==(0);
  if ($41) {
   $$0 = $38;$$pre$phi20Z2D = $35;
  } else {
   $42 = load4($35);
   $43 = ((($42)) + -16|0);
   ; store8($43,load8($38,8),8); store8($43+8 | 0,load8($38+8 | 0,8),8);
   $$pre$phiZ2D = $35;
   $46 = load4($$pre$phiZ2D);
   $47 = ((($46)) + -8|0);
   $48 = load4($47);
   $49 = $48 & 15;
   return ($49|0);
  }
 } else {
  $$pre = ((($0)) + 12|0);
  $$0 = 0;$$pre$phi20Z2D = $$pre;
 }
 $44 = load4($$pre$phi20Z2D);
 $45 = ((($44)) + -16|0);
 _luaV_finishget($0,$$1$i,$45,$45,$$0);
 $$pre$phiZ2D = $$pre$phi20Z2D;
 $46 = load4($$pre$phiZ2D);
 $47 = ((($46)) + -8|0);
 $48 = load4($47);
 $49 = $48 & 15;
 return ($49|0);
}
function _lua_getfield($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $$1$i = 0, $$luaO_nilobject_$i = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 20|0);
 $4 = load4($3);
 $5 = ($1|0)>(0);
 do {
  if ($5) {
   $6 = load4($4);
   $7 = (($6) + ($1<<4)|0);
   $8 = ((($0)) + 12|0);
   $9 = load4($8);
   $10 = ($7>>>0)<($9>>>0);
   $$luaO_nilobject_$i = $10 ? $7 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $11 = ($1|0)<(-1000999);
   if (!($11)) {
    $12 = ((($0)) + 12|0);
    $13 = load4($12);
    $14 = (($13) + ($1<<4)|0);
    $$1$i = $14;
    break;
   }
   $15 = ($1|0)==(-1001000);
   if ($15) {
    $16 = ((($0)) + 16|0);
    $17 = load4($16);
    $18 = ((($17)) + 40|0);
    $$1$i = $18;
    break;
   }
   $19 = (-1001000 - ($1))|0;
   $20 = load4($4);
   $21 = ((($20)) + 8|0);
   $22 = load4($21);
   $23 = ($22|0)==(22);
   if ($23) {
    $$1$i = 18336;
   } else {
    $24 = load4($20);
    $25 = ((($24)) + 6|0);
    $26 = load1($25);
    $27 = $26&255;
    $28 = ($19|0)>($27|0);
    $29 = (($19) + -1)|0;
    $30 = (((($24)) + 16|0) + ($29<<4)|0);
    $31 = $28 ? 18336 : $30;
    $$1$i = $31;
   }
  }
 } while(0);
 $32 = (_luaS_new($0,$2)|0);
 $33 = ((($$1$i)) + 8|0);
 $34 = load4($33);
 $35 = ($34|0)==(69);
 if ($35) {
  $36 = load4($$1$i);
  $37 = (_luaH_getstr($36,$32)|0);
  $38 = ((($37)) + 8|0);
  $39 = load4($38);
  $40 = ($39|0)==(0);
  if ($40) {
   $$0$i = $37;
  } else {
   $41 = ((($0)) + 12|0);
   $42 = load4($41);
   ; store8($42,load8($37,8),8); store8($42+8 | 0,load8($37+8 | 0,8),8);
   $43 = load4($41);
   $44 = ((($43)) + 16|0);
   store4($41,$44);
   $55 = $44;
   $54 = ((($55)) + -8|0);
   $56 = load4($54);
   $57 = $56 & 15;
   return ($57|0);
  }
 } else {
  $$0$i = 0;
 }
 $45 = ((($0)) + 12|0);
 $46 = load4($45);
 store4($46,$32);
 $47 = ((($32)) + 4|0);
 $48 = load1($47);
 $49 = $48 | 64;
 $50 = $49&255;
 $51 = ((($46)) + 8|0);
 store4($51,$50);
 $52 = load4($45);
 $53 = ((($52)) + 16|0);
 store4($45,$53);
 _luaV_finishget($0,$$1$i,$52,$52,$$0$i);
 $$pre$i = load4($45);
 $55 = $$pre$i;
 $54 = ((($55)) + -8|0);
 $56 = load4($54);
 $57 = $56 & 15;
 return ($57|0);
}
function _lua_geti($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = i64($2);
 var $$0 = 0, $$1$i = 0, $$luaO_nilobject_$i = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 20|0);
 $4 = load4($3);
 $5 = ($1|0)>(0);
 do {
  if ($5) {
   $6 = load4($4);
   $7 = (($6) + ($1<<4)|0);
   $8 = ((($0)) + 12|0);
   $9 = load4($8);
   $10 = ($7>>>0)<($9>>>0);
   $$luaO_nilobject_$i = $10 ? $7 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $11 = ($1|0)<(-1000999);
   if (!($11)) {
    $12 = ((($0)) + 12|0);
    $13 = load4($12);
    $14 = (($13) + ($1<<4)|0);
    $$1$i = $14;
    break;
   }
   $15 = ($1|0)==(-1001000);
   if ($15) {
    $16 = ((($0)) + 16|0);
    $17 = load4($16);
    $18 = ((($17)) + 40|0);
    $$1$i = $18;
    break;
   }
   $19 = (-1001000 - ($1))|0;
   $20 = load4($4);
   $21 = ((($20)) + 8|0);
   $22 = load4($21);
   $23 = ($22|0)==(22);
   if ($23) {
    $$1$i = 18336;
   } else {
    $24 = load4($20);
    $25 = ((($24)) + 6|0);
    $26 = load1($25);
    $27 = $26&255;
    $28 = ($19|0)>($27|0);
    $29 = (($19) + -1)|0;
    $30 = (((($24)) + 16|0) + ($29<<4)|0);
    $31 = $28 ? 18336 : $30;
    $$1$i = $31;
   }
  }
 } while(0);
 $32 = ((($$1$i)) + 8|0);
 $33 = load4($32);
 $34 = ($33|0)==(69);
 if ($34) {
  $35 = load4($$1$i);
  $36 = (_luaH_getint($35,$2)|0);
  $37 = ((($36)) + 8|0);
  $38 = load4($37);
  $39 = ($38|0)==(0);
  if ($39) {
   $$0 = $36;
  } else {
   $40 = ((($0)) + 12|0);
   $41 = load4($40);
   ; store8($41,load8($36,8),8); store8($41+8 | 0,load8($36+8 | 0,8),8);
   $42 = load4($40);
   $43 = ((($42)) + 16|0);
   store4($40,$43);
   $50 = $43;
   $49 = ((($50)) + -8|0);
   $51 = load4($49);
   $52 = $51 & 15;
   return ($52|0);
  }
 } else {
  $$0 = 0;
 }
 $44 = ((($0)) + 12|0);
 $45 = load4($44);
 store8($45,$2);
 $46 = ((($45)) + 8|0);
 store4($46,19);
 $47 = load4($44);
 $48 = ((($47)) + 16|0);
 store4($44,$48);
 _luaV_finishget($0,$$1$i,$47,$47,$$0);
 $$pre = load4($44);
 $50 = $$pre;
 $49 = ((($50)) + -8|0);
 $51 = load4($49);
 $52 = $51 & 15;
 return ($52|0);
}
function _lua_rawget($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = load4($2);
 $4 = ($1|0)>(0);
 do {
  if ($4) {
   $5 = load4($3);
   $6 = (($5) + ($1<<4)|0);
   $7 = ((($0)) + 12|0);
   $8 = load4($7);
   $9 = ($6>>>0)<($8>>>0);
   $$luaO_nilobject_$i = $9 ? $6 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $10 = ($1|0)<(-1000999);
   if (!($10)) {
    $11 = ((($0)) + 12|0);
    $12 = load4($11);
    $13 = (($12) + ($1<<4)|0);
    $$1$i = $13;
    break;
   }
   $14 = ($1|0)==(-1001000);
   if ($14) {
    $15 = ((($0)) + 16|0);
    $16 = load4($15);
    $17 = ((($16)) + 40|0);
    $$1$i = $17;
    break;
   }
   $18 = (-1001000 - ($1))|0;
   $19 = load4($3);
   $20 = ((($19)) + 8|0);
   $21 = load4($20);
   $22 = ($21|0)==(22);
   if ($22) {
    $$1$i = 18336;
   } else {
    $23 = load4($19);
    $24 = ((($23)) + 6|0);
    $25 = load1($24);
    $26 = $25&255;
    $27 = ($18|0)>($26|0);
    $28 = (($18) + -1)|0;
    $29 = (((($23)) + 16|0) + ($28<<4)|0);
    $30 = $27 ? 18336 : $29;
    $$1$i = $30;
   }
  }
 } while(0);
 $31 = ((($0)) + 12|0);
 $32 = load4($31);
 $33 = ((($32)) + -16|0);
 $34 = load4($$1$i);
 $35 = (_luaH_get($34,$33)|0);
 ; store8($33,load8($35,8),8); store8($33+8 | 0,load8($35+8 | 0,8),8);
 $36 = load4($31);
 $37 = ((($36)) + -8|0);
 $38 = load4($37);
 $39 = $38 & 15;
 return ($39|0);
}
function _lua_rawgeti($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = i64($2);
 var $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 20|0);
 $4 = load4($3);
 $5 = ($1|0)>(0);
 do {
  if ($5) {
   $6 = load4($4);
   $7 = (($6) + ($1<<4)|0);
   $8 = ((($0)) + 12|0);
   $9 = load4($8);
   $10 = ($7>>>0)<($9>>>0);
   $$luaO_nilobject_$i = $10 ? $7 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $11 = ($1|0)<(-1000999);
   if (!($11)) {
    $12 = ((($0)) + 12|0);
    $13 = load4($12);
    $14 = (($13) + ($1<<4)|0);
    $$1$i = $14;
    break;
   }
   $15 = ($1|0)==(-1001000);
   if ($15) {
    $16 = ((($0)) + 16|0);
    $17 = load4($16);
    $18 = ((($17)) + 40|0);
    $$1$i = $18;
    break;
   }
   $19 = (-1001000 - ($1))|0;
   $20 = load4($4);
   $21 = ((($20)) + 8|0);
   $22 = load4($21);
   $23 = ($22|0)==(22);
   if ($23) {
    $$1$i = 18336;
   } else {
    $24 = load4($20);
    $25 = ((($24)) + 6|0);
    $26 = load1($25);
    $27 = $26&255;
    $28 = ($19|0)>($27|0);
    $29 = (($19) + -1)|0;
    $30 = (((($24)) + 16|0) + ($29<<4)|0);
    $31 = $28 ? 18336 : $30;
    $$1$i = $31;
   }
  }
 } while(0);
 $32 = ((($0)) + 12|0);
 $33 = load4($32);
 $34 = load4($$1$i);
 $35 = (_luaH_getint($34,$2)|0);
 ; store8($33,load8($35,8),8); store8($33+8 | 0,load8($35+8 | 0,8),8);
 $36 = load4($32);
 $37 = ((($36)) + 16|0);
 store4($32,$37);
 $38 = ((($36)) + 8|0);
 $39 = load4($38);
 $40 = $39 & 15;
 return ($40|0);
}
function _lua_rawgetp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $4 = ((($0)) + 20|0);
 $5 = load4($4);
 $6 = ($1|0)>(0);
 do {
  if ($6) {
   $7 = load4($5);
   $8 = (($7) + ($1<<4)|0);
   $9 = ((($0)) + 12|0);
   $10 = load4($9);
   $11 = ($8>>>0)<($10>>>0);
   $$luaO_nilobject_$i = $11 ? $8 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $12 = ($1|0)<(-1000999);
   if (!($12)) {
    $13 = ((($0)) + 12|0);
    $14 = load4($13);
    $15 = (($14) + ($1<<4)|0);
    $$1$i = $15;
    break;
   }
   $16 = ($1|0)==(-1001000);
   if ($16) {
    $17 = ((($0)) + 16|0);
    $18 = load4($17);
    $19 = ((($18)) + 40|0);
    $$1$i = $19;
    break;
   }
   $20 = (-1001000 - ($1))|0;
   $21 = load4($5);
   $22 = ((($21)) + 8|0);
   $23 = load4($22);
   $24 = ($23|0)==(22);
   if ($24) {
    $$1$i = 18336;
   } else {
    $25 = load4($21);
    $26 = ((($25)) + 6|0);
    $27 = load1($26);
    $28 = $27&255;
    $29 = ($20|0)>($28|0);
    $30 = (($20) + -1)|0;
    $31 = (((($25)) + 16|0) + ($30<<4)|0);
    $32 = $29 ? 18336 : $31;
    $$1$i = $32;
   }
  }
 } while(0);
 store4($3,$2);
 $33 = ((($3)) + 8|0);
 store4($33,2);
 $34 = ((($0)) + 12|0);
 $35 = load4($34);
 $36 = load4($$1$i);
 $37 = (_luaH_get($36,$3)|0);
 ; store8($35,load8($37,8),8); store8($35+8 | 0,load8($37+8 | 0,8),8);
 $38 = load4($34);
 $39 = ((($38)) + 16|0);
 store4($34,$39);
 $40 = ((($38)) + 8|0);
 $41 = load4($40);
 $42 = $41 & 15;
 STACKTOP = sp;return ($42|0);
}
function _lua_createtable($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_luaH_new($0)|0);
 $4 = ((($0)) + 12|0);
 $5 = load4($4);
 store4($5,$3);
 $6 = ((($5)) + 8|0);
 store4($6,69);
 $7 = load4($4);
 $8 = ((($7)) + 16|0);
 store4($4,$8);
 $9 = ($1|0)>(0);
 $10 = ($2|0)>(0);
 $or$cond = $9 | $10;
 if ($or$cond) {
  _luaH_resize($0,$3,$1,$2);
 }
 $11 = ((($0)) + 16|0);
 $12 = load4($11);
 $13 = ((($12)) + 12|0);
 $14 = load4($13);
 $15 = ($14|0)>(0);
 if (!($15)) {
  return;
 }
 _luaC_step($0);
 return;
}
function _lua_getmetatable($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$in = 0, $$023 = 0, $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = load4($2);
 $4 = ($1|0)>(0);
 do {
  if ($4) {
   $5 = load4($3);
   $6 = (($5) + ($1<<4)|0);
   $7 = ((($0)) + 12|0);
   $8 = load4($7);
   $9 = ($6>>>0)<($8>>>0);
   $$luaO_nilobject_$i = $9 ? $6 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $10 = ($1|0)<(-1000999);
   if (!($10)) {
    $11 = ((($0)) + 12|0);
    $12 = load4($11);
    $13 = (($12) + ($1<<4)|0);
    $$1$i = $13;
    break;
   }
   $14 = ($1|0)==(-1001000);
   if ($14) {
    $15 = ((($0)) + 16|0);
    $16 = load4($15);
    $17 = ((($16)) + 40|0);
    $$1$i = $17;
    break;
   }
   $18 = (-1001000 - ($1))|0;
   $19 = load4($3);
   $20 = ((($19)) + 8|0);
   $21 = load4($20);
   $22 = ($21|0)==(22);
   if ($22) {
    $$1$i = 18336;
   } else {
    $23 = load4($19);
    $24 = ((($23)) + 6|0);
    $25 = load1($24);
    $26 = $25&255;
    $27 = ($18|0)>($26|0);
    $28 = (($18) + -1)|0;
    $29 = (((($23)) + 16|0) + ($28<<4)|0);
    $30 = $27 ? 18336 : $29;
    $$1$i = $30;
   }
  }
 } while(0);
 $31 = ((($$1$i)) + 8|0);
 $32 = load4($31);
 $trunc = $32&255;
 $trunc$clear = $trunc & 15;
 switch ($trunc$clear<<24>>24) {
 case 5:  {
  $33 = load4($$1$i);
  $34 = ((($33)) + 24|0);
  $$0$in = $34;
  break;
 }
 case 7:  {
  $35 = load4($$1$i);
  $36 = ((($35)) + 8|0);
  $$0$in = $36;
  break;
 }
 default: {
  $37 = $32 & 15;
  $38 = ((($0)) + 16|0);
  $39 = load4($38);
  $40 = (((($39)) + 232|0) + ($37<<2)|0);
  $$0$in = $40;
 }
 }
 $$0 = load4($$0$in);
 $41 = ($$0|0)==(0|0);
 if ($41) {
  $$023 = 0;
  return ($$023|0);
 }
 $42 = ((($0)) + 12|0);
 $43 = load4($42);
 store4($43,$$0);
 $44 = ((($43)) + 8|0);
 store4($44,69);
 $45 = load4($42);
 $46 = ((($45)) + 16|0);
 store4($42,$46);
 $$023 = 1;
 return ($$023|0);
}
function _lua_getuservalue($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = i64(), $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = load4($2);
 $4 = ($1|0)>(0);
 do {
  if ($4) {
   $5 = load4($3);
   $6 = (($5) + ($1<<4)|0);
   $7 = ((($0)) + 12|0);
   $8 = load4($7);
   $9 = ($6>>>0)<($8>>>0);
   $$luaO_nilobject_$i = $9 ? $6 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $10 = ($1|0)<(-1000999);
   if (!($10)) {
    $11 = ((($0)) + 12|0);
    $12 = load4($11);
    $13 = (($12) + ($1<<4)|0);
    $$1$i = $13;
    break;
   }
   $14 = ($1|0)==(-1001000);
   if ($14) {
    $15 = ((($0)) + 16|0);
    $16 = load4($15);
    $17 = ((($16)) + 40|0);
    $$1$i = $17;
    break;
   }
   $18 = (-1001000 - ($1))|0;
   $19 = load4($3);
   $20 = ((($19)) + 8|0);
   $21 = load4($20);
   $22 = ($21|0)==(22);
   if ($22) {
    $$1$i = 18336;
   } else {
    $23 = load4($19);
    $24 = ((($23)) + 6|0);
    $25 = load1($24);
    $26 = $25&255;
    $27 = ($18|0)>($26|0);
    $28 = (($18) + -1)|0;
    $29 = (((($23)) + 16|0) + ($28<<4)|0);
    $30 = $27 ? 18336 : $29;
    $$1$i = $30;
   }
  }
 } while(0);
 $31 = ((($0)) + 12|0);
 $32 = load4($31);
 $33 = load4($$1$i);
 $34 = ((($33)) + 16|0);
 $35 = load8($34);
 store8($32,$35);
 $36 = ((($33)) + 6|0);
 $37 = load1($36);
 $38 = $37&255;
 $39 = ((($32)) + 8|0);
 store4($39,$38);
 $40 = load4($31);
 $41 = ((($40)) + 16|0);
 store4($31,$41);
 $42 = ((($40)) + 8|0);
 $43 = load4($42);
 $44 = $43 & 15;
 return ($44|0);
}
function _lua_setglobal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = load4($2);
 $4 = ((($3)) + 40|0);
 $5 = load4($4);
 $6 = (_luaH_getint($5,i64_const(2,0))|0);
 _auxsetstr($0,$6,$1);
 return;
}
function _auxsetstr($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$pre = 0, $$sink = 0, $$sink37 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_luaS_new($0,$2)|0);
 $4 = ((($1)) + 8|0);
 $5 = load4($4);
 $6 = ($5|0)==(69);
 if ($6) {
  $7 = load4($1);
  $8 = (_luaH_getstr($7,$3)|0);
  $9 = ((($8)) + 8|0);
  $10 = load4($9);
  $11 = ($10|0)==(0);
  if ($11) {
   $$0 = $8;
  } else {
   $12 = ((($0)) + 12|0);
   $13 = load4($12);
   $14 = ((($13)) + -8|0);
   $15 = load4($14);
   $16 = $15 & 64;
   $17 = ($16|0)==(0);
   if ($17) {
    $30 = $13;
   } else {
    $18 = load4($1);
    $19 = ((($18)) + 5|0);
    $20 = load1($19);
    $21 = $20 & 4;
    $22 = ($21<<24>>24)==(0);
    if ($22) {
     $30 = $13;
    } else {
     $23 = ((($13)) + -16|0);
     $24 = load4($23);
     $25 = ((($24)) + 5|0);
     $26 = load1($25);
     $27 = $26 & 3;
     $28 = ($27<<24>>24)==(0);
     if ($28) {
      $30 = $13;
     } else {
      _luaC_barrierback_($0,$18);
      $$pre = load4($12);
      $30 = $$pre;
     }
    }
   }
   $29 = ((($30)) + -16|0);
   ; store8($8,load8($29,8),8); store8($8+8 | 0,load8($29+8 | 0,8),8);
   $$sink = $12;$$sink37 = -1;
   $41 = load4($$sink);
   $42 = (($41) + ($$sink37<<4)|0);
   store4($$sink,$42);
   return;
  }
 } else {
  $$0 = 0;
 }
 $31 = ((($0)) + 12|0);
 $32 = load4($31);
 store4($32,$3);
 $33 = ((($3)) + 4|0);
 $34 = load1($33);
 $35 = $34 | 64;
 $36 = $35&255;
 $37 = ((($32)) + 8|0);
 store4($37,$36);
 $38 = load4($31);
 $39 = ((($38)) + 16|0);
 store4($31,$39);
 $40 = ((($38)) + -16|0);
 _luaV_finishset($0,$1,$38,$40,$$0);
 $$sink = $31;$$sink37 = -2;
 $41 = load4($$sink);
 $42 = (($41) + ($$sink37<<4)|0);
 store4($$sink,$42);
 return;
}
function _lua_setfield($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 20|0);
 $4 = load4($3);
 $5 = ($1|0)>(0);
 if ($5) {
  $6 = load4($4);
  $7 = (($6) + ($1<<4)|0);
  $8 = ((($0)) + 12|0);
  $9 = load4($8);
  $10 = ($7>>>0)<($9>>>0);
  $$luaO_nilobject_$i = $10 ? $7 : 18336;
  $$1$i = $$luaO_nilobject_$i;
  _auxsetstr($0,$$1$i,$2);
  return;
 }
 $11 = ($1|0)<(-1000999);
 if (!($11)) {
  $12 = ((($0)) + 12|0);
  $13 = load4($12);
  $14 = (($13) + ($1<<4)|0);
  $$1$i = $14;
  _auxsetstr($0,$$1$i,$2);
  return;
 }
 $15 = ($1|0)==(-1001000);
 if ($15) {
  $16 = ((($0)) + 16|0);
  $17 = load4($16);
  $18 = ((($17)) + 40|0);
  $$1$i = $18;
  _auxsetstr($0,$$1$i,$2);
  return;
 }
 $19 = (-1001000 - ($1))|0;
 $20 = load4($4);
 $21 = ((($20)) + 8|0);
 $22 = load4($21);
 $23 = ($22|0)==(22);
 if ($23) {
  $$1$i = 18336;
  _auxsetstr($0,$$1$i,$2);
  return;
 }
 $24 = load4($20);
 $25 = ((($24)) + 6|0);
 $26 = load1($25);
 $27 = $26&255;
 $28 = ($19|0)>($27|0);
 $29 = (($19) + -1)|0;
 $30 = (((($24)) + 16|0) + ($29<<4)|0);
 $31 = $28 ? 18336 : $30;
 $$1$i = $31;
 _auxsetstr($0,$$1$i,$2);
 return;
}
function _lua_seti($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = i64($2);
 var $$0 = 0, $$1$i = 0, $$luaO_nilobject_$i = 0, $$pre = 0, $$sink = 0, $$sink32 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 20|0);
 $4 = load4($3);
 $5 = ($1|0)>(0);
 do {
  if ($5) {
   $6 = load4($4);
   $7 = (($6) + ($1<<4)|0);
   $8 = ((($0)) + 12|0);
   $9 = load4($8);
   $10 = ($7>>>0)<($9>>>0);
   $$luaO_nilobject_$i = $10 ? $7 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $11 = ($1|0)<(-1000999);
   if (!($11)) {
    $12 = ((($0)) + 12|0);
    $13 = load4($12);
    $14 = (($13) + ($1<<4)|0);
    $$1$i = $14;
    break;
   }
   $15 = ($1|0)==(-1001000);
   if ($15) {
    $16 = ((($0)) + 16|0);
    $17 = load4($16);
    $18 = ((($17)) + 40|0);
    $$1$i = $18;
    break;
   }
   $19 = (-1001000 - ($1))|0;
   $20 = load4($4);
   $21 = ((($20)) + 8|0);
   $22 = load4($21);
   $23 = ($22|0)==(22);
   if ($23) {
    $$1$i = 18336;
   } else {
    $24 = load4($20);
    $25 = ((($24)) + 6|0);
    $26 = load1($25);
    $27 = $26&255;
    $28 = ($19|0)>($27|0);
    $29 = (($19) + -1)|0;
    $30 = (((($24)) + 16|0) + ($29<<4)|0);
    $31 = $28 ? 18336 : $30;
    $$1$i = $31;
   }
  }
 } while(0);
 $32 = ((($$1$i)) + 8|0);
 $33 = load4($32);
 $34 = ($33|0)==(69);
 if ($34) {
  $35 = load4($$1$i);
  $36 = (_luaH_getint($35,$2)|0);
  $37 = ((($36)) + 8|0);
  $38 = load4($37);
  $39 = ($38|0)==(0);
  if ($39) {
   $$0 = $36;
  } else {
   $40 = ((($0)) + 12|0);
   $41 = load4($40);
   $42 = ((($41)) + -8|0);
   $43 = load4($42);
   $44 = $43 & 64;
   $45 = ($44|0)==(0);
   if ($45) {
    $58 = $41;
   } else {
    $46 = load4($$1$i);
    $47 = ((($46)) + 5|0);
    $48 = load1($47);
    $49 = $48 & 4;
    $50 = ($49<<24>>24)==(0);
    if ($50) {
     $58 = $41;
    } else {
     $51 = ((($41)) + -16|0);
     $52 = load4($51);
     $53 = ((($52)) + 5|0);
     $54 = load1($53);
     $55 = $54 & 3;
     $56 = ($55<<24>>24)==(0);
     if ($56) {
      $58 = $41;
     } else {
      _luaC_barrierback_($0,$46);
      $$pre = load4($40);
      $58 = $$pre;
     }
    }
   }
   $57 = ((($58)) + -16|0);
   ; store8($36,load8($57,8),8); store8($36+8 | 0,load8($57+8 | 0,8),8);
   $$sink = $40;$$sink32 = -1;
   $65 = load4($$sink);
   $66 = (($65) + ($$sink32<<4)|0);
   store4($$sink,$66);
   return;
  }
 } else {
  $$0 = 0;
 }
 $59 = ((($0)) + 12|0);
 $60 = load4($59);
 store8($60,$2);
 $61 = ((($60)) + 8|0);
 store4($61,19);
 $62 = load4($59);
 $63 = ((($62)) + 16|0);
 store4($59,$63);
 $64 = ((($62)) + -16|0);
 _luaV_finishset($0,$$1$i,$62,$64,$$0);
 $$sink = $59;$$sink32 = -2;
 $65 = load4($$sink);
 $66 = (($65) + ($$sink32<<4)|0);
 store4($$sink,$66);
 return;
}
function _lua_rawset($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1$i = 0, $$luaO_nilobject_$i = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = load4($2);
 $4 = ($1|0)>(0);
 do {
  if ($4) {
   $5 = load4($3);
   $6 = (($5) + ($1<<4)|0);
   $7 = ((($0)) + 12|0);
   $8 = load4($7);
   $9 = ($6>>>0)<($8>>>0);
   $$luaO_nilobject_$i = $9 ? $6 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $10 = ($1|0)<(-1000999);
   if (!($10)) {
    $11 = ((($0)) + 12|0);
    $12 = load4($11);
    $13 = (($12) + ($1<<4)|0);
    $$1$i = $13;
    break;
   }
   $14 = ($1|0)==(-1001000);
   if ($14) {
    $15 = ((($0)) + 16|0);
    $16 = load4($15);
    $17 = ((($16)) + 40|0);
    $$1$i = $17;
    break;
   }
   $18 = (-1001000 - ($1))|0;
   $19 = load4($3);
   $20 = ((($19)) + 8|0);
   $21 = load4($20);
   $22 = ($21|0)==(22);
   if ($22) {
    $$1$i = 18336;
   } else {
    $23 = load4($19);
    $24 = ((($23)) + 6|0);
    $25 = load1($24);
    $26 = $25&255;
    $27 = ($18|0)>($26|0);
    $28 = (($18) + -1)|0;
    $29 = (((($23)) + 16|0) + ($28<<4)|0);
    $30 = $27 ? 18336 : $29;
    $$1$i = $30;
   }
  }
 } while(0);
 $31 = load4($$1$i);
 $32 = ((($0)) + 12|0);
 $33 = load4($32);
 $34 = ((($33)) + -32|0);
 $35 = (_luaH_set($0,$31,$34)|0);
 $36 = load4($32);
 $37 = ((($36)) + -16|0);
 ; store8($35,load8($37,8),8); store8($35+8 | 0,load8($37+8 | 0,8),8);
 $38 = load4($$1$i);
 $39 = ((($38)) + 6|0);
 store1($39,0);
 $40 = load4($32);
 $41 = ((($40)) + -8|0);
 $42 = load4($41);
 $43 = $42 & 64;
 $44 = ($43|0)==(0);
 if ($44) {
  $57 = $40;
  $56 = ((($57)) + -32|0);
  store4($32,$56);
  return;
 }
 $45 = load4($$1$i);
 $46 = ((($45)) + 5|0);
 $47 = load1($46);
 $48 = $47 & 4;
 $49 = ($48<<24>>24)==(0);
 if ($49) {
  $57 = $40;
  $56 = ((($57)) + -32|0);
  store4($32,$56);
  return;
 }
 $50 = ((($40)) + -16|0);
 $51 = load4($50);
 $52 = ((($51)) + 5|0);
 $53 = load1($52);
 $54 = $53 & 3;
 $55 = ($54<<24>>24)==(0);
 if ($55) {
  $57 = $40;
  $56 = ((($57)) + -32|0);
  store4($32,$56);
  return;
 }
 _luaC_barrierback_($0,$45);
 $$pre = load4($32);
 $57 = $$pre;
 $56 = ((($57)) + -32|0);
 store4($32,$56);
 return;
}
function _lua_rawseti($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = i64($2);
 var $$1$i = 0, $$luaO_nilobject_$i = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 20|0);
 $4 = load4($3);
 $5 = ($1|0)>(0);
 do {
  if ($5) {
   $6 = load4($4);
   $7 = (($6) + ($1<<4)|0);
   $8 = ((($0)) + 12|0);
   $9 = load4($8);
   $10 = ($7>>>0)<($9>>>0);
   $$luaO_nilobject_$i = $10 ? $7 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $11 = ($1|0)<(-1000999);
   if (!($11)) {
    $12 = ((($0)) + 12|0);
    $13 = load4($12);
    $14 = (($13) + ($1<<4)|0);
    $$1$i = $14;
    break;
   }
   $15 = ($1|0)==(-1001000);
   if ($15) {
    $16 = ((($0)) + 16|0);
    $17 = load4($16);
    $18 = ((($17)) + 40|0);
    $$1$i = $18;
    break;
   }
   $19 = (-1001000 - ($1))|0;
   $20 = load4($4);
   $21 = ((($20)) + 8|0);
   $22 = load4($21);
   $23 = ($22|0)==(22);
   if ($23) {
    $$1$i = 18336;
   } else {
    $24 = load4($20);
    $25 = ((($24)) + 6|0);
    $26 = load1($25);
    $27 = $26&255;
    $28 = ($19|0)>($27|0);
    $29 = (($19) + -1)|0;
    $30 = (((($24)) + 16|0) + ($29<<4)|0);
    $31 = $28 ? 18336 : $30;
    $$1$i = $31;
   }
  }
 } while(0);
 $32 = load4($$1$i);
 $33 = ((($0)) + 12|0);
 $34 = load4($33);
 $35 = ((($34)) + -16|0);
 _luaH_setint($0,$32,$2,$35);
 $36 = load4($33);
 $37 = ((($36)) + -8|0);
 $38 = load4($37);
 $39 = $38 & 64;
 $40 = ($39|0)==(0);
 if ($40) {
  $53 = $36;
  $52 = ((($53)) + -16|0);
  store4($33,$52);
  return;
 }
 $41 = load4($$1$i);
 $42 = ((($41)) + 5|0);
 $43 = load1($42);
 $44 = $43 & 4;
 $45 = ($44<<24>>24)==(0);
 if ($45) {
  $53 = $36;
  $52 = ((($53)) + -16|0);
  store4($33,$52);
  return;
 }
 $46 = ((($36)) + -16|0);
 $47 = load4($46);
 $48 = ((($47)) + 5|0);
 $49 = load1($48);
 $50 = $49 & 3;
 $51 = ($50<<24>>24)==(0);
 if ($51) {
  $53 = $36;
  $52 = ((($53)) + -16|0);
  store4($33,$52);
  return;
 }
 _luaC_barrierback_($0,$41);
 $$pre = load4($33);
 $53 = $$pre;
 $52 = ((($53)) + -16|0);
 store4($33,$52);
 return;
}
function _lua_rawsetp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1$i = 0, $$luaO_nilobject_$i = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $4 = ((($0)) + 20|0);
 $5 = load4($4);
 $6 = ($1|0)>(0);
 do {
  if ($6) {
   $7 = load4($5);
   $8 = (($7) + ($1<<4)|0);
   $9 = ((($0)) + 12|0);
   $10 = load4($9);
   $11 = ($8>>>0)<($10>>>0);
   $$luaO_nilobject_$i = $11 ? $8 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $12 = ($1|0)<(-1000999);
   if (!($12)) {
    $13 = ((($0)) + 12|0);
    $14 = load4($13);
    $15 = (($14) + ($1<<4)|0);
    $$1$i = $15;
    break;
   }
   $16 = ($1|0)==(-1001000);
   if ($16) {
    $17 = ((($0)) + 16|0);
    $18 = load4($17);
    $19 = ((($18)) + 40|0);
    $$1$i = $19;
    break;
   }
   $20 = (-1001000 - ($1))|0;
   $21 = load4($5);
   $22 = ((($21)) + 8|0);
   $23 = load4($22);
   $24 = ($23|0)==(22);
   if ($24) {
    $$1$i = 18336;
   } else {
    $25 = load4($21);
    $26 = ((($25)) + 6|0);
    $27 = load1($26);
    $28 = $27&255;
    $29 = ($20|0)>($28|0);
    $30 = (($20) + -1)|0;
    $31 = (((($25)) + 16|0) + ($30<<4)|0);
    $32 = $29 ? 18336 : $31;
    $$1$i = $32;
   }
  }
 } while(0);
 store4($3,$2);
 $33 = ((($3)) + 8|0);
 store4($33,2);
 $34 = load4($$1$i);
 $35 = (_luaH_set($0,$34,$3)|0);
 $36 = ((($0)) + 12|0);
 $37 = load4($36);
 $38 = ((($37)) + -16|0);
 ; store8($35,load8($38,8),8); store8($35+8 | 0,load8($38+8 | 0,8),8);
 $39 = load4($36);
 $40 = ((($39)) + -8|0);
 $41 = load4($40);
 $42 = $41 & 64;
 $43 = ($42|0)==(0);
 if ($43) {
  $56 = $39;
  $55 = ((($56)) + -16|0);
  store4($36,$55);
  STACKTOP = sp;return;
 }
 $44 = load4($$1$i);
 $45 = ((($44)) + 5|0);
 $46 = load1($45);
 $47 = $46 & 4;
 $48 = ($47<<24>>24)==(0);
 if ($48) {
  $56 = $39;
  $55 = ((($56)) + -16|0);
  store4($36,$55);
  STACKTOP = sp;return;
 }
 $49 = ((($39)) + -16|0);
 $50 = load4($49);
 $51 = ((($50)) + 5|0);
 $52 = load1($51);
 $53 = $52 & 3;
 $54 = ($53<<24>>24)==(0);
 if ($54) {
  $56 = $39;
  $55 = ((($56)) + -16|0);
  store4($36,$55);
  STACKTOP = sp;return;
 }
 _luaC_barrierback_($0,$44);
 $$pre = load4($36);
 $56 = $$pre;
 $55 = ((($56)) + -16|0);
 store4($36,$55);
 STACKTOP = sp;return;
}
function _lua_setmetatable($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$1$i = 0, $$luaO_nilobject_$i = 0, $$pre = 0, $$pre33 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = load4($2);
 $4 = ($1|0)>(0);
 do {
  if ($4) {
   $5 = load4($3);
   $6 = (($5) + ($1<<4)|0);
   $7 = ((($0)) + 12|0);
   $8 = load4($7);
   $9 = ($6>>>0)<($8>>>0);
   $$luaO_nilobject_$i = $9 ? $6 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $10 = ($1|0)<(-1000999);
   if (!($10)) {
    $11 = ((($0)) + 12|0);
    $12 = load4($11);
    $13 = (($12) + ($1<<4)|0);
    $$1$i = $13;
    break;
   }
   $14 = ($1|0)==(-1001000);
   if ($14) {
    $15 = ((($0)) + 16|0);
    $16 = load4($15);
    $17 = ((($16)) + 40|0);
    $$1$i = $17;
    break;
   }
   $18 = (-1001000 - ($1))|0;
   $19 = load4($3);
   $20 = ((($19)) + 8|0);
   $21 = load4($20);
   $22 = ($21|0)==(22);
   if ($22) {
    $$1$i = 18336;
   } else {
    $23 = load4($19);
    $24 = ((($23)) + 6|0);
    $25 = load1($24);
    $26 = $25&255;
    $27 = ($18|0)>($26|0);
    $28 = (($18) + -1)|0;
    $29 = (((($23)) + 16|0) + ($28<<4)|0);
    $30 = $27 ? 18336 : $29;
    $$1$i = $30;
   }
  }
 } while(0);
 $31 = ((($0)) + 12|0);
 $32 = load4($31);
 $33 = ((($32)) + -8|0);
 $34 = load4($33);
 $35 = ($34|0)==(0);
 if ($35) {
  $$0 = 0;$42 = 0;
 } else {
  $36 = ((($32)) + -16|0);
  $37 = load4($36);
  $$0 = $37;$42 = $37;
 }
 $38 = ((($$1$i)) + 8|0);
 $39 = load4($38);
 $trunc = $39&255;
 $trunc$clear = $trunc & 15;
 switch ($trunc$clear<<24>>24) {
 case 5:  {
  $40 = load4($$1$i);
  $41 = ((($40)) + 24|0);
  store4($41,$42);
  $43 = ($$0|0)==(0|0);
  if ($43) {
   $71 = load4($31);
   $72 = ((($71)) + -16|0);
   store4($31,$72);
   return 1;
  }
  $44 = load4($$1$i);
  $45 = ((($44)) + 5|0);
  $46 = load1($45);
  $47 = $46 & 4;
  $48 = ($47<<24>>24)==(0);
  if ($48) {
   $53 = $44;
  } else {
   $49 = ((($$0)) + 5|0);
   $50 = load1($49);
   $51 = $50 & 3;
   $52 = ($51<<24>>24)==(0);
   if ($52) {
    $53 = $44;
   } else {
    _luaC_barrier_($0,$44,$$0);
    $$pre33 = load4($$1$i);
    $53 = $$pre33;
   }
  }
  _luaC_checkfinalizer($0,$53,$$0);
  $71 = load4($31);
  $72 = ((($71)) + -16|0);
  store4($31,$72);
  return 1;
  break;
 }
 case 7:  {
  $54 = load4($$1$i);
  $55 = ((($54)) + 8|0);
  store4($55,$$0);
  $56 = ($$0|0)==(0|0);
  if ($56) {
   $71 = load4($31);
   $72 = ((($71)) + -16|0);
   store4($31,$72);
   return 1;
  }
  $57 = load4($$1$i);
  $58 = ((($57)) + 5|0);
  $59 = load1($58);
  $60 = $59 & 4;
  $61 = ($60<<24>>24)==(0);
  if ($61) {
   $66 = $57;
  } else {
   $62 = ((($$0)) + 5|0);
   $63 = load1($62);
   $64 = $63 & 3;
   $65 = ($64<<24>>24)==(0);
   if ($65) {
    $66 = $57;
   } else {
    _luaC_barrier_($0,$57,$42);
    $$pre = load4($$1$i);
    $66 = $$pre;
   }
  }
  _luaC_checkfinalizer($0,$66,$$0);
  $71 = load4($31);
  $72 = ((($71)) + -16|0);
  store4($31,$72);
  return 1;
  break;
 }
 default: {
  $67 = $39 & 15;
  $68 = ((($0)) + 16|0);
  $69 = load4($68);
  $70 = (((($69)) + 232|0) + ($67<<2)|0);
  store4($70,$$0);
  $71 = load4($31);
  $72 = ((($71)) + -16|0);
  store4($31,$72);
  return 1;
 }
 }
 return (0)|0;
}
function _lua_setuservalue($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1$i = 0, $$luaO_nilobject_$i = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = i64(), $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = load4($2);
 $4 = ($1|0)>(0);
 do {
  if ($4) {
   $5 = load4($3);
   $6 = (($5) + ($1<<4)|0);
   $7 = ((($0)) + 12|0);
   $8 = load4($7);
   $9 = ($6>>>0)<($8>>>0);
   $$luaO_nilobject_$i = $9 ? $6 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $10 = ($1|0)<(-1000999);
   if (!($10)) {
    $11 = ((($0)) + 12|0);
    $12 = load4($11);
    $13 = (($12) + ($1<<4)|0);
    $$1$i = $13;
    break;
   }
   $14 = ($1|0)==(-1001000);
   if ($14) {
    $15 = ((($0)) + 16|0);
    $16 = load4($15);
    $17 = ((($16)) + 40|0);
    $$1$i = $17;
    break;
   }
   $18 = (-1001000 - ($1))|0;
   $19 = load4($3);
   $20 = ((($19)) + 8|0);
   $21 = load4($20);
   $22 = ($21|0)==(22);
   if ($22) {
    $$1$i = 18336;
   } else {
    $23 = load4($19);
    $24 = ((($23)) + 6|0);
    $25 = load1($24);
    $26 = $25&255;
    $27 = ($18|0)>($26|0);
    $28 = (($18) + -1)|0;
    $29 = (((($23)) + 16|0) + ($28<<4)|0);
    $30 = $27 ? 18336 : $29;
    $$1$i = $30;
   }
  }
 } while(0);
 $31 = ((($0)) + 12|0);
 $32 = load4($31);
 $33 = load4($$1$i);
 $34 = ((($32)) + -16|0);
 $35 = ((($33)) + 16|0);
 $36 = load8($34);
 store8($35,$36);
 $37 = ((($32)) + -8|0);
 $38 = load4($37);
 $39 = $38&255;
 $40 = ((($33)) + 6|0);
 store1($40,$39);
 $41 = load4($31);
 $42 = ((($41)) + -8|0);
 $43 = load4($42);
 $44 = $43 & 64;
 $45 = ($44|0)==(0);
 if ($45) {
  $58 = $41;
  $57 = ((($58)) + -16|0);
  store4($31,$57);
  return;
 }
 $46 = load4($$1$i);
 $47 = ((($46)) + 5|0);
 $48 = load1($47);
 $49 = $48 & 4;
 $50 = ($49<<24>>24)==(0);
 if ($50) {
  $58 = $41;
  $57 = ((($58)) + -16|0);
  store4($31,$57);
  return;
 }
 $51 = ((($41)) + -16|0);
 $52 = load4($51);
 $53 = ((($52)) + 5|0);
 $54 = load1($53);
 $55 = $54 & 3;
 $56 = ($55<<24>>24)==(0);
 if ($56) {
  $58 = $41;
  $57 = ((($58)) + -16|0);
  store4($31,$57);
  return;
 }
 _luaC_barrier_($0,$46,$52);
 $$pre = load4($31);
 $58 = $$pre;
 $57 = ((($58)) + -16|0);
 store4($31,$57);
 return;
}
function _lua_callk($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($0)) + 12|0);
 $6 = load4($5);
 $7 = $1 ^ -1;
 $8 = (($6) + ($7<<4)|0);
 $9 = ($4|0)==(0|0);
 if ($9) {
  label = 4;
 } else {
  $10 = ((($0)) + 108|0);
  $11 = load2($10);
  $12 = ($11<<16>>16)==(0);
  if ($12) {
   $13 = ((($0)) + 20|0);
   $14 = load4($13);
   $15 = ((($14)) + 16|0);
   store4($15,$4);
   $16 = load4($13);
   $17 = ((($16)) + 24|0);
   store4($17,$3);
   _luaD_call($0,$8,$2);
  } else {
   label = 4;
  }
 }
 if ((label|0) == 4) {
  _luaD_callnoyield($0,$8,$2);
 }
 $18 = ($2|0)==(-1);
 if (!($18)) {
  return;
 }
 $19 = ((($0)) + 20|0);
 $20 = load4($19);
 $21 = ((($20)) + 4|0);
 $22 = load4($21);
 $23 = load4($5);
 $24 = ($22>>>0)<($23>>>0);
 if (!($24)) {
  return;
 }
 store4($21,$23);
 return;
}
function _lua_pcallk($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$045 = 0, $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $6 = sp;
 $7 = ($3|0)==(0);
 if ($7) {
  $$045 = 0;
 } else {
  $8 = ((($0)) + 20|0);
  $9 = load4($8);
  $10 = ($3|0)>(0);
  do {
   if ($10) {
    $11 = load4($9);
    $12 = (($11) + ($3<<4)|0);
    $13 = ((($0)) + 12|0);
    $14 = load4($13);
    $15 = ($12>>>0)<($14>>>0);
    $$luaO_nilobject_$i = $15 ? $12 : 18336;
    $$1$i = $$luaO_nilobject_$i;
   } else {
    $16 = ($3|0)<(-1000999);
    if (!($16)) {
     $17 = ((($0)) + 12|0);
     $18 = load4($17);
     $19 = (($18) + ($3<<4)|0);
     $$1$i = $19;
     break;
    }
    $20 = ($3|0)==(-1001000);
    if ($20) {
     $21 = ((($0)) + 16|0);
     $22 = load4($21);
     $23 = ((($22)) + 40|0);
     $$1$i = $23;
     break;
    }
    $24 = (-1001000 - ($3))|0;
    $25 = load4($9);
    $26 = ((($25)) + 8|0);
    $27 = load4($26);
    $28 = ($27|0)==(22);
    if ($28) {
     $$1$i = 18336;
    } else {
     $29 = load4($25);
     $30 = ((($29)) + 6|0);
     $31 = load1($30);
     $32 = $31&255;
     $33 = ($24|0)>($32|0);
     $34 = (($24) + -1)|0;
     $35 = (((($29)) + 16|0) + ($34<<4)|0);
     $36 = $33 ? 18336 : $35;
     $$1$i = $36;
    }
   }
  } while(0);
  $37 = ((($0)) + 32|0);
  $38 = load4($37);
  $39 = $$1$i;
  $40 = (($39) - ($38))|0;
  $$045 = $40;
 }
 $41 = ((($0)) + 12|0);
 $42 = load4($41);
 $43 = $1 ^ -1;
 $44 = (($42) + ($43<<4)|0);
 store4($6,$44);
 $45 = ($5|0)==(0|0);
 $46 = $44;
 if ($45) {
  label = 13;
 } else {
  $47 = ((($0)) + 108|0);
  $48 = load2($47);
  $49 = ($48<<16>>16)==(0);
  if ($49) {
   $55 = ((($0)) + 20|0);
   $56 = load4($55);
   $57 = ((($56)) + 16|0);
   store4($57,$5);
   $58 = ((($56)) + 24|0);
   store4($58,$4);
   $59 = ((($0)) + 32|0);
   $60 = load4($59);
   $61 = (($46) - ($60))|0;
   $62 = ((($56)) + 28|0);
   store4($62,$61);
   $63 = ((($0)) + 92|0);
   $64 = load4($63);
   $65 = ((($56)) + 20|0);
   store4($65,$64);
   store4($63,$$045);
   $66 = ((($56)) + 34|0);
   $67 = load2($66);
   $68 = $67 & -18;
   $69 = $68&65535;
   $70 = ((($0)) + 116|0);
   $71 = load1($70);
   $72 = $71 | 16;
   $73 = $72&255;
   $74 = $73 | $69;
   $75 = $74&65535;
   store2($66,$75);
   _luaD_call($0,$44,$2);
   $76 = load2($66);
   $77 = $76 & -17;
   store2($66,$77);
   $78 = load4($65);
   store4($63,$78);
   $$0 = 0;
  } else {
   label = 13;
  }
 }
 if ((label|0) == 13) {
  $50 = ((($6)) + 4|0);
  store4($50,$2);
  $51 = ((($0)) + 32|0);
  $52 = load4($51);
  $53 = (($46) - ($52))|0;
  $54 = (_luaD_pcall($0,2,$6,$53,$$045)|0);
  $$0 = $54;
 }
 $79 = ($2|0)==(-1);
 if (!($79)) {
  STACKTOP = sp;return ($$0|0);
 }
 $80 = ((($0)) + 20|0);
 $81 = load4($80);
 $82 = ((($81)) + 4|0);
 $83 = load4($82);
 $84 = load4($41);
 $85 = ($83>>>0)<($84>>>0);
 if (!($85)) {
  STACKTOP = sp;return ($$0|0);
 }
 store4($82,$84);
 STACKTOP = sp;return ($$0|0);
}
function _f_call($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = load4($1);
 $3 = ((($1)) + 4|0);
 $4 = load4($3);
 _luaD_callnoyield($0,$2,$4);
 return;
}
function _lua_load($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $5 = sp;
 $6 = ($3|0)==(0|0);
 $spec$select = $6 ? 15925 : $3;
 _luaZ_init($0,$5,$1,$2);
 $7 = (_luaD_protectedparser($0,$5,$spec$select,$4)|0);
 $8 = ($7|0)==(0);
 if (!($8)) {
  STACKTOP = sp;return ($7|0);
 }
 $9 = ((($0)) + 12|0);
 $10 = load4($9);
 $11 = ((($10)) + -16|0);
 $12 = load4($11);
 $13 = ((($12)) + 6|0);
 $14 = load1($13);
 $15 = ($14<<24>>24)==(0);
 if ($15) {
  STACKTOP = sp;return ($7|0);
 }
 $16 = ((($0)) + 16|0);
 $17 = load4($16);
 $18 = ((($17)) + 40|0);
 $19 = load4($18);
 $20 = (_luaH_getint($19,i64_const(2,0))|0);
 $21 = ((($12)) + 16|0);
 $22 = load4($21);
 $23 = load4($22);
 ; store8($23,load8($20,8),8); store8($23+8 | 0,load8($20+8 | 0,8),8);
 $24 = load4($21);
 $25 = load4($24);
 $26 = ((($25)) + 8|0);
 $27 = load4($26);
 $28 = $27 & 64;
 $29 = ($28|0)!=(0);
 $30 = ((($24)) + 8|0);
 $31 = ($25|0)==($30|0);
 $or$cond = $31 & $29;
 if (!($or$cond)) {
  STACKTOP = sp;return ($7|0);
 }
 _luaC_upvalbarrier_($0,$24);
 STACKTOP = sp;return ($7|0);
}
function _lua_dump($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 12|0);
 $5 = load4($4);
 $6 = ((($5)) + -8|0);
 $7 = load4($6);
 $8 = ($7|0)==(70);
 if (!($8)) {
  $$0 = 1;
  return ($$0|0);
 }
 $9 = ((($5)) + -16|0);
 $10 = load4($9);
 $11 = ((($10)) + 12|0);
 $12 = load4($11);
 $13 = (_luaU_dump($0,$12,$1,$2,$3)|0);
 $$0 = $13;
 return ($$0|0);
}
function _lua_status($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = load1($1);
 $3 = $2&255;
 return ($3|0);
}
function _lua_gc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $spec$select = 0, $spec$select40 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 16|0);
 $4 = load4($3);
 do {
  switch ($1|0) {
  case 0:  {
   $5 = ((($4)) + 63|0);
   store1($5,0);
   $$1 = 0;
   return ($$1|0);
   break;
  }
  case 1:  {
   _luaE_setdebt($4,0);
   $6 = ((($4)) + 63|0);
   store1($6,1);
   $$1 = 0;
   return ($$1|0);
   break;
  }
  case 2:  {
   _luaC_fullgc($0,0);
   $$1 = 0;
   return ($$1|0);
   break;
  }
  case 3:  {
   $7 = ((($4)) + 8|0);
   $8 = load4($7);
   $9 = ((($4)) + 12|0);
   $10 = load4($9);
   $11 = (($10) + ($8))|0;
   $12 = $11 >>> 10;
   $$1 = $12;
   return ($$1|0);
   break;
  }
  case 4:  {
   $13 = ((($4)) + 8|0);
   $14 = load4($13);
   $15 = ((($4)) + 12|0);
   $16 = load4($15);
   $17 = (($16) + ($14))|0;
   $18 = $17 & 1023;
   $$1 = $18;
   return ($$1|0);
   break;
  }
  case 5:  {
   $19 = ((($4)) + 63|0);
   $20 = load1($19);
   store1($19,1);
   $21 = ($2|0)==(0);
   if ($21) {
    _luaE_setdebt($4,-1600);
    _luaC_step($0);
    store1($19,$20);
    $31 = ((($4)) + 61|0);
    $32 = load1($31);
    $33 = ($32<<24>>24)==(7);
    $spec$select = $33&1;
    return ($spec$select|0);
   }
   $22 = $2 << 10;
   $23 = ((($4)) + 12|0);
   $24 = load4($23);
   $25 = (($24) + ($22))|0;
   _luaE_setdebt($4,$25);
   $26 = load4($3);
   $27 = ((($26)) + 12|0);
   $28 = load4($27);
   $29 = ($28|0)>(0);
   if ($29) {
    _luaC_step($0);
   }
   store1($19,$20);
   $30 = ($25|0)>(0);
   if ($30) {
    $31 = ((($4)) + 61|0);
    $32 = load1($31);
    $33 = ($32<<24>>24)==(7);
    $spec$select = $33&1;
    return ($spec$select|0);
   } else {
    $$1 = 0;
    return ($$1|0);
   }
   break;
  }
  case 6:  {
   $34 = ((($4)) + 112|0);
   $35 = load4($34);
   store4($34,$2);
   $$1 = $35;
   return ($$1|0);
   break;
  }
  case 7:  {
   $36 = ((($4)) + 116|0);
   $37 = load4($36);
   $38 = ($2|0)>(40);
   $spec$select40 = $38 ? $2 : 40;
   store4($36,$spec$select40);
   $$1 = $37;
   return ($$1|0);
   break;
  }
  case 9:  {
   $39 = ((($4)) + 63|0);
   $40 = load1($39);
   $41 = $40&255;
   $$1 = $41;
   return ($$1|0);
   break;
  }
  default: {
   $$1 = -1;
   return ($$1|0);
  }
  }
 } while(0);
 return (0)|0;
}
function _lua_error($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _luaG_errormsg($0);
 // unreachable;
 return (0)|0;
}
function _lua_next($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = load4($2);
 $4 = ($1|0)>(0);
 do {
  if ($4) {
   $5 = load4($3);
   $6 = (($5) + ($1<<4)|0);
   $7 = ((($0)) + 12|0);
   $8 = load4($7);
   $9 = ($6>>>0)<($8>>>0);
   $$luaO_nilobject_$i = $9 ? $6 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $10 = ($1|0)<(-1000999);
   if (!($10)) {
    $11 = ((($0)) + 12|0);
    $12 = load4($11);
    $13 = (($12) + ($1<<4)|0);
    $$1$i = $13;
    break;
   }
   $14 = ($1|0)==(-1001000);
   if ($14) {
    $15 = ((($0)) + 16|0);
    $16 = load4($15);
    $17 = ((($16)) + 40|0);
    $$1$i = $17;
    break;
   }
   $18 = (-1001000 - ($1))|0;
   $19 = load4($3);
   $20 = ((($19)) + 8|0);
   $21 = load4($20);
   $22 = ($21|0)==(22);
   if ($22) {
    $$1$i = 18336;
   } else {
    $23 = load4($19);
    $24 = ((($23)) + 6|0);
    $25 = load1($24);
    $26 = $25&255;
    $27 = ($18|0)>($26|0);
    $28 = (($18) + -1)|0;
    $29 = (((($23)) + 16|0) + ($28<<4)|0);
    $30 = $27 ? 18336 : $29;
    $$1$i = $30;
   }
  }
 } while(0);
 $31 = load4($$1$i);
 $32 = ((($0)) + 12|0);
 $33 = load4($32);
 $34 = ((($33)) + -16|0);
 $35 = (_luaH_next($0,$31,$34)|0);
 $36 = ($35|0)==(0);
 $37 = load4($32);
 $38 = ((($37)) + -16|0);
 $39 = ((($37)) + 16|0);
 $storemerge = $36 ? $38 : $39;
 store4($32,$storemerge);
 return ($35|0);
}
function _lua_concat($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)>(1);
 if ($2) {
  _luaV_concat($0,$1);
 } else {
  $3 = ($1|0)==(0);
  if ($3) {
   $4 = ((($0)) + 12|0);
   $5 = load4($4);
   $6 = (_luaS_newlstr($0,19032,0)|0);
   store4($5,$6);
   $7 = ((($6)) + 4|0);
   $8 = load1($7);
   $9 = $8 | 64;
   $10 = $9&255;
   $11 = ((($5)) + 8|0);
   store4($11,$10);
   $12 = load4($4);
   $13 = ((($12)) + 16|0);
   store4($4,$13);
  }
 }
 $14 = ((($0)) + 16|0);
 $15 = load4($14);
 $16 = ((($15)) + 12|0);
 $17 = load4($16);
 $18 = ($17|0)>(0);
 if (!($18)) {
  return;
 }
 _luaC_step($0);
 return;
}
function _lua_len($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1$i = 0, $$luaO_nilobject_$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = load4($2);
 $4 = ($1|0)>(0);
 do {
  if ($4) {
   $5 = load4($3);
   $6 = (($5) + ($1<<4)|0);
   $7 = ((($0)) + 12|0);
   $8 = load4($7);
   $9 = ($6>>>0)<($8>>>0);
   $$luaO_nilobject_$i = $9 ? $6 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $10 = ($1|0)<(-1000999);
   if (!($10)) {
    $11 = ((($0)) + 12|0);
    $12 = load4($11);
    $13 = (($12) + ($1<<4)|0);
    $$1$i = $13;
    break;
   }
   $14 = ($1|0)==(-1001000);
   if ($14) {
    $15 = ((($0)) + 16|0);
    $16 = load4($15);
    $17 = ((($16)) + 40|0);
    $$1$i = $17;
    break;
   }
   $18 = (-1001000 - ($1))|0;
   $19 = load4($3);
   $20 = ((($19)) + 8|0);
   $21 = load4($20);
   $22 = ($21|0)==(22);
   if ($22) {
    $$1$i = 18336;
   } else {
    $23 = load4($19);
    $24 = ((($23)) + 6|0);
    $25 = load1($24);
    $26 = $25&255;
    $27 = ($18|0)>($26|0);
    $28 = (($18) + -1)|0;
    $29 = (((($23)) + 16|0) + ($28<<4)|0);
    $30 = $27 ? 18336 : $29;
    $$1$i = $30;
   }
  }
 } while(0);
 $31 = ((($0)) + 12|0);
 $32 = load4($31);
 _luaV_objlen($0,$32,$$1$i);
 $33 = load4($31);
 $34 = ((($33)) + 16|0);
 store4($31,$34);
 return;
}
function _lua_getallocf($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0|0);
 $$pre = ((($0)) + 16|0);
 if (!($2)) {
  $3 = load4($$pre);
  $4 = ((($3)) + 4|0);
  $5 = load4($4);
  store4($1,$5);
 }
 $6 = load4($$pre);
 $7 = load4($6);
 return ($7|0);
}
function _lua_newuserdata($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_luaS_newudata($0,$1)|0);
 $3 = ((($0)) + 12|0);
 $4 = load4($3);
 store4($4,$2);
 $5 = ((($4)) + 8|0);
 store4($5,71);
 $6 = load4($3);
 $7 = ((($6)) + 16|0);
 store4($3,$7);
 $8 = ((($0)) + 16|0);
 $9 = load4($8);
 $10 = ((($9)) + 12|0);
 $11 = load4($10);
 $12 = ($11|0)>(0);
 if (!($12)) {
  $13 = ((($2)) + 24|0);
  return ($13|0);
 }
 _luaC_step($0);
 $13 = ((($2)) + 24|0);
 return ($13|0);
}
function _lua_getupvalue($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1$i = 0, $$2$i = 0, $$2$i12 = 0, $$luaO_nilobject_$i = 0, $$sroa$0$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, $trunc$i = 0, $trunc$i$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 20|0);
 $4 = load4($3);
 $5 = ($1|0)>(0);
 do {
  if ($5) {
   $6 = load4($4);
   $7 = (($6) + ($1<<4)|0);
   $8 = ((($0)) + 12|0);
   $9 = load4($8);
   $10 = ($7>>>0)<($9>>>0);
   $$luaO_nilobject_$i = $10 ? $7 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $11 = ($1|0)<(-1000999);
   if (!($11)) {
    $12 = ((($0)) + 12|0);
    $13 = load4($12);
    $14 = (($13) + ($1<<4)|0);
    $$1$i = $14;
    break;
   }
   $15 = ($1|0)==(-1001000);
   if ($15) {
    $16 = ((($0)) + 16|0);
    $17 = load4($16);
    $18 = ((($17)) + 40|0);
    $$1$i = $18;
    break;
   }
   $19 = (-1001000 - ($1))|0;
   $20 = load4($4);
   $21 = ((($20)) + 8|0);
   $22 = load4($21);
   $23 = ($22|0)==(22);
   if ($23) {
    $$1$i = 18336;
   } else {
    $24 = load4($20);
    $25 = ((($24)) + 6|0);
    $26 = load1($25);
    $27 = $26&255;
    $28 = ($19|0)>($27|0);
    $29 = (($19) + -1)|0;
    $30 = (((($24)) + 16|0) + ($29<<4)|0);
    $31 = $28 ? 18336 : $30;
    $$1$i = $31;
   }
  }
 } while(0);
 $32 = ((($$1$i)) + 8|0);
 $33 = load4($32);
 $trunc$i = $33&255;
 $trunc$i$clear = $trunc$i & 63;
 L12: do {
  switch ($trunc$i$clear<<24>>24) {
  case 38:  {
   $34 = load4($$1$i);
   $35 = ($2|0)>(0);
   if (!($35)) {
    $$2$i12 = 0;
    return ($$2$i12|0);
   }
   $36 = ((($34)) + 6|0);
   $37 = load1($36);
   $38 = $37&255;
   $39 = ($38|0)<($2|0);
   $40 = (($2) + -1)|0;
   $41 = (((($34)) + 16|0) + ($40<<4)|0);
   $42 = $41;
   if ($39) {
    $$2$i12 = 0;
    return ($$2$i12|0);
   } else {
    $$2$i = 19032;$$sroa$0$0 = $42;
   }
   break;
  }
  case 6:  {
   $43 = load4($$1$i);
   $44 = ((($43)) + 12|0);
   $45 = load4($44);
   $46 = ($2|0)>(0);
   if (!($46)) {
    $$2$i12 = 0;
    return ($$2$i12|0);
   }
   $47 = ((($45)) + 12|0);
   $48 = load4($47);
   $49 = ($48|0)<($2|0);
   if ($49) {
    $$2$i12 = 0;
    return ($$2$i12|0);
   } else {
    $50 = (($2) + -1)|0;
    $51 = (((($43)) + 16|0) + ($50<<2)|0);
    $52 = load4($51);
    $53 = load4($52);
    $54 = ((($45)) + 64|0);
    $55 = load4($54);
    $56 = (($55) + ($50<<3)|0);
    $57 = load4($56);
    $58 = ($57|0)==(0|0);
    $59 = ((($57)) + 16|0);
    $spec$select = $58 ? 7688 : $59;
    $$2$i = $spec$select;$$sroa$0$0 = $53;
    break L12;
   }
   break;
  }
  default: {
   $$2$i12 = 0;
   return ($$2$i12|0);
  }
  }
 } while(0);
 $60 = ((($0)) + 12|0);
 $61 = load4($60);
 $62 = $$sroa$0$0;
 ; store8($61,load8($62,8),8); store8($61+8 | 0,load8($62+8 | 0,8),8);
 $63 = load4($60);
 $64 = ((($63)) + 16|0);
 store4($60,$64);
 $$2$i12 = $$2$i;
 return ($$2$i12|0);
}
function _lua_setupvalue($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$1$i = 0, $$2$i = 0, $$2$i24 = 0, $$luaO_nilobject_$i = 0, $$sroa$0$0 = 0, $$sroa$022$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $9 = 0, $or$cond = 0, $spec$select = 0, $trunc$i = 0, $trunc$i$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 20|0);
 $4 = load4($3);
 $5 = ($1|0)>(0);
 do {
  if ($5) {
   $6 = load4($4);
   $7 = (($6) + ($1<<4)|0);
   $8 = ((($0)) + 12|0);
   $9 = load4($8);
   $10 = ($7>>>0)<($9>>>0);
   $$luaO_nilobject_$i = $10 ? $7 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $11 = ($1|0)<(-1000999);
   if (!($11)) {
    $12 = ((($0)) + 12|0);
    $13 = load4($12);
    $14 = (($13) + ($1<<4)|0);
    $$1$i = $14;
    break;
   }
   $15 = ($1|0)==(-1001000);
   if ($15) {
    $16 = ((($0)) + 16|0);
    $17 = load4($16);
    $18 = ((($17)) + 40|0);
    $$1$i = $18;
    break;
   }
   $19 = (-1001000 - ($1))|0;
   $20 = load4($4);
   $21 = ((($20)) + 8|0);
   $22 = load4($21);
   $23 = ($22|0)==(22);
   if ($23) {
    $$1$i = 18336;
   } else {
    $24 = load4($20);
    $25 = ((($24)) + 6|0);
    $26 = load1($25);
    $27 = $26&255;
    $28 = ($19|0)>($27|0);
    $29 = (($19) + -1)|0;
    $30 = (((($24)) + 16|0) + ($29<<4)|0);
    $31 = $28 ? 18336 : $30;
    $$1$i = $31;
   }
  }
 } while(0);
 $32 = ((($$1$i)) + 8|0);
 $33 = load4($32);
 $trunc$i = $33&255;
 $trunc$i$clear = $trunc$i & 63;
 L12: do {
  switch ($trunc$i$clear<<24>>24) {
  case 38:  {
   $34 = load4($$1$i);
   $35 = ($2|0)>(0);
   if (!($35)) {
    $$2$i24 = 0;
    return ($$2$i24|0);
   }
   $36 = ((($34)) + 6|0);
   $37 = load1($36);
   $38 = $37&255;
   $39 = ($38|0)<($2|0);
   $40 = (($2) + -1)|0;
   $41 = (((($34)) + 16|0) + ($40<<4)|0);
   $42 = $41;
   if ($39) {
    $$2$i24 = 0;
    return ($$2$i24|0);
   } else {
    $$0 = $34;$$2$i = 19032;$$sroa$0$0 = 0;$$sroa$022$0 = $42;
   }
   break;
  }
  case 6:  {
   $43 = load4($$1$i);
   $44 = ((($43)) + 12|0);
   $45 = load4($44);
   $46 = ($2|0)>(0);
   if (!($46)) {
    $$2$i24 = 0;
    return ($$2$i24|0);
   }
   $47 = ((($45)) + 12|0);
   $48 = load4($47);
   $49 = ($48|0)<($2|0);
   if ($49) {
    $$2$i24 = 0;
    return ($$2$i24|0);
   } else {
    $50 = (($2) + -1)|0;
    $51 = (((($43)) + 16|0) + ($50<<2)|0);
    $52 = load4($51);
    $53 = load4($52);
    $54 = ((($45)) + 64|0);
    $55 = load4($54);
    $56 = (($55) + ($50<<3)|0);
    $57 = load4($56);
    $58 = ($57|0)==(0|0);
    $59 = ((($57)) + 16|0);
    $spec$select = $58 ? 7688 : $59;
    $$0 = 0;$$2$i = $spec$select;$$sroa$0$0 = $52;$$sroa$022$0 = $53;
    break L12;
   }
   break;
  }
  default: {
   $$2$i24 = 0;
   return ($$2$i24|0);
  }
  }
 } while(0);
 $60 = ((($0)) + 12|0);
 $61 = load4($60);
 $62 = ((($61)) + -16|0);
 store4($60,$62);
 $63 = $$sroa$022$0;
 ; store8($63,load8($62,8),8); store8($63+8 | 0,load8($62+8 | 0,8),8);
 $64 = ($$0|0)==(0|0);
 if ($64) {
  $79 = ($$sroa$0$0|0)==(0|0);
  if ($79) {
   $$2$i24 = $$2$i;
   return ($$2$i24|0);
  }
  $80 = load4($$sroa$0$0);
  $81 = ((($80)) + 8|0);
  $82 = load4($81);
  $83 = $82 & 64;
  $84 = ($83|0)!=(0);
  $85 = ((($$sroa$0$0)) + 8|0);
  $86 = ($80|0)==($85|0);
  $or$cond = $86 & $84;
  if (!($or$cond)) {
   $$2$i24 = $$2$i;
   return ($$2$i24|0);
  }
  _luaC_upvalbarrier_($0,$$sroa$0$0);
  $$2$i24 = $$2$i;
  return ($$2$i24|0);
 }
 $65 = load4($60);
 $66 = ((($65)) + 8|0);
 $67 = load4($66);
 $68 = $67 & 64;
 $69 = ($68|0)==(0);
 if ($69) {
  $$2$i24 = $$2$i;
  return ($$2$i24|0);
 }
 $70 = ((($$0)) + 5|0);
 $71 = load1($70);
 $72 = $71 & 4;
 $73 = ($72<<24>>24)==(0);
 if ($73) {
  $$2$i24 = $$2$i;
  return ($$2$i24|0);
 }
 $74 = load4($65);
 $75 = ((($74)) + 5|0);
 $76 = load1($75);
 $77 = $76 & 3;
 $78 = ($77<<24>>24)==(0);
 if ($78) {
  $$2$i24 = $$2$i;
  return ($$2$i24|0);
 }
 _luaC_barrier_($0,$$0,$74);
 $$2$i24 = $$2$i;
 return ($$2$i24|0);
}
function _lua_upvalueid($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$1$i = 0, $$1$i$i = 0, $$luaO_nilobject_$i = 0, $$luaO_nilobject_$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 20|0);
 $4 = load4($3);
 $5 = ($1|0)>(0);
 do {
  if ($5) {
   $6 = load4($4);
   $7 = (($6) + ($1<<4)|0);
   $8 = ((($0)) + 12|0);
   $9 = load4($8);
   $10 = ($7>>>0)<($9>>>0);
   $$luaO_nilobject_$i = $10 ? $7 : 18336;
   $$1$i = $$luaO_nilobject_$i;
  } else {
   $11 = ($1|0)<(-1000999);
   if (!($11)) {
    $12 = ((($0)) + 12|0);
    $13 = load4($12);
    $14 = (($13) + ($1<<4)|0);
    $$1$i = $14;
    break;
   }
   $15 = ($1|0)==(-1001000);
   if ($15) {
    $16 = ((($0)) + 16|0);
    $17 = load4($16);
    $18 = ((($17)) + 40|0);
    $$1$i = $18;
    break;
   }
   $19 = (-1001000 - ($1))|0;
   $20 = load4($4);
   $21 = ((($20)) + 8|0);
   $22 = load4($21);
   $23 = ($22|0)==(22);
   if ($23) {
    $$1$i = 18336;
   } else {
    $24 = load4($20);
    $25 = ((($24)) + 6|0);
    $26 = load1($25);
    $27 = $26&255;
    $28 = ($19|0)>($27|0);
    $29 = (($19) + -1)|0;
    $30 = (((($24)) + 16|0) + ($29<<4)|0);
    $31 = $28 ? 18336 : $30;
    $$1$i = $31;
   }
  }
 } while(0);
 $32 = ((($$1$i)) + 8|0);
 $33 = load4($32);
 $trunc = $33&255;
 $trunc$clear = $trunc & 63;
 switch ($trunc$clear<<24>>24) {
 case 6:  {
  do {
   if ($5) {
    $34 = load4($4);
    $35 = (($34) + ($1<<4)|0);
    $36 = ((($0)) + 12|0);
    $37 = load4($36);
    $38 = ($35>>>0)<($37>>>0);
    $$luaO_nilobject_$i$i = $38 ? $35 : 18336;
    $$1$i$i = $$luaO_nilobject_$i$i;
   } else {
    $39 = ($1|0)<(-1000999);
    if (!($39)) {
     $40 = ((($0)) + 12|0);
     $41 = load4($40);
     $42 = (($41) + ($1<<4)|0);
     $$1$i$i = $42;
     break;
    }
    $43 = ($1|0)==(-1001000);
    if ($43) {
     $44 = ((($0)) + 16|0);
     $45 = load4($44);
     $46 = ((($45)) + 40|0);
     $$1$i$i = $46;
     break;
    }
    $47 = (-1001000 - ($1))|0;
    $48 = load4($4);
    $49 = ((($48)) + 8|0);
    $50 = load4($49);
    $51 = ($50|0)==(22);
    if ($51) {
     $$1$i$i = 18336;
    } else {
     $52 = load4($48);
     $53 = ((($52)) + 6|0);
     $54 = load1($53);
     $55 = $54&255;
     $56 = ($47|0)>($55|0);
     $57 = (($47) + -1)|0;
     $58 = (((($52)) + 16|0) + ($57<<4)|0);
     $59 = $56 ? 18336 : $58;
     $$1$i$i = $59;
    }
   }
  } while(0);
  $60 = load4($$1$i$i);
  $61 = (($2) + -1)|0;
  $62 = (((($60)) + 16|0) + ($61<<2)|0);
  $63 = load4($62);
  $$0 = $63;
  return ($$0|0);
  break;
 }
 case 38:  {
  $64 = load4($$1$i);
  $65 = (($2) + -1)|0;
  $66 = (((($64)) + 16|0) + ($65<<4)|0);
  $$0 = $66;
  return ($$0|0);
  break;
 }
 default: {
  $$0 = 0;
  return ($$0|0);
 }
 }
 return (0)|0;
}
function _lua_upvaluejoin($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$1$i$i = 0, $$1$i$i23 = 0, $$luaO_nilobject_$i$i = 0, $$luaO_nilobject_$i$i22 = 0, $$pre = 0, $$pre26 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($0)) + 20|0);
 $6 = load4($5);
 $7 = ($1|0)>(0);
 do {
  if ($7) {
   $8 = load4($6);
   $9 = (($8) + ($1<<4)|0);
   $10 = ((($0)) + 12|0);
   $11 = load4($10);
   $12 = ($9>>>0)<($11>>>0);
   $$luaO_nilobject_$i$i = $12 ? $9 : 18336;
   $$1$i$i = $$luaO_nilobject_$i$i;
  } else {
   $13 = ($1|0)<(-1000999);
   if (!($13)) {
    $14 = ((($0)) + 12|0);
    $15 = load4($14);
    $16 = (($15) + ($1<<4)|0);
    $$1$i$i = $16;
    break;
   }
   $17 = ($1|0)==(-1001000);
   if ($17) {
    $18 = ((($0)) + 16|0);
    $19 = load4($18);
    $20 = ((($19)) + 40|0);
    $$1$i$i = $20;
    break;
   }
   $21 = (-1001000 - ($1))|0;
   $22 = load4($6);
   $23 = ((($22)) + 8|0);
   $24 = load4($23);
   $25 = ($24|0)==(22);
   if ($25) {
    $$1$i$i = 18336;
   } else {
    $26 = load4($22);
    $27 = ((($26)) + 6|0);
    $28 = load1($27);
    $29 = $28&255;
    $30 = ($21|0)>($29|0);
    $31 = (($21) + -1)|0;
    $32 = (((($26)) + 16|0) + ($31<<4)|0);
    $33 = $30 ? 18336 : $32;
    $$1$i$i = $33;
   }
  }
 } while(0);
 $34 = load4($$1$i$i);
 $35 = (($2) + -1)|0;
 $36 = (((($34)) + 16|0) + ($35<<2)|0);
 $37 = ($3|0)>(0);
 do {
  if ($37) {
   $38 = load4($6);
   $39 = (($38) + ($3<<4)|0);
   $40 = ((($0)) + 12|0);
   $41 = load4($40);
   $42 = ($39>>>0)<($41>>>0);
   $$luaO_nilobject_$i$i22 = $42 ? $39 : 18336;
   $$1$i$i23 = $$luaO_nilobject_$i$i22;
  } else {
   $43 = ($3|0)<(-1000999);
   if (!($43)) {
    $44 = ((($0)) + 12|0);
    $45 = load4($44);
    $46 = (($45) + ($3<<4)|0);
    $$1$i$i23 = $46;
    break;
   }
   $47 = ($3|0)==(-1001000);
   if ($47) {
    $48 = ((($0)) + 16|0);
    $49 = load4($48);
    $50 = ((($49)) + 40|0);
    $$1$i$i23 = $50;
    break;
   }
   $51 = (-1001000 - ($3))|0;
   $52 = load4($6);
   $53 = ((($52)) + 8|0);
   $54 = load4($53);
   $55 = ($54|0)==(22);
   if ($55) {
    $$1$i$i23 = 18336;
   } else {
    $56 = load4($52);
    $57 = ((($56)) + 6|0);
    $58 = load1($57);
    $59 = $58&255;
    $60 = ($51|0)>($59|0);
    $61 = (($51) + -1)|0;
    $62 = (((($56)) + 16|0) + ($61<<4)|0);
    $63 = $60 ? 18336 : $62;
    $$1$i$i23 = $63;
   }
  }
 } while(0);
 $64 = load4($$1$i$i23);
 $65 = (($4) + -1)|0;
 $66 = (((($64)) + 16|0) + ($65<<2)|0);
 $67 = load4($36);
 _luaC_upvdeccount($0,$67);
 $68 = load4($66);
 store4($36,$68);
 $69 = ((($68)) + 4|0);
 $70 = load4($69);
 $71 = (($70) + 1)|0;
 store4($69,$71);
 $72 = load4($68);
 $73 = ((($68)) + 8|0);
 $74 = ($72|0)==($73|0);
 if ($74) {
  $77 = $72;$82 = $68;
 } else {
  $75 = ((($73)) + 4|0);
  store4($75,1);
  $$pre = load4($36);
  $$pre26 = load4($$pre);
  $77 = $$pre26;$82 = $$pre;
 }
 $76 = ((($77)) + 8|0);
 $78 = load4($76);
 $79 = $78 & 64;
 $80 = ($79|0)!=(0);
 $81 = ((($82)) + 8|0);
 $83 = ($77|0)==($81|0);
 $or$cond = $83 & $80;
 if (!($or$cond)) {
  return;
 }
 _luaC_upvalbarrier_($0,$82);
 return;
}
function _lua_sethook($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$op = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $spec$select14 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $4 = ($1|0)==(0|0);
 $5 = ($2|0)==(0);
 $or$cond = $4 | $5;
 $spec$select14 = $or$cond ? 0 : $1;
 $6 = ((($0)) + 20|0);
 $7 = load4($6);
 $8 = ((($7)) + 34|0);
 $9 = load2($8);
 $10 = $9 & 2;
 $11 = ($10<<16>>16)==(0);
 if (!($11)) {
  $12 = ((($7)) + 20|0);
  $13 = load4($12);
  $14 = ((($0)) + 24|0);
  store4($14,$13);
 }
 $15 = ((($0)) + 88|0);
 store4($15,$spec$select14);
 $16 = ((($0)) + 100|0);
 store4($16,$3);
 $17 = ((($0)) + 104|0);
 store4($17,$3);
 $$op = $2 & 255;
 $18 = $or$cond ? 0 : $$op;
 $19 = ((($0)) + 112|0);
 store4($19,$18);
 return;
}
function _lua_gethook($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 88|0);
 $2 = load4($1);
 return ($2|0);
}
function _lua_gethookmask($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 112|0);
 $2 = load4($1);
 return ($2|0);
}
function _lua_gethookcount($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 100|0);
 $2 = load4($1);
 return ($2|0);
}
function _lua_getstack($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$lcssa = 0, $$016 = 0, $$017$lcssa = 0, $$01720 = 0, $$019 = 0, $$021 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1|0)<(0);
 if ($3) {
  $$016 = 0;
  return ($$016|0);
 }
 $4 = ((($0)) + 20|0);
 $$019 = load4($4);
 $5 = ($1|0)!=(0);
 $6 = ((($0)) + 52|0);
 $7 = ($$019|0)!=($6|0);
 $8 = $5 & $7;
 if ($8) {
  $$01720 = $1;$$021 = $$019;
  while(1) {
   $9 = (($$01720) + -1)|0;
   $10 = ((($$021)) + 8|0);
   $$0 = load4($10);
   $11 = ($$01720|0)>(1);
   $12 = ($$0|0)!=($6|0);
   $13 = $11 & $12;
   if ($13) {
    $$01720 = $9;$$021 = $$0;
   } else {
    $$0$lcssa = $$0;$$017$lcssa = $9;
    break;
   }
  }
 } else {
  $$0$lcssa = $$019;$$017$lcssa = $1;
 }
 $14 = ($$017$lcssa|0)!=(0);
 $15 = ($$0$lcssa|0)==($6|0);
 $or$cond = $14 | $15;
 if ($or$cond) {
  $$016 = 0;
  return ($$016|0);
 }
 $16 = ((($2)) + 96|0);
 store4($16,$$0$lcssa);
 $$016 = 1;
 return ($$016|0);
}
function _lua_getlocal($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$01922 = 0, $$03034$i = 0, $$03035$i = 0, $$1$i23 = 0, $$2$i = 0, $$in$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $or$cond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 8|0);
 $4 = load1($3);
 $5 = ($4<<24>>24)==(1);
 if ($5) {
  $6 = ((($0)) + 20|0);
  $7 = load4($6);
  $8 = load4($7);
  $9 = ((($0)) + 32|0);
  $10 = load4($9);
  $11 = ((($7)) + 28|0);
  $12 = load4($11);
  $13 = (($10) + ($12)|0);
  store4($7,$13);
  $14 = $10;
  $15 = (($8) - ($14))|0;
  store4($11,$15);
 }
 $16 = ($1|0)==(0|0);
 L4: do {
  if ($16) {
   $17 = ((($0)) + 12|0);
   $18 = load4($17);
   $19 = ((($18)) + -8|0);
   $20 = load4($19);
   $21 = ($20|0)==(70);
   if ($21) {
    $22 = ((($18)) + -16|0);
    $23 = load4($22);
    $24 = ((($23)) + 12|0);
    $25 = load4($24);
    $26 = (_luaF_getlocalname($25,$2,0)|0);
    $$0 = $26;
   } else {
    $$0 = 0;
   }
  } else {
   $27 = ((($1)) + 96|0);
   $28 = load4($27);
   $29 = ((($28)) + 34|0);
   $30 = load2($29);
   $31 = $30 & 2;
   $32 = ($31<<16>>16)==(0);
   do {
    if ($32) {
     $51 = load4($28);
     $52 = ((($51)) + 16|0);
     $$03034$i = $52;
     label = 11;
    } else {
     $33 = ($2|0)<(0);
     if ($33) {
      $34 = (0 - ($2))|0;
      $35 = load4($28);
      $36 = load4($35);
      $37 = ((($36)) + 12|0);
      $38 = load4($37);
      $39 = ((($38)) + 6|0);
      $40 = load1($39);
      $41 = $40&255;
      $42 = ((($28)) + 16|0);
      $43 = load4($42);
      $44 = $35;
      $45 = (($43) - ($44))|0;
      $46 = $45 >> 4;
      $47 = (($46) - ($41))|0;
      $48 = ($47|0)>($34|0);
      $49 = (($35) + ($41<<4)|0);
      $50 = (($49) + ($34<<4)|0);
      if ($48) {
       $$01922 = $50;$$1$i23 = 7712;
       break;
      } else {
       $$0 = 0;
       break L4;
      }
     } else {
      $53 = ((($28)) + 16|0);
      $54 = load4($53);
      $55 = load4($28);
      $56 = load4($55);
      $57 = ((($56)) + 12|0);
      $58 = load4($57);
      $59 = ((($28)) + 20|0);
      $60 = load4($59);
      $61 = ((($58)) + 48|0);
      $62 = load4($61);
      $63 = (($60) - ($62))|0;
      $64 = $63 >> 2;
      $65 = (($64) + -1)|0;
      $66 = (_luaF_getlocalname($58,$2,$65)|0);
      $67 = ($66|0)==(0|0);
      if ($67) {
       $$03034$i = $54;
       label = 11;
       break;
      } else {
       $$03035$i = $54;$$2$i = $66;
       label = 15;
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 11) {
    $68 = ((($0)) + 20|0);
    $69 = load4($68);
    $70 = ($69|0)==($28|0);
    if ($70) {
     $71 = ((($0)) + 12|0);
     $$in$i = $71;
    } else {
     $72 = ((($28)) + 12|0);
     $73 = load4($72);
     $$in$i = $73;
    }
    $74 = load4($$in$i);
    $75 = $$03034$i;
    $76 = (($74) - ($75))|0;
    $77 = $76 >> 4;
    $78 = ($77|0)>=($2|0);
    $79 = ($2|0)>(0);
    $or$cond$i = $79 & $78;
    if ($or$cond$i) {
     $$03035$i = $$03034$i;$$2$i = 7699;
     label = 15;
    } else {
     $$0 = 0;
     break;
    }
   }
   if ((label|0) == 15) {
    $80 = (($2) + -1)|0;
    $81 = (($$03035$i) + ($80<<4)|0);
    $$01922 = $81;$$1$i23 = $$2$i;
   }
   $82 = ((($0)) + 12|0);
   $83 = load4($82);
   ; store8($83,load8($$01922,8),8); store8($83+8 | 0,load8($$01922+8 | 0,8),8);
   $84 = load4($82);
   $85 = ((($84)) + 16|0);
   store4($82,$85);
   $$0 = $$1$i23;
  }
 } while(0);
 $86 = load1($3);
 $87 = ($86<<24>>24)==(1);
 if (!($87)) {
  return ($$0|0);
 }
 $88 = ((($0)) + 20|0);
 $89 = load4($88);
 $90 = load4($89);
 $91 = ((($0)) + 32|0);
 $92 = load4($91);
 $93 = ((($89)) + 28|0);
 $94 = load4($93);
 $95 = (($92) + ($94)|0);
 store4($89,$95);
 $96 = $92;
 $97 = (($90) - ($96))|0;
 store4($93,$97);
 return ($$0|0);
}
function _lua_setlocal($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$017 = 0, $$03034$i = 0, $$03035$i = 0, $$1$i15 = 0, $$1$i18 = 0, $$2$i = 0, $$in$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, $or$cond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 8|0);
 $4 = load1($3);
 $5 = ($4<<24>>24)==(1);
 if ($5) {
  $6 = ((($0)) + 20|0);
  $7 = load4($6);
  $8 = load4($7);
  $9 = ((($0)) + 32|0);
  $10 = load4($9);
  $11 = ((($7)) + 28|0);
  $12 = load4($11);
  $13 = (($10) + ($12)|0);
  store4($7,$13);
  $14 = $10;
  $15 = (($8) - ($14))|0;
  store4($11,$15);
 }
 $16 = ((($1)) + 96|0);
 $17 = load4($16);
 $18 = ((($17)) + 34|0);
 $19 = load2($18);
 $20 = $19 & 2;
 $21 = ($20<<16>>16)==(0);
 do {
  if ($21) {
   $40 = load4($17);
   $41 = ((($40)) + 16|0);
   $$03034$i = $41;
   label = 8;
  } else {
   $22 = ($2|0)<(0);
   if ($22) {
    $23 = (0 - ($2))|0;
    $24 = load4($17);
    $25 = load4($24);
    $26 = ((($25)) + 12|0);
    $27 = load4($26);
    $28 = ((($27)) + 6|0);
    $29 = load1($28);
    $30 = $29&255;
    $31 = ((($17)) + 16|0);
    $32 = load4($31);
    $33 = $24;
    $34 = (($32) - ($33))|0;
    $35 = $34 >> 4;
    $36 = (($35) - ($30))|0;
    $37 = ($36|0)>($23|0);
    $38 = (($24) + ($30<<4)|0);
    $39 = (($38) + ($23<<4)|0);
    if ($37) {
     $$017 = $39;$$1$i18 = 7712;
     label = 13;
     break;
    } else {
     $$1$i15 = 0;
     break;
    }
   } else {
    $42 = ((($17)) + 16|0);
    $43 = load4($42);
    $44 = load4($17);
    $45 = load4($44);
    $46 = ((($45)) + 12|0);
    $47 = load4($46);
    $48 = ((($17)) + 20|0);
    $49 = load4($48);
    $50 = ((($47)) + 48|0);
    $51 = load4($50);
    $52 = (($49) - ($51))|0;
    $53 = $52 >> 2;
    $54 = (($53) + -1)|0;
    $55 = (_luaF_getlocalname($47,$2,$54)|0);
    $56 = ($55|0)==(0|0);
    if ($56) {
     $$03034$i = $43;
     label = 8;
     break;
    } else {
     $$03035$i = $43;$$2$i = $55;
     label = 12;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $57 = ((($0)) + 20|0);
  $58 = load4($57);
  $59 = ($58|0)==($17|0);
  if ($59) {
   $60 = ((($0)) + 12|0);
   $$in$i = $60;
  } else {
   $61 = ((($17)) + 12|0);
   $62 = load4($61);
   $$in$i = $62;
  }
  $63 = load4($$in$i);
  $64 = $$03034$i;
  $65 = (($63) - ($64))|0;
  $66 = $65 >> 4;
  $67 = ($66|0)>=($2|0);
  $68 = ($2|0)>(0);
  $or$cond$i = $68 & $67;
  if ($or$cond$i) {
   $$03035$i = $$03034$i;$$2$i = 7699;
   label = 12;
  } else {
   $$1$i15 = 0;
  }
 }
 if ((label|0) == 12) {
  $69 = (($2) + -1)|0;
  $70 = (($$03035$i) + ($69<<4)|0);
  $$017 = $70;$$1$i18 = $$2$i;
  label = 13;
 }
 if ((label|0) == 13) {
  $71 = ((($0)) + 12|0);
  $72 = load4($71);
  $73 = ((($72)) + -16|0);
  ; store8($$017,load8($73,8),8); store8($$017+8 | 0,load8($73+8 | 0,8),8);
  $74 = load4($71);
  $75 = ((($74)) + -16|0);
  store4($71,$75);
  $$1$i15 = $$1$i18;
 }
 $76 = load1($3);
 $77 = ($76<<24>>24)==(1);
 if (!($77)) {
  return ($$1$i15|0);
 }
 $78 = ((($0)) + 20|0);
 $79 = load4($78);
 $80 = load4($79);
 $81 = ((($0)) + 32|0);
 $82 = load4($81);
 $83 = ((($79)) + 28|0);
 $84 = load4($83);
 $85 = (($82) + ($84)|0);
 store4($79,$85);
 $86 = $82;
 $87 = (($80) - ($86))|0;
 store4($83,$87);
 return ($$1$i15|0);
}
function _lua_getinfo($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$i$ph$i = 0, $$0$lcssa$i = 0, $$026$i$i$i = 0, $$031$i = 0, $$03134$i = 0, $$033 = 0, $$034 = 0, $$035$i = 0, $$1$i = 0, $$cast$i$i$i = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = i64(), $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge$i = 0, $trunc$i$i$i = 0, $trunc$i$i$i$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $4 = ((($0)) + 8|0);
 $5 = load1($4);
 $6 = ($5<<24>>24)==(1);
 if ($6) {
  $7 = ((($0)) + 20|0);
  $8 = load4($7);
  $9 = load4($8);
  $10 = ((($0)) + 32|0);
  $11 = load4($10);
  $12 = ((($8)) + 28|0);
  $13 = load4($12);
  $14 = (($11) + ($13)|0);
  store4($8,$14);
  $15 = $11;
  $16 = (($9) - ($15))|0;
  store4($12,$16);
 }
 $17 = load1($1);
 $18 = ($17<<24>>24)==(62);
 if ($18) {
  $19 = ((($0)) + 12|0);
  $20 = load4($19);
  $21 = ((($20)) + -16|0);
  $22 = ((($1)) + 1|0);
  store4($19,$21);
  $$0 = $22;$$033 = $21;$$034 = 0;
 } else {
  $23 = ((($2)) + 96|0);
  $24 = load4($23);
  $25 = load4($24);
  $$0 = $1;$$033 = $25;$$034 = $24;
 }
 $26 = ((($$033)) + 8|0);
 $27 = load4($26);
 $28 = $27 & 31;
 $29 = ($28|0)==(6);
 if ($29) {
  $30 = load4($$033);
  $33 = $30;
 } else {
  $33 = 0;
 }
 $31 = load1($$0);
 $32 = ($31<<24>>24)==(0);
 L11: do {
  if ($32) {
   $$0$lcssa$i = 1;
  } else {
   $34 = ($33|0)==(0|0);
   $35 = ($$034|0)==(0|0);
   $36 = ((($2)) + 4|0);
   $37 = ((($2)) + 16|0);
   $38 = ((($2)) + 24|0);
   $39 = ((($2)) + 28|0);
   $40 = ((($2)) + 12|0);
   $41 = ((($2)) + 36|0);
   $42 = ((($33)) + 4|0);
   $43 = ((($2)) + 20|0);
   $44 = ((($$034)) + 34|0);
   $45 = ((($2)) + 32|0);
   $46 = ((($2)) + 34|0);
   $47 = ((($2)) + 33|0);
   $48 = ((($33)) + 6|0);
   $49 = ((($2)) + 35|0);
   $50 = ((($2)) + 8|0);
   $51 = ((($33)) + 12|0);
   $52 = ((($$034)) + 20|0);
   $53 = ((($$034)) + 8|0);
   $54 = ((($0)) + 16|0);
   $$03134$i = $$0;$$035$i = 1;$56 = $31;
   while(1) {
    $55 = $56 << 24 >> 24;
    L15: do {
     switch ($55|0) {
     case 83:  {
      if ($34) {
       label = 13;
      } else {
       $57 = load1($42);
       $58 = ($57<<24>>24)==(38);
       if ($58) {
        label = 13;
       } else {
        $59 = load4($51);
        $60 = ((($59)) + 72|0);
        $61 = load4($60);
        $62 = ($61|0)==(0|0);
        $63 = ((($61)) + 16|0);
        $64 = $62 ? 7727 : $63;
        store4($37,$64);
        $65 = ((($59)) + 36|0);
        $66 = load4($65);
        store4($38,$66);
        $67 = ((($59)) + 40|0);
        $68 = load4($67);
        store4($39,$68);
        $69 = ($66|0)==(0);
        $70 = $69 ? 7730 : 7735;
        $71 = $64;$storemerge$i = $70;
       }
      }
      if ((label|0) == 13) {
       label = 0;
       store4($37,7722);
       store4($38,-1);
       store4($39,-1);
       $71 = 7722;$storemerge$i = 16110;
      }
      store4($40,$storemerge$i);
      _luaO_chunkid($41,$71,60);
      $$1$i = $$035$i;
      break;
     }
     case 108:  {
      if ($35) {
       $90 = -1;
      } else {
       $72 = load2($44);
       $73 = $72 & 2;
       $74 = ($73<<16>>16)==(0);
       if ($74) {
        $90 = -1;
       } else {
        $75 = load4($$034);
        $76 = load4($75);
        $77 = ((($76)) + 12|0);
        $78 = load4($77);
        $79 = ((($78)) + 56|0);
        $80 = load4($79);
        $81 = ($80|0)==(0|0);
        if ($81) {
         $90 = -1;
        } else {
         $82 = load4($52);
         $83 = ((($78)) + 48|0);
         $84 = load4($83);
         $85 = (($82) - ($84))|0;
         $86 = $85 >> 2;
         $87 = (($86) + -1)|0;
         $88 = (($80) + ($87<<2)|0);
         $89 = load4($88);
         $90 = $89;
        }
       }
      }
      store4($43,$90);
      $$1$i = $$035$i;
      break;
     }
     case 117:  {
      if ($34) {
       store1($45,0);
      } else {
       $91 = load1($48);
       store1($45,$91);
       $92 = load1($42);
       $93 = ($92<<24>>24)==(38);
       if (!($93)) {
        $94 = load4($51);
        $95 = ((($94)) + 7|0);
        $96 = load1($95);
        store1($46,$96);
        $97 = load4($51);
        $98 = ((($97)) + 6|0);
        $99 = load1($98);
        store1($47,$99);
        $$1$i = $$035$i;
        break L15;
       }
      }
      store1($46,1);
      store1($47,0);
      $$1$i = $$035$i;
      break;
     }
     case 116:  {
      if ($35) {
       $104 = 0;
      } else {
       $100 = load2($44);
       $101 = $100 & 32;
       $102 = $101&65535;
       $104 = $102;
      }
      $103 = $104&255;
      store1($49,$103);
      $$1$i = $$035$i;
      break;
     }
     case 110:  {
      L41: do {
       if ($35) {
        label = 45;
       } else {
        $105 = load2($44);
        $106 = $105&65535;
        $107 = $106 & 256;
        $108 = ($107|0)==(0);
        L43: do {
         if ($108) {
          $109 = $106 & 32;
          $110 = ($109|0)==(0);
          if (!($110)) {
           label = 45;
           break L41;
          }
          $111 = load4($53);
          $112 = ((($111)) + 34|0);
          $113 = load2($112);
          $114 = $113 & 2;
          $115 = ($114<<16>>16)==(0);
          if ($115) {
           label = 45;
           break L41;
          }
          $116 = load4($111);
          $117 = load4($116);
          $118 = ((($117)) + 12|0);
          $119 = load4($118);
          $120 = ((($111)) + 20|0);
          $121 = load4($120);
          $122 = ((($119)) + 48|0);
          $123 = load4($122);
          $124 = (($121) - ($123))|0;
          $125 = $124 >> 2;
          $126 = (($125) + -1)|0;
          $$cast$i$i$i = $123;
          $127 = (($$cast$i$i$i) + ($126<<2)|0);
          $128 = load4($127);
          $129 = $113 & 4;
          $130 = ($129<<16>>16)==(0);
          if ($130) {
           $trunc$i$i$i = $128&255;
           $trunc$i$i$i$clear = $trunc$i$i$i & 63;
           do {
            switch ($trunc$i$i$i$clear<<24>>24) {
            case 41:  {
             $$0$i$ph$i = 7739;$$sink = 7739;
             break L43;
             break;
            }
            case 37: case 36:  {
             $137 = $128 >>> 6;
             $138 = $137 & 255;
             $139 = (_getobjname($119,$126,$138,$36)|0);
             store4($50,$139);
             $140 = ($139|0)==(0|0);
             if ($140) {
              break L41;
             } else {
              $$1$i = $$035$i;
              break L15;
             }
             break;
            }
            case 7: case 6: case 12:  {
             $$026$i$i$i = 0;
             break;
            }
            case 10: case 8:  {
             $$026$i$i$i = 1;
             break;
            }
            case 24: case 23: case 22: case 21: case 20: case 19: case 18: case 17: case 16: case 15: case 14: case 13:  {
             $131 = $128 & 63;
             $132 = (($131) + -7)|0;
             $$026$i$i$i = $132;
             break;
            }
            case 25:  {
             $$026$i$i$i = 18;
             break;
            }
            case 26:  {
             $$026$i$i$i = 19;
             break;
            }
            case 28:  {
             $$026$i$i$i = 4;
             break;
            }
            case 29:  {
             $$026$i$i$i = 22;
             break;
            }
            case 31:  {
             $$026$i$i$i = 5;
             break;
            }
            case 32:  {
             $$026$i$i$i = 20;
             break;
            }
            case 33:  {
             $$026$i$i$i = 21;
             break;
            }
            default: {
             label = 45;
             break L41;
            }
            }
           } while(0);
           $133 = load4($54);
           $134 = (((($133)) + 136|0) + ($$026$i$i$i<<2)|0);
           $135 = load4($134);
           $136 = ((($135)) + 16|0);
           $$0$i$ph$i = 7752;$$sink = $136;
          } else {
           $$0$i$ph$i = 7763;$$sink = 15925;
          }
         } else {
          $$0$i$ph$i = 7752;$$sink = 15332;
         }
        } while(0);
        store4($36,$$sink);
        store4($50,$$0$i$ph$i);
        $$1$i = $$035$i;
        break L15;
       }
      } while(0);
      if ((label|0) == 45) {
       label = 0;
       store4($50,0);
      }
      store4($50,19032);
      store4($36,0);
      $$1$i = $$035$i;
      break;
     }
     case 102: case 76:  {
      $$1$i = $$035$i;
      break;
     }
     default: {
      $$1$i = 0;
     }
     }
    } while(0);
    $141 = ((($$03134$i)) + 1|0);
    $142 = load1($141);
    $143 = ($142<<24>>24)==(0);
    if ($143) {
     $$0$lcssa$i = $$1$i;
     break L11;
    } else {
     $$03134$i = $141;$$035$i = $$1$i;$56 = $142;
    }
   }
  }
 } while(0);
 $144 = (_strchr($$0,102)|0);
 $145 = ($144|0)==(0|0);
 if (!($145)) {
  $146 = ((($0)) + 12|0);
  $147 = load4($146);
  ; store8($147,load8($$033,8),8); store8($147+8 | 0,load8($$033+8 | 0,8),8);
  $148 = load4($146);
  $149 = ((($148)) + 16|0);
  store4($146,$149);
 }
 $150 = load1($4);
 $151 = ($150<<24>>24)==(1);
 if ($151) {
  $152 = ((($0)) + 20|0);
  $153 = load4($152);
  $154 = load4($153);
  $155 = ((($0)) + 32|0);
  $156 = load4($155);
  $157 = ((($153)) + 28|0);
  $158 = load4($157);
  $159 = (($156) + ($158)|0);
  store4($153,$159);
  $160 = $156;
  $161 = (($154) - ($160))|0;
  store4($157,$161);
 }
 $162 = (_strchr($$0,76)|0);
 $163 = ($162|0)==(0|0);
 if ($163) {
  STACKTOP = sp;return ($$0$lcssa$i|0);
 }
 $164 = ($33|0)==(0|0);
 if (!($164)) {
  $165 = ((($33)) + 4|0);
  $166 = load1($165);
  $167 = ($166<<24>>24)==(38);
  if (!($167)) {
   $172 = ((($33)) + 12|0);
   $173 = load4($172);
   $174 = ((($173)) + 56|0);
   $175 = load4($174);
   $176 = (_luaH_new($0)|0);
   $177 = ((($0)) + 12|0);
   $178 = load4($177);
   store4($178,$176);
   $179 = ((($178)) + 8|0);
   store4($179,69);
   $180 = load4($177);
   $181 = ((($180)) + 16|0);
   store4($177,$181);
   store4($3,1);
   $182 = ((($3)) + 8|0);
   store4($182,1);
   $183 = load4($172);
   $184 = ((($183)) + 24|0);
   $185 = load4($184);
   $186 = ($185|0)>(0);
   if ($186) {
    $$031$i = 0;
    while(1) {
     $187 = (($175) + ($$031$i<<2)|0);
     $188 = load4($187);
     $189 = i64_sext($188);
     _luaH_setint($0,$176,$189,$3);
     $190 = (($$031$i) + 1)|0;
     $191 = load4($172);
     $192 = ((($191)) + 24|0);
     $193 = load4($192);
     $194 = ($190|0)<($193|0);
     if ($194) {
      $$031$i = $190;
     } else {
      break;
     }
    }
   }
   STACKTOP = sp;return ($$0$lcssa$i|0);
  }
 }
 $168 = ((($0)) + 12|0);
 $169 = load4($168);
 $170 = ((($169)) + 8|0);
 store4($170,0);
 $171 = ((($169)) + 16|0);
 store4($168,$171);
 STACKTOP = sp;return ($$0$lcssa$i|0);
}
function _getobjname($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$$i$i = 0, $$$i62$i = 0, $$$i63$i = 0, $$$i64$i = 0, $$0$i = 0, $$0$i75 = 0, $$05669$i = 0, $$05768$i = 0, $$070$i = 0, $$158$i = 0, $$2$i = 0, $$259$i = 0, $$4 = 0, $$idx = 0, $$idx$val = 0, $$idx74 = 0, $$idx74$val = 0, $$sink = 0, $$tr7996 = 0, $$tr8097 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0, $or$cond$not$i = 0, $or$cond60$i = 0, $or$cond61$i = 0;
 var $phitmp = 0, $spec$select = 0, $spec$select65$i = 0, $spec$select66$i = 0, $spec$select67$i = 0, $trunc = 0, $trunc$clear = 0, $trunc$i = 0, $trunc$i$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (($2) + 1)|0;
 $5 = (_luaF_getlocalname($0,$4,$1)|0);
 store4($3,$5);
 $6 = ($5|0)==(0|0);
 if (!($6)) {
  $$4 = 10667;
  return ($$4|0);
 }
 $7 = ((($0)) + 48|0);
 $$tr7996 = $1;$$tr8097 = $2;
 L4: while(1) {
  $12 = ($$tr7996|0)>(0);
  if (!($12)) {
   $$4 = 0;
   label = 39;
   break;
  }
  $13 = load4($7);
  $$05669$i = -1;$$05768$i = 0;$$070$i = 0;
  while(1) {
   $14 = (($13) + ($$070$i<<2)|0);
   $15 = load4($14);
   $16 = $15 >>> 6;
   $17 = $16 & 255;
   $trunc$i = $15&255;
   $trunc$i$clear = $trunc$i & 63;
   switch ($trunc$i$clear<<24>>24) {
   case 4:  {
    $18 = ($17|0)>($$tr8097|0);
    $19 = $15 >>> 23;
    $20 = (($17) + ($19))|0;
    $21 = ($20|0)<($$tr8097|0);
    $22 = ($$070$i|0)<($$05768$i|0);
    $$$i$i = $22 ? -1 : $$070$i;
    $23 = $18 | $21;
    $spec$select = $23 ? $$05669$i : $$$i$i;
    $$2$i = $spec$select;$$259$i = $$05768$i;
    break;
   }
   case 41:  {
    $24 = (($17) + 2)|0;
    $25 = ($24|0)>($$tr8097|0);
    $26 = ($$070$i|0)<($$05768$i|0);
    $$$i64$i = $26 ? -1 : $$070$i;
    $spec$select65$i = $25 ? $$05669$i : $$$i64$i;
    $$2$i = $spec$select65$i;$$259$i = $$05768$i;
    break;
   }
   case 37: case 36:  {
    $27 = ($17|0)>($$tr8097|0);
    $28 = ($$070$i|0)<($$05768$i|0);
    $$$i63$i = $28 ? -1 : $$070$i;
    $spec$select66$i = $27 ? $$05669$i : $$$i63$i;
    $$2$i = $spec$select66$i;$$259$i = $$05768$i;
    break;
   }
   case 30:  {
    $29 = $15 >>> 14;
    $30 = (($$070$i) + -131070)|0;
    $31 = (($30) + ($29))|0;
    $32 = ($$070$i|0)<($31|0);
    $33 = ($31|0)<=($$tr7996|0);
    $or$cond$not$i = $33 & $32;
    $34 = ($31|0)>($$05768$i|0);
    $or$cond60$i = $34 & $or$cond$not$i;
    $$158$i = $or$cond60$i ? $31 : $$05768$i;
    $$2$i = $$05669$i;$$259$i = $$158$i;
    break;
   }
   default: {
    $35 = $15 & 63;
    $36 = (1280 + ($35)|0);
    $37 = load1($36);
    $38 = $37 & 64;
    $39 = ($38<<24>>24)!=(0);
    $40 = ($17|0)==($$tr8097|0);
    $or$cond61$i = $40 & $39;
    $41 = ($$070$i|0)<($$05768$i|0);
    $$$i62$i = $41 ? -1 : $$070$i;
    $spec$select67$i = $or$cond61$i ? $$$i62$i : $$05669$i;
    $$2$i = $spec$select67$i;$$259$i = $$05768$i;
   }
   }
   $42 = (($$070$i) + 1)|0;
   $exitcond$i = ($42|0)==($$tr7996|0);
   if ($exitcond$i) {
    break;
   } else {
    $$05669$i = $$2$i;$$05768$i = $$259$i;$$070$i = $42;
   }
  }
  $43 = ($$2$i|0)==(-1);
  if ($43) {
   $$4 = 0;
   label = 39;
   break;
  }
  $44 = (($13) + ($$2$i<<2)|0);
  $45 = load4($44);
  $trunc = $45&255;
  $trunc$clear = $trunc & 63;
  switch ($trunc$clear<<24>>24) {
  case 7: case 6:  {
   label = 16;
   break L4;
   break;
  }
  case 5:  {
   label = 27;
   break L4;
   break;
  }
  case 2: case 1:  {
   label = 28;
   break L4;
   break;
  }
  case 12:  {
   label = 33;
   break L4;
   break;
  }
  case 0:  {
   break;
  }
  default: {
   $$4 = 0;
   label = 39;
   break L4;
  }
  }
  $9 = $45 >>> 23;
  $46 = $45 >>> 6;
  $47 = $46 & 255;
  $48 = ($9>>>0)<($47>>>0);
  if (!($48)) {
   $$4 = 0;
   label = 39;
   break;
  }
  $8 = (($9) + 1)|0;
  $10 = (_luaF_getlocalname($0,$8,$$2$i)|0);
  store4($3,$10);
  $11 = ($10|0)==(0|0);
  if ($11) {
   $$tr7996 = $$2$i;$$tr8097 = $9;
  } else {
   $$4 = 10667;
   label = 39;
   break;
  }
 }
 if ((label|0) == 16) {
  $49 = $45 & 63;
  $50 = $45 >>> 14;
  $51 = $50 & 511;
  $52 = $45 >>> 23;
  $53 = ($49|0)==(7);
  if ($53) {
   $54 = (($52) + 1)|0;
   $55 = (_luaF_getlocalname($0,$54,$$2$i)|0);
   $76 = $55;
  } else {
   $$idx74 = ((($0)) + 64|0);
   $$idx74$val = load4($$idx74);
   $56 = (($$idx74$val) + ($52<<3)|0);
   $57 = load4($56);
   $58 = ($57|0)==(0|0);
   $59 = ((($57)) + 16|0);
   $$0$i75 = $58 ? 15925 : $59;
   $76 = $$0$i75;
  }
  $60 = $45 & 4194304;
  $61 = ($60|0)==(0);
  if ($61) {
   $72 = (_getobjname($0,$$2$i,$51,$3)|0);
   $73 = ($72|0)==(0|0);
   if ($73) {
    $$sink = 15925;
    label = 24;
   } else {
    $74 = load1($72);
    $75 = ($74<<24>>24)==(99);
    if (!($75)) {
     $$sink = 15925;
     label = 24;
    }
   }
  } else {
   $62 = ((($0)) + 44|0);
   $63 = load4($62);
   $64 = $50 & 255;
   $65 = (((($63) + ($64<<4)|0)) + 8|0);
   $66 = load4($65);
   $67 = $66 & 15;
   $68 = ($67|0)==(4);
   if ($68) {
    $69 = (($63) + ($64<<4)|0);
    $70 = load4($69);
    $71 = ((($70)) + 16|0);
    $$sink = $71;
    label = 24;
   } else {
    $$sink = 15925;
    label = 24;
   }
  }
  if ((label|0) == 24) {
   store4($3,$$sink);
  }
  $77 = ($76|0)==(0|0);
  if ($77) {
   $$4 = 7775;
   return ($$4|0);
  }
  $78 = (_strcmp($76,10607)|0);
  $79 = ($78|0)==(0);
  $phitmp = $79 ? 7768 : 7775;
  $$4 = $phitmp;
  return ($$4|0);
 }
 else if ((label|0) == 27) {
  $80 = $45 >>> 23;
  $$idx = ((($0)) + 64|0);
  $$idx$val = load4($$idx);
  $81 = (($$idx$val) + ($80<<3)|0);
  $82 = load4($81);
  $83 = ($82|0)==(0|0);
  $84 = ((($82)) + 16|0);
  $$0$i = $83 ? 15925 : $84;
  store4($3,$$0$i);
  $$4 = 7790;
  return ($$4|0);
 }
 else if ((label|0) == 28) {
  $85 = $45 & 63;
  $86 = ($85|0)==(1);
  if ($86) {
   $87 = $45 >>> 14;
   $95 = $87;
  } else {
   $88 = (($$2$i) + 1)|0;
   $89 = (($13) + ($88<<2)|0);
   $90 = load4($89);
   $91 = $90 >>> 6;
   $95 = $91;
  }
  $92 = ((($0)) + 44|0);
  $93 = load4($92);
  $94 = (((($93) + ($95<<4)|0)) + 8|0);
  $96 = load4($94);
  $97 = $96 & 15;
  $98 = ($97|0)==(4);
  if (!($98)) {
   $$4 = 0;
   return ($$4|0);
  }
  $99 = (($93) + ($95<<4)|0);
  $100 = load4($99);
  $101 = ((($100)) + 16|0);
  store4($3,$101);
  $$4 = 7781;
  return ($$4|0);
 }
 else if ((label|0) == 33) {
  $102 = $45 >>> 14;
  $103 = $45 & 4194304;
  $104 = ($103|0)==(0);
  if ($104) {
   $115 = $102 & 511;
   $116 = (_getobjname($0,$$2$i,$115,$3)|0);
   $117 = ($116|0)==(0|0);
   if (!($117)) {
    $118 = load1($116);
    $119 = ($118<<24>>24)==(99);
    if ($119) {
     $$4 = 9917;
     return ($$4|0);
    }
   }
  } else {
   $105 = ((($0)) + 44|0);
   $106 = load4($105);
   $107 = $102 & 255;
   $108 = (((($106) + ($107<<4)|0)) + 8|0);
   $109 = load4($108);
   $110 = $109 & 15;
   $111 = ($110|0)==(4);
   if ($111) {
    $112 = (($106) + ($107<<4)|0);
    $113 = load4($112);
    $114 = ((($113)) + 16|0);
    store4($3,$114);
    $$4 = 9917;
    return ($$4|0);
   }
  }
  store4($3,15925);
  $$4 = 9917;
  return ($$4|0);
 }
 else if ((label|0) == 39) {
  return ($$4|0);
 }
 return (0)|0;
}
function _luaG_typeerror($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = (_luaT_objtypename($0,$1)|0);
 $4 = (_varinfo($0,$1)|0);
 store4($vararg_buffer,$2);
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 store4($vararg_ptr1,$3);
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 store4($vararg_ptr2,$4);
 _luaG_runerror($0,7798,$vararg_buffer);
 // unreachable;
}
function _varinfo($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $$015$i = 0, $$019 = 0, $$idx$i = 0, $$idx$val$i = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = sp + 8|0;
 store4($2,0);
 $3 = ((($0)) + 20|0);
 $4 = load4($3);
 $5 = ((($4)) + 34|0);
 $6 = load2($5);
 $7 = $6 & 2;
 $8 = ($7<<16>>16)==(0);
 if ($8) {
  $50 = 19032;
  STACKTOP = sp;return ($50|0);
 }
 $9 = load4($4);
 $10 = load4($9);
 $11 = ((($10)) + 6|0);
 $12 = load1($11);
 $13 = ($12<<24>>24)==(0);
 L4: do {
  if ($13) {
   label = 7;
  } else {
   $14 = $12&255;
   $$015$i = 0;
   while(1) {
    $15 = (((($10)) + 16|0) + ($$015$i<<2)|0);
    $16 = load4($15);
    $17 = load4($16);
    $18 = ($17|0)==($1|0);
    if ($18) {
     break;
    }
    $19 = (($$015$i) + 1)|0;
    $20 = ($19>>>0)<($14>>>0);
    if ($20) {
     $$015$i = $19;
    } else {
     label = 7;
     break L4;
    }
   }
   $21 = ((($10)) + 12|0);
   $22 = load4($21);
   $$idx$i = ((($22)) + 64|0);
   $$idx$val$i = load4($$idx$i);
   $23 = (($$idx$val$i) + ($$015$i<<3)|0);
   $24 = load4($23);
   $25 = ($24|0)==(0|0);
   $26 = ((($24)) + 16|0);
   $$0$i$i = $25 ? 15925 : $26;
   store4($2,$$0$i$i);
   $$019 = 7790;$48 = $$0$i$i;
  }
 } while(0);
 do {
  if ((label|0) == 7) {
   $27 = ((($4)) + 16|0);
   $28 = load4($27);
   $29 = $1;
   $30 = (($29) - ($28))|0;
   $31 = ($30|0)>(-16);
   if (!($31)) {
    $50 = 19032;
    STACKTOP = sp;return ($50|0);
   }
   $32 = ((($4)) + 4|0);
   $33 = load4($32);
   $34 = (($33) - ($28))|0;
   $35 = ($30|0)<($34|0);
   if (!($35)) {
    $50 = 19032;
    STACKTOP = sp;return ($50|0);
   }
   $36 = ((($10)) + 12|0);
   $37 = load4($36);
   $38 = ((($4)) + 20|0);
   $39 = load4($38);
   $40 = ((($37)) + 48|0);
   $41 = load4($40);
   $42 = (($39) - ($41))|0;
   $43 = $42 >> 2;
   $44 = (($43) + -1)|0;
   $45 = $30 >> 4;
   $46 = (_getobjname($37,$44,$45,$2)|0);
   $47 = ($46|0)==(0|0);
   if ($47) {
    $50 = 19032;
    STACKTOP = sp;return ($50|0);
   } else {
    $$pre = load4($2);
    $$019 = $46;$48 = $$pre;
    break;
   }
  }
 } while(0);
 store4($vararg_buffer,$$019);
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 store4($vararg_ptr1,$48);
 $49 = (_luaO_pushfstring($0,7835,$vararg_buffer)|0);
 $50 = $49;
 STACKTOP = sp;return ($50|0);
}
function _luaG_runerror($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $vararg_buffer = sp + 80|0;
 $2 = sp + 16|0;
 $3 = sp;
 $4 = ((($0)) + 20|0);
 $5 = load4($4);
 $6 = ((($0)) + 16|0);
 $7 = load4($6);
 $8 = ((($7)) + 12|0);
 $9 = load4($8);
 $10 = ($9|0)>(0);
 if ($10) {
  _luaC_step($0);
 }
 store4($3,$varargs);
 $11 = (_luaO_pushvfstring($0,$1,$3)|0);
 $12 = ((($5)) + 34|0);
 $13 = load2($12);
 $14 = $13 & 2;
 $15 = ($14<<16>>16)==(0);
 if ($15) {
  _luaG_errormsg($0);
  // unreachable;
 }
 $16 = load4($5);
 $17 = load4($16);
 $18 = ((($17)) + 12|0);
 $19 = load4($18);
 $20 = ((($19)) + 72|0);
 $21 = load4($20);
 $22 = ((($19)) + 56|0);
 $23 = load4($22);
 $24 = ($23|0)==(0|0);
 if ($24) {
  $37 = -1;
 } else {
  $25 = ((($5)) + 20|0);
  $26 = load4($25);
  $27 = ((($19)) + 48|0);
  $28 = load4($27);
  $29 = (($26) - ($28))|0;
  $30 = $29 >> 2;
  $31 = (($30) + -1)|0;
  $32 = (($23) + ($31<<2)|0);
  $33 = load4($32);
  $37 = $33;
 }
 $34 = ($21|0)==(0|0);
 if ($34) {
  store1($2,63);
  $36 = ((($2)) + 1|0);
  store1($36,0);
 } else {
  $35 = ((($21)) + 16|0);
  _luaO_chunkid($2,$35,60);
 }
 store4($vararg_buffer,$2);
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 store4($vararg_ptr1,$37);
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 store4($vararg_ptr2,$11);
 (_luaO_pushfstring($0,7825,$vararg_buffer)|0);
 _luaG_errormsg($0);
 // unreachable;
}
function _luaG_errormsg($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 92|0);
 $2 = load4($1);
 $3 = ($2|0)==(0);
 if ($3) {
  _luaD_throw($0,2);
  // unreachable;
 }
 $4 = ((($0)) + 32|0);
 $5 = load4($4);
 $6 = (($5) + ($2)|0);
 $7 = ((($0)) + 12|0);
 $8 = load4($7);
 $9 = ((($8)) + -16|0);
 ; store8($8,load8($9,8),8); store8($8+8 | 0,load8($9+8 | 0,8),8);
 $10 = load4($7);
 $11 = ((($10)) + -16|0);
 ; store8($11,load8($6,8),8); store8($11+8 | 0,load8($6+8 | 0,8),8);
 $12 = load4($7);
 $13 = ((($12)) + 16|0);
 store4($7,$13);
 $14 = ((($12)) + -16|0);
 _luaD_callnoyield($0,$14,1);
 _luaD_throw($0,2);
 // unreachable;
}
function _luaG_concaterror($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$off = 0, $3 = 0, $4 = 0, $5 = 0, $spec$select = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = load4($3);
 $5 = $4 & 15;
 $$off = (($5) + -3)|0;
 $switch = ($$off>>>0)<(2);
 $spec$select = $switch ? $2 : $1;
 _luaG_typeerror($0,$spec$select,7846);
 // unreachable;
}
function _luaG_opinterror($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $4 = sp;
 $5 = ((($1)) + 8|0);
 $6 = load4($5);
 $7 = ($6|0)==(3);
 if ($7) {
  $8 = loadd($1);
  stored($4,$8);
  $$0 = $2;
  _luaG_typeerror($0,$$0,$3);
  // unreachable;
 } else {
  $9 = (_luaV_tonumber_($1,$4)|0);
  $10 = ($9|0)==(0);
  $spec$select = $10 ? $1 : $2;
  $$0 = $spec$select;
  _luaG_typeerror($0,$$0,$3);
  // unreachable;
 }
}
function _luaG_tointerror($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = i64(), $8 = 0, $9 = 0, $spec$select = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp + 8|0;
 $3 = sp;
 $4 = ((($1)) + 8|0);
 $5 = load4($4);
 $6 = ($5|0)==(19);
 if ($6) {
  $7 = load8($1);
  store8($3,$7);
  $$0 = $2;
 } else {
  $8 = (_luaV_tointeger($1,$3,0)|0);
  $9 = ($8|0)==(0);
  $spec$select = $9 ? $1 : $2;
  $$0 = $spec$select;
 }
 $10 = (_varinfo($0,$$0)|0);
 store4($vararg_buffer,$10);
 _luaG_runerror($0,7858,$vararg_buffer);
 // unreachable;
}
function _luaG_ordererror($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = (_luaT_objtypename($0,$1)|0);
 $4 = (_luaT_objtypename($0,$2)|0);
 $5 = (_strcmp($3,$4)|0);
 $6 = ($5|0)==(0);
 if ($6) {
  store4($vararg_buffer,$3);
  _luaG_runerror($0,7897,$vararg_buffer);
  // unreachable;
 } else {
  store4($vararg_buffer1,$3);
  $vararg_ptr4 = ((($vararg_buffer1)) + 4|0);
  store4($vararg_ptr4,$4);
  _luaG_runerror($0,7930,$vararg_buffer1);
  // unreachable;
 }
}
function _luaG_addinfo($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $vararg_buffer = sp + 64|0;
 $4 = sp;
 $5 = ($2|0)==(0|0);
 if ($5) {
  store1($4,63);
  $7 = ((($4)) + 1|0);
  store1($7,0);
 } else {
  $6 = ((($2)) + 16|0);
  _luaO_chunkid($4,$6,60);
 }
 store4($vararg_buffer,$4);
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 store4($vararg_ptr1,$3);
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 store4($vararg_ptr2,$1);
 $8 = (_luaO_pushfstring($0,7825,$vararg_buffer)|0);
 STACKTOP = sp;return ($8|0);
}
function _luaG_traceexec($0) {
 $0 = $0|0;
 var $$pre = 0, $$pre$phi48Z2D = 0, $$pre$phiZ2D = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = load4($1);
 $3 = ((($0)) + 112|0);
 $4 = load4($3);
 $5 = ((($0)) + 104|0);
 $6 = load4($5);
 $7 = (($6) + -1)|0;
 store4($5,$7);
 $8 = ($7|0)==(0);
 $9 = $4 & 8;
 $10 = ($9|0)!=(0);
 $11 = $10 & $8;
 if ($11) {
  $12 = ((($0)) + 100|0);
  $13 = load4($12);
  store4($5,$13);
 } else {
  $14 = $4 & 4;
  $15 = ($14|0)==(0);
  if ($15) {
   return;
  }
 }
 $16 = ((($2)) + 34|0);
 $17 = load2($16);
 $18 = $17&65535;
 $19 = $18 & 64;
 $20 = ($19|0)==(0);
 if (!($20)) {
  $21 = $18 & 65471;
  $22 = $21&65535;
  store2($16,$22);
  return;
 }
 if ($11) {
  _luaD_hook($0,3,-1);
 }
 $23 = $4 & 4;
 $24 = ($23|0)==(0);
 do {
  if ($24) {
   $$pre = ((($2)) + 20|0);
   $$pre$phi48Z2D = $$pre;$$pre$phiZ2D = $$pre;
  } else {
   $25 = load4($2);
   $26 = load4($25);
   $27 = ((($26)) + 12|0);
   $28 = load4($27);
   $29 = ((($2)) + 20|0);
   $30 = load4($29);
   $31 = ((($28)) + 48|0);
   $32 = load4($31);
   $33 = (($30) - ($32))|0;
   $34 = $33 >> 2;
   $35 = (($34) + -1)|0;
   $36 = ((($28)) + 56|0);
   $37 = load4($36);
   $38 = ($37|0)==(0|0);
   $39 = $30;
   if ($38) {
    $52 = -1;
   } else {
    $40 = (($37) + ($35<<2)|0);
    $41 = load4($40);
    $52 = $41;
   }
   $42 = ($35|0)==(0);
   if (!($42)) {
    $43 = ((($0)) + 24|0);
    $44 = load4($43);
    $45 = ($44>>>0)<($39>>>0);
    if ($45) {
     if ($38) {
      $54 = -1;
     } else {
      $46 = $44;
      $47 = (($46) - ($32))|0;
      $48 = $47 >> 2;
      $49 = (($48) + -1)|0;
      $50 = (($37) + ($49<<2)|0);
      $51 = load4($50);
      $54 = $51;
     }
     $53 = ($52|0)==($54|0);
     if ($53) {
      $$pre$phi48Z2D = $29;$$pre$phiZ2D = $29;
      break;
     }
    }
   }
   _luaD_hook($0,2,$52);
   $$pre$phi48Z2D = $29;$$pre$phiZ2D = $29;
  }
 } while(0);
 $55 = load4($$pre$phiZ2D);
 $56 = ((($0)) + 24|0);
 store4($56,$55);
 $57 = ((($0)) + 8|0);
 $58 = load1($57);
 $59 = ($58<<24>>24)==(1);
 if (!($59)) {
  return;
 }
 if (!($11)) {
  $60 = load4($$pre$phi48Z2D);
  $61 = ((($60)) + -4|0);
  store4($$pre$phi48Z2D,$61);
  $62 = load2($16);
  $63 = $62 | 64;
  store2($16,$63);
  $64 = ((($0)) + 12|0);
  $65 = load4($64);
  $66 = ((($65)) + -16|0);
  store4($2,$66);
  _luaD_throw($0,1);
  // unreachable;
 }
 store4($5,1);
 $60 = load4($$pre$phi48Z2D);
 $61 = ((($60)) + -4|0);
 store4($$pre$phi48Z2D,$61);
 $62 = load2($16);
 $63 = $62 | 64;
 store2($16,$63);
 $64 = ((($0)) + 12|0);
 $65 = load4($64);
 $66 = ((($65)) + -16|0);
 store4($2,$66);
 _luaD_throw($0,1);
 // unreachable;
}
function _luaD_throw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 48|0);
 $3 = load4($2);
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  $5 = ((($3)) + 160|0);
  store4($5,$1);
  $6 = ((($3)) + 4|0);
  _longjmp(($6|0),1);
  // unreachable;
 }
 $7 = ((($0)) + 16|0);
 $8 = load4($7);
 $9 = $1&255;
 $10 = ((($0)) + 8|0);
 store1($10,$9);
 $11 = ((($8)) + 124|0);
 $12 = load4($11);
 $13 = ((($12)) + 48|0);
 $14 = load4($13);
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  $16 = ((($12)) + 12|0);
  $17 = load4($16);
  $18 = ((($17)) + 16|0);
  store4($16,$18);
  $19 = ((($0)) + 12|0);
  $20 = load4($19);
  $21 = ((($20)) + -16|0);
  ; store8($17,load8($21,8),8); store8($17+8 | 0,load8($21+8 | 0,8),8);
  $22 = load4($11);
  _luaD_throw($22,$1);
  // unreachable;
 }
 $23 = ((($8)) + 120|0);
 $24 = load4($23);
 $25 = ($24|0)==(0|0);
 if ($25) {
  _abort();
  // unreachable;
 }
 $26 = ((($0)) + 12|0);
 $27 = load4($26);
 switch ($1|0) {
 case 4:  {
  $28 = ((($8)) + 132|0);
  $29 = load4($28);
  store4($27,$29);
  $30 = ((($29)) + 4|0);
  $31 = load1($30);
  $32 = $31 | 64;
  $33 = $32&255;
  $34 = ((($27)) + 8|0);
  store4($34,$33);
  break;
 }
 case 6:  {
  $35 = (_luaS_newlstr($0,7960,23)|0);
  store4($27,$35);
  $36 = ((($35)) + 4|0);
  $37 = load1($36);
  $38 = $37 | 64;
  $39 = $38&255;
  $40 = ((($27)) + 8|0);
  store4($40,$39);
  break;
 }
 default: {
  $41 = ((($27)) + -16|0);
  ; store8($27,load8($41,8),8); store8($27+8 | 0,load8($41+8 | 0,8),8);
 }
 }
 $42 = ((($27)) + 16|0);
 store4($26,$42);
 $43 = ((($0)) + 20|0);
 $44 = load4($43);
 $45 = ((($44)) + 4|0);
 $46 = load4($45);
 $47 = ($46>>>0)<($42>>>0);
 if ($47) {
  store4($45,$42);
 }
 $48 = load4($23);
 (FUNCTION_TABLE_ii[$48 & 255]($0)|0);
 _abort();
 // unreachable;
}
function _luaD_rawrunprotected($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$reg2mem22$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, _setjmpTable = 0, _setjmpTableSize = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 _setjmpTableSize = 4;_setjmpTable = _malloc(40) | 0;HEAP32[_setjmpTable>>2]=0;
 $3 = sp;
 $4 = ((($0)) + 110|0);
 $5 = load2($4);
 $6 = ((($3)) + 160|0);
 store4($6,0);
 $7 = ((($0)) + 48|0);
 $8 = load4($7);
 store4($3,$8);
 store4($7,$3);
 $9 = ((($3)) + 4|0);
 _setjmpTable = _saveSetjmp($9,1,_setjmpTable|0,_setjmpTableSize|0)|0;_setjmpTableSize = (getTempRet0() | 0);
 __THREW__ = 0;
 $10 = __THREW__; __THREW__ = 0;
 if ((($10|0) != 0) & ((threwValue|0) != 0)) { $11 = _testSetjmp(HEAP32[$10>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($11|0) == 0) { _longjmp($10|0, threwValue|0); } setTempRet0((threwValue) | 0); } else { $11 = -1; };
 $12 = (getTempRet0() | 0);
 switch ($11|0) {
 case 1:  {
  $$reg2mem22$0 = $12;
  break;
 }
 default: {
  $$reg2mem22$0 = 0;
 }
 }
 L3: while(1) {
  $13 = ($$reg2mem22$0|0)==(0);
  if (!($13)) {
   label = 6;
   break;
  }
  __THREW__ = 0;
  invoke_vii($1|0,($0|0),($2|0));
  $14 = __THREW__; __THREW__ = 0;
  if ((($14|0) != 0) & ((threwValue|0) != 0)) { $15 = _testSetjmp(HEAP32[$14>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($15|0) == 0) { _longjmp($14|0, threwValue|0); } setTempRet0((threwValue) | 0); } else { $15 = -1; };
  $16 = (getTempRet0() | 0);
  switch ($15|0) {
  case 1:  {
   $$reg2mem22$0 = $16;
   break;
  }
  default: {
   break L3;
  }
  }
 }
 if ((label|0) == 6) {
  $17 = load4($3);
  store4($7,$17);
  store2($4,$5);
  $18 = load4($6);
  _free(_setjmpTable|0);
  STACKTOP = sp;return ($18|0);
 }
 $17 = load4($3);
 store4($7,$17);
 store2($4,$5);
 $18 = load4($6);
 _free(_setjmpTable|0);
 STACKTOP = sp;return ($18|0);
}
function _luaD_reallocstack($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$022 = 0, $$030$i = 0, $$03031$i = 0, $$03032$i = 0, $$033$i = 0, $$034$i = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 32|0);
 $3 = load4($2);
 $4 = ((($0)) + 96|0);
 $5 = load4($4);
 $6 = (($1) + 1)|0;
 $7 = ($6>>>0)>(268435455);
 if ($7) {
  _luaM_toobig($0);
  // unreachable;
 }
 $8 = $5 << 4;
 $9 = $1 << 4;
 $10 = (_luaM_realloc_($0,$3,$8,$9)|0);
 store4($2,$10);
 $11 = ($5|0)<($1|0);
 if ($11) {
  $$022 = $5;
  while(1) {
   $12 = (((($10) + ($$022<<4)|0)) + 8|0);
   store4($12,0);
   $13 = (($$022) + 1)|0;
   $exitcond = ($13|0)==($1|0);
   if ($exitcond) {
    break;
   } else {
    $$022 = $13;
   }
  }
 }
 store4($4,$1);
 $14 = (($10) + ($1<<4)|0);
 $15 = ((($14)) + -80|0);
 $16 = ((($0)) + 28|0);
 store4($16,$15);
 $17 = ((($0)) + 12|0);
 $18 = load4($17);
 $19 = $3;
 $20 = (($18) - ($19))|0;
 $21 = $20 >> 4;
 $22 = (($10) + ($21<<4)|0);
 store4($17,$22);
 $23 = ((($0)) + 36|0);
 $$033$i = load4($23);
 $24 = ($$033$i|0)==(0|0);
 if (!($24)) {
  $$034$i = $$033$i;
  while(1) {
   $25 = load4($$034$i);
   $26 = (($25) - ($19))|0;
   $27 = $26 >> 4;
   $28 = (($10) + ($27<<4)|0);
   store4($$034$i,$28);
   $29 = ((($$034$i)) + 8|0);
   $$0$i = load4($29);
   $30 = ($$0$i|0)==(0|0);
   if ($30) {
    break;
   } else {
    $$034$i = $$0$i;
   }
  }
 }
 $31 = ((($0)) + 20|0);
 $$03031$i = load4($31);
 $32 = ($$03031$i|0)==(0|0);
 if ($32) {
  return;
 }
 $$03032$i = $$03031$i;$38 = $10;
 while(1) {
  $33 = ((($$03032$i)) + 4|0);
  $34 = load4($33);
  $35 = (($34) - ($19))|0;
  $36 = $35 >> 4;
  $37 = (($38) + ($36<<4)|0);
  store4($33,$37);
  $39 = load4($$03032$i);
  $40 = (($39) - ($19))|0;
  $41 = $40 >> 4;
  $42 = (($38) + ($41<<4)|0);
  store4($$03032$i,$42);
  $43 = ((($$03032$i)) + 34|0);
  $44 = load2($43);
  $45 = $44 & 2;
  $46 = ($45<<16>>16)==(0);
  if (!($46)) {
   $47 = ((($$03032$i)) + 16|0);
   $48 = load4($47);
   $49 = (($48) - ($19))|0;
   $50 = $49 >> 4;
   $51 = (($38) + ($50<<4)|0);
   store4($47,$51);
  }
  $52 = ((($$03032$i)) + 8|0);
  $$030$i = load4($52);
  $53 = ($$030$i|0)==(0|0);
  if ($53) {
   break;
  }
  $$pre$i = load4($2);
  $$03032$i = $$030$i;$38 = $$pre$i;
 }
 return;
}
function _luaD_growstack($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, $spec$store$select = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = ((($0)) + 96|0);
 $3 = load4($2);
 $4 = ($3|0)>(1000000);
 if ($4) {
  _luaD_throw($0,6);
  // unreachable;
 }
 $5 = ((($0)) + 12|0);
 $6 = load4($5);
 $7 = ((($0)) + 32|0);
 $8 = load4($7);
 $9 = (($6) - ($8))|0;
 $10 = $9 >> 4;
 $11 = (($1) + 5)|0;
 $12 = (($11) + ($10))|0;
 $13 = $3 << 1;
 $14 = ($13|0)<(1000000);
 $spec$store$select = $14 ? $13 : 1000000;
 $15 = ($spec$store$select|0)<($12|0);
 $spec$select = $15 ? $12 : $spec$store$select;
 $16 = ($spec$select|0)>(1000000);
 if ($16) {
  _luaD_reallocstack($0,1000200);
  _luaG_runerror($0,12135,$vararg_buffer);
  // unreachable;
 } else {
  _luaD_reallocstack($0,$spec$select);
  STACKTOP = sp;return;
 }
}
function _luaD_shrinkstack($0) {
 $0 = $0|0;
 var $$0$lcssa$i = 0, $$011$i = 0, $$01112$i = 0, $$01114$i = 0, $$013$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select$i = 0, $spec$store$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 12|0);
 $2 = load4($1);
 $3 = ((($0)) + 20|0);
 $$01112$i = load4($3);
 $4 = ($$01112$i|0)==(0|0);
 if ($4) {
  $$0$lcssa$i = $2;
 } else {
  $$01114$i = $$01112$i;$$013$i = $2;
  while(1) {
   $5 = ((($$01114$i)) + 4|0);
   $6 = load4($5);
   $7 = ($$013$i>>>0)<($6>>>0);
   $spec$select$i = $7 ? $6 : $$013$i;
   $8 = ((($$01114$i)) + 8|0);
   $$011$i = load4($8);
   $9 = ($$011$i|0)==(0|0);
   if ($9) {
    $$0$lcssa$i = $spec$select$i;
    break;
   } else {
    $$01114$i = $$011$i;$$013$i = $spec$select$i;
   }
  }
 }
 $10 = ((($0)) + 32|0);
 $11 = load4($10);
 $12 = $$0$lcssa$i;
 $13 = (($12) - ($11))|0;
 $14 = $13 >> 4;
 $15 = (($14) + 1)|0;
 $16 = (($15|0) / 8)&-1;
 $17 = (($14) + 11)|0;
 $18 = (($17) + ($16))|0;
 $19 = ($18|0)<(1000000);
 $spec$store$select = $19 ? $18 : 1000000;
 $20 = ((($0)) + 96|0);
 $21 = load4($20);
 $22 = ($21|0)>(1000000);
 if ($22) {
  _luaE_freeCI($0);
 } else {
  _luaE_shrinkCI($0);
 }
 $23 = ($13|0)<(15999920);
 if (!($23)) {
  return;
 }
 $24 = load4($20);
 $25 = ($spec$store$select|0)<($24|0);
 if (!($25)) {
  return;
 }
 _luaD_reallocstack($0,$spec$store$select);
 return;
}
function _luaD_inctop($0) {
 $0 = $0|0;
 var $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $spec$select$i = 0, $spec$store$select$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = ((($0)) + 28|0);
 $2 = load4($1);
 $3 = ((($0)) + 12|0);
 $4 = load4($3);
 $5 = (($2) - ($4))|0;
 $6 = ($5|0)<(32);
 $7 = $4;
 if (!($6)) {
  $21 = $7;
  $20 = ((($21)) + 16|0);
  store4($3,$20);
  STACKTOP = sp;return;
 }
 $8 = ((($0)) + 96|0);
 $9 = load4($8);
 $10 = ($9|0)>(1000000);
 if ($10) {
  _luaD_throw($0,6);
  // unreachable;
 }
 $11 = ((($0)) + 32|0);
 $12 = load4($11);
 $13 = (($4) - ($12))|0;
 $14 = $13 >> 4;
 $15 = (($14) + 6)|0;
 $16 = $9 << 1;
 $17 = ($16|0)<(1000000);
 $spec$store$select$i = $17 ? $16 : 1000000;
 $18 = ($spec$store$select$i|0)<($15|0);
 $spec$select$i = $18 ? $15 : $spec$store$select$i;
 $19 = ($spec$select$i|0)>(1000000);
 if ($19) {
  _luaD_reallocstack($0,1000200);
  _luaG_runerror($0,12135,$vararg_buffer);
  // unreachable;
 }
 _luaD_reallocstack($0,$spec$select$i);
 $$pre = load4($3);
 $21 = $$pre;
 $20 = ((($21)) + 16|0);
 store4($3,$20);
 STACKTOP = sp;return;
}
function _luaD_hook($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select$i = 0, $spec$store$select$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $vararg_buffer = sp;
 $3 = sp + 4|0;
 $4 = ((($0)) + 88|0);
 $5 = load4($4);
 $6 = ($5|0)==(0|0);
 if ($6) {
  STACKTOP = sp;return;
 }
 $7 = ((($0)) + 116|0);
 $8 = load1($7);
 $9 = ($8<<24>>24)==(0);
 if ($9) {
  STACKTOP = sp;return;
 }
 $10 = ((($0)) + 20|0);
 $11 = load4($10);
 $12 = ((($0)) + 12|0);
 $13 = load4($12);
 $14 = ((($0)) + 32|0);
 $15 = load4($14);
 $16 = (($13) - ($15))|0;
 $17 = ((($11)) + 4|0);
 $18 = load4($17);
 $19 = (($18) - ($15))|0;
 store4($3,$1);
 $20 = ((($3)) + 20|0);
 store4($20,$2);
 $21 = ((($3)) + 96|0);
 store4($21,$11);
 $22 = ((($0)) + 28|0);
 $23 = load4($22);
 $24 = (($23) - ($13))|0;
 $25 = ($24|0)<(336);
 $26 = $13;
 do {
  if ($25) {
   $27 = ((($0)) + 96|0);
   $28 = load4($27);
   $29 = ($28|0)>(1000000);
   if ($29) {
    _luaD_throw($0,6);
    // unreachable;
   }
   $30 = $16 >> 4;
   $31 = (($30) + 25)|0;
   $32 = $28 << 1;
   $33 = ($32|0)<(1000000);
   $spec$store$select$i = $33 ? $32 : 1000000;
   $34 = ($spec$store$select$i|0)<($31|0);
   $spec$select$i = $34 ? $31 : $spec$store$select$i;
   $35 = ($spec$select$i|0)>(1000000);
   if ($35) {
    _luaD_reallocstack($0,1000200);
    _luaG_runerror($0,12135,$vararg_buffer);
    // unreachable;
   } else {
    _luaD_reallocstack($0,$spec$select$i);
    $$pre = load4($12);
    $37 = $$pre;
    break;
   }
  } else {
   $37 = $26;
  }
 } while(0);
 $36 = ((($37)) + 320|0);
 store4($17,$36);
 store1($7,0);
 $38 = ((($11)) + 34|0);
 $39 = load2($38);
 $40 = $39 | 4;
 store2($38,$40);
 FUNCTION_TABLE_vii[$5 & 15]($0,$3);
 store1($7,1);
 $41 = load4($14);
 $42 = (($41) + ($19)|0);
 store4($17,$42);
 $43 = (($41) + ($16)|0);
 store4($12,$43);
 $44 = load2($38);
 $45 = $44 & -5;
 store2($38,$45);
 STACKTOP = sp;return;
}
function _luaD_poscall($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$0$i = 0, $$05864$i = 0, $$05967$i = 0, $$1 = 0, $$1$lcssa$i = 0, $$162$i = 0, $$261$i = 0, $$phi$trans$insert = 0, $$pre = 0, $$sink30 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i = 0, $exitcond72$i = 0, $exitcond73$i = 0, $exitcond74$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 32|0);
 $5 = load2($4);
 $6 = $5 << 16 >> 16;
 $7 = ((($0)) + 112|0);
 $8 = load4($7);
 $9 = $8 & 6;
 $10 = ($9|0)==(0);
 if ($10) {
  $$phi$trans$insert = ((($1)) + 8|0);
  $$pre = load4($$phi$trans$insert);
  $$1 = $2;$27 = $$pre;
 } else {
  $11 = $8 & 2;
  $12 = ($11|0)==(0);
  if ($12) {
   $$0 = $2;
  } else {
   $13 = ((($0)) + 32|0);
   $14 = load4($13);
   $15 = $2;
   $16 = (($15) - ($14))|0;
   _luaD_hook($0,1,-1);
   $17 = load4($13);
   $18 = (($17) + ($16)|0);
   $$0 = $18;
  }
  $19 = ((($1)) + 8|0);
  $20 = load4($19);
  $21 = ((($20)) + 20|0);
  $22 = load4($21);
  $23 = ((($0)) + 24|0);
  store4($23,$22);
  $24 = $20;
  $$1 = $$0;$27 = $24;
 }
 $25 = load4($1);
 $26 = ((($0)) + 20|0);
 store4($26,$27);
 L8: do {
  switch ($6|0) {
  case 0:  {
   $$0$i = 1;$$sink30 = $6;
   break;
  }
  case 1:  {
   $28 = ($3|0)==(0);
   $29 = $28 ? 18336 : $$1;
   ; store8($25,load8($29,8),8); store8($25+8 | 0,load8($29+8 | 0,8),8);
   $$0$i = 1;$$sink30 = $6;
   break;
  }
  case -1:  {
   $30 = ($3|0)>(0);
   if ($30) {
    $$05967$i = 0;
    while(1) {
     $31 = (($25) + ($$05967$i<<4)|0);
     $32 = (($$1) + ($$05967$i<<4)|0);
     ; store8($31,load8($32,8),8); store8($31+8 | 0,load8($32+8 | 0,8),8);
     $33 = (($$05967$i) + 1)|0;
     $exitcond74$i = ($33|0)==($3|0);
     if ($exitcond74$i) {
      $$0$i = 0;$$sink30 = $3;
      break;
     } else {
      $$05967$i = $33;
     }
    }
   } else {
    $$0$i = 0;$$sink30 = $3;
   }
   break;
  }
  default: {
   $34 = ($6|0)>($3|0);
   if (!($34)) {
    $35 = ($5<<16>>16)>(0);
    if (!($35)) {
     $$0$i = 1;$$sink30 = $6;
     break L8;
    }
    $$05864$i = 0;
    while(1) {
     $36 = (($25) + ($$05864$i<<4)|0);
     $37 = (($$1) + ($$05864$i<<4)|0);
     ; store8($36,load8($37,8),8); store8($36+8 | 0,load8($37+8 | 0,8),8);
     $38 = (($$05864$i) + 1)|0;
     $exitcond73$i = ($38|0)==($6|0);
     if ($exitcond73$i) {
      $$0$i = 1;$$sink30 = $6;
      break L8;
     } else {
      $$05864$i = $38;
     }
    }
   }
   $39 = ($3|0)>(0);
   if ($39) {
    $$162$i = 0;
    while(1) {
     $40 = (($25) + ($$162$i<<4)|0);
     $41 = (($$1) + ($$162$i<<4)|0);
     ; store8($40,load8($41,8),8); store8($40+8 | 0,load8($41+8 | 0,8),8);
     $42 = (($$162$i) + 1)|0;
     $exitcond72$i = ($42|0)==($3|0);
     if ($exitcond72$i) {
      $$1$lcssa$i = $3;
      break;
     } else {
      $$162$i = $42;
     }
    }
   } else {
    $$1$lcssa$i = 0;
   }
   $43 = ($$1$lcssa$i|0)<($6|0);
   if ($43) {
    $$261$i = $$1$lcssa$i;
    while(1) {
     $44 = (((($25) + ($$261$i<<4)|0)) + 8|0);
     store4($44,0);
     $45 = (($$261$i) + 1)|0;
     $exitcond$i = ($45|0)==($6|0);
     if ($exitcond$i) {
      $$0$i = 1;$$sink30 = $6;
      break;
     } else {
      $$261$i = $45;
     }
    }
   } else {
    $$0$i = 1;$$sink30 = $6;
   }
  }
  }
 } while(0);
 $46 = (($25) + ($$sink30<<4)|0);
 $47 = ((($0)) + 12|0);
 store4($47,$46);
 return ($$0$i|0);
}
function _luaD_precall($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$0107 = 0, $$0108 = 0, $$0108$in = 0, $$0109128 = 0, $$0110 = 0, $$024$i = 0, $$1 = 0, $$11$i = 0, $$2 = 0, $$pre$i = 0, $$pre$i118 = 0, $$promoted = 0, $$promoted$i = 0, $$tr120 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0, $or$cond$i = 0, $or$cond$i130 = 0, $or$cond2$i = 0, $scevgep$i = 0, $spec$select$i = 0, $spec$select$i112 = 0, $spec$select$i115 = 0;
 var $spec$store$select$i = 0, $spec$store$select$i111 = 0, $spec$store$select$i114 = 0, $trunc = 0, $trunc$clear = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = ((($0)) + 28|0);
 $4 = ((($0)) + 12|0);
 $5 = ((($0)) + 32|0);
 $6 = ((($0)) + 16|0);
 $7 = ((($0)) + 96|0);
 $$tr120 = $1;
 L1: while(1) {
  $8 = ((($$tr120)) + 8|0);
  $9 = load4($8);
  $trunc = $9&255;
  $trunc$clear = $trunc & 63;
  switch ($trunc$clear<<24>>24) {
  case 38:  {
   label = 3;
   break L1;
   break;
  }
  case 22:  {
   label = 4;
   break L1;
   break;
  }
  case 6:  {
   label = 18;
   break L1;
   break;
  }
  default: {
  }
  }
  $163 = load4($3);
  $164 = load4($4);
  $165 = (($163) - ($164))|0;
  $166 = ($165|0)<(32);
  if ($166) {
   $167 = load4($5);
   $168 = $$tr120;
   $169 = (($168) - ($167))|0;
   $170 = load4($6);
   $171 = ((($170)) + 12|0);
   $172 = load4($171);
   $173 = ($172|0)>(0);
   if ($173) {
    _luaC_step($0);
   }
   $174 = load4($7);
   $175 = ($174|0)>(1000000);
   if ($175) {
    label = 51;
    break;
   }
   $176 = load4($4);
   $177 = load4($5);
   $178 = (($176) - ($177))|0;
   $179 = $178 >> 4;
   $180 = (($179) + 6)|0;
   $181 = $174 << 1;
   $182 = ($181|0)<(1000000);
   $spec$store$select$i114 = $182 ? $181 : 1000000;
   $183 = ($spec$store$select$i114|0)<($180|0);
   $spec$select$i115 = $183 ? $180 : $spec$store$select$i114;
   $184 = ($spec$select$i115|0)>(1000000);
   if ($184) {
    label = 53;
    break;
   }
   _luaD_reallocstack($0,$spec$select$i115);
   $185 = load4($5);
   $186 = (($185) + ($169)|0);
   $$2 = $186;
  } else {
   $$2 = $$tr120;
  }
  $187 = (_luaT_gettmbyobj($0,$$2,23)|0);
  $188 = ((($187)) + 8|0);
  $189 = load4($188);
  $190 = $189 & 15;
  $191 = ($190|0)==(6);
  if (!($191)) {
   label = 56;
   break;
  }
  $192 = load4($4);
  $193 = ($192>>>0)>($$2>>>0);
  if ($193) {
   $$024$i = $192;
   while(1) {
    $194 = ((($$024$i)) + -16|0);
    ; store8($$024$i,load8($194,8),8); store8($$024$i+8 | 0,load8($194+8 | 0,8),8);
    $195 = ($194>>>0)>($$2>>>0);
    if ($195) {
     $$024$i = $194;
    } else {
     break;
    }
   }
   $$pre$i118 = load4($4);
   $197 = $$pre$i118;
  } else {
   $197 = $192;
  }
  $196 = ((($197)) + 16|0);
  store4($4,$196);
  ; store8($$2,load8($187,8),8); store8($$2+8 | 0,load8($187+8 | 0,8),8);
  $$tr120 = $$2;
 }
 if ((label|0) == 3) {
  $10 = load4($$tr120);
  $11 = ((($10)) + 12|0);
  $$0108$in = $11;
 }
 else if ((label|0) == 4) {
  $$0108$in = $$tr120;
 }
 else if ((label|0) == 18) {
  $57 = load4($$tr120);
  $58 = ((($57)) + 12|0);
  $59 = load4($58);
  $60 = load4($4);
  $61 = $$tr120;
  $62 = (($60) - ($61))|0;
  $63 = $62 >> 4;
  $64 = (($63) + -1)|0;
  $65 = ((($59)) + 8|0);
  $66 = load1($65);
  $67 = $66&255;
  $68 = load4($3);
  $69 = (($68) - ($60))|0;
  $70 = $69 >> 4;
  $71 = ($70|0)>($67|0);
  do {
   if ($71) {
    $$1 = $$tr120;
   } else {
    $72 = load4($5);
    $73 = (($61) - ($72))|0;
    $74 = load4($6);
    $75 = ((($74)) + 12|0);
    $76 = load4($75);
    $77 = ($76|0)>(0);
    if ($77) {
     _luaC_step($0);
    }
    $78 = load4($7);
    $79 = ($78|0)>(1000000);
    if ($79) {
     _luaD_throw($0,6);
     // unreachable;
    }
    $80 = load4($4);
    $81 = load4($5);
    $82 = (($80) - ($81))|0;
    $83 = $82 >> 4;
    $84 = (($67) + 5)|0;
    $85 = (($84) + ($83))|0;
    $86 = $78 << 1;
    $87 = ($86|0)<(1000000);
    $spec$store$select$i111 = $87 ? $86 : 1000000;
    $88 = ($spec$store$select$i111|0)<($85|0);
    $spec$select$i112 = $88 ? $85 : $spec$store$select$i111;
    $89 = ($spec$select$i112|0)>(1000000);
    if ($89) {
     _luaD_reallocstack($0,1000200);
     _luaG_runerror($0,12135,$vararg_buffer1);
     // unreachable;
    } else {
     _luaD_reallocstack($0,$spec$select$i112);
     $90 = load4($5);
     $91 = (($90) + ($73)|0);
     $$1 = $91;
     break;
    }
   }
  } while(0);
  $92 = ((($59)) + 7|0);
  $93 = load1($92);
  $94 = ($93<<24>>24)==(0);
  $95 = ((($59)) + 6|0);
  $96 = load1($95);
  $97 = $96&255;
  if ($94) {
   $120 = ($63|0)>($97|0);
   if (!($120)) {
    $$promoted = load4($4);
    $$0109128 = $64;$122 = $$promoted;
    while(1) {
     $121 = ((($122)) + 16|0);
     $123 = ((($122)) + 8|0);
     store4($123,0);
     $124 = (($$0109128) + 1)|0;
     $125 = ($124|0)<($97|0);
     if ($125) {
      $$0109128 = $124;$122 = $121;
     } else {
      break;
     }
    }
    store4($4,$121);
   }
   $126 = ((($$1)) + 16|0);
   $$0110 = $126;
  } else {
   $98 = load4($4);
   $99 = (1 - ($63))|0;
   $100 = (($98) + ($99<<4)|0);
   $101 = ($96<<24>>24)!=(0);
   $102 = ($62|0)>(16);
   $or$cond2$i = $102 & $101;
   if ($or$cond2$i) {
    $103 = ((($98)) + 16|0);
    store4($4,$103);
    ; store8($98,load8($100,8),8); store8($98+8 | 0,load8($100+8 | 0,8),8);
    $104 = (((($98) + ($99<<4)|0)) + 8|0);
    store4($104,0);
    $105 = ($96&255)>(1);
    $106 = ($62|0)>(32);
    $or$cond$i130 = $105 & $106;
    if ($or$cond$i130) {
     $109 = 1;
     while(1) {
      $$pre$i = load4($4);
      $107 = ((($$pre$i)) + 16|0);
      store4($4,$107);
      $108 = (($100) + ($109<<4)|0);
      ; store8($$pre$i,load8($108,8),8); store8($$pre$i+8 | 0,load8($108+8 | 0,8),8);
      $110 = ((($108)) + 8|0);
      store4($110,0);
      $111 = (($109) + 1)|0;
      $112 = ($111>>>0)<($97>>>0);
      $113 = ($111|0)<($64|0);
      $or$cond$i = $112 & $113;
      if ($or$cond$i) {
       $109 = $111;
      } else {
       $$0$lcssa$i = $111;
       break;
      }
     }
    } else {
     $$0$lcssa$i = 1;
    }
   } else {
    $$0$lcssa$i = 0;
   }
   $114 = ($$0$lcssa$i>>>0)<($97>>>0);
   if ($114) {
    $$promoted$i = load4($4);
    $$11$i = $$0$lcssa$i;$116 = $$promoted$i;
    while(1) {
     $115 = ((($116)) + 16|0);
     $117 = ((($116)) + 8|0);
     store4($117,0);
     $118 = (($$11$i) + 1)|0;
     $exitcond$i = ($118|0)==($97|0);
     if ($exitcond$i) {
      break;
     } else {
      $$11$i = $118;$116 = $115;
     }
    }
    $119 = (($97) - ($$0$lcssa$i))|0;
    $scevgep$i = (($$promoted$i) + ($119<<4)|0);
    store4($4,$scevgep$i);
    $$0110 = $98;
   } else {
    $$0110 = $98;
   }
  }
  $127 = ((($0)) + 20|0);
  $128 = load4($127);
  $129 = ((($128)) + 12|0);
  $130 = load4($129);
  $131 = ($130|0)==(0|0);
  if ($131) {
   $132 = (_luaE_extendCI($0)|0);
   $133 = $132;
  } else {
   $133 = $130;
  }
  store4($127,$133);
  $134 = $2&65535;
  $135 = ((($133)) + 32|0);
  store2($135,$134);
  store4($133,$$1);
  $136 = ((($133)) + 16|0);
  store4($136,$$0110);
  $137 = (($$0110) + ($67<<4)|0);
  $138 = ((($133)) + 4|0);
  store4($138,$137);
  store4($4,$137);
  $139 = ((($59)) + 48|0);
  $140 = load4($139);
  $141 = ((($133)) + 20|0);
  store4($141,$140);
  $142 = ((($133)) + 34|0);
  store2($142,2);
  $143 = ((($0)) + 112|0);
  $144 = load4($143);
  $145 = $144 & 1;
  $146 = ($145|0)==(0);
  if ($146) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $147 = $140;
  $148 = ((($147)) + 4|0);
  store4($141,$148);
  $149 = ((($133)) + 8|0);
  $150 = load4($149);
  $151 = ((($150)) + 34|0);
  $152 = load2($151);
  $153 = $152 & 2;
  $154 = ($153<<16>>16)==(0);
  if ($154) {
   $$0$i = 0;
  } else {
   $155 = ((($150)) + 20|0);
   $156 = load4($155);
   $157 = ((($156)) + -4|0);
   $158 = load4($157);
   $159 = $158 & 63;
   $160 = ($159|0)==(37);
   if ($160) {
    store2($142,34);
    $$0$i = 4;
   } else {
    $$0$i = 0;
   }
  }
  _luaD_hook($0,$$0$i,-1);
  $161 = load4($141);
  $162 = ((($161)) + -4|0);
  store4($141,$162);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 51) {
  _luaD_throw($0,6);
  // unreachable;
 }
 else if ((label|0) == 53) {
  _luaD_reallocstack($0,1000200);
  _luaG_runerror($0,12135,$vararg_buffer3);
  // unreachable;
 }
 else if ((label|0) == 56) {
  _luaG_typeerror($0,$$2,12159);
  // unreachable;
 }
 $$0108 = load4($$0108$in);
 $12 = load4($3);
 $13 = load4($4);
 $14 = (($12) - ($13))|0;
 $15 = ($14|0)<(336);
 do {
  if ($15) {
   $16 = load4($5);
   $17 = $$tr120;
   $18 = (($17) - ($16))|0;
   $19 = load4($6);
   $20 = ((($19)) + 12|0);
   $21 = load4($20);
   $22 = ($21|0)>(0);
   if ($22) {
    _luaC_step($0);
   }
   $23 = load4($7);
   $24 = ($23|0)>(1000000);
   if ($24) {
    _luaD_throw($0,6);
    // unreachable;
   }
   $25 = load4($4);
   $26 = load4($5);
   $27 = (($25) - ($26))|0;
   $28 = $27 >> 4;
   $29 = (($28) + 25)|0;
   $30 = $23 << 1;
   $31 = ($30|0)<(1000000);
   $spec$store$select$i = $31 ? $30 : 1000000;
   $32 = ($spec$store$select$i|0)<($29|0);
   $spec$select$i = $32 ? $29 : $spec$store$select$i;
   $33 = ($spec$select$i|0)>(1000000);
   if ($33) {
    _luaD_reallocstack($0,1000200);
    _luaG_runerror($0,12135,$vararg_buffer);
    // unreachable;
   } else {
    _luaD_reallocstack($0,$spec$select$i);
    $34 = load4($5);
    $35 = (($34) + ($18)|0);
    $$0107 = $35;
    break;
   }
  } else {
   $$0107 = $$tr120;
  }
 } while(0);
 $36 = ((($0)) + 20|0);
 $37 = load4($36);
 $38 = ((($37)) + 12|0);
 $39 = load4($38);
 $40 = ($39|0)==(0|0);
 if ($40) {
  $41 = (_luaE_extendCI($0)|0);
  $42 = $41;
 } else {
  $42 = $39;
 }
 store4($36,$42);
 $43 = $2&65535;
 $44 = ((($42)) + 32|0);
 store2($44,$43);
 store4($42,$$0107);
 $45 = load4($4);
 $46 = ((($45)) + 320|0);
 $47 = ((($42)) + 4|0);
 store4($47,$46);
 $48 = ((($42)) + 34|0);
 store2($48,0);
 $49 = ((($0)) + 112|0);
 $50 = load4($49);
 $51 = $50 & 1;
 $52 = ($51|0)==(0);
 if (!($52)) {
  _luaD_hook($0,0,-1);
 }
 $53 = (FUNCTION_TABLE_ii[$$0108 & 255]($0)|0);
 $54 = load4($4);
 $55 = (0 - ($53))|0;
 $56 = (($54) + ($55<<4)|0);
 (_luaD_poscall($0,$42,$56,$53)|0);
 $$0 = 1;
 STACKTOP = sp;return ($$0|0);
}
function _luaD_call($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = ((($0)) + 110|0);
 $4 = load2($3);
 $5 = (($4) + 1)<<16>>16;
 store2($3,$5);
 $6 = ($5&65535)>(199);
 if ($6) {
  $7 = ($5<<16>>16)==(200);
  if ($7) {
   _luaG_runerror($0,7984,$vararg_buffer);
   // unreachable;
  }
  $8 = ($5&65535)>(224);
  if ($8) {
   _luaD_throw($0,6);
   // unreachable;
  }
 }
 $9 = (_luaD_precall($0,$1,$2)|0);
 $10 = ($9|0)==(0);
 if (!($10)) {
  $11 = load2($3);
  $12 = (($11) + -1)<<16>>16;
  store2($3,$12);
  STACKTOP = sp;return;
 }
 _luaV_execute($0);
 $11 = load2($3);
 $12 = (($11) + -1)<<16>>16;
 store2($3,$12);
 STACKTOP = sp;return;
}
function _luaD_callnoyield($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = ((($0)) + 108|0);
 $4 = load2($3);
 $5 = (($4) + 1)<<16>>16;
 store2($3,$5);
 $6 = ((($0)) + 110|0);
 $7 = load2($6);
 $8 = (($7) + 1)<<16>>16;
 store2($6,$8);
 $9 = ($8&65535)>(199);
 if ($9) {
  $10 = ($8<<16>>16)==(200);
  if ($10) {
   _luaG_runerror($0,7984,$vararg_buffer);
   // unreachable;
  }
  $11 = ($8&65535)>(224);
  if ($11) {
   _luaD_throw($0,6);
   // unreachable;
  }
 }
 $12 = (_luaD_precall($0,$1,$2)|0);
 $13 = ($12|0)==(0);
 if ($13) {
  _luaV_execute($0);
 }
 $14 = load2($6);
 $15 = (($14) + -1)<<16>>16;
 store2($6,$15);
 $16 = load2($3);
 $17 = (($16) + -1)<<16>>16;
 store2($3,$17);
 STACKTOP = sp;return;
}
function _lua_resume($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$i$i = 0, $$011$i$i$i = 0, $$01114$i$i$i = 0, $$013$i$i$i = 0, $$07$i$i = 0, $$08$i$i = 0, $$cast = 0, $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $phitmp = 0, $spec$select$i$i$i = 0, $spec$store$select$i$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $4 = sp + 4|0;
 store4($3,$2);
 $5 = ((($0)) + 108|0);
 $6 = load2($5);
 $7 = ((($0)) + 8|0);
 $8 = load1($7);
 switch ($8<<24>>24) {
 case 0:  {
  label = 2;
  break;
 }
 case 1:  {
  break;
 }
 default: {
  $25 = ((($0)) + 12|0);
  $26 = load4($25);
  $27 = (0 - ($2))|0;
  $28 = (($26) + ($27<<4)|0);
  store4($25,$28);
  $29 = (_luaS_new($0,11834)|0);
  store4($28,$29);
  $30 = ((($29)) + 4|0);
  $31 = load1($30);
  $32 = $31 | 64;
  $33 = $32&255;
  $34 = (((($26) + ($27<<4)|0)) + 8|0);
  store4($34,$33);
  $35 = load4($25);
  $36 = ((($35)) + 16|0);
  store4($25,$36);
  $$0 = 2;
  STACKTOP = sp;return ($$0|0);
 }
 }
 if ((label|0) == 2) {
  $9 = ((($0)) + 20|0);
  $10 = load4($9);
  $11 = ((($0)) + 52|0);
  $12 = ($10|0)==($11|0);
  if (!($12)) {
   $13 = ((($0)) + 12|0);
   $14 = load4($13);
   $15 = (0 - ($2))|0;
   $16 = (($14) + ($15<<4)|0);
   store4($13,$16);
   $17 = (_luaS_new($0,8001)|0);
   store4($16,$17);
   $18 = ((($17)) + 4|0);
   $19 = load1($18);
   $20 = $19 | 64;
   $21 = $20&255;
   $22 = (((($14) + ($15<<4)|0)) + 8|0);
   store4($22,$21);
   $23 = load4($13);
   $24 = ((($23)) + 16|0);
   store4($13,$24);
   $$0 = 2;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $37 = ($1|0)==(0|0);
 if ($37) {
  $38 = ((($0)) + 110|0);
  store2($38,1);
  $148 = $38;
 } else {
  $39 = ((($1)) + 110|0);
  $40 = load2($39);
  $41 = $40&65535;
  $42 = (($41) + 1)|0;
  $phitmp = $42&65535;
  $43 = ((($0)) + 110|0);
  store2($43,$phitmp);
  $44 = ($phitmp&65535)>(199);
  if ($44) {
   $45 = ((($0)) + 12|0);
   $46 = load4($45);
   $47 = (0 - ($2))|0;
   $48 = (($46) + ($47<<4)|0);
   store4($45,$48);
   $49 = (_luaS_new($0,7984)|0);
   store4($48,$49);
   $50 = ((($49)) + 4|0);
   $51 = load1($50);
   $52 = $51 | 64;
   $53 = $52&255;
   $54 = (((($46) + ($47<<4)|0)) + 8|0);
   store4($54,$53);
   $55 = load4($45);
   $56 = ((($55)) + 16|0);
   store4($45,$56);
   $$0 = 2;
   STACKTOP = sp;return ($$0|0);
  } else {
   $148 = $43;
  }
 }
 store2($5,0);
 $57 = (_luaD_rawrunprotected($0,3,$3)|0);
 store4($4,$57);
 $58 = ($57|0)==(-1);
 L15: do {
  if ($58) {
   store4($4,2);
   $150 = 2;
  } else {
   $59 = ($57|0)>(1);
   if ($59) {
    $60 = ((($0)) + 20|0);
    $61 = ((($0)) + 32|0);
    $62 = ((($0)) + 12|0);
    $63 = ((($0)) + 116|0);
    $64 = ((($0)) + 16|0);
    $65 = ((($0)) + 96|0);
    $66 = ((($0)) + 92|0);
    $79 = $57;
    L19: while(1) {
     $$07$i$i = load4($60);
     $67 = ($$07$i$i|0)==(0|0);
     if ($67) {
      break;
     }
     $$08$i$i = $$07$i$i;
     while(1) {
      $68 = ((($$08$i$i)) + 34|0);
      $69 = load2($68);
      $70 = $69 & 16;
      $71 = ($70<<16>>16)==(0);
      if (!($71)) {
       break;
      }
      $72 = ((($$08$i$i)) + 8|0);
      $$0$i$i = load4($72);
      $73 = ($$0$i$i|0)==(0|0);
      if ($73) {
       label = 30;
       break L19;
      } else {
       $$08$i$i = $$0$i$i;
      }
     }
     $74 = ((($$08$i$i)) + 34|0);
     $75 = load4($61);
     $76 = ((($$08$i$i)) + 28|0);
     $77 = load4($76);
     $78 = (($75) + ($77)|0);
     _luaF_close($0,$78);
     switch ($79|0) {
     case 4:  {
      $80 = load4($64);
      $81 = ((($80)) + 132|0);
      $82 = load4($81);
      store4($78,$82);
      $83 = ((($82)) + 4|0);
      $84 = load1($83);
      $85 = $84 | 64;
      $86 = $85&255;
      $87 = ((($78)) + 8|0);
      store4($87,$86);
      break;
     }
     case 6:  {
      $88 = (_luaS_newlstr($0,7960,23)|0);
      store4($78,$88);
      $89 = ((($88)) + 4|0);
      $90 = load1($89);
      $91 = $90 | 64;
      $92 = $91&255;
      $93 = ((($78)) + 8|0);
      store4($93,$92);
      break;
     }
     default: {
      $94 = load4($62);
      $95 = ((($94)) + -16|0);
      ; store8($78,load8($95,8),8); store8($78+8 | 0,load8($95+8 | 0,8),8);
     }
     }
     $96 = ((($78)) + 16|0);
     store4($62,$96);
     store4($60,$$08$i$i);
     $97 = load2($74);
     $98 = $97&255;
     $99 = $98 & 1;
     store1($63,$99);
     store2($5,0);
     $$01114$i$i$i = $$08$i$i;$$013$i$i$i = $96;
     while(1) {
      $100 = ((($$01114$i$i$i)) + 4|0);
      $101 = load4($100);
      $102 = ($$013$i$i$i>>>0)<($101>>>0);
      $spec$select$i$i$i = $102 ? $101 : $$013$i$i$i;
      $103 = ((($$01114$i$i$i)) + 8|0);
      $$011$i$i$i = load4($103);
      $104 = ($$011$i$i$i|0)==(0|0);
      if ($104) {
       break;
      } else {
       $$01114$i$i$i = $$011$i$i$i;$$013$i$i$i = $spec$select$i$i$i;
      }
     }
     $105 = load4($61);
     $106 = $spec$select$i$i$i;
     $107 = (($106) - ($105))|0;
     $108 = $107 >> 4;
     $109 = (($108) + 1)|0;
     $110 = (($109|0) / 8)&-1;
     $111 = (($108) + 11)|0;
     $112 = (($111) + ($110))|0;
     $113 = ($112|0)<(1000000);
     $spec$store$select$i$i = $113 ? $112 : 1000000;
     $114 = load4($65);
     $115 = ($114|0)>(1000000);
     if ($115) {
      _luaE_freeCI($0);
     } else {
      _luaE_shrinkCI($0);
     }
     $116 = ($107|0)<(15999920);
     if ($116) {
      $117 = load4($65);
      $118 = ($spec$store$select$i$i|0)<($117|0);
      if ($118) {
       _luaD_reallocstack($0,$spec$store$select$i$i);
      }
     }
     $119 = ((($$08$i$i)) + 20|0);
     $120 = load4($119);
     store4($66,$120);
     $121 = (_luaD_rawrunprotected($0,4,$4)|0);
     store4($4,$121);
     $122 = ($121|0)>(1);
     if ($122) {
      $79 = $121;
     } else {
      $150 = $121;
      break L15;
     }
    }
    if ((label|0) == 30) {
     $123 = ($79|0)>(1);
     if (!($123)) {
      $150 = $79;
      break;
     }
    }
    $124 = $79&255;
    store1($7,$124);
    $125 = ((($0)) + 12|0);
    $126 = load4($125);
    switch ($79|0) {
    case 4:  {
     $127 = ((($0)) + 16|0);
     $128 = load4($127);
     $129 = ((($128)) + 132|0);
     $130 = load4($129);
     store4($126,$130);
     $131 = ((($130)) + 4|0);
     $132 = load1($131);
     $133 = $132 | 64;
     $134 = $133&255;
     $135 = ((($126)) + 8|0);
     store4($135,$134);
     break;
    }
    case 6:  {
     $136 = (_luaS_newlstr($0,7960,23)|0);
     store4($126,$136);
     $137 = ((($136)) + 4|0);
     $138 = load1($137);
     $139 = $138 | 64;
     $140 = $139&255;
     $141 = ((($126)) + 8|0);
     store4($141,$140);
     break;
    }
    default: {
     $142 = ((($126)) + -16|0);
     ; store8($126,load8($142,8),8); store8($126+8 | 0,load8($142+8 | 0,8),8);
    }
    }
    $143 = ((($126)) + 16|0);
    store4($125,$143);
    $$cast = $143;
    $144 = ((($0)) + 20|0);
    $145 = load4($144);
    $146 = ((($145)) + 4|0);
    store4($146,$$cast);
    $$pre = load4($4);
    $150 = $$pre;
   } else {
    $150 = $57;
   }
  }
 } while(0);
 store2($5,$6);
 $147 = load2($148);
 $149 = (($147) + -1)<<16>>16;
 store2($148,$149);
 $$0 = $150;
 STACKTOP = sp;return ($$0|0);
}
function _resume($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$028 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = load4($1);
 $3 = ((($0)) + 12|0);
 $4 = load4($3);
 $5 = (0 - ($2))|0;
 $6 = (($4) + ($5<<4)|0);
 $7 = ((($0)) + 20|0);
 $8 = load4($7);
 $9 = ((($0)) + 8|0);
 $10 = load1($9);
 $11 = ($10<<24>>24)==(0);
 if ($11) {
  $12 = ((($6)) + -16|0);
  $13 = (_luaD_precall($0,$12,-1)|0);
  $14 = ($13|0)==(0);
  if (!($14)) {
   return;
  }
  _luaV_execute($0);
  return;
 }
 store1($9,0);
 $15 = ((($0)) + 32|0);
 $16 = load4($15);
 $17 = ((($8)) + 28|0);
 $18 = load4($17);
 $19 = (($16) + ($18)|0);
 store4($8,$19);
 $20 = ((($8)) + 34|0);
 $21 = load2($20);
 $22 = $21 & 2;
 $23 = ($22<<16>>16)==(0);
 if ($23) {
  $24 = ((($8)) + 16|0);
  $25 = load4($24);
  $26 = ($25|0)==(0|0);
  if ($26) {
   $$0 = $2;$$028 = $6;
  } else {
   $27 = ((($8)) + 24|0);
   $28 = load4($27);
   $29 = (FUNCTION_TABLE_iiii[$25 & 15]($0,1,$28)|0);
   $30 = load4($3);
   $31 = (0 - ($29))|0;
   $32 = (($30) + ($31<<4)|0);
   $$0 = $29;$$028 = $32;
  }
  (_luaD_poscall($0,$8,$$028,$$0)|0);
 } else {
  _luaV_execute($0);
 }
 _unroll($0,0);
 return;
}
function _unroll($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $$pre$i = 0, $$pre$phi$iZ2D = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $$pre = ((($0)) + 20|0);
  $$pre$phiZ2D = $$pre;
 } else {
  $3 = load4($1);
  $4 = ((($0)) + 20|0);
  $5 = load4($4);
  $6 = ((($5)) + 34|0);
  $7 = load2($6);
  $8 = $7&65535;
  $9 = $8 & 16;
  $10 = ($9|0)==(0);
  if (!($10)) {
   $11 = $8 & 65519;
   $12 = ((($5)) + 20|0);
   $13 = ((($0)) + 92|0);
   $14 = $11&65535;
   store2($6,$14);
   $15 = load4($12);
   store4($13,$15);
  }
  $16 = ((($5)) + 32|0);
  $17 = load2($16);
  $18 = ($17<<16>>16)==(-1);
  if ($18) {
   $19 = ((($5)) + 4|0);
   $20 = load4($19);
   $21 = ((($0)) + 12|0);
   $22 = load4($21);
   $23 = ($20>>>0)<($22>>>0);
   if ($23) {
    store4($19,$22);
    $$pre$phi$iZ2D = $21;
   } else {
    $$pre$phi$iZ2D = $21;
   }
  } else {
   $$pre$i = ((($0)) + 12|0);
   $$pre$phi$iZ2D = $$pre$i;
  }
  $24 = ((($5)) + 16|0);
  $25 = load4($24);
  $26 = ((($5)) + 24|0);
  $27 = load4($26);
  $28 = (FUNCTION_TABLE_iiii[$25 & 15]($0,$3,$27)|0);
  $29 = load4($$pre$phi$iZ2D);
  $30 = (0 - ($28))|0;
  $31 = (($29) + ($30<<4)|0);
  (_luaD_poscall($0,$5,$31,$28)|0);
  $$pre$phiZ2D = $4;
 }
 $32 = load4($$pre$phiZ2D);
 $33 = ((($0)) + 52|0);
 $34 = ($32|0)==($33|0);
 if ($34) {
  return;
 }
 $35 = ((($0)) + 92|0);
 $36 = ((($0)) + 12|0);
 $38 = $32;
 while(1) {
  $37 = ((($38)) + 34|0);
  $39 = load2($37);
  $40 = $39 & 2;
  $41 = ($40<<16>>16)==(0);
  if ($41) {
   $42 = $39&65535;
   $43 = $42 & 16;
   $44 = ($43|0)==(0);
   if (!($44)) {
    $45 = $42 & 65519;
    $46 = ((($38)) + 20|0);
    $47 = $45&65535;
    store2($37,$47);
    $48 = load4($46);
    store4($35,$48);
   }
   $49 = ((($38)) + 32|0);
   $50 = load2($49);
   $51 = ($50<<16>>16)==(-1);
   if ($51) {
    $52 = ((($38)) + 4|0);
    $53 = load4($52);
    $54 = load4($36);
    $55 = ($53>>>0)<($54>>>0);
    if ($55) {
     store4($52,$54);
    }
   }
   $56 = ((($38)) + 16|0);
   $57 = load4($56);
   $58 = ((($38)) + 24|0);
   $59 = load4($58);
   $60 = (FUNCTION_TABLE_iiii[$57 & 15]($0,1,$59)|0);
   $61 = load4($36);
   $62 = (0 - ($60))|0;
   $63 = (($61) + ($62<<4)|0);
   (_luaD_poscall($0,$38,$63,$60)|0);
  } else {
   _luaV_finishOp($0);
   _luaV_execute($0);
  }
  $64 = load4($$pre$phiZ2D);
  $65 = ($64|0)==($33|0);
  if ($65) {
   break;
  } else {
   $38 = $64;
  }
 }
 return;
}
function _lua_isyieldable($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 108|0);
 $2 = load2($1);
 $3 = ($2<<16>>16)==(0);
 $4 = $3&1;
 return ($4|0);
}
function _lua_yieldk($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $4 = ((($0)) + 20|0);
 $5 = load4($4);
 $6 = ((($0)) + 108|0);
 $7 = load2($6);
 $8 = ($7<<16>>16)==(0);
 if (!($8)) {
  $9 = ((($0)) + 16|0);
  $10 = load4($9);
  $11 = ((($10)) + 124|0);
  $12 = load4($11);
  $13 = ($12|0)==($0|0);
  if ($13) {
   _luaG_runerror($0,8081,$vararg_buffer1);
   // unreachable;
  } else {
   _luaG_runerror($0,8039,$vararg_buffer);
   // unreachable;
  }
 }
 $14 = ((($0)) + 8|0);
 store1($14,1);
 $15 = load4($5);
 $16 = ((($0)) + 32|0);
 $17 = load4($16);
 $18 = (($15) - ($17))|0;
 $19 = ((($5)) + 28|0);
 store4($19,$18);
 $20 = ((($5)) + 34|0);
 $21 = load2($20);
 $22 = $21 & 2;
 $23 = ($22<<16>>16)==(0);
 if (!($23)) {
  STACKTOP = sp;return 0;
 }
 $24 = ((($5)) + 16|0);
 store4($24,$3);
 $25 = ($3|0)==(0|0);
 if ($25) {
  $27 = ((($0)) + 12|0);
  $28 = load4($27);
  $29 = (0 - ($1))|0;
  $30 = (($28) + ($29<<4)|0);
  $31 = ((($30)) + -16|0);
  store4($5,$31);
  _luaD_throw($0,1);
  // unreachable;
 }
 $26 = ((($5)) + 24|0);
 store4($26,$2);
 $27 = ((($0)) + 12|0);
 $28 = load4($27);
 $29 = (0 - ($1))|0;
 $30 = (($28) + ($29<<4)|0);
 $31 = ((($30)) + -16|0);
 store4($5,$31);
 _luaD_throw($0,1);
 // unreachable;
 return (0)|0;
}
function _luaD_pcall($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$lcssa$i$i = 0, $$011$i$i = 0, $$01114$i$i = 0, $$013$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select$i$i = 0;
 var $spec$store$select$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($0)) + 20|0);
 $6 = load4($5);
 $7 = ((($0)) + 116|0);
 $8 = load1($7);
 $9 = ((($0)) + 108|0);
 $10 = load2($9);
 $11 = ((($0)) + 92|0);
 $12 = load4($11);
 store4($11,$4);
 $13 = (_luaD_rawrunprotected($0,$1,$2)|0);
 $14 = ($13|0)==(0);
 if ($14) {
  store4($11,$12);
  return ($13|0);
 }
 $15 = ((($0)) + 32|0);
 $16 = load4($15);
 $17 = (($16) + ($3)|0);
 _luaF_close($0,$17);
 switch ($13|0) {
 case 4:  {
  $18 = ((($0)) + 16|0);
  $19 = load4($18);
  $20 = ((($19)) + 132|0);
  $21 = load4($20);
  store4($17,$21);
  $22 = ((($21)) + 4|0);
  $23 = load1($22);
  $24 = $23 | 64;
  $25 = $24&255;
  $26 = ((($17)) + 8|0);
  store4($26,$25);
  break;
 }
 case 6:  {
  $27 = (_luaS_newlstr($0,7960,23)|0);
  store4($17,$27);
  $28 = ((($27)) + 4|0);
  $29 = load1($28);
  $30 = $29 | 64;
  $31 = $30&255;
  $32 = ((($17)) + 8|0);
  store4($32,$31);
  break;
 }
 default: {
  $33 = ((($0)) + 12|0);
  $34 = load4($33);
  $35 = ((($34)) + -16|0);
  ; store8($17,load8($35,8),8); store8($17+8 | 0,load8($35+8 | 0,8),8);
 }
 }
 $36 = ((($17)) + 16|0);
 $37 = ((($0)) + 12|0);
 store4($37,$36);
 store4($5,$6);
 store1($7,$8);
 store2($9,$10);
 $38 = ($6|0)==(0);
 if ($38) {
  $$0$lcssa$i$i = $36;
 } else {
  $39 = $6;
  $$01114$i$i = $39;$$013$i$i = $36;
  while(1) {
   $40 = ((($$01114$i$i)) + 4|0);
   $41 = load4($40);
   $42 = ($$013$i$i>>>0)<($41>>>0);
   $spec$select$i$i = $42 ? $41 : $$013$i$i;
   $43 = ((($$01114$i$i)) + 8|0);
   $$011$i$i = load4($43);
   $44 = ($$011$i$i|0)==(0|0);
   if ($44) {
    $$0$lcssa$i$i = $spec$select$i$i;
    break;
   } else {
    $$01114$i$i = $$011$i$i;$$013$i$i = $spec$select$i$i;
   }
  }
 }
 $45 = load4($15);
 $46 = $$0$lcssa$i$i;
 $47 = (($46) - ($45))|0;
 $48 = $47 >> 4;
 $49 = (($48) + 1)|0;
 $50 = (($49|0) / 8)&-1;
 $51 = (($48) + 11)|0;
 $52 = (($51) + ($50))|0;
 $53 = ($52|0)<(1000000);
 $spec$store$select$i = $53 ? $52 : 1000000;
 $54 = ((($0)) + 96|0);
 $55 = load4($54);
 $56 = ($55|0)>(1000000);
 if ($56) {
  _luaE_freeCI($0);
 } else {
  _luaE_shrinkCI($0);
 }
 $57 = ($47|0)<(15999920);
 if (!($57)) {
  store4($11,$12);
  return ($13|0);
 }
 $58 = load4($54);
 $59 = ($spec$store$select$i|0)<($58|0);
 if (!($59)) {
  store4($11,$12);
  return ($13|0);
 }
 _luaD_reallocstack($0,$spec$store$select$i);
 store4($11,$12);
 return ($13|0);
}
function _luaD_protectedparser($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $4 = sp;
 $5 = ((($0)) + 108|0);
 $6 = load2($5);
 $7 = (($6) + 1)<<16>>16;
 store2($5,$7);
 store4($4,$1);
 $8 = ((($4)) + 56|0);
 store4($8,$2);
 $9 = ((($4)) + 52|0);
 store4($9,$3);
 $10 = ((($4)) + 16|0);
 store4($10,0);
 $11 = ((($4)) + 24|0);
 store4($11,0);
 $12 = ((($4)) + 28|0);
 store4($12,0);
 $13 = ((($4)) + 36|0);
 store4($13,0);
 $14 = ((($4)) + 40|0);
 store4($14,0);
 $15 = ((($4)) + 48|0);
 store4($15,0);
 $16 = ((($4)) + 4|0);
 store4($16,0);
 $17 = ((($4)) + 12|0);
 store4($17,0);
 $18 = ((($0)) + 12|0);
 $19 = load4($18);
 $20 = ((($0)) + 32|0);
 $21 = load4($20);
 $22 = (($19) - ($21))|0;
 $23 = ((($0)) + 92|0);
 $24 = load4($23);
 $25 = (_luaD_pcall($0,5,$4,$22,$24)|0);
 $26 = load4($16);
 $27 = load4($17);
 $28 = (_luaM_realloc_($0,$26,$27,0)|0);
 store4($16,$28);
 store4($17,0);
 $29 = load4($10);
 $30 = load4($11);
 $31 = $30 << 1;
 (_luaM_realloc_($0,$29,$31,0)|0);
 $32 = load4($12);
 $33 = load4($13);
 $34 = $33 << 4;
 (_luaM_realloc_($0,$32,$34,0)|0);
 $35 = load4($14);
 $36 = load4($15);
 $37 = $36 << 4;
 (_luaM_realloc_($0,$35,$37,0)|0);
 $38 = load2($5);
 $39 = (($38) + -1)<<16>>16;
 store2($5,$39);
 STACKTOP = sp;return ($25|0);
}
function _f_parser($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = load4($1);
 $3 = load4($2);
 $4 = (($3) + -1)|0;
 store4($2,$4);
 $5 = ($3|0)==(0);
 if ($5) {
  $11 = (_luaZ_fill($2)|0);
  $12 = $11;
 } else {
  $6 = ((($2)) + 4|0);
  $7 = load4($6);
  $8 = ((($7)) + 1|0);
  store4($6,$8);
  $9 = load1($7);
  $10 = $9&255;
  $12 = $10;
 }
 $13 = ($12|0)==(27);
 $14 = ((($1)) + 52|0);
 $15 = load4($14);
 $16 = ($15|0)==(0|0);
 if ($13) {
  if (!($16)) {
   $17 = (_strchr($15,98)|0);
   $18 = ($17|0)==(0|0);
   if ($18) {
    store4($vararg_buffer,8165);
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    store4($vararg_ptr1,$15);
    (_luaO_pushfstring($0,8123,$vararg_buffer)|0);
    _luaD_throw($0,3);
    // unreachable;
   }
  }
  $19 = load4($1);
  $20 = ((($1)) + 56|0);
  $21 = load4($20);
  $22 = (_luaU_undump($0,$19,$21)|0);
  $$0 = $22;
  _luaF_initupvals($0,$$0);
  STACKTOP = sp;return;
 } else {
  if (!($16)) {
   $23 = (_strchr($15,116)|0);
   $24 = ($23|0)==(0|0);
   if ($24) {
    store4($vararg_buffer2,8172);
    $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
    store4($vararg_ptr5,$15);
    (_luaO_pushfstring($0,8123,$vararg_buffer2)|0);
    _luaD_throw($0,3);
    // unreachable;
   }
  }
  $25 = load4($1);
  $26 = ((($1)) + 4|0);
  $27 = ((($1)) + 16|0);
  $28 = ((($1)) + 56|0);
  $29 = load4($28);
  $30 = (_luaY_parser($0,$25,$26,$27,$29,$12)|0);
  $$0 = $30;
  _luaF_initupvals($0,$$0);
  STACKTOP = sp;return;
 }
}
function _luaU_dump($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ph$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $5 = sp;
 $6 = sp + 8|0;
 store4($6,$0);
 $7 = ((($6)) + 4|0);
 store4($7,$2);
 $8 = ((($6)) + 8|0);
 store4($8,$3);
 $9 = ((($6)) + 12|0);
 store4($9,$4);
 $10 = ((($6)) + 16|0);
 $11 = (FUNCTION_TABLE_iiiii[$2 & 3]($0,9266,4,$3)|0);
 store4($10,$11);
 store1($5,83);
 $12 = ($11|0)==(0);
 do {
  if ($12) {
   $13 = (FUNCTION_TABLE_iiiii[$2 & 3]($0,$5,1,$3)|0);
   store4($10,$13);
   store1($5,0);
   $14 = ($13|0)==(0);
   if (!($14)) {
    $69 = $13;
    label = 6;
    break;
   }
   $15 = load4($7);
   $16 = load4($6);
   $17 = load4($8);
   $18 = (FUNCTION_TABLE_iiiii[$15 & 3]($16,$5,1,$17)|0);
   store4($10,$18);
   $19 = ($18|0)==(0);
   if ($19) {
    $20 = load4($7);
    $21 = load4($6);
    $22 = load4($8);
    $23 = (FUNCTION_TABLE_iiiii[$20 & 3]($21,9316,6,$22)|0);
    store4($10,$23);
    store1($5,4);
    $24 = ($23|0)==(0);
    if ($24) {
     $25 = load4($7);
     $26 = load4($6);
     $27 = load4($8);
     $28 = (FUNCTION_TABLE_iiiii[$25 & 3]($26,$5,1,$27)|0);
     store4($10,$28);
     store1($5,4);
     $29 = ($28|0)==(0);
     if ($29) {
      $30 = load4($7);
      $31 = load4($6);
      $32 = load4($8);
      $33 = (FUNCTION_TABLE_iiiii[$30 & 3]($31,$5,1,$32)|0);
      store4($10,$33);
      store1($5,4);
      $34 = ($33|0)==(0);
      if ($34) {
       $35 = load4($7);
       $36 = load4($6);
       $37 = load4($8);
       $38 = (FUNCTION_TABLE_iiiii[$35 & 3]($36,$5,1,$37)|0);
       store4($10,$38);
       store1($5,8);
       $39 = ($38|0)==(0);
       if ($39) {
        $40 = load4($7);
        $41 = load4($6);
        $42 = load4($8);
        $43 = (FUNCTION_TABLE_iiiii[$40 & 3]($41,$5,1,$42)|0);
        store4($10,$43);
        store1($5,8);
        $44 = ($43|0)==(0);
        if ($44) {
         $45 = load4($7);
         $46 = load4($6);
         $47 = load4($8);
         $48 = (FUNCTION_TABLE_iiiii[$45 & 3]($46,$5,1,$47)|0);
         store4($10,$48);
         store8($5,i64_const(22136,0));
         $49 = ($48|0)==(0);
         if ($49) {
          $50 = load4($7);
          $51 = load4($6);
          $52 = load4($8);
          $53 = (FUNCTION_TABLE_iiiii[$50 & 3]($51,$5,8,$52)|0);
          store4($10,$53);
          stored($5,370.5);
          $54 = ($53|0)==(0);
          if ($54) {
           $55 = load4($7);
           $56 = load4($6);
           $57 = load4($8);
           $58 = (FUNCTION_TABLE_iiiii[$55 & 3]($56,$5,8,$57)|0);
           store4($10,$58);
           $62 = $58;$76 = $5;
          } else {
           $62 = $53;$76 = $5;
          }
         } else {
          $$ph$i = $5;$75 = $48;
          label = 18;
         }
        } else {
         $74 = $43;
         label = 16;
        }
       } else {
        $73 = $38;
        label = 14;
       }
      } else {
       $72 = $33;
       label = 12;
      }
     } else {
      $71 = $28;
      label = 10;
     }
    } else {
     $70 = $23;
     label = 8;
    }
   } else {
    $69 = $18;
    label = 6;
   }
  } else {
   $69 = $11;
   label = 6;
  }
 } while(0);
 if ((label|0) == 6) {
  store1($5,4);
  $70 = $69;
  label = 8;
 }
 if ((label|0) == 8) {
  store1($5,4);
  $71 = $70;
  label = 10;
 }
 if ((label|0) == 10) {
  store1($5,4);
  $72 = $71;
  label = 12;
 }
 if ((label|0) == 12) {
  store1($5,8);
  $73 = $72;
  label = 14;
 }
 if ((label|0) == 14) {
  store1($5,8);
  $74 = $73;
  label = 16;
 }
 if ((label|0) == 16) {
  store8($5,i64_const(22136,0));
  $$ph$i = $5;$75 = $74;
  label = 18;
 }
 if ((label|0) == 18) {
  stored($5,370.5);
  $62 = $75;$76 = $5;
 }
 $59 = ((($1)) + 12|0);
 $60 = load4($59);
 $61 = $60&255;
 store1($5,$61);
 $63 = ($62|0)==(0);
 if (!($63)) {
  _DumpFunction($1,0,$6);
  $68 = load4($10);
  STACKTOP = sp;return ($68|0);
 }
 $64 = load4($7);
 $65 = load4($6);
 $66 = load4($8);
 $67 = (FUNCTION_TABLE_iiiii[$64 & 3]($65,$5,1,$66)|0);
 store4($10,$67);
 _DumpFunction($1,0,$6);
 $68 = load4($10);
 STACKTOP = sp;return ($68|0);
}
function _DumpFunction($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i68 = 0, $$015$i = 0, $$028$i = 0, $$053$i = 0, $$152$i = 0, $$pr = 0, $$pr64 = 0, $$pr65 = 0, $$pr66 = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i44 = 0, $$pre$i26 = 0, $$pre$i36 = 0, $$pre$i41$i = 0, $$pre$i42 = 0, $$pre$i51 = 0, $$pre$phi70Z2D = 0, $$pre$phiZ2D = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;
 var $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0;
 var $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0.0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = i64(), $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0;
 var $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0;
 var $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0;
 var $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond$i47 = 0, $exitcond$i53 = 0, $exitcond56$i = 0, $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i$i37 = 0, $or$cond$i$i45 = 0, $or$cond$i36$i = 0, $or$cond$i43$i = 0, $trunc$i = 0, $trunc$i$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $4 = sp + 8|0;
 $5 = ((($2)) + 12|0);
 $6 = load4($5);
 $7 = ($6|0)==(0);
 do {
  if ($7) {
   $8 = ((($0)) + 72|0);
   $9 = load4($8);
   $10 = ($9|0)==($1|0);
   if ($10) {
    label = 3;
   } else {
    $20 = ($9|0)==(0|0);
    if ($20) {
     store1($3,0);
     $21 = ((($2)) + 16|0);
     $22 = load4($21);
     $23 = ($22|0)==(0);
     if ($23) {
      $24 = ((($2)) + 4|0);
      $25 = load4($24);
      $26 = load4($2);
      $27 = ((($2)) + 8|0);
      $28 = load4($27);
      $29 = (FUNCTION_TABLE_iiiii[$25 & 3]($26,$3,1,$28)|0);
      store4($21,$29);
      $458 = $29;
     } else {
      $458 = $22;
     }
     $$pre$phiZ2D = $21;$79 = $458;
     break;
    }
    $30 = ((($9)) + 4|0);
    $31 = load1($30);
    $32 = ($31<<24>>24)==(4);
    if ($32) {
     $33 = ((($9)) + 7|0);
     $34 = load1($33);
     $35 = $34&255;
     $39 = $35;
    } else {
     $36 = ((($9)) + 12|0);
     $37 = load4($36);
     $39 = $37;
    }
    $38 = (($39) + 1)|0;
    store4($4,$38);
    $40 = ((($9)) + 16|0);
    $41 = ($38>>>0)<(255);
    if ($41) {
     $42 = $38&255;
     store1($3,$42);
     $43 = ((($2)) + 16|0);
     $44 = load4($43);
     $45 = ($44|0)==(0);
     if ($45) {
      $46 = ((($2)) + 4|0);
      $47 = load4($46);
      $48 = load4($2);
      $49 = ((($2)) + 8|0);
      $50 = load4($49);
      $51 = (FUNCTION_TABLE_iiiii[$47 & 3]($48,$3,1,$50)|0);
      store4($43,$51);
      $459 = $51;
     } else {
      $459 = $44;
     }
     $$pre$phi70Z2D = $43;$67 = $38;$68 = $459;
    } else {
     store1($3,-1);
     $52 = ((($2)) + 16|0);
     $53 = load4($52);
     $54 = ($53|0)==(0);
     if ($54) {
      $55 = ((($2)) + 4|0);
      $56 = load4($55);
      $57 = load4($2);
      $58 = ((($2)) + 8|0);
      $59 = load4($58);
      $60 = (FUNCTION_TABLE_iiiii[$56 & 3]($57,$3,1,$59)|0);
      store4($52,$60);
      $61 = ($60|0)==(0);
      if ($61) {
       $62 = load4($55);
       $63 = load4($2);
       $64 = load4($58);
       $65 = (FUNCTION_TABLE_iiiii[$62 & 3]($63,$4,4,$64)|0);
       store4($52,$65);
       $460 = $65;
      } else {
       $460 = $60;
      }
     } else {
      $460 = $53;
     }
     $$pre$i26 = load4($4);
     $$pre$phi70Z2D = $52;$67 = $$pre$i26;$68 = $460;
    }
    $66 = (($67) + -1)|0;
    $69 = ($68|0)==(0);
    $70 = ($66|0)!=(0);
    $or$cond$i = $70 & $69;
    if ($or$cond$i) {
     $71 = ((($2)) + 4|0);
     $72 = load4($71);
     $73 = load4($2);
     $74 = ((($2)) + 8|0);
     $75 = load4($74);
     $76 = (FUNCTION_TABLE_iiiii[$72 & 3]($73,$40,$66,$75)|0);
     store4($$pre$phi70Z2D,$76);
     $461 = $76;
    } else {
     $461 = $68;
    }
    $$pre$phiZ2D = $$pre$phi70Z2D;$79 = $461;
   }
  } else {
   label = 3;
  }
 } while(0);
 if ((label|0) == 3) {
  store1($3,0);
  $11 = ((($2)) + 16|0);
  $12 = load4($11);
  $13 = ($12|0)==(0);
  if ($13) {
   $14 = ((($2)) + 4|0);
   $15 = load4($14);
   $16 = load4($2);
   $17 = ((($2)) + 8|0);
   $18 = load4($17);
   $19 = (FUNCTION_TABLE_iiiii[$15 & 3]($16,$3,1,$18)|0);
   store4($11,$19);
   $457 = $19;
  } else {
   $457 = $12;
  }
  $$pre$phiZ2D = $11;$79 = $457;
 }
 $77 = ((($0)) + 36|0);
 $78 = load4($77);
 store4($3,$78);
 $80 = ($79|0)==(0);
 if ($80) {
  $81 = ((($2)) + 4|0);
  $82 = load4($81);
  $83 = load4($2);
  $84 = ((($2)) + 8|0);
  $85 = load4($84);
  $86 = (FUNCTION_TABLE_iiiii[$82 & 3]($83,$3,4,$85)|0);
  store4($$pre$phiZ2D,$86);
  $$pr = $86;
 } else {
  $$pr = $79;
 }
 $87 = ((($0)) + 40|0);
 $88 = load4($87);
 store4($3,$88);
 $89 = ($$pr|0)==(0);
 if ($89) {
  $90 = ((($2)) + 4|0);
  $91 = load4($90);
  $92 = load4($2);
  $93 = ((($2)) + 8|0);
  $94 = load4($93);
  $95 = (FUNCTION_TABLE_iiiii[$91 & 3]($92,$3,4,$94)|0);
  store4($$pre$phiZ2D,$95);
  $$pr64 = $95;
 } else {
  $$pr64 = $$pr;
 }
 $96 = ((($0)) + 6|0);
 $97 = load1($96);
 store1($3,$97);
 $98 = ($$pr64|0)==(0);
 if ($98) {
  $99 = ((($2)) + 4|0);
  $100 = load4($99);
  $101 = load4($2);
  $102 = ((($2)) + 8|0);
  $103 = load4($102);
  $104 = (FUNCTION_TABLE_iiiii[$100 & 3]($101,$3,1,$103)|0);
  store4($$pre$phiZ2D,$104);
  $$pr65 = $104;
 } else {
  $$pr65 = $$pr64;
 }
 $105 = ((($0)) + 7|0);
 $106 = load1($105);
 store1($3,$106);
 $107 = ($$pr65|0)==(0);
 if ($107) {
  $108 = ((($2)) + 4|0);
  $109 = load4($108);
  $110 = load4($2);
  $111 = ((($2)) + 8|0);
  $112 = load4($111);
  $113 = (FUNCTION_TABLE_iiiii[$109 & 3]($110,$3,1,$112)|0);
  store4($$pre$phiZ2D,$113);
  $$pr66 = $113;
 } else {
  $$pr66 = $$pr65;
 }
 $114 = ((($0)) + 8|0);
 $115 = load1($114);
 store1($3,$115);
 $116 = ($$pr66|0)==(0);
 if ($116) {
  $117 = ((($2)) + 4|0);
  $118 = load4($117);
  $119 = load4($2);
  $120 = ((($2)) + 8|0);
  $121 = load4($120);
  $122 = (FUNCTION_TABLE_iiiii[$118 & 3]($119,$3,1,$121)|0);
  store4($$pre$phiZ2D,$122);
  $125 = $122;
 } else {
  $125 = $$pr66;
 }
 $123 = ((($0)) + 20|0);
 $124 = load4($123);
 store4($3,$124);
 $126 = ($125|0)==(0);
 if ($126) {
  $129 = ((($2)) + 4|0);
  $130 = load4($129);
  $131 = load4($2);
  $132 = ((($2)) + 8|0);
  $133 = load4($132);
  $134 = (FUNCTION_TABLE_iiiii[$130 & 3]($131,$3,4,$133)|0);
  store4($$pre$phiZ2D,$134);
  $$pre$i36 = load4($123);
  $135 = $$pre$i36 << 2;
  $136 = ($134|0)==(0);
  $137 = ($135|0)!=(0);
  $or$cond$i$i37 = $136 & $137;
  if ($or$cond$i$i37) {
   $138 = ((($0)) + 48|0);
   $139 = load4($138);
   $140 = load4($129);
   $141 = load4($2);
   $142 = load4($132);
   $143 = (FUNCTION_TABLE_iiiii[$140 & 3]($141,$139,$135,$142)|0);
   store4($$pre$phiZ2D,$143);
   $146 = $143;
  } else {
   $146 = $134;
  }
  $144 = ((($0)) + 16|0);
  $145 = load4($144);
  store4($3,$145);
  $147 = ($146|0)==(0);
  if ($147) {
   $148 = ((($2)) + 4|0);
   $149 = load4($148);
   $150 = load4($2);
   $151 = ((($2)) + 8|0);
   $152 = load4($151);
   $153 = (FUNCTION_TABLE_iiiii[$149 & 3]($150,$3,4,$152)|0);
   store4($$pre$phiZ2D,$153);
   $154 = $145;$462 = $3;$463 = $153;
  } else {
   $154 = $145;$462 = $3;$463 = $146;
  }
 } else {
  $127 = ((($0)) + 16|0);
  $128 = load4($127);
  store4($3,$128);
  $154 = $128;$462 = $3;$463 = $125;
 }
 $155 = ($154|0)>(0);
 L58: do {
  if ($155) {
   $156 = ((($0)) + 44|0);
   $157 = ((($2)) + 4|0);
   $158 = ((($2)) + 8|0);
   $$028$i = 0;$165 = $463;
   while(1) {
    $159 = load4($156);
    $160 = (($159) + ($$028$i<<4)|0);
    $161 = (((($159) + ($$028$i<<4)|0)) + 8|0);
    $162 = load4($161);
    $163 = $162 & 63;
    $164 = $163&255;
    store1($3,$164);
    $166 = ($165|0)==(0);
    if ($166) {
     $167 = load4($157);
     $168 = load4($2);
     $169 = load4($158);
     $170 = (FUNCTION_TABLE_iiiii[$167 & 3]($168,$3,1,$169)|0);
     store4($$pre$phiZ2D,$170);
     $$pre$i42 = load4($161);
     $171 = $$pre$i42;$174 = $170;
    } else {
     $171 = $162;$174 = $165;
    }
    $trunc$i = $171&255;
    $trunc$i$clear = $trunc$i & 63;
    L65: do {
     switch ($trunc$i$clear<<24>>24) {
     case 4: case 20:  {
      $192 = load4($160);
      $193 = ($192|0)==(0|0);
      if ($193) {
       store1($3,0);
       $194 = ($174|0)==(0);
       if ($194) {
        $195 = load4($157);
        $196 = load4($2);
        $197 = load4($158);
        $198 = (FUNCTION_TABLE_iiiii[$195 & 3]($196,$3,1,$197)|0);
        store4($$pre$phiZ2D,$198);
        $468 = $198;
       } else {
        $468 = $174;
       }
       $464 = $468;
       break L65;
      }
      $199 = ((($192)) + 4|0);
      $200 = load1($199);
      $201 = ($200<<24>>24)==(4);
      if ($201) {
       $202 = ((($192)) + 7|0);
       $203 = load1($202);
       $204 = $203&255;
       $208 = $204;
      } else {
       $205 = ((($192)) + 12|0);
       $206 = load4($205);
       $208 = $206;
      }
      $207 = (($208) + 1)|0;
      store4($4,$207);
      $209 = ((($192)) + 16|0);
      $210 = ($207>>>0)<(255);
      if ($210) {
       $211 = $207&255;
       store1($3,$211);
       $212 = ($174|0)==(0);
       if ($212) {
        $213 = load4($157);
        $214 = load4($2);
        $215 = load4($158);
        $216 = (FUNCTION_TABLE_iiiii[$213 & 3]($214,$3,1,$215)|0);
        store4($$pre$phiZ2D,$216);
        $469 = $216;
       } else {
        $469 = $174;
       }
       $228 = $207;$229 = $469;
      } else {
       store1($3,-1);
       $217 = ($174|0)==(0);
       if ($217) {
        $218 = load4($157);
        $219 = load4($2);
        $220 = load4($158);
        $221 = (FUNCTION_TABLE_iiiii[$218 & 3]($219,$3,1,$220)|0);
        store4($$pre$phiZ2D,$221);
        $222 = ($221|0)==(0);
        if ($222) {
         $223 = load4($157);
         $224 = load4($2);
         $225 = load4($158);
         $226 = (FUNCTION_TABLE_iiiii[$223 & 3]($224,$4,4,$225)|0);
         store4($$pre$phiZ2D,$226);
         $470 = $226;
        } else {
         $470 = $221;
        }
       } else {
        $470 = $174;
       }
       $$pre$i$i44 = load4($4);
       $228 = $$pre$i$i44;$229 = $470;
      }
      $227 = (($228) + -1)|0;
      $230 = ($229|0)==(0);
      $231 = ($227|0)!=(0);
      $or$cond$i$i45 = $230 & $231;
      if ($or$cond$i$i45) {
       $232 = load4($157);
       $233 = load4($2);
       $234 = load4($158);
       $235 = (FUNCTION_TABLE_iiiii[$232 & 3]($233,$209,$227,$234)|0);
       store4($$pre$phiZ2D,$235);
       $471 = $235;
      } else {
       $471 = $229;
      }
      $464 = $471;
      break;
     }
     case 1:  {
      $172 = load4($160);
      $173 = $172&255;
      store1($3,$173);
      $175 = ($174|0)==(0);
      if ($175) {
       $176 = load4($157);
       $177 = load4($2);
       $178 = load4($158);
       $179 = (FUNCTION_TABLE_iiiii[$176 & 3]($177,$3,1,$178)|0);
       store4($$pre$phiZ2D,$179);
       $465 = $179;
      } else {
       $465 = $174;
      }
      $464 = $465;
      break;
     }
     case 3:  {
      $180 = loadd($160);
      stored($3,$180);
      $181 = ($174|0)==(0);
      if ($181) {
       $182 = load4($157);
       $183 = load4($2);
       $184 = load4($158);
       $185 = (FUNCTION_TABLE_iiiii[$182 & 3]($183,$3,8,$184)|0);
       store4($$pre$phiZ2D,$185);
       $466 = $185;
      } else {
       $466 = $174;
      }
      $464 = $466;
      break;
     }
     case 19:  {
      $186 = load8($160);
      store8($3,$186);
      $187 = ($174|0)==(0);
      if ($187) {
       $188 = load4($157);
       $189 = load4($2);
       $190 = load4($158);
       $191 = (FUNCTION_TABLE_iiiii[$188 & 3]($189,$3,8,$190)|0);
       store4($$pre$phiZ2D,$191);
       $467 = $191;
      } else {
       $467 = $174;
      }
      $464 = $467;
      break;
     }
     default: {
      $464 = $174;
     }
     }
    } while(0);
    $236 = (($$028$i) + 1)|0;
    $exitcond$i47 = ($236|0)==($154|0);
    if ($exitcond$i47) {
     $239 = $464;
     break L58;
    } else {
     $$028$i = $236;$165 = $464;
    }
   }
  } else {
   $239 = $463;
  }
 } while(0);
 $237 = ((($0)) + 12|0);
 $238 = load4($237);
 store4($3,$238);
 $240 = ($239|0)==(0);
 if ($240) {
  $241 = ((($2)) + 4|0);
  $242 = load4($241);
  $243 = load4($2);
  $244 = ((($2)) + 8|0);
  $245 = load4($244);
  $246 = (FUNCTION_TABLE_iiiii[$242 & 3]($243,$3,4,$245)|0);
  store4($$pre$phiZ2D,$246);
  $472 = $246;
 } else {
  $472 = $239;
 }
 $247 = ($238|0)>(0);
 if ($247) {
  $248 = ((($0)) + 64|0);
  $249 = ((($2)) + 4|0);
  $250 = ((($2)) + 8|0);
  $$015$i = 0;$254 = $472;
  while(1) {
   $251 = load4($248);
   $252 = (((($251) + ($$015$i<<3)|0)) + 4|0);
   $253 = load1($252);
   store1($3,$253);
   $255 = ($254|0)==(0);
   if ($255) {
    $256 = load4($249);
    $257 = load4($2);
    $258 = load4($250);
    $259 = (FUNCTION_TABLE_iiiii[$256 & 3]($257,$3,1,$258)|0);
    store4($$pre$phiZ2D,$259);
    $$pre$i51 = load4($248);
    $261 = $$pre$i51;$263 = $259;
   } else {
    $261 = $251;$263 = $254;
   }
   $260 = (((($261) + ($$015$i<<3)|0)) + 5|0);
   $262 = load1($260);
   store1($3,$262);
   $264 = ($263|0)==(0);
   if ($264) {
    $265 = load4($249);
    $266 = load4($2);
    $267 = load4($250);
    $268 = (FUNCTION_TABLE_iiiii[$265 & 3]($266,$3,1,$267)|0);
    store4($$pre$phiZ2D,$268);
    $473 = $268;
   } else {
    $473 = $263;
   }
   $269 = (($$015$i) + 1)|0;
   $exitcond$i53 = ($269|0)==($238|0);
   if ($exitcond$i53) {
    $272 = $473;
    break;
   } else {
    $$015$i = $269;$254 = $473;
   }
  }
 } else {
  $272 = $472;
 }
 $270 = ((($0)) + 28|0);
 $271 = load4($270);
 store4($3,$271);
 $273 = ($272|0)==(0);
 if ($273) {
  $274 = ((($2)) + 4|0);
  $275 = load4($274);
  $276 = load4($2);
  $277 = ((($2)) + 8|0);
  $278 = load4($277);
  $279 = (FUNCTION_TABLE_iiiii[$275 & 3]($276,$3,4,$278)|0);
  store4($$pre$phiZ2D,$279);
 }
 $280 = ($271|0)>(0);
 if ($280) {
  $281 = ((($0)) + 52|0);
  $282 = ((($0)) + 72|0);
  $$0$i68 = 0;
  while(1) {
   $283 = load4($281);
   $284 = (($283) + ($$0$i68<<2)|0);
   $285 = load4($284);
   $286 = load4($282);
   _DumpFunction($285,$286,$2);
   $287 = (($$0$i68) + 1)|0;
   $exitcond = ($287|0)==($271|0);
   if ($exitcond) {
    break;
   } else {
    $$0$i68 = $287;
   }
  }
 }
 $288 = load4($5);
 $289 = ($288|0)==(0);
 if ($289) {
  $290 = ((($0)) + 24|0);
  $291 = load4($290);
  $292 = $291;
 } else {
  $292 = 0;
 }
 store4($3,$292);
 $293 = load4($$pre$phiZ2D);
 $294 = ($293|0)==(0);
 if ($294) {
  $295 = ((($2)) + 4|0);
  $296 = load4($295);
  $297 = load4($2);
  $298 = ((($2)) + 8|0);
  $299 = load4($298);
  $300 = (FUNCTION_TABLE_iiiii[$296 & 3]($297,$3,4,$299)|0);
  store4($$pre$phiZ2D,$300);
  $301 = $292 << 2;
  $302 = ($300|0)==(0);
  $303 = ($301|0)!=(0);
  $or$cond$i$i = $303 & $302;
  if ($or$cond$i$i) {
   $304 = ((($0)) + 56|0);
   $305 = load4($304);
   $306 = load4($295);
   $307 = load4($2);
   $308 = load4($298);
   $309 = (FUNCTION_TABLE_iiiii[$306 & 3]($307,$305,$301,$308)|0);
   store4($$pre$phiZ2D,$309);
   $315 = $309;
  } else {
   $315 = $300;
  }
 } else {
  $315 = $293;
 }
 $310 = load4($5);
 $311 = ($310|0)==(0);
 if ($311) {
  $312 = ((($0)) + 32|0);
  $313 = load4($312);
  $314 = $313;
 } else {
  $314 = 0;
 }
 store4($3,$314);
 $316 = ($315|0)==(0);
 if ($316) {
  $317 = ((($2)) + 4|0);
  $318 = load4($317);
  $319 = load4($2);
  $320 = ((($2)) + 8|0);
  $321 = load4($320);
  $322 = (FUNCTION_TABLE_iiiii[$318 & 3]($319,$3,4,$321)|0);
  store4($$pre$phiZ2D,$322);
  $474 = $322;
 } else {
  $474 = $315;
 }
 $323 = ($314|0)>(0);
 if ($323) {
  $324 = ((($0)) + 60|0);
  $325 = ((($2)) + 4|0);
  $326 = ((($2)) + 8|0);
  $$053$i = 0;$331 = $474;
  while(1) {
   $327 = load4($324);
   $328 = (($327) + (($$053$i*12)|0)|0);
   $329 = load4($328);
   $330 = ($329|0)==(0|0);
   if ($330) {
    store1($3,0);
    $332 = ($331|0)==(0);
    if ($332) {
     $333 = load4($325);
     $334 = load4($2);
     $335 = load4($326);
     $336 = (FUNCTION_TABLE_iiiii[$333 & 3]($334,$3,1,$335)|0);
     store4($$pre$phiZ2D,$336);
     $475 = $336;
    } else {
     $475 = $331;
    }
    $377 = $475;
   } else {
    $337 = ((($329)) + 4|0);
    $338 = load1($337);
    $339 = ($338<<24>>24)==(4);
    if ($339) {
     $340 = ((($329)) + 7|0);
     $341 = load1($340);
     $342 = $341&255;
     $346 = $342;
    } else {
     $343 = ((($329)) + 12|0);
     $344 = load4($343);
     $346 = $344;
    }
    $345 = (($346) + 1)|0;
    store4($4,$345);
    $347 = ((($329)) + 16|0);
    $348 = ($345>>>0)<(255);
    if ($348) {
     $349 = $345&255;
     store1($3,$349);
     $350 = ($331|0)==(0);
     if ($350) {
      $351 = load4($325);
      $352 = load4($2);
      $353 = load4($326);
      $354 = (FUNCTION_TABLE_iiiii[$351 & 3]($352,$3,1,$353)|0);
      store4($$pre$phiZ2D,$354);
      $476 = $354;
     } else {
      $476 = $331;
     }
     $366 = $345;$367 = $476;
    } else {
     store1($3,-1);
     $355 = ($331|0)==(0);
     do {
      if ($355) {
       $356 = load4($325);
       $357 = load4($2);
       $358 = load4($326);
       $359 = (FUNCTION_TABLE_iiiii[$356 & 3]($357,$3,1,$358)|0);
       store4($$pre$phiZ2D,$359);
       $360 = ($359|0)==(0);
       if (!($360)) {
        $477 = $359;
        break;
       }
       $361 = load4($325);
       $362 = load4($2);
       $363 = load4($326);
       $364 = (FUNCTION_TABLE_iiiii[$361 & 3]($362,$4,4,$363)|0);
       store4($$pre$phiZ2D,$364);
       $477 = $364;
      } else {
       $477 = $331;
      }
     } while(0);
     $$pre$i$i = load4($4);
     $366 = $$pre$i$i;$367 = $477;
    }
    $365 = (($366) + -1)|0;
    $368 = ($367|0)==(0);
    $369 = ($365|0)!=(0);
    $or$cond$i36$i = $368 & $369;
    if ($or$cond$i36$i) {
     $370 = load4($325);
     $371 = load4($2);
     $372 = load4($326);
     $373 = (FUNCTION_TABLE_iiiii[$370 & 3]($371,$347,$365,$372)|0);
     store4($$pre$phiZ2D,$373);
     $478 = $373;
    } else {
     $478 = $367;
    }
    $377 = $478;
   }
   $374 = load4($324);
   $375 = (((($374) + (($$053$i*12)|0)|0)) + 4|0);
   $376 = load4($375);
   store4($3,$376);
   $378 = ($377|0)==(0);
   if ($378) {
    $379 = load4($325);
    $380 = load4($2);
    $381 = load4($326);
    $382 = (FUNCTION_TABLE_iiiii[$379 & 3]($380,$3,4,$381)|0);
    store4($$pre$phiZ2D,$382);
    $$pre$i = load4($324);
    $384 = $$pre$i;$386 = $382;
   } else {
    $384 = $374;$386 = $377;
   }
   $383 = (((($384) + (($$053$i*12)|0)|0)) + 8|0);
   $385 = load4($383);
   store4($3,$385);
   $387 = ($386|0)==(0);
   if ($387) {
    $388 = load4($325);
    $389 = load4($2);
    $390 = load4($326);
    $391 = (FUNCTION_TABLE_iiiii[$388 & 3]($389,$3,4,$390)|0);
    store4($$pre$phiZ2D,$391);
    $479 = $391;
   } else {
    $479 = $386;
   }
   $392 = (($$053$i) + 1)|0;
   $exitcond56$i = ($392|0)==($314|0);
   if ($exitcond56$i) {
    $397 = $479;
    break;
   } else {
    $$053$i = $392;$331 = $479;
   }
  }
 } else {
  $397 = $474;
 }
 $393 = load4($5);
 $394 = ($393|0)==(0);
 if ($394) {
  $395 = load4($237);
  $396 = $395;
 } else {
  $396 = 0;
 }
 store4($3,$396);
 $398 = ($397|0)==(0);
 if ($398) {
  $399 = ((($2)) + 4|0);
  $400 = load4($399);
  $401 = load4($2);
  $402 = ((($2)) + 8|0);
  $403 = load4($402);
  $404 = (FUNCTION_TABLE_iiiii[$400 & 3]($401,$3,4,$403)|0);
  store4($$pre$phiZ2D,$404);
  $480 = $404;
 } else {
  $480 = $397;
 }
 $405 = ($396|0)>(0);
 if (!($405)) {
  STACKTOP = sp;return;
 }
 $406 = ((($0)) + 64|0);
 $407 = ((($2)) + 4|0);
 $408 = ((($2)) + 8|0);
 $$152$i = 0;$413 = $480;
 while(1) {
  $409 = load4($406);
  $410 = (($409) + ($$152$i<<3)|0);
  $411 = load4($410);
  $412 = ($411|0)==(0|0);
  if ($412) {
   store1($3,0);
   $414 = ($413|0)==(0);
   if ($414) {
    $415 = load4($407);
    $416 = load4($2);
    $417 = load4($408);
    $418 = (FUNCTION_TABLE_iiiii[$415 & 3]($416,$3,1,$417)|0);
    store4($$pre$phiZ2D,$418);
    $481 = $418;
   } else {
    $481 = $413;
   }
   $482 = $481;
  } else {
   $419 = ((($411)) + 4|0);
   $420 = load1($419);
   $421 = ($420<<24>>24)==(4);
   if ($421) {
    $422 = ((($411)) + 7|0);
    $423 = load1($422);
    $424 = $423&255;
    $428 = $424;
   } else {
    $425 = ((($411)) + 12|0);
    $426 = load4($425);
    $428 = $426;
   }
   $427 = (($428) + 1)|0;
   store4($4,$427);
   $429 = ((($411)) + 16|0);
   $430 = ($427>>>0)<(255);
   if ($430) {
    $431 = $427&255;
    store1($3,$431);
    $432 = ($413|0)==(0);
    if ($432) {
     $433 = load4($407);
     $434 = load4($2);
     $435 = load4($408);
     $436 = (FUNCTION_TABLE_iiiii[$433 & 3]($434,$3,1,$435)|0);
     store4($$pre$phiZ2D,$436);
     $483 = $436;
    } else {
     $483 = $413;
    }
    $448 = $427;$449 = $483;
   } else {
    store1($3,-1);
    $437 = ($413|0)==(0);
    do {
     if ($437) {
      $438 = load4($407);
      $439 = load4($2);
      $440 = load4($408);
      $441 = (FUNCTION_TABLE_iiiii[$438 & 3]($439,$3,1,$440)|0);
      store4($$pre$phiZ2D,$441);
      $442 = ($441|0)==(0);
      if (!($442)) {
       $484 = $441;
       break;
      }
      $443 = load4($407);
      $444 = load4($2);
      $445 = load4($408);
      $446 = (FUNCTION_TABLE_iiiii[$443 & 3]($444,$4,4,$445)|0);
      store4($$pre$phiZ2D,$446);
      $484 = $446;
     } else {
      $484 = $413;
     }
    } while(0);
    $$pre$i41$i = load4($4);
    $448 = $$pre$i41$i;$449 = $484;
   }
   $447 = (($448) + -1)|0;
   $450 = ($449|0)==(0);
   $451 = ($447|0)!=(0);
   $or$cond$i43$i = $450 & $451;
   if ($or$cond$i43$i) {
    $452 = load4($407);
    $453 = load4($2);
    $454 = load4($408);
    $455 = (FUNCTION_TABLE_iiiii[$452 & 3]($453,$429,$447,$454)|0);
    store4($$pre$phiZ2D,$455);
    $485 = $455;
   } else {
    $485 = $449;
   }
   $482 = $485;
  }
  $456 = (($$152$i) + 1)|0;
  $exitcond$i = ($456|0)==($396|0);
  if ($exitcond$i) {
   break;
  } else {
   $$152$i = $456;$413 = $482;
  }
 }
 STACKTOP = sp;return;
}
function _luaF_newCclosure($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1 << 4;
 $3 = (($2) + 16)|0;
 $4 = (_luaC_newobj($0,38,$3)|0);
 $5 = $1&255;
 $6 = ((($4)) + 6|0);
 store1($6,$5);
 return ($4|0);
}
function _luaF_newLclosure($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1 << 2;
 $3 = (($2) + 16)|0;
 $4 = (_luaC_newobj($0,6,$3)|0);
 $5 = ((($4)) + 12|0);
 store4($5,0);
 $6 = $1&255;
 $7 = ((($4)) + 6|0);
 store1($7,$6);
 $8 = ($1|0)==(0);
 if ($8) {
  return ($4|0);
 }
 $9 = ((($4)) + 16|0);
 _memset(($9|0),0,($2|0))|0;
 return ($4|0);
}
function _luaF_initupvals($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$013 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 6|0);
 $3 = load1($2);
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  return;
 }
 $$013 = 0;
 while(1) {
  $5 = (_luaM_realloc_($0,0,0,24)|0);
  $6 = ((($5)) + 4|0);
  store4($6,1);
  $7 = ((($5)) + 8|0);
  store4($5,$7);
  $8 = ((($5)) + 16|0);
  store4($8,0);
  $9 = (((($1)) + 16|0) + ($$013<<2)|0);
  store4($9,$5);
  $10 = (($$013) + 1)|0;
  $11 = load1($2);
  $12 = $11&255;
  $13 = ($10>>>0)<($12>>>0);
  if ($13) {
   $$013 = $10;
  } else {
   break;
  }
 }
 return;
}
function _luaF_findupval($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$029$lcssa = 0, $$02932 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 36|0);
 $3 = load4($2);
 $4 = ($3|0)==(0|0);
 L1: do {
  if ($4) {
   $$029$lcssa = $2;
  } else {
   $$02932 = $2;$6 = $3;
   while(1) {
    $5 = load4($6);
    $7 = ($5>>>0)<($1>>>0);
    if ($7) {
     $$029$lcssa = $$02932;
     break L1;
    }
    $8 = ($5|0)==($1|0);
    if ($8) {
     $$0 = $6;
     label = 9;
     break;
    }
    $9 = ((($6)) + 8|0);
    $10 = load4($9);
    $11 = ($10|0)==(0|0);
    if ($11) {
     label = 6;
     break;
    } else {
     $$02932 = $9;$6 = $10;
    }
   }
   if ((label|0) == 6) {
    $$029$lcssa = $9;
    break;
   }
   else if ((label|0) == 9) {
    return ($$0|0);
   }
  }
 } while(0);
 $12 = (_luaM_realloc_($0,0,0,24)|0);
 $13 = ((($12)) + 4|0);
 store4($13,0);
 $14 = load4($$029$lcssa);
 $15 = ((($12)) + 8|0);
 store4($15,$14);
 $16 = ((($12)) + 12|0);
 store4($16,1);
 store4($$029$lcssa,$12);
 store4($12,$1);
 $17 = ((($0)) + 44|0);
 $18 = load4($17);
 $19 = ($18|0)==($0|0);
 if (!($19)) {
  $$0 = $12;
  return ($$0|0);
 }
 $20 = ((($0)) + 16|0);
 $21 = load4($20);
 $22 = ((($21)) + 104|0);
 $23 = load4($22);
 store4($17,$23);
 store4($22,$0);
 $$0 = $12;
 return ($$0|0);
}
function _luaF_close($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 36|0);
 $3 = load4($2);
 $4 = ($3|0)==(0|0);
 if ($4) {
  return;
 }
 $6 = $3;
 while(1) {
  $5 = load4($6);
  $7 = ($5>>>0)<($1>>>0);
  if ($7) {
   label = 9;
   break;
  }
  $8 = ((($6)) + 8|0);
  $9 = load4($8);
  store4($2,$9);
  $10 = ((($6)) + 4|0);
  $11 = load4($10);
  $12 = ($11|0)==(0);
  if ($12) {
   (_luaM_realloc_($0,$6,24,0)|0);
  } else {
   ; store8($8,load8($5,8),8); store8($8+8 | 0,load8($5+8 | 0,8),8);
   store4($6,$8);
   $13 = ((($6)) + 16|0);
   $14 = load4($13);
   $15 = $14 & 64;
   $16 = ($15|0)==(0);
   if (!($16)) {
    _luaC_upvalbarrier_($0,$6);
   }
  }
  $17 = load4($2);
  $18 = ($17|0)==(0|0);
  if ($18) {
   label = 9;
   break;
  } else {
   $6 = $17;
  }
 }
 if ((label|0) == 9) {
  return;
 }
}
function _luaF_newproto($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_luaC_newobj($0,9,80)|0);
 $2 = ((($1)) + 44|0);
 $3 = ((($1)) + 68|0);
 store4($3,0);
 $4 = ((($1)) + 64|0);
 store4($4,0);
 $5 = ((($1)) + 12|0);
 $6 = ((($1)) + 6|0);
 ; store8($5,i64_const(0,0),4); store8($5+8|0,i64_const(0,0),4); store4($5+16|0,0,4);
 ; store8($2,i64_const(0,0),4); store8($2+8|0,i64_const(0,0),4);
 store1($6,0);
 $7 = ((($1)) + 7|0);
 store1($7,0);
 $8 = ((($1)) + 8|0);
 store1($8,0);
 $9 = ((($1)) + 60|0);
 store4($9,0);
 $10 = ((($1)) + 32|0);
 store4($10,0);
 $11 = ((($1)) + 36|0);
 store4($11,0);
 $12 = ((($1)) + 40|0);
 store4($12,0);
 $13 = ((($1)) + 72|0);
 store4($13,0);
 return ($1|0);
}
function _luaF_freeproto($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 48|0);
 $3 = load4($2);
 $4 = ((($1)) + 20|0);
 $5 = load4($4);
 $6 = $5 << 2;
 (_luaM_realloc_($0,$3,$6,0)|0);
 $7 = ((($1)) + 52|0);
 $8 = load4($7);
 $9 = ((($1)) + 28|0);
 $10 = load4($9);
 $11 = $10 << 2;
 (_luaM_realloc_($0,$8,$11,0)|0);
 $12 = ((($1)) + 44|0);
 $13 = load4($12);
 $14 = ((($1)) + 16|0);
 $15 = load4($14);
 $16 = $15 << 4;
 (_luaM_realloc_($0,$13,$16,0)|0);
 $17 = ((($1)) + 56|0);
 $18 = load4($17);
 $19 = ((($1)) + 24|0);
 $20 = load4($19);
 $21 = $20 << 2;
 (_luaM_realloc_($0,$18,$21,0)|0);
 $22 = ((($1)) + 60|0);
 $23 = load4($22);
 $24 = ((($1)) + 32|0);
 $25 = load4($24);
 $26 = ($25*12)|0;
 (_luaM_realloc_($0,$23,$26,0)|0);
 $27 = ((($1)) + 64|0);
 $28 = load4($27);
 $29 = ((($1)) + 12|0);
 $30 = load4($29);
 $31 = $30 << 3;
 (_luaM_realloc_($0,$28,$31,0)|0);
 (_luaM_realloc_($0,$1,80,0)|0);
 return;
}
function _luaF_getlocalname($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$014 = 0, $$01517 = 0, $$018 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 32|0);
 $4 = load4($3);
 $5 = ($4|0)>(0);
 if (!($5)) {
  $$014 = 0;
  return ($$014|0);
 }
 $6 = ((($0)) + 60|0);
 $7 = load4($6);
 $$01517 = $1;$$018 = 0;
 while(1) {
  $8 = (((($7) + (($$018*12)|0)|0)) + 4|0);
  $9 = load4($8);
  $10 = ($9|0)>($2|0);
  if ($10) {
   $$014 = 0;
   label = 8;
   break;
  }
  $11 = (((($7) + (($$018*12)|0)|0)) + 8|0);
  $12 = load4($11);
  $13 = ($12|0)>($2|0);
  if ($13) {
   $14 = (($$01517) + -1)|0;
   $15 = ($14|0)==(0);
   if ($15) {
    label = 6;
    break;
   } else {
    $$1 = $14;
   }
  } else {
   $$1 = $$01517;
  }
  $19 = (($$018) + 1)|0;
  $20 = ($19|0)<($4|0);
  if ($20) {
   $$01517 = $$1;$$018 = $19;
  } else {
   $$014 = 0;
   label = 8;
   break;
  }
 }
 if ((label|0) == 6) {
  $16 = (($7) + (($$018*12)|0)|0);
  $17 = load4($16);
  $18 = ((($17)) + 16|0);
  $$014 = $18;
  return ($$014|0);
 }
 else if ((label|0) == 8) {
  return ($$014|0);
 }
 return (0)|0;
}
function _luaC_barrier_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 16|0);
 $4 = load4($3);
 $5 = ((($4)) + 61|0);
 $6 = load1($5);
 $7 = ($6&255)<(2);
 if ($7) {
  _reallymarkobject($4,$2);
  return;
 } else {
  $8 = ((($1)) + 5|0);
  $9 = load1($8);
  $10 = $9 & -8;
  $11 = ((($4)) + 60|0);
  $12 = load1($11);
  $13 = $12 & 3;
  $14 = $13 | $10;
  store1($8,$14);
  return;
 }
}
function _reallymarkobject($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$043 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre96 = 0, $$sroa$0$0$$sroa_idx = 0, $$sroa$0$0$copyload = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $$phi$trans$insert = ((($1)) + 5|0);
 $$pre = load1($$phi$trans$insert);
 $$043 = $1;$5 = $$pre;
 L1: while(1) {
  $3 = ((($$043)) + 5|0);
  $4 = $5 & -4;
  store1($3,$4);
  $6 = ((($$043)) + 4|0);
  $7 = load1($6);
  switch ($7<<24>>24) {
  case 4:  {
   label = 3;
   break L1;
   break;
  }
  case 20:  {
   label = 4;
   break L1;
   break;
  }
  case 6:  {
   label = 10;
   break L1;
   break;
  }
  case 38:  {
   label = 11;
   break L1;
   break;
  }
  case 5:  {
   label = 12;
   break L1;
   break;
  }
  case 8:  {
   label = 13;
   break L1;
   break;
  }
  case 9:  {
   label = 14;
   break L1;
   break;
  }
  case 7:  {
   break;
  }
  default: {
   label = 15;
   break L1;
  }
  }
  $21 = ((($$043)) + 8|0);
  $22 = load4($21);
  $23 = ($22|0)==(0|0);
  if ($23) {
   $29 = $4;
  } else {
   $24 = ((($22)) + 5|0);
   $25 = load1($24);
   $26 = $25 & 3;
   $27 = ($26<<24>>24)==(0);
   if ($27) {
    $29 = $4;
   } else {
    _reallymarkobject($0,$22);
    $$pre96 = load1($3);
    $29 = $$pre96;
   }
  }
  $28 = $29 | 4;
  store1($3,$28);
  $30 = ((($$043)) + 12|0);
  $31 = load4($30);
  $32 = (($31) + 24)|0;
  $33 = load4($2);
  $34 = (($32) + ($33))|0;
  store4($2,$34);
  $$sroa$0$0$$sroa_idx = ((($$043)) + 16|0);
  $$sroa$0$0$copyload = load4($$sroa$0$0$$sroa_idx);
  $35 = ((($$043)) + 6|0);
  $36 = load1($35);
  $37 = $36 & 64;
  $38 = ($37<<24>>24)==(0);
  if ($38) {
   label = 15;
   break;
  }
  $39 = ((($$sroa$0$0$copyload)) + 5|0);
  $40 = load1($39);
  $41 = $40 & 3;
  $42 = ($41<<24>>24)==(0);
  if ($42) {
   label = 15;
   break;
  } else {
   $$043 = $$sroa$0$0$copyload;$5 = $40;
  }
 }
 if ((label|0) == 3) {
  $8 = $4 | 4;
  store1($3,$8);
  $9 = ((($$043)) + 7|0);
  $10 = load1($9);
  $11 = $10&255;
  $12 = (($11) + 17)|0;
  $13 = load4($2);
  $14 = (($12) + ($13))|0;
  store4($2,$14);
  return;
 }
 else if ((label|0) == 4) {
  $15 = $4 | 4;
  store1($3,$15);
  $16 = ((($$043)) + 12|0);
  $17 = load4($16);
  $18 = (($17) + 17)|0;
  $19 = load4($2);
  $20 = (($18) + ($19))|0;
  store4($2,$20);
  return;
 }
 else if ((label|0) == 10) {
  $43 = ((($0)) + 76|0);
  $44 = load4($43);
  $45 = ((($$043)) + 8|0);
  store4($45,$44);
  store4($43,$$043);
  return;
 }
 else if ((label|0) == 11) {
  $46 = ((($0)) + 76|0);
  $47 = load4($46);
  $48 = ((($$043)) + 8|0);
  store4($48,$47);
  store4($46,$$043);
  return;
 }
 else if ((label|0) == 12) {
  $49 = ((($0)) + 76|0);
  $50 = load4($49);
  $51 = ((($$043)) + 28|0);
  store4($51,$50);
  store4($49,$$043);
  return;
 }
 else if ((label|0) == 13) {
  $52 = ((($0)) + 76|0);
  $53 = load4($52);
  $54 = ((($$043)) + 40|0);
  store4($54,$53);
  store4($52,$$043);
  return;
 }
 else if ((label|0) == 14) {
  $55 = ((($0)) + 76|0);
  $56 = load4($55);
  $57 = ((($$043)) + 76|0);
  store4($57,$56);
  store4($55,$$043);
  return;
 }
 else if ((label|0) == 15) {
  return;
 }
}
function _luaC_barrierback_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = load4($2);
 $4 = ((($1)) + 5|0);
 $5 = load1($4);
 $6 = $5 & -5;
 store1($4,$6);
 $7 = ((($3)) + 80|0);
 $8 = load4($7);
 $9 = ((($1)) + 28|0);
 store4($9,$8);
 store4($7,$1);
 return;
}
function _luaC_upvalbarrier_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = load4($2);
 $4 = load4($1);
 $5 = load4($4);
 $6 = ((($3)) + 61|0);
 $7 = load1($6);
 $8 = ($7&255)<(2);
 if (!($8)) {
  return;
 }
 $9 = ((($5)) + 5|0);
 $10 = load1($9);
 $11 = $10 & 3;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  return;
 }
 _reallymarkobject($3,$5);
 return;
}
function _luaC_fix($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = load4($2);
 $4 = ((($1)) + 5|0);
 $5 = load1($4);
 $6 = $5 & -4;
 store1($4,$6);
 $7 = load4($1);
 $8 = ((($3)) + 64|0);
 store4($8,$7);
 $9 = ((($3)) + 100|0);
 $10 = load4($9);
 store4($1,$10);
 store4($9,$1);
 return;
}
function _luaC_newobj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 16|0);
 $4 = load4($3);
 $5 = $1 & 15;
 $6 = (_luaM_realloc_($0,0,$5,$2)|0);
 $7 = ((($4)) + 60|0);
 $8 = load1($7);
 $9 = $8 & 3;
 $10 = ((($6)) + 5|0);
 store1($10,$9);
 $11 = $1&255;
 $12 = ((($6)) + 4|0);
 store1($12,$11);
 $13 = ((($4)) + 64|0);
 $14 = load4($13);
 store4($6,$14);
 store4($13,$6);
 return ($6|0);
}
function _luaC_upvdeccount($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 4|0);
 $3 = load4($2);
 $4 = (($3) + -1)|0;
 store4($2,$4);
 $5 = ($4|0)==(0);
 if (!($5)) {
  return;
 }
 $6 = load4($1);
 $7 = ((($1)) + 8|0);
 $8 = ($6|0)==($7|0);
 if (!($8)) {
  return;
 }
 (_luaM_realloc_($0,$1,24,0)|0);
 return;
}
function _luaC_checkfinalizer($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$off = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond31 = 0, $phitmp = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 16|0);
 $4 = load4($3);
 $5 = ((($1)) + 5|0);
 $6 = load1($5);
 $7 = $6 & 8;
 $8 = ($7<<24>>24)!=(0);
 $9 = ($2|0)==(0|0);
 $or$cond31 = $9 | $8;
 if ($or$cond31) {
  return;
 }
 $10 = ((($2)) + 6|0);
 $11 = load1($10);
 $12 = $11 & 4;
 $13 = ($12<<24>>24)==(0);
 if (!($13)) {
  return;
 }
 $14 = ((($4)) + 144|0);
 $15 = load4($14);
 $16 = (_luaT_gettm($2,2,$15)|0);
 $phitmp = ($16|0)==(0|0);
 if ($phitmp) {
  return;
 }
 $17 = ((($4)) + 61|0);
 $18 = load1($17);
 $$off = (($18) + -2)<<24>>24;
 $19 = ($$off&255)<(4);
 if ($19) {
  $20 = load1($5);
  $21 = $20 & -8;
  $22 = ((($4)) + 60|0);
  $23 = load1($22);
  $24 = $23 & 3;
  $25 = $24 | $21;
  store1($5,$25);
  $26 = ((($4)) + 68|0);
  $27 = load4($26);
  $28 = ($27|0)==($1|0);
  if ($28) {
   while(1) {
    $29 = (_sweeplist($0,$27,1)|0);
    $30 = ($29|0)==($27|0);
    if (!($30)) {
     break;
    }
   }
   store4($26,$29);
  }
 }
 $31 = ((($4)) + 64|0);
 $$0 = $31;
 while(1) {
  $32 = load4($$0);
  $33 = ($32|0)==($1|0);
  if ($33) {
   break;
  } else {
   $$0 = $32;
  }
 }
 $34 = load4($1);
 store4($$0,$34);
 $35 = ((($4)) + 72|0);
 $36 = load4($35);
 store4($1,$36);
 store4($35,$1);
 $37 = load1($5);
 $38 = $37 | 8;
 store1($5,$38);
 return;
}
function _sweeplist($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$013$i$i = 0, $$02729 = 0, $$030 = 0, $$1 = 0, $$1$ph = 0, $$lcssa$i$i = 0, $$pr = 0, $$pre$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, $phitmp23$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 16|0);
 $4 = load4($3);
 $5 = ((($4)) + 60|0);
 $6 = load1($5);
 $7 = $6&255;
 $8 = $7 ^ 3;
 $9 = $7 & 3;
 $10 = load4($1);
 $11 = ($10|0)==(0|0);
 if ($11) {
  $62 = 0;
  return ($62|0);
 }
 $$02729 = $2;$$030 = $1;$15 = $10;
 while(1) {
  $12 = (($$02729) + -1)|0;
  $13 = ($$02729|0)==(0);
  if ($13) {
   $62 = $$030;
   label = 25;
   break;
  }
  $14 = ((($15)) + 5|0);
  $16 = load1($14);
  $17 = $16&255;
  $18 = $17 ^ 3;
  $19 = $18 & $8;
  $20 = ($19|0)==(0);
  L7: do {
   if ($20) {
    $21 = load4($15);
    store4($$030,$21);
    $22 = ((($15)) + 4|0);
    $23 = load1($22);
    $24 = $21;
    switch ($23<<24>>24) {
    case 9:  {
     _luaF_freeproto($0,$15);
     $$1$ph = $$030;
     label = 23;
     break L7;
     break;
    }
    case 6:  {
     $25 = ((($15)) + 6|0);
     $26 = load1($25);
     $27 = ($26<<24>>24)==(0);
     if ($27) {
      $$lcssa$i$i = 16;
     } else {
      $$013$i$i = 0;$63 = $26;
      while(1) {
       $28 = (((($15)) + 16|0) + ($$013$i$i<<2)|0);
       $29 = load4($28);
       $30 = ($29|0)==(0|0);
       if ($30) {
        $40 = $63;
       } else {
        $31 = ((($29)) + 4|0);
        $32 = load4($31);
        $33 = (($32) + -1)|0;
        store4($31,$33);
        $34 = ($33|0)==(0);
        if ($34) {
         $35 = load4($29);
         $36 = ((($29)) + 8|0);
         $37 = ($35|0)==($36|0);
         if ($37) {
          (_luaM_realloc_($0,$29,24,0)|0);
          $$pre$i$i = load1($25);
          $40 = $$pre$i$i;
         } else {
          $40 = $63;
         }
        } else {
         $40 = $63;
        }
       }
       $38 = (($$013$i$i) + 1)|0;
       $39 = $40&255;
       $41 = ($38>>>0)<($39>>>0);
       if ($41) {
        $$013$i$i = $38;$63 = $40;
       } else {
        break;
       }
      }
      $phitmp$i = $39 << 2;
      $phitmp23$i = (($phitmp$i) + 16)|0;
      $$lcssa$i$i = $phitmp23$i;
     }
     (_luaM_realloc_($0,$15,$$lcssa$i$i,0)|0);
     $$1$ph = $$030;
     label = 23;
     break L7;
     break;
    }
    case 38:  {
     $42 = ((($15)) + 6|0);
     $43 = load1($42);
     $44 = $43&255;
     $45 = $44 << 4;
     $46 = (($45) + 16)|0;
     (_luaM_realloc_($0,$15,$46,0)|0);
     $$1$ph = $$030;
     label = 23;
     break L7;
     break;
    }
    case 5:  {
     _luaH_free($0,$15);
     $$1$ph = $$030;
     label = 23;
     break L7;
     break;
    }
    case 8:  {
     _luaE_freethread($0,$15);
     $$1$ph = $$030;
     label = 23;
     break L7;
     break;
    }
    case 7:  {
     $47 = ((($15)) + 12|0);
     $48 = load4($47);
     $49 = (($48) + 24)|0;
     (_luaM_realloc_($0,$15,$49,0)|0);
     $$1$ph = $$030;
     label = 23;
     break L7;
     break;
    }
    case 4:  {
     _luaS_remove($0,$15);
     $50 = ((($15)) + 7|0);
     $51 = load1($50);
     $52 = $51&255;
     $53 = (($52) + 17)|0;
     (_luaM_realloc_($0,$15,$53,0)|0);
     $$1$ph = $$030;
     label = 23;
     break L7;
     break;
    }
    case 20:  {
     $54 = ((($15)) + 12|0);
     $55 = load4($54);
     $56 = (($55) + 17)|0;
     (_luaM_realloc_($0,$15,$56,0)|0);
     $$1$ph = $$030;
     label = 23;
     break L7;
     break;
    }
    default: {
     $$1 = $$030;$60 = $24;
     break L7;
    }
    }
   } else {
    $57 = $17 & 248;
    $58 = $57 | $9;
    $59 = $58&255;
    store1($14,$59);
    $$1$ph = $15;
    label = 23;
   }
  } while(0);
  if ((label|0) == 23) {
   label = 0;
   $$pr = load4($$1$ph);
   $$1 = $$1$ph;$60 = $$pr;
  }
  $61 = ($60|0)==(0|0);
  if ($61) {
   $62 = 0;
   label = 25;
   break;
  } else {
   $$02729 = $12;$$030 = $$1;$15 = $60;
  }
 }
 if ((label|0) == 25) {
  return ($62|0);
 }
 return (0)|0;
}
function _luaC_freeallobjects($0) {
 $0 = $0|0;
 var $$0$i$i = 0, $$020$us$i = 0, $$020$us$i$phi = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre13 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = load4($1);
 $3 = ((($2)) + 96|0);
 $$0$i$i = $3;
 while(1) {
  $4 = load4($$0$i$i);
  $5 = ($4|0)==(0|0);
  if ($5) {
   break;
  } else {
   $$0$i$i = $4;
  }
 }
 $6 = ((($2)) + 72|0);
 $7 = load4($6);
 $8 = ($7|0)==(0|0);
 if ($8) {
  $$pre$phiZ2D = $3;
 } else {
  $$020$us$i = $$0$i$i;$10 = $7;
  while(1) {
   $9 = load4($10);
   store4($6,$9);
   $11 = load4($$020$us$i);
   store4($10,$11);
   store4($$020$us$i,$10);
   $12 = load4($6);
   $13 = ($12|0)==(0|0);
   if ($13) {
    break;
   } else {
    $$020$us$i$phi = $10;$10 = $12;$$020$us$i = $$020$us$i$phi;
   }
  }
  $$pre = load4($1);
  $$pre13 = ((($$pre)) + 96|0);
  $$pre$phiZ2D = $$pre13;
 }
 $14 = load4($$pre$phiZ2D);
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  while(1) {
   _GCTM($0,0);
   $16 = load4($$pre$phiZ2D);
   $17 = ($16|0)==(0|0);
   if ($17) {
    break;
   }
  }
 }
 $18 = ((($2)) + 60|0);
 store1($18,3);
 $19 = ((($2)) + 62|0);
 store1($19,0);
 (_sweeplist($0,$6,-1)|0);
 $20 = ((($2)) + 64|0);
 (_sweeplist($0,$20,-1)|0);
 $21 = ((($2)) + 100|0);
 (_sweeplist($0,$21,-1)|0);
 return;
}
function _GCTM($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$off$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp + 16|0;
 $2 = sp;
 $3 = ((($0)) + 16|0);
 $4 = load4($3);
 $5 = ((($4)) + 96|0);
 $6 = load4($5);
 $7 = load4($6);
 store4($5,$7);
 $8 = ((($4)) + 64|0);
 $9 = load4($8);
 store4($6,$9);
 store4($8,$6);
 $10 = ((($6)) + 5|0);
 $11 = load1($10);
 $12 = $11 & -9;
 store1($10,$12);
 $13 = ((($4)) + 61|0);
 $14 = load1($13);
 $$off$i = (($14) + -2)<<24>>24;
 $15 = ($$off$i&255)<(4);
 if ($15) {
  $16 = $11 & -16;
  $17 = ((($4)) + 60|0);
  $18 = load1($17);
  $19 = $18 & 3;
  $20 = $19 | $16;
  store1($10,$20);
 }
 store4($2,$6);
 $21 = ((($6)) + 4|0);
 $22 = load1($21);
 $23 = $22 | 64;
 $24 = $23&255;
 $25 = ((($2)) + 8|0);
 store4($25,$24);
 $26 = (_luaT_gettmbyobj($0,$2,2)|0);
 $27 = ($26|0)==(0|0);
 if ($27) {
  STACKTOP = sp;return;
 }
 $28 = ((($26)) + 8|0);
 $29 = load4($28);
 $30 = $29 & 15;
 $31 = ($30|0)==(6);
 if (!($31)) {
  STACKTOP = sp;return;
 }
 $32 = ((($0)) + 116|0);
 $33 = load1($32);
 $34 = ((($4)) + 63|0);
 $35 = load1($34);
 store1($32,0);
 store1($34,0);
 $36 = ((($0)) + 12|0);
 $37 = load4($36);
 ; store8($37,load8($26,8),8); store8($37+8 | 0,load8($26+8 | 0,8),8);
 $38 = load4($36);
 $39 = ((($38)) + 16|0);
 ; store8($39,load8($2,8),8); store8($39+8 | 0,load8($2+8 | 0,8),8);
 $40 = load4($36);
 $41 = ((($40)) + 32|0);
 store4($36,$41);
 $42 = ((($0)) + 20|0);
 $43 = load4($42);
 $44 = ((($43)) + 34|0);
 $45 = load2($44);
 $46 = $45 | 256;
 store2($44,$46);
 $47 = ((($0)) + 32|0);
 $48 = load4($47);
 $49 = $40;
 $50 = (($49) - ($48))|0;
 $51 = (_luaD_pcall($0,6,0,$50,0)|0);
 $52 = load4($42);
 $53 = ((($52)) + 34|0);
 $54 = load2($53);
 $55 = $54 & -257;
 store2($53,$55);
 store1($32,$33);
 store1($34,$35);
 $56 = ($51|0)!=(0);
 $57 = ($1|0)!=(0);
 $or$cond = $57 & $56;
 if (!($or$cond)) {
  STACKTOP = sp;return;
 }
 $58 = ($51|0)==(2);
 if (!($58)) {
  $$0 = $51;
  _luaD_throw($0,$$0);
  // unreachable;
 }
 $59 = load4($36);
 $60 = ((($59)) + -8|0);
 $61 = load4($60);
 $62 = $61 & 15;
 $63 = ($62|0)==(4);
 if ($63) {
  $64 = ((($59)) + -16|0);
  $65 = load4($64);
  $66 = ((($65)) + 16|0);
  $67 = $66;
 } else {
  $67 = 8177;
 }
 store4($vararg_buffer,$67);
 (_luaO_pushfstring($0,8188,$vararg_buffer)|0);
 $$0 = 5;
 _luaD_throw($0,$$0);
 // unreachable;
}
function _dothecall($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = load4($2);
 $4 = ((($3)) + -32|0);
 _luaD_callnoyield($0,$4,0);
 return;
}
function _singlestep($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i44 = 0, $$0$i67$i = 0, $$01214$i$i = 0, $$01214$i74$i = 0, $$013$i = 0, $$014$i = 0, $$01719$i$i = 0, $$020$i$i = 0, $$0211$i$i = 0, $$0211$i85$i = 0, $$02326$i$i = 0, $$024$i$i = 0, $$025$i$i = 0, $$03$i$i = 0, $$03$i83$i = 0, $$07$i$i = 0, $$07$i$i45 = 0;
 var $$08$i$i = 0, $$08$i$i46 = 0, $$1$i$i = 0, $$1$i62$i = 0, $$1$i64$i = 0, $$1$i76$i = 0, $$118$i$i = 0, $$in1315$i$i = 0, $$in1315$i73$i = 0, $$pr$i = 0, $$pr$pre$i$i = 0, $$pr$pre$i88$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i51 = 0, $$pre$i86$i = 0, $$pre$phiZ2D = 0, $$pre64 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = load4($1);
 $3 = ((($2)) + 61|0);
 $4 = load1($3);
 switch ($4<<24>>24) {
 case 7:  {
  $5 = ((($2)) + 32|0);
  $6 = load4($5);
  $7 = $6 << 2;
  $8 = ((($2)) + 16|0);
  store4($8,$7);
  $9 = ((($2)) + 76|0);
  $10 = ((($2)) + 124|0);
  ; store8($9,i64_const(0,0),4); store8($9+8|0,i64_const(0,0),4); store4($9+16|0,0,4);
  $11 = load4($10);
  $12 = ((($11)) + 5|0);
  $13 = load1($12);
  $14 = $13 & 3;
  $15 = ($14<<24>>24)==(0);
  if (!($15)) {
   _reallymarkobject($2,$11);
  }
  $16 = ((($2)) + 48|0);
  $17 = load4($16);
  $18 = $17 & 64;
  $19 = ($18|0)==(0);
  if (!($19)) {
   $20 = ((($2)) + 40|0);
   $21 = load4($20);
   $22 = ((($21)) + 5|0);
   $23 = load1($22);
   $24 = $23 & 3;
   $25 = ($24<<24>>24)==(0);
   if (!($25)) {
    _reallymarkobject($2,$21);
   }
  }
  _markmt($2);
  $26 = ((($2)) + 96|0);
  $$07$i$i = load4($26);
  $27 = ($$07$i$i|0)==(0|0);
  if (!($27)) {
   $$08$i$i = $$07$i$i;
   while(1) {
    $28 = ((($$08$i$i)) + 5|0);
    $29 = load1($28);
    $30 = $29 & 3;
    $31 = ($30<<24>>24)==(0);
    if (!($31)) {
     _reallymarkobject($2,$$08$i$i);
    }
    $$0$i$i = load4($$08$i$i);
    $32 = ($$0$i$i|0)==(0|0);
    if ($32) {
     break;
    } else {
     $$08$i$i = $$0$i$i;
    }
   }
  }
  store1($3,0);
  $33 = load4($8);
  $$0 = $33;
  return ($$0|0);
  break;
 }
 case 0:  {
  $34 = ((($2)) + 16|0);
  store4($34,0);
  _propagatemark($2);
  $35 = ((($2)) + 76|0);
  $36 = load4($35);
  $37 = ($36|0)==(0|0);
  if ($37) {
   store1($3,1);
  }
  $38 = load4($34);
  $$0 = $38;
  return ($$0|0);
  break;
 }
 case 1:  {
  $39 = ((($2)) + 76|0);
  $40 = load4($39);
  $41 = ($40|0)==(0|0);
  if ($41) {
   $$pre$phiZ2D = $3;$45 = $2;
  } else {
   while(1) {
    _propagatemark($2);
    $42 = load4($39);
    $43 = ($42|0)==(0|0);
    if ($43) {
     break;
    }
   }
   $$pre = load4($1);
   $$pre64 = ((($$pre)) + 61|0);
   $$pre$phiZ2D = $$pre64;$45 = $$pre;
  }
  $44 = ((($45)) + 80|0);
  $46 = load4($44);
  store1($$pre$phiZ2D,8);
  $47 = ((($45)) + 16|0);
  store4($47,0);
  $48 = ((($0)) + 5|0);
  $49 = load1($48);
  $50 = $49 & 3;
  $51 = ($50<<24>>24)==(0);
  if (!($51)) {
   _reallymarkobject($45,$0);
  }
  $52 = ((($45)) + 48|0);
  $53 = load4($52);
  $54 = $53 & 64;
  $55 = ($54|0)==(0);
  if (!($55)) {
   $56 = ((($45)) + 40|0);
   $57 = load4($56);
   $58 = ((($57)) + 5|0);
   $59 = load1($58);
   $60 = $59 & 3;
   $61 = ($60<<24>>24)==(0);
   if (!($61)) {
    _reallymarkobject($45,$57);
   }
  }
  _markmt($45);
  $62 = ((($45)) + 104|0);
  $63 = load4($62);
  $64 = ($63|0)==(0|0);
  if (!($64)) {
   $$02326$i$i = $62;$66 = $63;
   while(1) {
    $65 = ((($66)) + 5|0);
    $67 = load1($65);
    $68 = $67 & 7;
    $69 = ($68<<24>>24)==(0);
    $70 = ((($66)) + 36|0);
    if ($69) {
     $71 = load4($70);
     $72 = ($71|0)==(0|0);
     if ($72) {
      label = 30;
     } else {
      $73 = ((($66)) + 44|0);
      $$1$i$i = $73;
     }
    } else {
     label = 30;
    }
    if ((label|0) == 30) {
     label = 0;
     $74 = ((($66)) + 44|0);
     $75 = load4($74);
     store4($$02326$i$i,$75);
     store4($74,$66);
     $$024$i$i = load4($70);
     $76 = ($$024$i$i|0)==(0|0);
     if ($76) {
      $$1$i$i = $$02326$i$i;
     } else {
      $$025$i$i = $$024$i$i;
      while(1) {
       $77 = ((($$025$i$i)) + 8|0);
       $78 = ((($77)) + 4|0);
       $79 = load4($78);
       $80 = ($79|0)==(0);
       if (!($80)) {
        $81 = load4($$025$i$i);
        $82 = ((($81)) + 8|0);
        $83 = load4($82);
        $84 = $83 & 64;
        $85 = ($84|0)==(0);
        if (!($85)) {
         $86 = load4($81);
         $87 = ((($86)) + 5|0);
         $88 = load1($87);
         $89 = $88 & 3;
         $90 = ($89<<24>>24)==(0);
         if (!($90)) {
          _reallymarkobject($45,$86);
         }
        }
        store4($78,0);
       }
       $$0$i$i44 = load4($77);
       $91 = ($$0$i$i44|0)==(0|0);
       if ($91) {
        $$1$i$i = $$02326$i$i;
        break;
       } else {
        $$025$i$i = $$0$i$i44;
       }
      }
     }
    }
    $92 = load4($$1$i$i);
    $93 = ($92|0)==(0|0);
    if ($93) {
     break;
    } else {
     $$02326$i$i = $$1$i$i;$66 = $92;
    }
   }
  }
  $94 = ((($45)) + 76|0);
  $95 = load4($94);
  $96 = ($95|0)==(0|0);
  if (!($96)) {
   while(1) {
    _propagatemark($45);
    $97 = load4($94);
    $98 = ($97|0)==(0|0);
    if ($98) {
     break;
    }
   }
  }
  $99 = load4($47);
  store4($94,$46);
  $100 = ($46|0)==(0);
  if (!($100)) {
   while(1) {
    _propagatemark($45);
    $101 = load4($94);
    $102 = ($101|0)==(0|0);
    if ($102) {
     break;
    }
   }
  }
  store4($47,0);
  $103 = ((($45)) + 88|0);
  while(1) {
   $104 = load4($103);
   store4($103,0);
   $105 = ($104|0)==(0|0);
   if ($105) {
    break;
   }
   $$01214$i$i = 0;$$in1315$i$i = $104;
   while(1) {
    $106 = ((($$in1315$i$i)) + 28|0);
    $107 = load4($106);
    $108 = (_traverseephemeron($45,$$in1315$i$i)|0);
    $109 = ($108|0)==(0);
    if ($109) {
     $$1$i62$i = $$01214$i$i;
    } else {
     $110 = load4($94);
     $111 = ($110|0)==(0|0);
     if ($111) {
      $$1$i62$i = 1;
     } else {
      while(1) {
       _propagatemark($45);
       $112 = load4($94);
       $113 = ($112|0)==(0|0);
       if ($113) {
        $$1$i62$i = 1;
        break;
       }
      }
     }
    }
    $114 = ($107|0)==(0|0);
    if ($114) {
     break;
    } else {
     $$01214$i$i = $$1$i62$i;$$in1315$i$i = $107;
    }
   }
   $115 = ($$1$i62$i|0)==(0);
   if ($115) {
    break;
   }
  }
  $116 = ((($45)) + 84|0);
  $117 = load4($116);
  _clearvalues($45,$117,0);
  $118 = ((($45)) + 92|0);
  $119 = load4($118);
  _clearvalues($45,$119,0);
  $120 = load4($116);
  $121 = load4($118);
  $122 = load4($47);
  $123 = ((($45)) + 96|0);
  $$0$i$i$i = $123;
  while(1) {
   $124 = load4($$0$i$i$i);
   $125 = ($124|0)==(0|0);
   if ($125) {
    break;
   } else {
    $$0$i$i$i = $124;
   }
  }
  $126 = (($122) + ($99))|0;
  $127 = ((($45)) + 72|0);
  $128 = load4($127);
  $129 = ($128|0)==(0|0);
  if (!($129)) {
   $$01719$i$i = $127;$$020$i$i = $$0$i$i$i;$131 = $128;
   while(1) {
    $130 = ((($131)) + 5|0);
    $132 = load1($130);
    $133 = $132 & 3;
    $134 = ($133<<24>>24)==(0);
    if ($134) {
     $$1$i64$i = $$020$i$i;$$118$i$i = $131;
    } else {
     $135 = load4($131);
     store4($$01719$i$i,$135);
     $136 = load4($$020$i$i);
     store4($131,$136);
     store4($$020$i$i,$131);
     $$1$i64$i = $131;$$118$i$i = $$01719$i$i;
    }
    $137 = load4($$118$i$i);
    $138 = ($137|0)==(0|0);
    if ($138) {
     break;
    } else {
     $$01719$i$i = $$118$i$i;$$020$i$i = $$1$i64$i;$131 = $137;
    }
   }
  }
  $139 = ((($45)) + 108|0);
  store4($139,1);
  $$07$i$i45 = load4($123);
  $140 = ($$07$i$i45|0)==(0|0);
  if (!($140)) {
   $$08$i$i46 = $$07$i$i45;
   while(1) {
    $141 = ((($$08$i$i46)) + 5|0);
    $142 = load1($141);
    $143 = $142 & 3;
    $144 = ($143<<24>>24)==(0);
    if (!($144)) {
     _reallymarkobject($45,$$08$i$i46);
    }
    $$0$i67$i = load4($$08$i$i46);
    $145 = ($$0$i67$i|0)==(0|0);
    if ($145) {
     break;
    } else {
     $$08$i$i46 = $$0$i67$i;
    }
   }
  }
  $146 = load4($94);
  $147 = ($146|0)==(0|0);
  if (!($147)) {
   while(1) {
    _propagatemark($45);
    $148 = load4($94);
    $149 = ($148|0)==(0|0);
    if ($149) {
     break;
    }
   }
  }
  store4($47,0);
  while(1) {
   $150 = load4($103);
   store4($103,0);
   $151 = ($150|0)==(0|0);
   if ($151) {
    break;
   }
   $$01214$i74$i = 0;$$in1315$i73$i = $150;
   while(1) {
    $152 = ((($$in1315$i73$i)) + 28|0);
    $153 = load4($152);
    $154 = (_traverseephemeron($45,$$in1315$i73$i)|0);
    $155 = ($154|0)==(0);
    if ($155) {
     $$1$i76$i = $$01214$i74$i;
    } else {
     $156 = load4($94);
     $157 = ($156|0)==(0|0);
     if ($157) {
      $$1$i76$i = 1;
     } else {
      while(1) {
       _propagatemark($45);
       $158 = load4($94);
       $159 = ($158|0)==(0|0);
       if ($159) {
        $$1$i76$i = 1;
        break;
       }
      }
     }
    }
    $160 = ($153|0)==(0|0);
    if ($160) {
     break;
    } else {
     $$01214$i74$i = $$1$i76$i;$$in1315$i73$i = $153;
    }
   }
   $161 = ($$1$i76$i|0)==(0);
   if ($161) {
    label = 78;
    break;
   }
  }
  if ((label|0) == 78) {
   $$pr$i = load4($103);
   $162 = ($$pr$i|0)==(0|0);
   if (!($162)) {
    $$03$i$i = $$pr$i;
    while(1) {
     $163 = ((($$03$i$i)) + 16|0);
     $164 = load4($163);
     $165 = ((($$03$i$i)) + 7|0);
     $166 = load1($165);
     $167 = $166&255;
     $168 = 1 << $167;
     $169 = (($164) + ($168<<5)|0);
     $170 = ($166<<24>>24)==(31);
     if (!($170)) {
      $$0211$i$i = $164;
      while(1) {
       $171 = ((($$0211$i$i)) + 8|0);
       $172 = load4($171);
       $173 = ($172|0)==(0);
       $$pre$i$i = ((($$0211$i$i)) + 24|0);
       do {
        if ($173) {
         label = 89;
        } else {
         $174 = load4($$pre$i$i);
         $175 = $174 & 64;
         $176 = ($175|0)==(0);
         if (!($176)) {
          $177 = ((($$0211$i$i)) + 16|0);
          $178 = $174 & 15;
          $179 = ($178|0)==(4);
          $180 = load4($177);
          $181 = ((($180)) + 5|0);
          $182 = load1($181);
          $183 = $182 & 3;
          $184 = ($183<<24>>24)==(0);
          if ($179) {
           if ($184) {
            break;
           }
           _reallymarkobject($45,$180);
           $$pr$pre$i$i = load4($171);
           $185 = ($$pr$pre$i$i|0)==(0);
           if ($185) {
            label = 89;
            break;
           } else {
            break;
           }
          } else {
           if ($184) {
            break;
           }
           store4($171,0);
           label = 89;
           break;
          }
         }
        }
       } while(0);
       if ((label|0) == 89) {
        label = 0;
        $186 = load4($$pre$i$i);
        $187 = $186 & 64;
        $188 = ($187|0)==(0);
        if (!($188)) {
         $189 = ((($$0211$i$i)) + 16|0);
         $190 = load4($189);
         $191 = ((($190)) + 5|0);
         $192 = load1($191);
         $193 = $192 & 3;
         $194 = ($193<<24>>24)==(0);
         if (!($194)) {
          store4($$pre$i$i,10);
         }
        }
       }
       $195 = ((($$0211$i$i)) + 32|0);
       $196 = ($195>>>0)<($169>>>0);
       if ($196) {
        $$0211$i$i = $195;
       } else {
        break;
       }
      }
     }
     $197 = ((($$03$i$i)) + 28|0);
     $198 = load4($197);
     $199 = ($198|0)==(0|0);
     if ($199) {
      break;
     } else {
      $$03$i$i = $198;
     }
    }
   }
  }
  $200 = load4($118);
  $201 = ($200|0)==(0|0);
  if (!($201)) {
   $$03$i83$i = $200;
   while(1) {
    $202 = ((($$03$i83$i)) + 16|0);
    $203 = load4($202);
    $204 = ((($$03$i83$i)) + 7|0);
    $205 = load1($204);
    $206 = $205&255;
    $207 = 1 << $206;
    $208 = (($203) + ($207<<5)|0);
    $209 = ($205<<24>>24)==(31);
    if (!($209)) {
     $$0211$i85$i = $203;
     while(1) {
      $210 = ((($$0211$i85$i)) + 8|0);
      $211 = load4($210);
      $212 = ($211|0)==(0);
      $$pre$i86$i = ((($$0211$i85$i)) + 24|0);
      do {
       if ($212) {
        label = 105;
       } else {
        $213 = load4($$pre$i86$i);
        $214 = $213 & 64;
        $215 = ($214|0)==(0);
        if (!($215)) {
         $216 = ((($$0211$i85$i)) + 16|0);
         $217 = $213 & 15;
         $218 = ($217|0)==(4);
         $219 = load4($216);
         $220 = ((($219)) + 5|0);
         $221 = load1($220);
         $222 = $221 & 3;
         $223 = ($222<<24>>24)==(0);
         if ($218) {
          if ($223) {
           break;
          }
          _reallymarkobject($45,$219);
          $$pr$pre$i88$i = load4($210);
          $224 = ($$pr$pre$i88$i|0)==(0);
          if ($224) {
           label = 105;
           break;
          } else {
           break;
          }
         } else {
          if ($223) {
           break;
          }
          store4($210,0);
          label = 105;
          break;
         }
        }
       }
      } while(0);
      if ((label|0) == 105) {
       label = 0;
       $225 = load4($$pre$i86$i);
       $226 = $225 & 64;
       $227 = ($226|0)==(0);
       if (!($227)) {
        $228 = ((($$0211$i85$i)) + 16|0);
        $229 = load4($228);
        $230 = ((($229)) + 5|0);
        $231 = load1($230);
        $232 = $231 & 3;
        $233 = ($232<<24>>24)==(0);
        if (!($233)) {
         store4($$pre$i86$i,10);
        }
       }
      }
      $234 = ((($$0211$i85$i)) + 32|0);
      $235 = ($234>>>0)<($208>>>0);
      if ($235) {
       $$0211$i85$i = $234;
      } else {
       break;
      }
     }
    }
    $236 = ((($$03$i83$i)) + 28|0);
    $237 = load4($236);
    $238 = ($237|0)==(0|0);
    if ($238) {
     break;
    } else {
     $$03$i83$i = $237;
    }
   }
  }
  $239 = load4($116);
  _clearvalues($45,$239,$120);
  $240 = load4($118);
  _clearvalues($45,$240,$121);
  _luaS_clearcache($45);
  $241 = ((($45)) + 60|0);
  $242 = load1($241);
  $243 = $242 ^ 3;
  store1($241,$243);
  $244 = load4($47);
  $245 = (($126) + ($244))|0;
  $246 = load4($1);
  $247 = ((($246)) + 61|0);
  store1($247,2);
  $248 = ((($246)) + 64|0);
  $249 = (_sweeplist($0,$248,1)|0);
  $250 = ((($246)) + 68|0);
  store4($250,$249);
  $251 = ((($2)) + 8|0);
  $252 = load4($251);
  $253 = ((($2)) + 12|0);
  $254 = load4($253);
  $255 = (($254) + ($252))|0;
  $256 = ((($2)) + 20|0);
  store4($256,$255);
  $$0 = $245;
  return ($$0|0);
  break;
 }
 case 2:  {
  $257 = ((($2)) + 72|0);
  $258 = ((($2)) + 68|0);
  $259 = load4($258);
  $260 = ($259|0)==(0|0);
  if (!($260)) {
   $261 = ((($2)) + 12|0);
   $262 = load4($261);
   $263 = (_sweeplist($0,$259,80)|0);
   store4($258,$263);
   $264 = load4($261);
   $265 = (($264) - ($262))|0;
   $266 = ((($2)) + 20|0);
   $267 = load4($266);
   $268 = (($265) + ($267))|0;
   store4($266,$268);
   $269 = ($263|0)==(0|0);
   if (!($269)) {
    $$0 = 400;
    return ($$0|0);
   }
  }
  store1($3,3);
  store4($258,$257);
  $$0 = 0;
  return ($$0|0);
  break;
 }
 case 3:  {
  $270 = ((($2)) + 96|0);
  $271 = ((($2)) + 68|0);
  $272 = load4($271);
  $273 = ($272|0)==(0|0);
  if (!($273)) {
   $274 = ((($2)) + 12|0);
   $275 = load4($274);
   $276 = (_sweeplist($0,$272,80)|0);
   store4($271,$276);
   $277 = load4($274);
   $278 = (($277) - ($275))|0;
   $279 = ((($2)) + 20|0);
   $280 = load4($279);
   $281 = (($278) + ($280))|0;
   store4($279,$281);
   $282 = ($276|0)==(0|0);
   if (!($282)) {
    $$0 = 400;
    return ($$0|0);
   }
  }
  store1($3,4);
  store4($271,$270);
  $$0 = 0;
  return ($$0|0);
  break;
 }
 case 4:  {
  $283 = ((($2)) + 68|0);
  $284 = load4($283);
  $285 = ($284|0)==(0|0);
  if (!($285)) {
   $286 = ((($2)) + 12|0);
   $287 = load4($286);
   $288 = (_sweeplist($0,$284,80)|0);
   store4($283,$288);
   $289 = load4($286);
   $290 = (($289) - ($287))|0;
   $291 = ((($2)) + 20|0);
   $292 = load4($291);
   $293 = (($290) + ($292))|0;
   store4($291,$293);
   $294 = ($288|0)==(0|0);
   if (!($294)) {
    $$0 = 400;
    return ($$0|0);
   }
  }
  store1($3,5);
  store4($283,0);
  $$0 = 0;
  return ($$0|0);
  break;
 }
 case 5:  {
  $295 = ((($2)) + 124|0);
  $296 = load4($295);
  $297 = ((($296)) + 5|0);
  $298 = load1($297);
  $299 = $298 & -8;
  $300 = ((($2)) + 60|0);
  $301 = load1($300);
  $302 = $301 & 3;
  $303 = $302 | $299;
  store1($297,$303);
  $304 = ((($2)) + 62|0);
  $305 = load1($304);
  $306 = ($305<<24>>24)==(1);
  if (!($306)) {
   $307 = ((($2)) + 12|0);
   $308 = load4($307);
   $309 = ((($2)) + 28|0);
   $310 = load4($309);
   $311 = ((($2)) + 32|0);
   $312 = load4($311);
   $313 = (($312|0) / 4)&-1;
   $314 = ($310|0)<($313|0);
   if ($314) {
    $315 = (($312|0) / 2)&-1;
    _luaS_resize($0,$315);
    $$pre$i = load4($307);
    $317 = $$pre$i;
   } else {
    $317 = $308;
   }
   $316 = (($317) - ($308))|0;
   $318 = ((($2)) + 20|0);
   $319 = load4($318);
   $320 = (($316) + ($319))|0;
   store4($318,$320);
  }
  store1($3,6);
  $$0 = 0;
  return ($$0|0);
  break;
 }
 case 6:  {
  $321 = ((($2)) + 96|0);
  $322 = load4($321);
  $323 = ($322|0)==(0|0);
  if (!($323)) {
   $324 = ((($2)) + 62|0);
   $325 = load1($324);
   $326 = ($325<<24>>24)==(1);
   if (!($326)) {
    $$pre$i51 = ((($2)) + 108|0);
    $$014$i = 0;
    while(1) {
     $327 = load4($$pre$i51);
     $328 = ($$014$i>>>0)<($327>>>0);
     if (!($328)) {
      label = 130;
      break;
     }
     _GCTM($0,1);
     $329 = (($$014$i) + 1)|0;
     $330 = load4($321);
     $331 = ($330|0)==(0|0);
     if ($331) {
      $$013$i = $329;$333 = 0;
      break;
     } else {
      $$014$i = $329;
     }
    }
    if ((label|0) == 130) {
     $332 = $327 << 1;
     $$013$i = $$014$i;$333 = $332;
    }
    store4($$pre$i51,$333);
    $334 = ($$013$i*5)|0;
    $$0 = $334;
    return ($$0|0);
   }
  }
  store1($3,7);
  $$0 = 0;
  return ($$0|0);
  break;
 }
 default: {
  $$0 = 0;
  return ($$0|0);
 }
 }
 return (0)|0;
}
function _markmt($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 232|0);
 $2 = load4($1);
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  $4 = ((($2)) + 5|0);
  $5 = load1($4);
  $6 = $5 & 3;
  $7 = ($6<<24>>24)==(0);
  if (!($7)) {
   _reallymarkobject($0,$2);
  }
 }
 $8 = ((($0)) + 236|0);
 $9 = load4($8);
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  $11 = ((($9)) + 5|0);
  $12 = load1($11);
  $13 = $12 & 3;
  $14 = ($13<<24>>24)==(0);
  if (!($14)) {
   _reallymarkobject($0,$9);
  }
 }
 $15 = ((($0)) + 240|0);
 $16 = load4($15);
 $17 = ($16|0)==(0|0);
 if (!($17)) {
  $18 = ((($16)) + 5|0);
  $19 = load1($18);
  $20 = $19 & 3;
  $21 = ($20<<24>>24)==(0);
  if (!($21)) {
   _reallymarkobject($0,$16);
  }
 }
 $22 = ((($0)) + 244|0);
 $23 = load4($22);
 $24 = ($23|0)==(0|0);
 if (!($24)) {
  $25 = ((($23)) + 5|0);
  $26 = load1($25);
  $27 = $26 & 3;
  $28 = ($27<<24>>24)==(0);
  if (!($28)) {
   _reallymarkobject($0,$23);
  }
 }
 $29 = ((($0)) + 248|0);
 $30 = load4($29);
 $31 = ($30|0)==(0|0);
 if (!($31)) {
  $32 = ((($30)) + 5|0);
  $33 = load1($32);
  $34 = $33 & 3;
  $35 = ($34<<24>>24)==(0);
  if (!($35)) {
   _reallymarkobject($0,$30);
  }
 }
 $36 = ((($0)) + 252|0);
 $37 = load4($36);
 $38 = ($37|0)==(0|0);
 if (!($38)) {
  $39 = ((($37)) + 5|0);
  $40 = load1($39);
  $41 = $40 & 3;
  $42 = ($41<<24>>24)==(0);
  if (!($42)) {
   _reallymarkobject($0,$37);
  }
 }
 $43 = ((($0)) + 256|0);
 $44 = load4($43);
 $45 = ($44|0)==(0|0);
 if (!($45)) {
  $46 = ((($44)) + 5|0);
  $47 = load1($46);
  $48 = $47 & 3;
  $49 = ($48<<24>>24)==(0);
  if (!($49)) {
   _reallymarkobject($0,$44);
  }
 }
 $50 = ((($0)) + 260|0);
 $51 = load4($50);
 $52 = ($51|0)==(0|0);
 if (!($52)) {
  $53 = ((($51)) + 5|0);
  $54 = load1($53);
  $55 = $54 & 3;
  $56 = ($55<<24>>24)==(0);
  if (!($56)) {
   _reallymarkobject($0,$51);
  }
 }
 $57 = ((($0)) + 264|0);
 $58 = load4($57);
 $59 = ($58|0)==(0|0);
 if ($59) {
  return;
 }
 $60 = ((($58)) + 5|0);
 $61 = load1($60);
 $62 = $61 & 3;
 $63 = ($62<<24>>24)==(0);
 if ($63) {
  return;
 }
 _reallymarkobject($0,$58);
 return;
}
function _propagatemark($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$lcssa$i$i = 0, $$010$i = 0, $$021$i = 0, $$02829$i$i = 0, $$02930$i$i = 0, $$030$lcssa$i = 0, $$03032$i = 0, $$031$i$i = 0, $$032$i$i = 0, $$067$i = 0, $$1$i$i = 0, $$131$i = 0, $$162$i = 0, $$257$i = 0, $$356$i = 0, $$lcssa$i55 = 0, $$ph40$i = 0, $$ph41$i = 0, $$pr$pre$i = 0;
 var $$pr39$i = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i50 = 0, $$pre$i52 = 0, $$pre35$i$i = 0, $$pre36$i$i = 0, $$pre73$i = 0, $$pre74$i = 0, $$pre75$i = 0, $$pre76$i = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0;
 var $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0;
 var $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0;
 var $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0;
 var $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0;
 var $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $phitmp = 0, $phitmp$i = 0, $phitmp$i47 = 0, $phitmp26$i = 0, $phitmp66 = 0, $reass$add$i = 0, $reass$add52$i = 0, $reass$mul$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 76|0);
 $2 = load4($1);
 $3 = ((($2)) + 5|0);
 $4 = load1($3);
 $5 = $4 | 4;
 store1($3,$5);
 $6 = ((($2)) + 4|0);
 $7 = load1($6);
 switch ($7<<24>>24) {
 case 5:  {
  $8 = ((($2)) + 28|0);
  $9 = load4($8);
  store4($1,$9);
  $10 = ((($2)) + 24|0);
  $11 = load4($10);
  $12 = ($11|0)==(0|0);
  do {
   if ($12) {
    label = 35;
   } else {
    $13 = ((($11)) + 6|0);
    $14 = load1($13);
    $15 = $14 & 8;
    $16 = ($15<<24>>24)==(0);
    if ($16) {
     $17 = ((($0)) + 148|0);
     $18 = load4($17);
     $19 = (_luaT_gettm($11,3,$18)|0);
     $$pr$pre$i = load4($10);
     $20 = ($$pr$pre$i|0)==(0|0);
     if ($20) {
      $$ph41$i = $19;
     } else {
      $$ph40$i = $19;$$pr39$i = $$pr$pre$i;
      label = 5;
     }
    } else {
     $$ph40$i = 0;$$pr39$i = $11;
     label = 5;
    }
    if ((label|0) == 5) {
     $21 = ((($$pr39$i)) + 5|0);
     $22 = load1($21);
     $23 = $22 & 3;
     $24 = ($23<<24>>24)==(0);
     if ($24) {
      $$ph41$i = $$ph40$i;
     } else {
      _reallymarkobject($0,$$pr39$i);
      $$ph41$i = $$ph40$i;
     }
    }
    $25 = ($$ph41$i|0)==(0|0);
    if ($25) {
     label = 35;
    } else {
     $26 = ((($$ph41$i)) + 8|0);
     $27 = load4($26);
     $28 = $27 & 15;
     $29 = ($28|0)==(4);
     if ($29) {
      $30 = load4($$ph41$i);
      $31 = ((($30)) + 16|0);
      $32 = (_strchr($31,107)|0);
      $33 = (_strchr($31,118)|0);
      $34 = ($32|0)!=(0|0);
      $35 = ($33|0)!=(0|0);
      $36 = $34 | $35;
      if ($36) {
       $37 = load1($3);
       $38 = $37 & -5;
       store1($3,$38);
       if ($34) {
        if ($35) {
         $91 = ((($0)) + 92|0);
         $92 = load4($91);
         store4($8,$92);
         store4($91,$2);
         break;
        } else {
         (_traverseephemeron($0,$2)|0);
         break;
        }
       }
       $39 = ((($2)) + 16|0);
       $40 = load4($39);
       $41 = ((($2)) + 7|0);
       $42 = load1($41);
       $43 = $42&255;
       $44 = 1 << $43;
       $45 = (($40) + ($44<<5)|0);
       $46 = ((($2)) + 8|0);
       $47 = load4($46);
       $48 = ($47|0)!=(0);
       $49 = $48&1;
       $50 = ($42<<24>>24)==(31);
       if ($50) {
        $$0$lcssa$i$i = $49;
       } else {
        $$02930$i$i = $40;$$032$i$i = $49;
        while(1) {
         $51 = ((($$02930$i$i)) + 8|0);
         $52 = load4($51);
         $53 = ($52|0)==(0);
         $54 = ((($$02930$i$i)) + 24|0);
         $55 = load4($54);
         $56 = $55 & 64;
         $57 = ($56|0)==(0);
         L24: do {
          if ($53) {
           if ($57) {
            $$1$i$i = $$032$i$i;
           } else {
            $58 = ((($$02930$i$i)) + 16|0);
            $59 = load4($58);
            $60 = ((($59)) + 5|0);
            $61 = load1($60);
            $62 = $61 & 3;
            $63 = ($62<<24>>24)==(0);
            if ($63) {
             $$1$i$i = $$032$i$i;
            } else {
             store4($54,10);
             $$1$i$i = $$032$i$i;
            }
           }
          } else {
           if (!($57)) {
            $64 = ((($$02930$i$i)) + 16|0);
            $65 = load4($64);
            $66 = ((($65)) + 5|0);
            $67 = load1($66);
            $68 = $67 & 3;
            $69 = ($68<<24>>24)==(0);
            if (!($69)) {
             _reallymarkobject($0,$65);
            }
           }
           $70 = ($$032$i$i|0)==(0);
           if ($70) {
            $71 = load4($51);
            $72 = $71 & 64;
            $73 = ($72|0)==(0);
            do {
             if (!($73)) {
              $74 = $71 & 15;
              $75 = ($74|0)==(4);
              $76 = load4($$02930$i$i);
              $77 = ((($76)) + 5|0);
              $78 = load1($77);
              $79 = $78 & 3;
              $80 = ($79<<24>>24)==(0);
              if (!($75)) {
               if ($80) {
                break;
               } else {
                $$1$i$i = 1;
                break L24;
               }
              }
              if (!($80)) {
               _reallymarkobject($0,$76);
              }
             }
            } while(0);
            $$1$i$i = 0;
           } else {
            $$1$i$i = $$032$i$i;
           }
          }
         } while(0);
         $81 = ((($$02930$i$i)) + 32|0);
         $82 = ($81>>>0)<($45>>>0);
         if ($82) {
          $$02930$i$i = $81;$$032$i$i = $$1$i$i;
         } else {
          $$0$lcssa$i$i = $$1$i$i;
          break;
         }
        }
       }
       $83 = ((($0)) + 61|0);
       $84 = load1($83);
       $85 = ($84<<24>>24)==(0);
       if ($85) {
        $86 = ((($0)) + 80|0);
        $87 = load4($86);
        store4($8,$87);
        store4($86,$2);
        break;
       }
       $88 = ($$0$lcssa$i$i|0)==(0);
       if (!($88)) {
        $89 = ((($0)) + 84|0);
        $90 = load4($89);
        store4($8,$90);
        store4($89,$2);
       }
      } else {
       label = 35;
      }
     } else {
      label = 35;
     }
    }
   }
  } while(0);
  if ((label|0) == 35) {
   $93 = ((($2)) + 16|0);
   $94 = load4($93);
   $95 = ((($2)) + 7|0);
   $96 = load1($95);
   $97 = $96&255;
   $98 = 1 << $97;
   $99 = (($94) + ($98<<5)|0);
   $100 = ((($2)) + 8|0);
   $101 = load4($100);
   $102 = ($101|0)==(0);
   if ($102) {
    $118 = $94;
   } else {
    $103 = ((($2)) + 12|0);
    $$031$i$i = 0;$366 = $101;
    while(1) {
     $104 = load4($103);
     $105 = (((($104) + ($$031$i$i<<4)|0)) + 8|0);
     $106 = load4($105);
     $107 = $106 & 64;
     $108 = ($107|0)==(0);
     if ($108) {
      $117 = $366;
     } else {
      $109 = (($104) + ($$031$i$i<<4)|0);
      $110 = load4($109);
      $111 = ((($110)) + 5|0);
      $112 = load1($111);
      $113 = $112 & 3;
      $114 = ($113<<24>>24)==(0);
      if ($114) {
       $117 = $366;
      } else {
       _reallymarkobject($0,$110);
       $$pre$i$i = load4($100);
       $117 = $$pre$i$i;
      }
     }
     $115 = (($$031$i$i) + 1)|0;
     $116 = ($115>>>0)<($117>>>0);
     if ($116) {
      $$031$i$i = $115;$366 = $117;
     } else {
      break;
     }
    }
    $$pre35$i$i = load4($93);
    $118 = $$pre35$i$i;
   }
   $119 = ($118>>>0)<($99>>>0);
   if ($119) {
    $$02829$i$i = $118;
    while(1) {
     $120 = ((($$02829$i$i)) + 8|0);
     $121 = load4($120);
     $122 = ($121|0)==(0);
     $123 = ((($$02829$i$i)) + 24|0);
     $124 = load4($123);
     $125 = $124 & 64;
     $126 = ($125|0)==(0);
     if ($122) {
      if (!($126)) {
       $127 = ((($$02829$i$i)) + 16|0);
       $128 = load4($127);
       $129 = ((($128)) + 5|0);
       $130 = load1($129);
       $131 = $130 & 3;
       $132 = ($131<<24>>24)==(0);
       if (!($132)) {
        store4($123,10);
       }
      }
     } else {
      if ($126) {
       $140 = $121;
      } else {
       $133 = ((($$02829$i$i)) + 16|0);
       $134 = load4($133);
       $135 = ((($134)) + 5|0);
       $136 = load1($135);
       $137 = $136 & 3;
       $138 = ($137<<24>>24)==(0);
       if ($138) {
        $140 = $121;
       } else {
        _reallymarkobject($0,$134);
        $$pre36$i$i = load4($120);
        $140 = $$pre36$i$i;
       }
      }
      $139 = $140 & 64;
      $141 = ($139|0)==(0);
      if (!($141)) {
       $142 = load4($$02829$i$i);
       $143 = ((($142)) + 5|0);
       $144 = load1($143);
       $145 = $144 & 3;
       $146 = ($145<<24>>24)==(0);
       if (!($146)) {
        _reallymarkobject($0,$142);
       }
      }
     }
     $147 = ((($$02829$i$i)) + 32|0);
     $148 = ($147>>>0)<($99>>>0);
     if ($148) {
      $$02829$i$i = $147;
     } else {
      break;
     }
    }
   }
  }
  $149 = ((($2)) + 8|0);
  $150 = load4($149);
  $151 = $150 << 4;
  $152 = (($151) + 32)|0;
  $153 = ((($2)) + 20|0);
  $154 = load4($153);
  $155 = ($154|0)==(0|0);
  if ($155) {
   $160 = 0;
  } else {
   $156 = ((($2)) + 7|0);
   $157 = load1($156);
   $158 = $157&255;
   $phitmp$i = 32 << $158;
   $160 = $phitmp$i;
  }
  $159 = (($152) + ($160))|0;
  $$0 = $159;
  break;
 }
 case 6:  {
  $161 = ((($2)) + 8|0);
  $162 = load4($161);
  store4($1,$162);
  $163 = ((($2)) + 12|0);
  $164 = load4($163);
  $165 = ($164|0)==(0|0);
  if (!($165)) {
   $166 = ((($164)) + 5|0);
   $167 = load1($166);
   $168 = $167 & 3;
   $169 = ($168<<24>>24)==(0);
   if (!($169)) {
    _reallymarkobject($0,$164);
   }
  }
  $170 = ((($2)) + 6|0);
  $171 = load1($170);
  $172 = ($171<<24>>24)==(0);
  if ($172) {
   $$0 = 16;
  } else {
   $173 = ((($0)) + 61|0);
   $$021$i = 0;
   while(1) {
    $174 = (((($2)) + 16|0) + ($$021$i<<2)|0);
    $175 = load4($174);
    $176 = ($175|0)==(0|0);
    do {
     if (!($176)) {
      $177 = load4($175);
      $178 = ((($175)) + 8|0);
      $179 = ($177|0)==($178|0);
      if (!($179)) {
       $180 = load1($173);
       $181 = ($180<<24>>24)==(8);
       if (!($181)) {
        $182 = ((($178)) + 4|0);
        store4($182,1);
        break;
       }
      }
      $183 = ((($177)) + 8|0);
      $184 = load4($183);
      $185 = $184 & 64;
      $186 = ($185|0)==(0);
      if (!($186)) {
       $187 = load4($177);
       $188 = ((($187)) + 5|0);
       $189 = load1($188);
       $190 = $189 & 3;
       $191 = ($190<<24>>24)==(0);
       if (!($191)) {
        _reallymarkobject($0,$187);
       }
      }
     }
    } while(0);
    $192 = (($$021$i) + 1)|0;
    $193 = load1($170);
    $194 = $193&255;
    $195 = ($192>>>0)<($194>>>0);
    if ($195) {
     $$021$i = $192;
    } else {
     break;
    }
   }
   $196 = $193&255;
   $phitmp$i47 = $196 << 2;
   $phitmp26$i = (($phitmp$i47) + 16)|0;
   $$0 = $phitmp26$i;
  }
  break;
 }
 case 38:  {
  $197 = ((($2)) + 8|0);
  $198 = load4($197);
  store4($1,$198);
  $199 = ((($2)) + 6|0);
  $200 = load1($199);
  $201 = ($200<<24>>24)==(0);
  if ($201) {
   $$0 = 16;
  } else {
   $$010$i = 0;$367 = $200;
   while(1) {
    $202 = (((((($2)) + 16|0) + ($$010$i<<4)|0)) + 8|0);
    $203 = load4($202);
    $204 = $203 & 64;
    $205 = ($204|0)==(0);
    if ($205) {
     $214 = $367;
    } else {
     $206 = (((($2)) + 16|0) + ($$010$i<<4)|0);
     $207 = load4($206);
     $208 = ((($207)) + 5|0);
     $209 = load1($208);
     $210 = $209 & 3;
     $211 = ($210<<24>>24)==(0);
     if ($211) {
      $214 = $367;
     } else {
      _reallymarkobject($0,$207);
      $$pre$i = load1($199);
      $214 = $$pre$i;
     }
    }
    $212 = (($$010$i) + 1)|0;
    $213 = $214&255;
    $215 = ($212>>>0)<($213>>>0);
    if ($215) {
     $$010$i = $212;$367 = $214;
    } else {
     break;
    }
   }
   $phitmp = $213 << 4;
   $phitmp66 = (($phitmp) + 16)|0;
   $$0 = $phitmp66;
  }
  break;
 }
 case 8:  {
  $216 = ((($2)) + 40|0);
  $217 = load4($216);
  store4($1,$217);
  $218 = ((($0)) + 80|0);
  $219 = load4($218);
  store4($216,$219);
  store4($218,$2);
  $220 = $4 & -5;
  store1($3,$220);
  $221 = ((($2)) + 32|0);
  $222 = load4($221);
  $223 = ($222|0)==(0|0);
  if ($223) {
   $$0 = 1;
  } else {
   $224 = ((($2)) + 12|0);
   $225 = load4($224);
   $226 = ($222>>>0)<($225>>>0);
   if ($226) {
    $$03032$i = $222;$368 = $225;
    while(1) {
     $227 = ((($$03032$i)) + 8|0);
     $228 = load4($227);
     $229 = $228 & 64;
     $230 = ($229|0)==(0);
     if ($230) {
      $238 = $368;
     } else {
      $231 = load4($$03032$i);
      $232 = ((($231)) + 5|0);
      $233 = load1($232);
      $234 = $233 & 3;
      $235 = ($234<<24>>24)==(0);
      if ($235) {
       $238 = $368;
      } else {
       _reallymarkobject($0,$231);
       $$pre$i50 = load4($224);
       $238 = $$pre$i50;
      }
     }
     $236 = ((($$03032$i)) + 16|0);
     $237 = ($236>>>0)<($238>>>0);
     if ($237) {
      $$03032$i = $236;$368 = $238;
     } else {
      $$030$lcssa$i = $236;
      break;
     }
    }
   } else {
    $$030$lcssa$i = $222;
   }
   $239 = ((($0)) + 61|0);
   $240 = load1($239);
   $241 = ($240<<24>>24)==(8);
   if ($241) {
    $242 = load4($221);
    $243 = ((($2)) + 96|0);
    $244 = load4($243);
    $245 = (($242) + ($244<<4)|0);
    $246 = ($$030$lcssa$i>>>0)<($245>>>0);
    if ($246) {
     $$131$i = $$030$lcssa$i;
     while(1) {
      $247 = ((($$131$i)) + 8|0);
      store4($247,0);
      $248 = ((($$131$i)) + 16|0);
      $249 = ($248>>>0)<($245>>>0);
      if ($249) {
       $$131$i = $248;
      } else {
       break;
      }
     }
    }
    $250 = ((($2)) + 44|0);
    $251 = load4($250);
    $252 = ($251|0)==($2|0);
    if ($252) {
     $253 = ((($2)) + 36|0);
     $254 = load4($253);
     $255 = ($254|0)==(0|0);
     if (!($255)) {
      $256 = ((($0)) + 104|0);
      $257 = load4($256);
      store4($250,$257);
      store4($256,$2);
     }
    }
   } else {
    $258 = ((($0)) + 62|0);
    $259 = load1($258);
    $260 = ($259<<24>>24)==(1);
    if (!($260)) {
     _luaD_shrinkstack($2);
    }
   }
   $261 = ((($2)) + 96|0);
   $262 = load4($261);
   $263 = $262 << 4;
   $264 = (($263) + 120)|0;
   $265 = ((($2)) + 6|0);
   $266 = load2($265);
   $267 = $266&65535;
   $268 = ($267*36)|0;
   $269 = (($264) + ($268))|0;
   $$0 = $269;
  }
  break;
 }
 case 9:  {
  $270 = ((($2)) + 76|0);
  $271 = load4($270);
  store4($1,$271);
  $272 = ((($2)) + 68|0);
  $273 = load4($272);
  $274 = ($273|0)==(0|0);
  if (!($274)) {
   $275 = ((($273)) + 5|0);
   $276 = load1($275);
   $277 = $276 & 3;
   $278 = ($277<<24>>24)==(0);
   if (!($278)) {
    store4($272,0);
   }
  }
  $279 = ((($2)) + 72|0);
  $280 = load4($279);
  $281 = ($280|0)==(0|0);
  if (!($281)) {
   $282 = ((($280)) + 5|0);
   $283 = load1($282);
   $284 = $283 & 3;
   $285 = ($284<<24>>24)==(0);
   if (!($285)) {
    _reallymarkobject($0,$280);
   }
  }
  $286 = ((($2)) + 16|0);
  $287 = load4($286);
  $288 = ($287|0)>(0);
  if ($288) {
   $289 = ((($2)) + 44|0);
   $$067$i = 0;$369 = $287;
   while(1) {
    $290 = load4($289);
    $291 = (((($290) + ($$067$i<<4)|0)) + 8|0);
    $292 = load4($291);
    $293 = $292 & 64;
    $294 = ($293|0)==(0);
    if ($294) {
     $303 = $369;
    } else {
     $295 = (($290) + ($$067$i<<4)|0);
     $296 = load4($295);
     $297 = ((($296)) + 5|0);
     $298 = load1($297);
     $299 = $298 & 3;
     $300 = ($299<<24>>24)==(0);
     if ($300) {
      $303 = $369;
     } else {
      _reallymarkobject($0,$296);
      $$pre$i52 = load4($286);
      $303 = $$pre$i52;
     }
    }
    $301 = (($$067$i) + 1)|0;
    $302 = ($301|0)<($303|0);
    if ($302) {
     $$067$i = $301;$369 = $303;
    } else {
     break;
    }
   }
  }
  $304 = ((($2)) + 12|0);
  $305 = load4($304);
  $306 = ($305|0)>(0);
  if ($306) {
   $307 = ((($2)) + 64|0);
   $$162$i = 0;$370 = $305;
   while(1) {
    $308 = load4($307);
    $309 = (($308) + ($$162$i<<3)|0);
    $310 = load4($309);
    $311 = ($310|0)==(0|0);
    if ($311) {
     $318 = $370;
    } else {
     $312 = ((($310)) + 5|0);
     $313 = load1($312);
     $314 = $313 & 3;
     $315 = ($314<<24>>24)==(0);
     if ($315) {
      $318 = $370;
     } else {
      _reallymarkobject($0,$310);
      $$pre73$i = load4($304);
      $318 = $$pre73$i;
     }
    }
    $316 = (($$162$i) + 1)|0;
    $317 = ($316|0)<($318|0);
    if ($317) {
     $$162$i = $316;$370 = $318;
    } else {
     break;
    }
   }
  }
  $319 = ((($2)) + 28|0);
  $320 = load4($319);
  $321 = ($320|0)>(0);
  if ($321) {
   $322 = ((($2)) + 52|0);
   $$257$i = 0;$372 = $320;
   while(1) {
    $323 = load4($322);
    $324 = (($323) + ($$257$i<<2)|0);
    $325 = load4($324);
    $326 = ($325|0)==(0|0);
    if ($326) {
     $333 = $372;
    } else {
     $327 = ((($325)) + 5|0);
     $328 = load1($327);
     $329 = $328 & 3;
     $330 = ($329<<24>>24)==(0);
     if ($330) {
      $333 = $372;
     } else {
      _reallymarkobject($0,$325);
      $$pre74$i = load4($319);
      $333 = $$pre74$i;
     }
    }
    $331 = (($$257$i) + 1)|0;
    $332 = ($331|0)<($333|0);
    if ($332) {
     $$257$i = $331;$372 = $333;
    } else {
     $371 = $333;
     break;
    }
   }
  } else {
   $371 = $320;
  }
  $334 = ((($2)) + 32|0);
  $335 = load4($334);
  $336 = ($335|0)>(0);
  if ($336) {
   $337 = ((($2)) + 60|0);
   $$356$i = 0;$373 = $335;
   while(1) {
    $338 = load4($337);
    $339 = (($338) + (($$356$i*12)|0)|0);
    $340 = load4($339);
    $341 = ($340|0)==(0|0);
    if ($341) {
     $348 = $373;
    } else {
     $342 = ((($340)) + 5|0);
     $343 = load1($342);
     $344 = $343 & 3;
     $345 = ($344<<24>>24)==(0);
     if ($345) {
      $348 = $373;
     } else {
      _reallymarkobject($0,$340);
      $$pre75$i = load4($334);
      $348 = $$pre75$i;
     }
    }
    $346 = (($$356$i) + 1)|0;
    $347 = ($346|0)<($348|0);
    if ($347) {
     $$356$i = $346;$373 = $348;
    } else {
     break;
    }
   }
   $$pre76$i = load4($319);
   $$lcssa$i55 = $348;$358 = $$pre76$i;
  } else {
   $$lcssa$i55 = $335;$358 = $371;
  }
  $349 = ((($2)) + 20|0);
  $350 = load4($349);
  $351 = load4($286);
  $352 = $351 << 4;
  $353 = ((($2)) + 24|0);
  $354 = load4($353);
  $355 = ($$lcssa$i55*12)|0;
  $356 = load4($304);
  $357 = $356 << 3;
  $reass$add$i = (($350) + ($358))|0;
  $reass$add52$i = (($reass$add$i) + ($354))|0;
  $reass$mul$i = $reass$add52$i << 2;
  $359 = (($355) + 80)|0;
  $360 = (($359) + ($352))|0;
  $361 = (($360) + ($357))|0;
  $362 = (($361) + ($reass$mul$i))|0;
  $$0 = $362;
  break;
 }
 default: {
  return;
 }
 }
 $363 = ((($0)) + 16|0);
 $364 = load4($363);
 $365 = (($364) + ($$0))|0;
 store4($363,$365);
 return;
}
function _traverseephemeron($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$051$lcssa = 0, $$05167 = 0, $$05261 = 0, $$053$lcssa = 0, $$05359 = 0, $$055$lcssa = 0, $$05557 = 0, $$068 = 0, $$1 = 0, $$154 = 0, $$156 = 0, $$2$lcssa = 0, $$263 = 0, $$3 = 0, $$pre = 0, $$pre73 = 0, $$pre74 = 0, $10 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 16|0);
 $3 = load4($2);
 $4 = ((($1)) + 7|0);
 $5 = load1($4);
 $6 = $5&255;
 $7 = 1 << $6;
 $8 = (($3) + ($7<<5)|0);
 $9 = ((($1)) + 8|0);
 $10 = load4($9);
 $11 = ($10|0)==(0);
 if ($11) {
  $$051$lcssa = 0;$27 = $3;
 } else {
  $12 = ((($1)) + 12|0);
  $$05167 = 0;$$068 = 0;$81 = $10;
  while(1) {
   $13 = load4($12);
   $14 = (((($13) + ($$068<<4)|0)) + 8|0);
   $15 = load4($14);
   $16 = $15 & 64;
   $17 = ($16|0)==(0);
   if ($17) {
    $$1 = $$05167;$26 = $81;
   } else {
    $18 = (($13) + ($$068<<4)|0);
    $19 = load4($18);
    $20 = ((($19)) + 5|0);
    $21 = load1($20);
    $22 = $21 & 3;
    $23 = ($22<<24>>24)==(0);
    if ($23) {
     $$1 = $$05167;$26 = $81;
    } else {
     _reallymarkobject($0,$19);
     $$pre = load4($9);
     $$1 = 1;$26 = $$pre;
    }
   }
   $24 = (($$068) + 1)|0;
   $25 = ($24>>>0)<($26>>>0);
   if ($25) {
    $$05167 = $$1;$$068 = $24;$81 = $26;
   } else {
    break;
   }
  }
  $$pre73 = load4($2);
  $$051$lcssa = $$1;$27 = $$pre73;
 }
 $28 = ($27>>>0)<($8>>>0);
 if ($28) {
  $$05261 = $27;$$05359 = 0;$$05557 = 0;$$263 = $$051$lcssa;
  while(1) {
   $29 = ((($$05261)) + 8|0);
   $30 = load4($29);
   $31 = ($30|0)==(0);
   $32 = ((($$05261)) + 24|0);
   $33 = load4($32);
   $34 = $33 & 64;
   $35 = ($34|0)==(0);
   L15: do {
    if ($31) {
     if ($35) {
      $$154 = $$05359;$$156 = $$05557;$$3 = $$263;
     } else {
      $36 = ((($$05261)) + 16|0);
      $37 = load4($36);
      $38 = ((($37)) + 5|0);
      $39 = load1($38);
      $40 = $39 & 3;
      $41 = ($40<<24>>24)==(0);
      if ($41) {
       $$154 = $$05359;$$156 = $$05557;$$3 = $$263;
      } else {
       store4($32,10);
       $$154 = $$05359;$$156 = $$05557;$$3 = $$263;
      }
     }
    } else {
     do {
      if ($35) {
       $51 = $30;
       label = 18;
      } else {
       $42 = ((($$05261)) + 16|0);
       $43 = $33 & 15;
       $44 = ($43|0)==(4);
       $45 = load4($42);
       $46 = ((($45)) + 5|0);
       $47 = load1($46);
       $48 = $47 & 3;
       $49 = ($48<<24>>24)==(0);
       if ($44) {
        if ($49) {
         $51 = $30;
         label = 18;
         break;
        }
        _reallymarkobject($0,$45);
        $$pre74 = load4($29);
        $51 = $$pre74;
        label = 18;
        break;
       }
       $53 = $30 & 64;
       $54 = ($53|0)==(0);
       if ($49) {
        if ($54) {
         $$154 = $$05359;$$156 = $$05557;$$3 = $$263;
         break L15;
        } else {
         break;
        }
       }
       if ($54) {
        $$154 = $$05359;$$156 = 1;$$3 = $$263;
        break L15;
       }
       $55 = load4($$05261);
       $56 = ((($55)) + 5|0);
       $57 = load1($56);
       $58 = $57 & 3;
       $59 = ($58<<24>>24)==(0);
       $spec$select = $59 ? $$05359 : 1;
       $$154 = $spec$select;$$156 = 1;$$3 = $$263;
       break L15;
      }
     } while(0);
     if ((label|0) == 18) {
      label = 0;
      $50 = $51 & 64;
      $52 = ($50|0)==(0);
      if ($52) {
       $$154 = $$05359;$$156 = $$05557;$$3 = $$263;
       break;
      }
     }
     $60 = load4($$05261);
     $61 = ((($60)) + 5|0);
     $62 = load1($61);
     $63 = $62 & 3;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $$154 = $$05359;$$156 = $$05557;$$3 = $$263;
     } else {
      _reallymarkobject($0,$60);
      $$154 = $$05359;$$156 = $$05557;$$3 = 1;
     }
    }
   } while(0);
   $65 = ((($$05261)) + 32|0);
   $66 = ($65>>>0)<($8>>>0);
   if ($66) {
    $$05261 = $65;$$05359 = $$154;$$05557 = $$156;$$263 = $$3;
   } else {
    $$053$lcssa = $$154;$$055$lcssa = $$156;$$2$lcssa = $$3;
    break;
   }
  }
 } else {
  $$053$lcssa = 0;$$055$lcssa = 0;$$2$lcssa = $$051$lcssa;
 }
 $67 = ((($0)) + 61|0);
 $68 = load1($67);
 $69 = ($68<<24>>24)==(0);
 if ($69) {
  $70 = ((($0)) + 80|0);
  $71 = load4($70);
  $72 = ((($1)) + 28|0);
  store4($72,$71);
  store4($70,$1);
  return ($$2$lcssa|0);
 }
 $73 = ($$053$lcssa|0)==(0);
 if (!($73)) {
  $74 = ((($0)) + 88|0);
  $75 = load4($74);
  $76 = ((($1)) + 28|0);
  store4($76,$75);
  store4($74,$1);
  return ($$2$lcssa|0);
 }
 $77 = ($$055$lcssa|0)==(0);
 if ($77) {
  return ($$2$lcssa|0);
 }
 $78 = ((($0)) + 92|0);
 $79 = load4($78);
 $80 = ((($1)) + 28|0);
 store4($80,$79);
 store4($78,$1);
 return ($$2$lcssa|0);
}
function _clearvalues($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$03133 = 0, $$03234 = 0, $$038 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1|0)==($2|0);
 if ($3) {
  return;
 }
 $$038 = $1;
 while(1) {
  $4 = ((($$038)) + 16|0);
  $5 = load4($4);
  $6 = ((($$038)) + 7|0);
  $7 = load1($6);
  $8 = $7&255;
  $9 = 1 << $8;
  $10 = (($5) + ($9<<5)|0);
  $11 = ((($$038)) + 8|0);
  $12 = load4($11);
  $13 = ($12|0)==(0);
  if ($13) {
   $23 = $5;
  } else {
   $14 = ((($$038)) + 12|0);
   $$03133 = 0;
   while(1) {
    $15 = load4($14);
    $16 = (($15) + ($$03133<<4)|0);
    $17 = (_iscleared($0,$16)|0);
    $18 = ($17|0)==(0);
    if (!($18)) {
     $19 = (((($15) + ($$03133<<4)|0)) + 8|0);
     store4($19,0);
    }
    $20 = (($$03133) + 1)|0;
    $21 = load4($11);
    $22 = ($20>>>0)<($21>>>0);
    if ($22) {
     $$03133 = $20;
    } else {
     break;
    }
   }
   $$pre = load4($4);
   $23 = $$pre;
  }
  $24 = ($23>>>0)<($10>>>0);
  if ($24) {
   $$03234 = $23;
   while(1) {
    $25 = ((($$03234)) + 8|0);
    $26 = load4($25);
    $27 = ($26|0)==(0);
    if (!($27)) {
     $28 = (_iscleared($0,$$03234)|0);
     $29 = ($28|0)==(0);
     if (!($29)) {
      store4($25,0);
      $30 = ((($$03234)) + 24|0);
      $31 = load4($30);
      $32 = $31 & 64;
      $33 = ($32|0)==(0);
      if (!($33)) {
       $34 = ((($$03234)) + 16|0);
       $35 = load4($34);
       $36 = ((($35)) + 5|0);
       $37 = load1($36);
       $38 = $37 & 3;
       $39 = ($38<<24>>24)==(0);
       if (!($39)) {
        store4($30,10);
       }
      }
     }
    }
    $40 = ((($$03234)) + 32|0);
    $41 = ($40>>>0)<($10>>>0);
    if ($41) {
     $$03234 = $40;
    } else {
     break;
    }
   }
  }
  $42 = ((($$038)) + 28|0);
  $43 = load4($42);
  $44 = ($43|0)==($2|0);
  if ($44) {
   break;
  } else {
   $$038 = $43;
  }
 }
 return;
}
function _iscleared($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 $3 = load4($2);
 $4 = $3 & 64;
 $5 = ($4|0)==(0);
 if ($5) {
  $$0 = 0;
  return ($$0|0);
 }
 $6 = $3 & 15;
 $7 = ($6|0)==(4);
 $8 = load4($1);
 $9 = ((($8)) + 5|0);
 $10 = load1($9);
 $11 = $10 & 3;
 if (!($7)) {
  $13 = $11&255;
  $$0 = $13;
  return ($$0|0);
 }
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $$0 = 0;
  return ($$0|0);
 }
 _reallymarkobject($0,$8);
 $$0 = 0;
 return ($$0|0);
}
function _luaC_step($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $$014$i = 0, $$idx = 0, $$idx$val = 0, $$idx20 = 0, $$idx20$val = 0, $$op$i = 0, $$pre$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select$i = 0, $spec$select$neg$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = load4($1);
 $$idx = ((($2)) + 12|0);
 $$idx$val = load4($$idx);
 $$idx20 = ((($2)) + 116|0);
 $$idx20$val = load4($$idx20);
 $3 = ($$idx$val|0)<(1);
 if ($3) {
  $$0$i = 0;
 } else {
  $4 = (($$idx$val>>>0) / 200)&-1;
  $5 = (($4) + 1)|0;
  $6 = (2147483647 / ($$idx20$val|0))&-1;
  $7 = ($5|0)<($6|0);
  $8 = Math_imul($5, $$idx20$val)|0;
  $spec$select$i = $7 ? $8 : 2147483647;
  $$0$i = $spec$select$i;
 }
 $9 = ((($2)) + 63|0);
 $10 = load1($9);
 $11 = ($10<<24>>24)==(0);
 if ($11) {
  _luaE_setdebt($2,-16000);
  return;
 }
 $12 = ((($2)) + 61|0);
 $$0 = $$0$i;
 while(1) {
  $13 = (_singlestep($0)|0);
  $14 = (($$0) - ($13))|0;
  $15 = ($14|0)>(-1600);
  $16 = load1($12);
  $17 = ($16<<24>>24)==(7);
  if (!($15)) {
   label = 8;
   break;
  }
  if ($17) {
   break;
  } else {
   $$0 = $14;
  }
 }
 if ((label|0) == 8) {
  if (!($17)) {
   $31 = load4($$idx20);
   $32 = (($14|0) / ($31|0))&-1;
   $33 = ($32*200)|0;
   _luaE_setdebt($2,$33);
   $34 = load4($1);
   $35 = ((($34)) + 96|0);
   $36 = load4($35);
   $37 = ($36|0)==(0|0);
   $$pre$i = ((($34)) + 108|0);
   L14: do {
    if ($37) {
     $44 = 0;
    } else {
     $$014$i = 0;
     while(1) {
      $38 = load4($$pre$i);
      $39 = ($$014$i>>>0)<($38>>>0);
      if (!($39)) {
       break;
      }
      _GCTM($0,1);
      $40 = (($$014$i) + 1)|0;
      $41 = load4($35);
      $42 = ($41|0)==(0|0);
      if ($42) {
       $44 = 0;
       break L14;
      } else {
       $$014$i = $40;
      }
     }
     $43 = $38 << 1;
     $44 = $43;
    }
   } while(0);
   store4($$pre$i,$44);
   return;
  }
 }
 $18 = ((($2)) + 20|0);
 $19 = load4($18);
 $20 = (($19>>>0) / 100)&-1;
 $21 = ((($2)) + 112|0);
 $22 = load4($21);
 $23 = (2147483647 / ($20>>>0))&-1;
 $24 = ($22|0)<($23|0);
 $25 = ((($2)) + 8|0);
 $26 = load4($25);
 $27 = load4($$idx);
 $28 = (($27) + ($26))|0;
 $29 = (0 - ($22))|0;
 $$op$i = Math_imul($20, $29)|0;
 $spec$select$neg$i = $24 ? $$op$i : -2147483647;
 $30 = (($28) + ($spec$select$neg$i))|0;
 _luaE_setdebt($2,$30);
 return;
}
function _luaC_fullgc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$op$i = 0, $$phi$trans$insert = 0, $$phi$trans$insert19 = 0, $$phi$trans$insert22 = 0, $$phi$trans$insert25 = 0, $$pre = 0, $$pre$phi27Z2D = 0, $$pre$phi28Z2D = 0, $$pre$phi2930Z2D = 0, $$pre$phiZ2D = 0, $$pre17 = 0, $$pre18 = 0, $$pre20 = 0, $$pre21 = 0, $$pre23 = 0, $$pre24 = 0, $$pre26 = 0, $10 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $phitmp = 0, $spec$select$neg$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = load4($2);
 $4 = ($1|0)==(0);
 if (!($4)) {
  $5 = ((($3)) + 62|0);
  store1($5,1);
 }
 $6 = ((($3)) + 61|0);
 $7 = load1($6);
 $8 = ($7&255)<(2);
 if ($8) {
  store1($6,2);
  $9 = ((($3)) + 64|0);
  $10 = (_sweeplist($0,$9,1)|0);
  $11 = ((($3)) + 68|0);
  store4($11,$10);
  $$pre = load4($2);
  $$phi$trans$insert = ((($$pre)) + 61|0);
  $$pre17 = load1($$phi$trans$insert);
  $$pre$phiZ2D = $$phi$trans$insert;$12 = $$pre17;
 } else {
  $$pre$phiZ2D = $6;$12 = $7;
 }
 $13 = ($12<<24>>24)==(7);
 if ($13) {
  $$pre$phi27Z2D = $$pre$phiZ2D;$17 = 7;
 } else {
  while(1) {
   (_singlestep($0)|0);
   $14 = load1($$pre$phiZ2D);
   $15 = ($14<<24>>24)==(7);
   if ($15) {
    break;
   }
  }
  $$pre18 = load4($2);
  $$phi$trans$insert19 = ((($$pre18)) + 61|0);
  $$pre20 = load1($$phi$trans$insert19);
  $$pre$phi27Z2D = $$phi$trans$insert19;$17 = $$pre20;
 }
 $16 = $17&255;
 $18 = 1 << $16;
 $19 = $18 & -129;
 $20 = ($19|0)==(0);
 if ($20) {
  while(1) {
   (_singlestep($0)|0);
   $21 = load1($$pre$phi27Z2D);
   $22 = $21&255;
   $23 = 1 << $22;
   $24 = $23 & -129;
   $25 = ($24|0)==(0);
   if (!($25)) {
    break;
   }
  }
  $$pre21 = load4($2);
  $$phi$trans$insert22 = ((($$pre21)) + 61|0);
  $$pre23 = load1($$phi$trans$insert22);
  $$pre$phi28Z2D = $$phi$trans$insert22;$26 = $$pre23;
 } else {
  $$pre$phi28Z2D = $$pre$phi27Z2D;$26 = $17;
 }
 $27 = ($26<<24>>24)==(6);
 if ($27) {
  $$pre$phi2930Z2D = $$pre$phi28Z2D;
  label = 17;
 } else {
  while(1) {
   (_singlestep($0)|0);
   $28 = load1($$pre$phi28Z2D);
   $29 = ($28<<24>>24)==(6);
   if ($29) {
    break;
   }
  }
  $$pre24 = load4($2);
  $$phi$trans$insert25 = ((($$pre24)) + 61|0);
  $$pre26 = load1($$phi$trans$insert25);
  $phitmp = ($$pre26<<24>>24)==(7);
  if (!($phitmp)) {
   $$pre$phi2930Z2D = $$phi$trans$insert25;
   label = 17;
  }
 }
 if ((label|0) == 17) {
  while(1) {
   (_singlestep($0)|0);
   $30 = load1($$pre$phi2930Z2D);
   $31 = ($30<<24>>24)==(7);
   if ($31) {
    break;
   }
  }
 }
 $32 = ((($3)) + 62|0);
 store1($32,0);
 $33 = ((($3)) + 20|0);
 $34 = load4($33);
 $35 = (($34>>>0) / 100)&-1;
 $36 = ((($3)) + 112|0);
 $37 = load4($36);
 $38 = (2147483647 / ($35>>>0))&-1;
 $39 = ($37|0)<($38|0);
 $40 = ((($3)) + 8|0);
 $41 = load4($40);
 $42 = ((($3)) + 12|0);
 $43 = load4($42);
 $44 = (($43) + ($41))|0;
 $45 = (0 - ($37))|0;
 $$op$i = Math_imul($35, $45)|0;
 $spec$select$neg$i = $39 ? $$op$i : -2147483647;
 $46 = (($44) + ($spec$select$neg$i))|0;
 _luaE_setdebt($3,$46);
 return;
}
function _luaM_growaux_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$1$i = 0, $$neg$i = 0, $$op$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i = 0, $spec$store$select = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $6 = load4($2);
 $7 = (($4|0) / 2)&-1;
 $8 = ($6|0)<($7|0);
 if ($8) {
  $10 = $6 << 1;
  $11 = ($10|0)>(4);
  $spec$store$select = $11 ? $10 : 4;
  $$0 = $spec$store$select;
 } else {
  $9 = ($6|0)<($4|0);
  if ($9) {
   $$0 = $4;
  } else {
   store4($vararg_buffer,$5);
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   store4($vararg_ptr1,$4);
   _luaG_runerror($0,8218,$vararg_buffer);
   // unreachable;
  }
 }
 $12 = (($$0) + 1)|0;
 $13 = (4294967295 / ($3>>>0))&-1;
 $14 = ($12>>>0)>($13>>>0);
 if ($14) {
  _luaM_toobig($0);
  // unreachable;
 }
 $15 = Math_imul($6, $3)|0;
 $16 = Math_imul($$0, $3)|0;
 $17 = ((($0)) + 16|0);
 $18 = load4($17);
 $19 = ($1|0)==(0|0);
 $20 = load4($18);
 $21 = ((($18)) + 4|0);
 $22 = load4($21);
 $23 = (FUNCTION_TABLE_iiiii[$20 & 3]($22,$1,$15,$16)|0);
 $24 = ($23|0)==(0|0);
 $25 = ($16|0)!=(0);
 $or$cond$i = $25 & $24;
 if (!($or$cond$i)) {
  $$1$i = $23;
  $33 = ((($18)) + 12|0);
  $34 = load4($33);
  $$op$i = (0 - ($15))|0;
  $$neg$i = $19 ? 0 : $$op$i;
  $35 = (($16) + ($$neg$i))|0;
  $36 = (($35) + ($34))|0;
  store4($33,$36);
  store4($2,$$0);
  STACKTOP = sp;return ($$1$i|0);
 }
 $26 = ((($18)) + 128|0);
 $27 = load4($26);
 $28 = ($27|0)==(0|0);
 if ($28) {
  _luaD_throw($0,4);
  // unreachable;
 }
 _luaC_fullgc($0,1);
 $29 = load4($18);
 $30 = load4($21);
 $31 = (FUNCTION_TABLE_iiiii[$29 & 3]($30,$1,$15,$16)|0);
 $32 = ($31|0)==(0|0);
 if ($32) {
  _luaD_throw($0,4);
  // unreachable;
 } else {
  $$1$i = $31;
  $33 = ((($18)) + 12|0);
  $34 = load4($33);
  $$op$i = (0 - ($15))|0;
  $$neg$i = $19 ? 0 : $$op$i;
  $35 = (($16) + ($$neg$i))|0;
  $36 = (($35) + ($34))|0;
  store4($33,$36);
  store4($2,$$0);
  STACKTOP = sp;return ($$1$i|0);
 }
 return (0)|0;
}
function _luaM_toobig($0) {
 $0 = $0|0;
 var $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 _luaG_runerror($0,8244,$vararg_buffer);
 // unreachable;
}
function _luaM_realloc_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$1 = 0, $$neg = 0, $$op = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 16|0);
 $5 = load4($4);
 $6 = ($1|0)==(0|0);
 $7 = load4($5);
 $8 = ((($5)) + 4|0);
 $9 = load4($8);
 $10 = (FUNCTION_TABLE_iiiii[$7 & 3]($9,$1,$2,$3)|0);
 $11 = ($10|0)==(0|0);
 $12 = ($3|0)!=(0);
 $or$cond = $12 & $11;
 if ($or$cond) {
  $13 = ((($5)) + 128|0);
  $14 = load4($13);
  $15 = ($14|0)==(0|0);
  if ($15) {
   _luaD_throw($0,4);
   // unreachable;
  }
  _luaC_fullgc($0,1);
  $16 = load4($5);
  $17 = load4($8);
  $18 = (FUNCTION_TABLE_iiiii[$16 & 3]($17,$1,$2,$3)|0);
  $19 = ($18|0)==(0|0);
  if ($19) {
   _luaD_throw($0,4);
   // unreachable;
  } else {
   $$1 = $18;
  }
 } else {
  $$1 = $10;
 }
 $20 = ((($5)) + 12|0);
 $21 = load4($20);
 $$op = (0 - ($2))|0;
 $$neg = $6 ? 0 : $$op;
 $22 = (($$neg) + ($3))|0;
 $23 = (($22) + ($21))|0;
 store4($20,$23);
 return ($$1|0);
}
function _luaO_int2fb($0) {
 $0 = $0|0;
 var $$0$lcssa = 0, $$012$lcssa = 0, $$01218 = 0, $$014 = 0, $$019 = 0, $$1$lcssa = 0, $$113$lcssa = 0, $$11315 = 0, $$116 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)<(8);
 if ($1) {
  $$014 = $0;
  return ($$014|0);
 }
 $2 = ($0>>>0)>(127);
 if ($2) {
  $$01218 = $0;$$019 = 0;
  while(1) {
   $3 = (($$01218) + 15)|0;
   $4 = $3 >>> 4;
   $5 = (($$019) + 4)|0;
   $6 = ($3>>>0)>(2047);
   if ($6) {
    $$01218 = $4;$$019 = $5;
   } else {
    $$0$lcssa = $5;$$012$lcssa = $4;
    break;
   }
  }
 } else {
  $$0$lcssa = 0;$$012$lcssa = $0;
 }
 $7 = ($$012$lcssa>>>0)>(15);
 if ($7) {
  $$11315 = $$012$lcssa;$$116 = $$0$lcssa;
  while(1) {
   $8 = (($$11315) + 1)|0;
   $9 = $8 >>> 1;
   $10 = (($$116) + 1)|0;
   $11 = ($8>>>0)>(31);
   if ($11) {
    $$11315 = $9;$$116 = $10;
   } else {
    $$1$lcssa = $10;$$113$lcssa = $9;
    break;
   }
  }
 } else {
  $$1$lcssa = $$0$lcssa;$$113$lcssa = $$012$lcssa;
 }
 $12 = $$1$lcssa << 3;
 $13 = (($12) + 8)|0;
 $14 = (($$113$lcssa) + -8)|0;
 $15 = $13 | $14;
 $$014 = $15;
 return ($$014|0);
}
function _luaO_fb2int($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)<(8);
 $2 = $0 & 7;
 $3 = $2 | 8;
 $4 = $0 >> 3;
 $5 = (($4) + -1)|0;
 $6 = $3 << $5;
 $spec$select = $1 ? $0 : $6;
 return ($spec$select|0);
}
function _luaO_ceillog2($0) {
 $0 = $0|0;
 var $$0$lcssa = 0, $$06$lcssa = 0, $$067 = 0, $$08 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -1)|0;
 $2 = ($1>>>0)>(255);
 if ($2) {
  $$067 = $1;$$08 = 0;
  while(1) {
   $3 = (($$08) + 8)|0;
   $4 = $$067 >>> 8;
   $5 = ($$067>>>0)>(65535);
   if ($5) {
    $$067 = $4;$$08 = $3;
   } else {
    $$0$lcssa = $3;$$06$lcssa = $4;
    break;
   }
  }
 } else {
  $$0$lcssa = 0;$$06$lcssa = $1;
 }
 $6 = (1024 + ($$06$lcssa)|0);
 $7 = load1($6);
 $8 = $7&255;
 $9 = (($$0$lcssa) + ($8))|0;
 return ($9|0);
}
function _luaO_arith($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$i58 = 0.0, $$024$i = 0.0, $$024$i59 = 0.0, $$pre = 0.0, $$pre61 = i64(), $$pre62 = 0.0, $10 = i64(), $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = i64(), $17 = 0, $18 = 0, $19 = i64(), $20 = i64(), $21 = i64(), $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = i64(), $46 = i64(), $47 = i64(), $48 = 0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0.0;
 var $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $5 = sp + 8|0;
 $6 = sp;
 switch ($1|0) {
 case 13: case 11: case 10: case 9: case 8: case 7:  {
  $7 = ((($2)) + 8|0);
  $8 = load4($7);
  $9 = ($8|0)==(19);
  if ($9) {
   $10 = load8($2);
   store8($5,$10);
   label = 5;
  } else {
   $11 = (_luaV_tointeger($2,$5,0)|0);
   $12 = ($11|0)==(0);
   if (!($12)) {
    label = 5;
   }
  }
  do {
   if ((label|0) == 5) {
    $13 = ((($3)) + 8|0);
    $14 = load4($13);
    $15 = ($14|0)==(19);
    if ($15) {
     $16 = load8($3);
     store8($6,$16);
     $20 = $16;
    } else {
     $17 = (_luaV_tointeger($3,$6,0)|0);
     $18 = ($17|0)==(0);
     if ($18) {
      break;
     }
     $$pre61 = load8($6);
     $20 = $$pre61;
    }
    $19 = load8($5);
    $21 = (i64(_intarith($0,$1,$19,$20)));
    store8($4,$21);
    $22 = ((($4)) + 8|0);
    store4($22,19);
    STACKTOP = sp;return;
   }
  } while(0);
  break;
 }
 case 4: case 5:  {
  $23 = ((($2)) + 8|0);
  $24 = load4($23);
  $25 = ($24|0)==(3);
  if ($25) {
   $26 = loadd($2);
   stored($5,$26);
   label = 14;
  } else {
   $27 = (_luaV_tonumber_($2,$5)|0);
   $28 = ($27|0)==(0);
   if (!($28)) {
    label = 14;
   }
  }
  do {
   if ((label|0) == 14) {
    $29 = ((($3)) + 8|0);
    $30 = load4($29);
    $31 = ($30|0)==(3);
    if ($31) {
     $32 = loadd($3);
     stored($6,$32);
     $37 = $32;
    } else {
     $33 = (_luaV_tonumber_($3,$6)|0);
     $34 = ($33|0)==(0);
     if ($34) {
      break;
     }
     $$pre = loadd($6);
     $37 = $$pre;
    }
    $35 = loadd($5);
    switch ($1|0) {
    case 4:  {
     $38 = (+_pow($35,$37));
     $$024$i = $38;
     break;
    }
    case 5:  {
     $36 = $35 / $37;
     $$024$i = $36;
     break;
    }
    default: {
     $$024$i = 0.0;
    }
    }
    stored($4,$$024$i);
    $39 = ((($4)) + 8|0);
    store4($39,3);
    STACKTOP = sp;return;
   }
  } while(0);
  break;
 }
 default: {
  $40 = ((($2)) + 8|0);
  $41 = load4($40);
  switch ($41|0) {
  case 19:  {
   $42 = ((($3)) + 8|0);
   $43 = load4($42);
   $44 = ($43|0)==(19);
   if ($44) {
    $45 = load8($2);
    $46 = load8($3);
    $47 = (i64(_intarith($0,$1,$45,$46)));
    store8($4,$47);
    $48 = ((($4)) + 8|0);
    store4($48,19);
    STACKTOP = sp;return;
   } else {
    label = 27;
   }
   break;
  }
  case 3:  {
   $49 = loadd($2);
   stored($5,$49);
   label = 28;
   break;
  }
  default: {
   label = 27;
  }
  }
  if ((label|0) == 27) {
   $50 = (_luaV_tonumber_($2,$5)|0);
   $51 = ($50|0)==(0);
   if (!($51)) {
    label = 28;
   }
  }
  do {
   if ((label|0) == 28) {
    $52 = ((($3)) + 8|0);
    $53 = load4($52);
    $54 = ($53|0)==(3);
    if ($54) {
     $55 = loadd($3);
     stored($6,$55);
     $60 = $55;
    } else {
     $56 = (_luaV_tonumber_($3,$6)|0);
     $57 = ($56|0)==(0);
     if ($57) {
      break;
     }
     $$pre62 = loadd($6);
     $60 = $$pre62;
    }
    $58 = loadd($5);
    switch ($1|0) {
    case 0:  {
     $59 = $58 + $60;
     $$024$i59 = $59;
     break;
    }
    case 1:  {
     $61 = $58 - $60;
     $$024$i59 = $61;
     break;
    }
    case 2:  {
     $62 = $58 * $60;
     $$024$i59 = $62;
     break;
    }
    case 5:  {
     $63 = $58 / $60;
     $$024$i59 = $63;
     break;
    }
    case 4:  {
     $64 = (+_pow($58,$60));
     $$024$i59 = $64;
     break;
    }
    case 6:  {
     $65 = $58 / $60;
     $66 = (+Math_floor((+$65)));
     $$024$i59 = $66;
     break;
    }
    case 12:  {
     $67 = - $58;
     $$024$i59 = $67;
     break;
    }
    case 3:  {
     $68 = $58 % $60;
     $69 = $60 * $68;
     $70 = $69 < 0.0;
     $71 = $60 + $68;
     $$0$i58 = $70 ? $71 : $68;
     $$024$i59 = $$0$i58;
     break;
    }
    default: {
     $$024$i59 = 0.0;
    }
    }
    stored($4,$$024$i59);
    $72 = ((($4)) + 8|0);
    store4($72,3);
    STACKTOP = sp;return;
   }
  } while(0);
 }
 }
 $73 = (($1) + 6)|0;
 _luaT_trybinTM($0,$2,$3,$4,$73);
 STACKTOP = sp;return;
}
function _intarith($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = i64($2);
 $3 = i64($3);
 var $$0 = i64(), $10 = i64(), $11 = i64(), $12 = i64(), $13 = i64(), $14 = i64(), $15 = i64(), $16 = i64(), $4 = i64(), $5 = i64(), $6 = i64(), $7 = i64(), $8 = i64(), $9 = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 do {
  switch ($1|0) {
  case 0:  {
   $4 = i64_add($3,$2);
   $$0 = $4;
   break;
  }
  case 1:  {
   $5 = i64_sub($2,$3);
   $$0 = $5;
   break;
  }
  case 2:  {
   $6 = i64_mul($3,$2);
   $$0 = $6;
   break;
  }
  case 3:  {
   $7 = (i64(_luaV_mod($0,$2,$3)));
   $$0 = $7;
   break;
  }
  case 6:  {
   $8 = (i64(_luaV_div($0,$2,$3)));
   $$0 = $8;
   break;
  }
  case 7:  {
   $9 = i64_and($3,$2);
   $$0 = $9;
   break;
  }
  case 8:  {
   $10 = i64_or($3,$2);
   $$0 = $10;
   break;
  }
  case 9:  {
   $11 = i64_xor($3,$2);
   $$0 = $11;
   break;
  }
  case 10:  {
   $12 = (i64(_luaV_shiftl($2,$3)));
   $$0 = $12;
   break;
  }
  case 11:  {
   $13 = i64_sub(i64_const(0,0),$3);
   $14 = (i64(_luaV_shiftl($2,$13)));
   $$0 = $14;
   break;
  }
  case 12:  {
   $15 = i64_sub(i64_const(0,0),$2);
   $$0 = $15;
   break;
  }
  case 13:  {
   $16 = i64_xor($2,i64_const(4294967295,4294967295));
   $$0 = $16;
   break;
  }
  default: {
   $$0 = i64_const(0,0);
  }
  }
 } while(0);
 return (i64($$0));
}
function _luaO_hexavalue($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + 1)|0;
 $2 = (1520 + ($1)|0);
 $3 = load1($2);
 $4 = $3 & 2;
 $5 = ($4<<24>>24)==(0);
 $6 = (($0) + -48)|0;
 $7 = $0 | 32;
 $8 = (($7) + -87)|0;
 $$0 = $5 ? $8 : $6;
 return ($$0|0);
}
function _luaO_str2num($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i30$i = 0, $$0$i36$i = 0, $$015 = 0, $$02023 = 0.0, $$02054$i = i64(), $$038$i = 0, $$1$i24 = 0, $$12150$i = i64(), $$149$i = 0, $$239$i = 0, $$239$i$pn = 0, $$3$i = i64(), $$326$i = 0, $$340$i$lcssa = 0, $$lcssa$i$i = 0, $$lcssa$i35$i = 0, $$lcssa1$i$i = 0, $$lcssa1$i34$i = 0;
 var $$lcssa31 = 0, $$pre$i = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0.0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = i64(), $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = i64(), $36 = i64(), $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = i64(), $59 = i64(), $6 = 0, $60 = i64(), $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = i64(), $84 = i64(), $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0.0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i16 = 0, $or$cond26 = 0, $or$cond29$i$not = 0, $phitmp$i = 0, $spec$select = 0;
 var $storemerge$i = 0, $storemerge2753$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0;
 $2 = sp + 204|0;
 $3 = sp;
 $storemerge$i = $0;
 while(1) {
  $4 = load1($storemerge$i);
  $5 = $4&255;
  $6 = (($5) + 1)|0;
  $7 = (1520 + ($6)|0);
  $8 = load1($7);
  $9 = $8 & 8;
  $10 = ($9<<24>>24)==(0);
  $11 = ((($storemerge$i)) + 1|0);
  if ($10) {
   break;
  } else {
   $storemerge$i = $11;
  }
 }
 switch ($4<<24>>24) {
 case 45:  {
  $$0$i$i = 1;$$038$i = $11;
  break;
 }
 case 43:  {
  $$0$i$i = 0;$$038$i = $11;
  break;
 }
 default: {
  $$0$i$i = 0;$$038$i = $storemerge$i;
 }
 }
 $12 = load1($$038$i);
 $13 = ($12<<24>>24)==(48);
 L8: do {
  if ($13) {
   $14 = ((($$038$i)) + 1|0);
   $15 = load1($14);
   switch ($15<<24>>24) {
   case 88: case 120:  {
    break;
   }
   default: {
    label = 11;
    break L8;
   }
   }
   $16 = ((($$038$i)) + 2|0);
   $17 = load1($16);
   $18 = $17&255;
   $19 = (($18) + 1)|0;
   $20 = (1520 + ($19)|0);
   $21 = load1($20);
   $22 = $21 & 16;
   $23 = ($22<<24>>24)==(0);
   if ($23) {
    $$239$i = $16;$$3$i = i64_const(0,0);$$326$i = 1;$151 = $17;$70 = $21;
    label = 16;
   } else {
    $$02054$i = i64_const(0,0);$26 = $17;$storemerge2753$i = $16;
    while(1) {
     $24 = i64_shl($$02054$i,i64_const(4,0));
     $25 = $26 << 24 >> 24;
     $27 = (($25) + 1)|0;
     $28 = (1520 + ($27)|0);
     $29 = load1($28);
     $30 = $29 & 2;
     $31 = ($30<<24>>24)==(0);
     $32 = (($25) + -48)|0;
     $33 = $25 | 32;
     $34 = (($33) + -87)|0;
     $$0$i30$i = $31 ? $34 : $32;
     $35 = i64_sext($$0$i30$i);
     $36 = i64_add($24,$35);
     $37 = ((($storemerge2753$i)) + 1|0);
     $38 = load1($37);
     $39 = $38&255;
     $40 = (($39) + 1)|0;
     $41 = (1520 + ($40)|0);
     $42 = load1($41);
     $43 = $42 & 16;
     $44 = ($43<<24>>24)==(0);
     if ($44) {
      $$239$i = $37;$$3$i = $36;$$326$i = 0;$151 = $38;$70 = $42;
      label = 16;
      break;
     } else {
      $$02054$i = $36;$26 = $38;$storemerge2753$i = $37;
     }
    }
   }
  } else {
   label = 11;
  }
 } while(0);
 L14: do {
  if ((label|0) == 11) {
   $45 = $12&255;
   $46 = (($45) + 1)|0;
   $47 = (1520 + ($46)|0);
   $48 = load1($47);
   $49 = $48 & 2;
   $50 = ($49<<24>>24)==(0);
   if ($50) {
    $$239$i = $$038$i;$$3$i = i64_const(0,0);$$326$i = 1;$151 = $12;$70 = $48;
    label = 16;
   } else {
    $51 = (($$0$i$i) + 7)|0;
    $$12150$i = i64_const(0,0);$$149$i = $$038$i;$53 = $12;
    while(1) {
     $52 = $53 << 24 >> 24;
     $54 = (($52) + -48)|0;
     $55 = i64_ugt($$12150$i,i64_const(3435973835,214748364));
     if ($55) {
      $56 = i64_ne($$12150$i,i64_const(3435973836,214748364));
      $57 = ($54|0)>($51|0);
      $or$cond$i = $56 | $57;
      if ($or$cond$i) {
       label = 21;
       break L14;
      }
     }
     $58 = i64_mul($$12150$i,i64_const(10,0));
     $59 = i64_sext($54);
     $60 = i64_add($58,$59);
     $61 = ((($$149$i)) + 1|0);
     $62 = load1($61);
     $63 = $62&255;
     $64 = (($63) + 1)|0;
     $65 = (1520 + ($64)|0);
     $66 = load1($65);
     $67 = $66 & 2;
     $68 = ($67<<24>>24)==(0);
     if ($68) {
      $$239$i = $61;$$3$i = $60;$$326$i = 0;$151 = $62;$70 = $66;
      label = 16;
      break;
     } else {
      $$12150$i = $60;$$149$i = $61;$53 = $62;
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 16) {
  $69 = $70 & 8;
  $71 = ($69<<24>>24)==(0);
  if ($71) {
   $$340$i$lcssa = $$239$i;$$lcssa31 = $151;
  } else {
   $$239$i$pn = $$239$i;
   while(1) {
    $72 = ((($$239$i$pn)) + 1|0);
    $$pre$i = load1($72);
    $73 = $$pre$i&255;
    $74 = (($73) + 1)|0;
    $75 = (1520 + ($74)|0);
    $76 = load1($75);
    $77 = $76 & 8;
    $78 = ($77<<24>>24)==(0);
    if ($78) {
     $$340$i$lcssa = $72;$$lcssa31 = $$pre$i;
     break;
    } else {
     $$239$i$pn = $72;
    }
   }
  }
  $79 = ($$326$i|0)!=(0);
  $80 = ($$lcssa31<<24>>24)!=(0);
  $or$cond29$i$not = $79 | $80;
  $81 = ($$340$i$lcssa|0)==(0|0);
  $or$cond = $or$cond29$i$not | $81;
  if ($or$cond) {
   label = 21;
  } else {
   $82 = ($$0$i$i|0)==(0);
   $83 = i64_sub(i64_const(0,0),$$3$i);
   $84 = $82 ? $$3$i : $83;
   store8($1,$84);
   $$015 = $$340$i$lcssa;$$sink = 19;
  }
 }
 if ((label|0) == 21) {
  $85 = (_strpbrk($0,8283)|0);
  $86 = ($85|0)==(0|0);
  if (!($86)) {
   $87 = load1($85);
   $88 = $87 | 32;
   $phitmp$i = ($88<<24>>24)==(110);
   if ($phitmp$i) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  }
  $89 = (+_strtod($0,$2));
  $90 = load4($2);
  $91 = ($90|0)==($0|0);
  if ($91) {
   label = 30;
  } else {
   $92 = load1($90);
   $93 = $92&255;
   $94 = (($93) + 1)|0;
   $95 = (1520 + ($94)|0);
   $96 = load1($95);
   $97 = $96 & 8;
   $98 = ($97<<24>>24)==(0);
   if ($98) {
    $$lcssa$i$i = $92;$$lcssa1$i$i = $90;
   } else {
    $100 = $90;
    while(1) {
     $99 = ((($100)) + 1|0);
     $101 = load1($99);
     $102 = $101&255;
     $103 = (($102) + 1)|0;
     $104 = (1520 + ($103)|0);
     $105 = load1($104);
     $106 = $105 & 8;
     $107 = ($106<<24>>24)==(0);
     if ($107) {
      break;
     } else {
      $100 = $99;
     }
    }
    store4($2,$99);
    $$lcssa$i$i = $101;$$lcssa1$i$i = $99;
   }
   $108 = ($$lcssa$i$i<<24>>24)==(0);
   if ($108) {
    $$02023 = $89;$$1$i24 = $$lcssa1$i$i;
   } else {
    label = 30;
   }
  }
  if ((label|0) == 30) {
   $109 = (_strchr($0,46)|0);
   $110 = (_strlen($0)|0);
   $111 = ($110>>>0)>(200);
   $112 = ($109|0)==(0|0);
   $or$cond$i16 = $112 | $111;
   if ($or$cond$i16) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
   (_strcpy($3,$0)|0);
   $113 = (_localeconv()|0);
   $114 = load4($113);
   $115 = load1($114);
   $116 = $109;
   $117 = $0;
   $118 = (($116) - ($117))|0;
   $119 = (($3) + ($118)|0);
   store1($119,$115);
   $120 = (+_strtod($3,$2));
   $121 = load4($2);
   $122 = ($121|0)==($3|0);
   if ($122) {
    $$0$i36$i = 0;
   } else {
    $123 = load1($121);
    $124 = $123&255;
    $125 = (($124) + 1)|0;
    $126 = (1520 + ($125)|0);
    $127 = load1($126);
    $128 = $127 & 8;
    $129 = ($128<<24>>24)==(0);
    if ($129) {
     $$lcssa$i35$i = $123;$$lcssa1$i34$i = $121;
    } else {
     $131 = $121;
     while(1) {
      $130 = ((($131)) + 1|0);
      $132 = load1($130);
      $133 = $132&255;
      $134 = (($133) + 1)|0;
      $135 = (1520 + ($134)|0);
      $136 = load1($135);
      $137 = $136 & 8;
      $138 = ($137<<24>>24)==(0);
      if ($138) {
       break;
      } else {
       $131 = $130;
      }
     }
     store4($2,$130);
     $$lcssa$i35$i = $132;$$lcssa1$i34$i = $130;
    }
    $139 = ($$lcssa$i35$i<<24>>24)==(0);
    $spec$select = $139 ? $$lcssa1$i34$i : 0;
    $$0$i36$i = $spec$select;
   }
   $140 = ($$0$i36$i|0)==(0|0);
   $141 = $$0$i36$i;
   $142 = $3;
   $143 = (($141) - ($142))|0;
   $144 = (($0) + ($143)|0);
   $145 = ($144|0)==(0|0);
   $or$cond26 = $140 | $145;
   if ($or$cond26) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   } else {
    $$02023 = $120;$$1$i24 = $144;
   }
  }
  stored($1,$$02023);
  $$015 = $$1$i24;$$sink = 3;
 }
 $146 = ((($1)) + 8|0);
 store4($146,$$sink);
 $147 = $$015;
 $148 = $0;
 $149 = (1 - ($148))|0;
 $150 = (($149) + ($147))|0;
 $$0 = $150;
 STACKTOP = sp;return ($$0|0);
}
function _luaO_utf8esc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$017 = 0, $$018 = 0, $$1 = 0, $$sink = 0, $$sink$in = 0, $$sink24 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1>>>0)<(128);
 if ($2) {
  $$1 = 1;$$sink$in = $1;$$sink24 = 7;
 } else {
  $$0 = 63;$$017 = 1;$$018 = $1;
  while(1) {
   $3 = $$018 & 63;
   $4 = $3 | 128;
   $5 = $4&255;
   $6 = (($$017) + 1)|0;
   $7 = (8 - ($$017))|0;
   $8 = (($0) + ($7)|0);
   store1($8,$5);
   $9 = $$018 >>> 6;
   $10 = $$0 >>> 1;
   $11 = ($9>>>0)>($10>>>0);
   if ($11) {
    $$0 = $10;$$017 = $6;$$018 = $9;
   } else {
    break;
   }
  }
  $12 = $$0 & 254;
  $13 = $12 ^ 254;
  $14 = $13 | $9;
  $15 = (7 - ($$017))|0;
  $$1 = $6;$$sink$in = $14;$$sink24 = $15;
 }
 $$sink = $$sink$in&255;
 $16 = (($0) + ($$sink24)|0);
 store1($16,$$sink);
 return ($$1|0);
}
function _luaO_tostring($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = i64(), $7 = 0, $8 = 0.0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $vararg_buffer1 = sp + 64|0;
 $vararg_buffer = sp + 56|0;
 $2 = sp;
 $3 = ((($1)) + 8|0);
 $4 = load4($3);
 $5 = ($4|0)==(19);
 if ($5) {
  $6 = load8($1);
  store8($vararg_buffer,$6);
  $7 = (_snprintf($2,50,14670,$vararg_buffer)|0);
  $$0 = $7;
 } else {
  $8 = loadd($1);
  stored($vararg_buffer1,$8);
  $9 = (_snprintf($2,50,12616,$vararg_buffer1)|0);
  $10 = (_strspn($2,8289)|0);
  $11 = (($2) + ($10)|0);
  $12 = load1($11);
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   $14 = (_localeconv()|0);
   $15 = load4($14);
   $16 = load1($15);
   $17 = (($9) + 1)|0;
   $18 = (($2) + ($9)|0);
   store1($18,$16);
   $19 = (($9) + 2)|0;
   $20 = (($2) + ($17)|0);
   store1($20,48);
   $$0 = $19;
  } else {
   $$0 = $9;
  }
 }
 $21 = (_luaS_newlstr($0,$2,$$0)|0);
 store4($1,$21);
 $22 = ((($21)) + 4|0);
 $23 = load1($22);
 $24 = $23 | 64;
 $25 = $24&255;
 store4($3,$25);
 STACKTOP = sp;return;
}
function _luaO_pushvfstring($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $$0$lcssa = 0, $$017$i = 0, $$018$i = 0, $$076$lcssa = 0, $$07685 = 0, $$086 = 0, $$1$i = 0, $$pre = 0, $$pre94 = 0, $$sink = 0, $$sink107 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = i64(), $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = i64(), $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0.0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next21 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded25 = 0, $expanded26 = 0, $expanded27 = 0;
 var $expanded28 = 0, $expanded29 = 0, $expanded30 = 0, $expanded31 = 0, $expanded32 = 0, $expanded33 = 0, $expanded34 = 0, $expanded35 = 0, $expanded36 = 0, $expanded37 = 0, $expanded38 = 0, $expanded39 = 0, $expanded40 = 0, $expanded41 = 0, $expanded42 = 0, $expanded43 = 0, $expanded44 = 0, $expanded45 = 0, $expanded46 = 0, $expanded47 = 0;
 var $expanded48 = 0, $expanded49 = 0, $expanded50 = 0, $expanded51 = 0, $expanded52 = 0, $expanded53 = 0, $expanded54 = 0, $expanded55 = 0, $expanded56 = 0, $expanded57 = 0, $expanded58 = 0, $expanded59 = 0, $expanded60 = 0, $expanded61 = 0, $expanded62 = 0, $expanded63 = 0, $expanded64 = 0, $expanded65 = 0, $expanded66 = 0, $expanded67 = 0;
 var $expanded68 = 0, $expanded69 = 0, $expanded70 = 0, $expanded71 = 0, $expanded72 = 0, $spec$store$select = 0, $vararg_buffer = 0, $vararg_buffer16 = 0, $vararg_buffer22 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer22 = sp + 40|0;
 $vararg_buffer16 = sp + 32|0;
 $vararg_buffer = sp + 24|0;
 $3 = sp;
 $4 = (_strchr($1,37)|0);
 $5 = ($4|0)==(0|0);
 $$pre94 = ((($0)) + 12|0);
 L1: do {
  if ($5) {
   $$0$lcssa = $1;$$076$lcssa = 0;
  } else {
   $6 = ((($3)) + 7|0);
   $7 = ((($3)) + 8|0);
   $$07685 = 0;$$086 = $1;$8 = $4;
   L3: while(1) {
    $9 = $8;
    $10 = $$086;
    $11 = (($9) - ($10))|0;
    $12 = load4($$pre94);
    $13 = (_luaS_newlstr($0,$$086,$11)|0);
    store4($12,$13);
    $14 = ((($13)) + 4|0);
    $15 = load1($14);
    $16 = $15 | 64;
    $17 = $16&255;
    $18 = ((($12)) + 8|0);
    store4($18,$17);
    _luaD_inctop($0);
    $19 = ((($8)) + 1|0);
    $20 = load1($19);
    $21 = $20 << 24 >> 24;
    switch ($21|0) {
    case 115:  {
     $arglist_current = load4($2);
     $22 = $arglist_current;
     $expanded26 = ((0) + 4|0);
     $expanded25 = $expanded26;
     $expanded = (($expanded25) - 1)|0;
     $23 = (($22) + ($expanded))|0;
     $expanded30 = ((0) + 4|0);
     $expanded29 = $expanded30;
     $expanded28 = (($expanded29) - 1)|0;
     $expanded27 = $expanded28 ^ -1;
     $24 = $23 & $expanded27;
     $25 = $24;
     $26 = load4($25);
     $arglist_next = ((($25)) + 4|0);
     store4($2,$arglist_next);
     $27 = ($26|0)==(0|0);
     $spec$store$select = $27 ? 16018 : $26;
     $28 = (_strlen($spec$store$select)|0);
     $29 = load4($$pre94);
     $30 = (_luaS_newlstr($0,$spec$store$select,$28)|0);
     store4($29,$30);
     $31 = ((($30)) + 4|0);
     $32 = load1($31);
     $33 = $32 | 64;
     $34 = $33&255;
     $35 = ((($29)) + 8|0);
     store4($35,$34);
     _luaD_inctop($0);
     break;
    }
    case 99:  {
     $arglist_current2 = load4($2);
     $36 = $arglist_current2;
     $expanded33 = ((0) + 4|0);
     $expanded32 = $expanded33;
     $expanded31 = (($expanded32) - 1)|0;
     $37 = (($36) + ($expanded31))|0;
     $expanded37 = ((0) + 4|0);
     $expanded36 = $expanded37;
     $expanded35 = (($expanded36) - 1)|0;
     $expanded34 = $expanded35 ^ -1;
     $38 = $37 & $expanded34;
     $39 = $38;
     $40 = load4($39);
     $arglist_next3 = ((($39)) + 4|0);
     store4($2,$arglist_next3);
     $41 = $40&255;
     store1($3,$41);
     $42 = $40 & 255;
     $43 = (($42) + 1)|0;
     $44 = (1520 + ($43)|0);
     $45 = load1($44);
     $46 = $45 & 4;
     $47 = ($46<<24>>24)==(0);
     if ($47) {
      store4($vararg_buffer,$42);
      (_luaO_pushfstring($0,8301,$vararg_buffer)|0);
     } else {
      $48 = load4($$pre94);
      $49 = (_luaS_newlstr($0,$3,1)|0);
      store4($48,$49);
      $50 = ((($49)) + 4|0);
      $51 = load1($50);
      $52 = $51 | 64;
      $53 = $52&255;
      $54 = ((($48)) + 8|0);
      store4($54,$53);
      _luaD_inctop($0);
     }
     break;
    }
    case 100:  {
     $55 = load4($$pre94);
     $arglist_current5 = load4($2);
     $56 = $arglist_current5;
     $expanded40 = ((0) + 4|0);
     $expanded39 = $expanded40;
     $expanded38 = (($expanded39) - 1)|0;
     $57 = (($56) + ($expanded38))|0;
     $expanded44 = ((0) + 4|0);
     $expanded43 = $expanded44;
     $expanded42 = (($expanded43) - 1)|0;
     $expanded41 = $expanded42 ^ -1;
     $58 = $57 & $expanded41;
     $59 = $58;
     $60 = load4($59);
     $arglist_next6 = ((($59)) + 4|0);
     store4($2,$arglist_next6);
     $61 = i64_sext($60);
     store8($55,$61);
     $$sink = 19;$$sink107 = $55;
     label = 12;
     break;
    }
    case 73:  {
     $62 = load4($$pre94);
     $arglist_current8 = load4($2);
     $63 = $arglist_current8;
     $expanded47 = ((0) + 8|0);
     $expanded46 = $expanded47;
     $expanded45 = (($expanded46) - 1)|0;
     $64 = (($63) + ($expanded45))|0;
     $expanded51 = ((0) + 8|0);
     $expanded50 = $expanded51;
     $expanded49 = (($expanded50) - 1)|0;
     $expanded48 = $expanded49 ^ -1;
     $65 = $64 & $expanded48;
     $66 = $65;
     $67 = load8($66);
     $arglist_next9 = ((($66)) + 8|0);
     store4($2,$arglist_next9);
     store8($62,$67);
     $$sink = 19;$$sink107 = $62;
     label = 12;
     break;
    }
    case 102:  {
     $68 = load4($$pre94);
     $arglist_current11 = load4($2);
     $69 = $arglist_current11;
     $expanded54 = ((0) + 8|0);
     $expanded53 = $expanded54;
     $expanded52 = (($expanded53) - 1)|0;
     $70 = (($69) + ($expanded52))|0;
     $expanded58 = ((0) + 8|0);
     $expanded57 = $expanded58;
     $expanded56 = (($expanded57) - 1)|0;
     $expanded55 = $expanded56 ^ -1;
     $71 = $70 & $expanded55;
     $72 = $71;
     $73 = loadd($72);
     $arglist_next12 = ((($72)) + 8|0);
     store4($2,$arglist_next12);
     stored($68,$73);
     $$sink = 3;$$sink107 = $68;
     label = 12;
     break;
    }
    case 112:  {
     $arglist_current14 = load4($2);
     $77 = $arglist_current14;
     $expanded61 = ((0) + 4|0);
     $expanded60 = $expanded61;
     $expanded59 = (($expanded60) - 1)|0;
     $78 = (($77) + ($expanded59))|0;
     $expanded65 = ((0) + 4|0);
     $expanded64 = $expanded65;
     $expanded63 = (($expanded64) - 1)|0;
     $expanded62 = $expanded63 ^ -1;
     $79 = $78 & $expanded62;
     $80 = $79;
     $81 = load4($80);
     $arglist_next15 = ((($80)) + 4|0);
     store4($2,$arglist_next15);
     store4($vararg_buffer16,$81);
     $82 = (_snprintf($3,24,8307,$vararg_buffer16)|0);
     $83 = load4($$pre94);
     $84 = (_luaS_newlstr($0,$3,$82)|0);
     store4($83,$84);
     $85 = ((($84)) + 4|0);
     $86 = load1($85);
     $87 = $86 | 64;
     $88 = $87&255;
     $89 = ((($83)) + 8|0);
     store4($89,$88);
     _luaD_inctop($0);
     break;
    }
    case 85:  {
     $arglist_current20 = load4($2);
     $90 = $arglist_current20;
     $expanded68 = ((0) + 4|0);
     $expanded67 = $expanded68;
     $expanded66 = (($expanded67) - 1)|0;
     $91 = (($90) + ($expanded66))|0;
     $expanded72 = ((0) + 4|0);
     $expanded71 = $expanded72;
     $expanded70 = (($expanded71) - 1)|0;
     $expanded69 = $expanded70 ^ -1;
     $92 = $91 & $expanded69;
     $93 = $92;
     $94 = load4($93);
     $arglist_next21 = ((($93)) + 4|0);
     store4($2,$arglist_next21);
     $95 = ($94>>>0)<(128);
     if ($95) {
      $96 = $94&255;
      store1($6,$96);
      $$1$i = 1;
     } else {
      $$0$i = 63;$$017$i = 1;$$018$i = $94;
      while(1) {
       $97 = $$018$i & 63;
       $98 = $97 | 128;
       $99 = $98&255;
       $100 = (($$017$i) + 1)|0;
       $101 = (8 - ($$017$i))|0;
       $102 = (($3) + ($101)|0);
       store1($102,$99);
       $103 = $$018$i >>> 6;
       $104 = $$0$i >>> 1;
       $105 = ($103>>>0)>($104>>>0);
       if ($105) {
        $$0$i = $104;$$017$i = $100;$$018$i = $103;
       } else {
        break;
       }
      }
      $106 = $$0$i & 254;
      $107 = $106 ^ 254;
      $108 = $107 | $103;
      $109 = $108&255;
      $110 = (7 - ($$017$i))|0;
      $111 = (($3) + ($110)|0);
      store1($111,$109);
      $$1$i = $100;
     }
     $112 = (0 - ($$1$i))|0;
     $113 = (($7) + ($112)|0);
     $114 = load4($$pre94);
     $115 = (_luaS_newlstr($0,$113,$$1$i)|0);
     store4($114,$115);
     $116 = ((($115)) + 4|0);
     $117 = load1($116);
     $118 = $117 | 64;
     $119 = $118&255;
     $120 = ((($114)) + 8|0);
     store4($120,$119);
     _luaD_inctop($0);
     break;
    }
    case 37:  {
     $121 = load4($$pre94);
     $122 = (_luaS_newlstr($0,8310,1)|0);
     store4($121,$122);
     $123 = ((($122)) + 4|0);
     $124 = load1($123);
     $125 = $124 | 64;
     $126 = $125&255;
     $127 = ((($121)) + 8|0);
     store4($127,$126);
     _luaD_inctop($0);
     break;
    }
    default: {
     break L3;
    }
    }
    if ((label|0) == 12) {
     label = 0;
     $74 = ((($$sink107)) + 8|0);
     store4($74,$$sink);
     _luaD_inctop($0);
     $75 = load4($$pre94);
     $76 = ((($75)) + -16|0);
     _luaO_tostring($0,$76);
    }
    $129 = (($$07685) + 2)|0;
    $130 = ((($8)) + 2|0);
    $131 = (_strchr($130,37)|0);
    $132 = ($131|0)==(0|0);
    if ($132) {
     $$0$lcssa = $130;$$076$lcssa = $129;
     break L1;
    } else {
     $$07685 = $129;$$086 = $130;$8 = $131;
    }
   }
   $128 = $20 << 24 >> 24;
   store4($vararg_buffer22,$128);
   _luaG_runerror($0,8312,$vararg_buffer22);
   // unreachable;
  }
 } while(0);
 $133 = ((($0)) + 28|0);
 $134 = load4($133);
 $135 = load4($$pre94);
 $136 = (($134) - ($135))|0;
 $137 = ($136|0)<(32);
 $138 = $135;
 if ($137) {
  _luaD_growstack($0,1);
  $$pre = load4($$pre94);
  $141 = $$pre;
 } else {
  $141 = $138;
 }
 $139 = (_strlen($$0$lcssa)|0);
 $140 = (_luaS_newlstr($0,$$0$lcssa,$139)|0);
 store4($141,$140);
 $142 = ((($140)) + 4|0);
 $143 = load1($142);
 $144 = $143 | 64;
 $145 = $144&255;
 $146 = ((($141)) + 8|0);
 store4($146,$145);
 _luaD_inctop($0);
 $147 = ($$076$lcssa|0)==(0);
 if ($147) {
  $149 = load4($$pre94);
  $150 = ((($149)) + -16|0);
  $151 = load4($150);
  $152 = ((($151)) + 16|0);
  STACKTOP = sp;return ($152|0);
 }
 $148 = $$076$lcssa | 1;
 _luaV_concat($0,$148);
 $149 = load4($$pre94);
 $150 = ((($149)) + -16|0);
 $151 = load4($150);
 $152 = ((($151)) + 16|0);
 STACKTOP = sp;return ($152|0);
}
function _luaO_pushfstring($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 store4($2,$varargs);
 $3 = (_luaO_pushvfstring($0,$1,$2)|0);
 STACKTOP = sp;return ($3|0);
}
function _luaO_chunkid($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$053 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_strlen($1)|0);
 $4 = load1($1);
 switch ($4<<24>>24) {
 case 61:  {
  $5 = ($3>>>0)>($2>>>0);
  $6 = ((($1)) + 1|0);
  if ($5) {
   $7 = (($2) + -1)|0;
   _memcpy(($0|0),($6|0),($7|0))|0;
   $8 = (($0) + ($7)|0);
   store1($8,0);
   return;
  } else {
   _memcpy(($0|0),($6|0),($3|0))|0;
   return;
  }
  break;
 }
 case 64:  {
  $9 = ($3>>>0)>($2>>>0);
  if ($9) {
   ; store2($0,load2(10729,1),1); store1($0+2 | 0,load1(10729+2 | 0,1),1);
   $11 = ((($0)) + 3|0);
   $12 = (($2) + -3)|0;
   $13 = ((($1)) + 1|0);
   $14 = (($13) + ($3)|0);
   $15 = (3 - ($2))|0;
   $16 = (($14) + ($15)|0);
   _memcpy(($11|0),($16|0),($12|0))|0;
   return;
  } else {
   $10 = ((($1)) + 1|0);
   _memcpy(($0|0),($10|0),($3|0))|0;
   return;
  }
  break;
 }
 default: {
  $17 = (_strchr($1,10)|0);
  ; store8($0,load8(8355,1),1); store1($0+8 | 0,load1(8355+8 | 0,1),1);
  $18 = ((($0)) + 9|0);
  $19 = (($2) + -15)|0;
  $20 = ($3>>>0)<($19>>>0);
  $21 = ($17|0)==(0|0);
  $or$cond = $20 & $21;
  if ($or$cond) {
   _memcpy(($18|0),($1|0),($3|0))|0;
   $22 = (($18) + ($3)|0);
   $$0 = $22;
  } else {
   $23 = $17;
   $24 = $1;
   $25 = (($23) - ($24))|0;
   $$053 = $21 ? $3 : $25;
   $26 = ($$053>>>0)>($19>>>0);
   $spec$select = $26 ? $19 : $$053;
   _memcpy(($18|0),($1|0),($spec$select|0))|0;
   $27 = (($18) + ($spec$select)|0);
   ; store2($27,load2(10729,1),1); store1($27+2 | 0,load1(10729+2 | 0,1),1);
   $28 = ((($27)) + 3|0);
   $$0 = $28;
  }
  ; store2($$0,load2(8365,1),1); store1($$0+2 | 0,load1(8365+2 | 0,1),1);
  return;
 }
 }
}
function _luaY_parser($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$idx$val$i$i = 0, $$pr$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $6 = sp + 152|0;
 $7 = sp + 80|0;
 $8 = sp;
 $9 = sp + 104|0;
 $10 = (_luaF_newLclosure($0,1)|0);
 $11 = ((($0)) + 12|0);
 $12 = load4($11);
 store4($12,$10);
 $13 = ((($12)) + 8|0);
 store4($13,70);
 _luaD_inctop($0);
 $14 = (_luaH_new($0)|0);
 $15 = ((($8)) + 64|0);
 store4($15,$14);
 $16 = load4($11);
 store4($16,$14);
 $17 = ((($16)) + 8|0);
 store4($17,69);
 _luaD_inctop($0);
 $18 = (_luaF_newproto($0)|0);
 $19 = ((($10)) + 12|0);
 store4($19,$18);
 store4($9,$18);
 $20 = (_luaS_new($0,$4)|0);
 $21 = ((($18)) + 72|0);
 store4($21,$20);
 $22 = ((($8)) + 60|0);
 store4($22,$2);
 $23 = ((($8)) + 68|0);
 store4($23,$3);
 $24 = ((($3)) + 28|0);
 store4($24,0);
 $25 = ((($3)) + 16|0);
 store4($25,0);
 $26 = ((($3)) + 4|0);
 store4($26,0);
 _luaX_setinput($0,$8,$1,$20,$5);
 $27 = ((($8)) + 48|0);
 $28 = load4($27);
 $29 = ((($9)) + 4|0);
 store4($29,$28);
 $30 = ((($9)) + 8|0);
 store4($30,$8);
 store4($27,$9);
 $31 = ((($9)) + 16|0);
 store4($31,0);
 $32 = ((($9)) + 20|0);
 store4($32,0);
 $33 = ((($9)) + 24|0);
 store4($33,-1);
 $34 = ((($9)) + 28|0);
 store4($34,0);
 $35 = ((($9)) + 32|0);
 store4($35,0);
 $36 = ((($9)) + 40|0);
 ; store4($36,0,4); store1($36+4|0,0,1);
 $37 = load4($23);
 $38 = ((($37)) + 4|0);
 $39 = load4($38);
 $40 = ((($9)) + 36|0);
 store4($40,$39);
 $41 = ((($9)) + 12|0);
 $42 = ((($8)) + 72|0);
 $43 = load4($42);
 store4($21,$43);
 $44 = ((($18)) + 8|0);
 store1($44,2);
 $45 = ((($6)) + 14|0);
 store1($45,0);
 $46 = ((($6)) + 12|0);
 store1($46,0);
 $47 = ((($37)) + 28|0);
 $48 = load4($47);
 $49 = ((($6)) + 4|0);
 store4($49,$48);
 $50 = ((($37)) + 16|0);
 $51 = load4($50);
 $52 = ((($6)) + 8|0);
 store4($52,$51);
 $53 = ((($6)) + 13|0);
 store1($53,0);
 store4($6,0);
 store4($41,$6);
 $54 = ((($18)) + 7|0);
 store1($54,1);
 $55 = ((($7)) + 16|0);
 store4($55,-1);
 $56 = ((($7)) + 20|0);
 store4($56,-1);
 store4($7,8);
 $57 = ((($7)) + 8|0);
 store4($57,0);
 $58 = ((($8)) + 76|0);
 $59 = load4($58);
 (_newupvalue($9,$59,$7)|0);
 _luaX_next($8);
 $60 = ((($8)) + 16|0);
 L1: while(1) {
  $$idx$val$i$i = load4($60);
  switch ($$idx$val$i$i|0) {
  case 277: case 289: case 262: case 261: case 260:  {
   $62 = $$idx$val$i$i;
   break L1;
   break;
  }
  default: {
  }
  }
  $61 = ($$idx$val$i$i|0)==(274);
  _statement($8);
  if ($61) {
   label = 4;
   break;
  }
 }
 if ((label|0) == 4) {
  $$pr$i = load4($60);
  $62 = $$pr$i;
 }
 $63 = ($62|0)==(289);
 if ($63) {
  _close_func($8);
  $64 = load4($11);
  $65 = ((($64)) + -16|0);
  store4($11,$65);
  STACKTOP = sp;return ($10|0);
 } else {
  _error_expected($8,289);
  // unreachable;
 }
 return (0)|0;
}
function _newupvalue($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$031 = 0, $$pre = 0, $$pre$phi35Z2D = 0, $$pre33 = 0, $$pre34 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = load4($0);
 $4 = ((($3)) + 12|0);
 $5 = load4($4);
 $6 = ((($0)) + 43|0);
 $7 = load1($6);
 $8 = ($7<<24>>24)==(-1);
 if ($8) {
  _errorlimit($0,255,8933);
  // unreachable;
 }
 $9 = $7&255;
 $10 = ($5|0)>($9|0);
 if ($10) {
  $19 = $5;
 } else {
  $11 = ((($0)) + 8|0);
  $12 = load4($11);
  $13 = ((($12)) + 52|0);
  $14 = load4($13);
  $15 = ((($3)) + 64|0);
  $16 = load4($15);
  $17 = (_luaM_growaux_($14,$16,$4,8,255,8933)|0);
  store4($15,$17);
  $$pre = load4($4);
  $19 = $$pre;
 }
 $18 = ($5|0)<($19|0);
 $20 = ((($3)) + 64|0);
 $21 = load4($20);
 if ($18) {
  $$031 = $5;
  while(1) {
   $22 = (($$031) + 1)|0;
   $23 = (($21) + ($$031<<3)|0);
   store4($23,0);
   $24 = ($22|0)<($19|0);
   if ($24) {
    $$031 = $22;
   } else {
    break;
   }
  }
 }
 $25 = load4($2);
 $26 = ($25|0)==(8);
 $27 = $26&1;
 $28 = load1($6);
 $29 = $28&255;
 $30 = (((($21) + ($29<<3)|0)) + 4|0);
 store1($30,$27);
 $31 = ((($2)) + 8|0);
 $32 = load4($31);
 $33 = $32&255;
 $34 = (((($21) + ($29<<3)|0)) + 5|0);
 store1($34,$33);
 $35 = (($21) + ($29<<3)|0);
 store4($35,$1);
 $36 = ((($3)) + 5|0);
 $37 = load1($36);
 $38 = $37 & 4;
 $39 = ($38<<24>>24)==(0);
 if ($39) {
  $$pre$phi35Z2D = $29;$49 = $28;
  $48 = (($49) + 1)<<24>>24;
  store1($6,$48);
  return ($$pre$phi35Z2D|0);
 }
 $40 = ((($1)) + 5|0);
 $41 = load1($40);
 $42 = $41 & 3;
 $43 = ($42<<24>>24)==(0);
 if ($43) {
  $$pre$phi35Z2D = $29;$49 = $28;
  $48 = (($49) + 1)<<24>>24;
  store1($6,$48);
  return ($$pre$phi35Z2D|0);
 }
 $44 = ((($0)) + 8|0);
 $45 = load4($44);
 $46 = ((($45)) + 52|0);
 $47 = load4($46);
 _luaC_barrier_($47,$3,$1);
 $$pre33 = load1($6);
 $$pre34 = $$pre33&255;
 $$pre$phi35Z2D = $$pre34;$49 = $$pre33;
 $48 = (($49) + 1)<<24>>24;
 store1($6,$48);
 return ($$pre$phi35Z2D|0);
}
function _statement($0) {
 $0 = $0|0;
 var $$0$i$i39$lcssa = 0, $$0$i$i3995 = 0, $$0$i$i48 = 0, $$0$i16$i98 = 0, $$0$i23$i$lcssa = 0, $$0$i23$i104 = 0, $$0$i57 = 0, $$0$i84 = 0, $$0$i86$lcssa = 0, $$0$i8694 = 0, $$01$i$i72 = 0, $$013$i$i = 0, $$013$i102 = 0, $$015$i$i = 0, $$021$i = 0, $$1$i$i = 0, $$idx = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i$i = 0;
 var $$idx$val$i$i$i = 0, $$idx$val$i$i$i35 = 0, $$idx$val$i$i$i47 = 0, $$idx$val$i$i42 = 0, $$idx$val$i$i50 = 0, $$idx$val$i$i61 = 0, $$idx$val$i59 = 0, $$idx$val$i78 = 0, $$idx$val$idx$i = 0, $$idx$val$idx$i$i = 0, $$idx$val$idx$i$i66 = 0, $$idx$val$idx$val$i = 0, $$idx$val$idx$val$i$i = 0, $$idx$val$idx$val$i$i67 = 0, $$idx10$i = 0, $$idx10$i$i = 0, $$idx10$i$i62 = 0, $$idx10$val$i = 0, $$idx10$val$i$i = 0, $$idx10$val$i$i63 = 0;
 var $$idx10$val$idx$i$i = 0, $$idx10$val$idx$i$i68 = 0, $$idx10$val$idx$val$i$i = 0, $$idx10$val$idx$val$i$i69 = 0, $$idx10$val$idx$val$idx$val$i$i = 0, $$idx10$val$idx$val$idx$val$i$i71 = 0, $$idx11$i$i = 0, $$idx11$i$i64 = 0, $$idx11$val$i = 0, $$idx11$val$i$i = 0, $$idx11$val$i$i65 = 0, $$idx33 = 0, $$idx33$val = 0, $$idx9$i = 0, $$idx9$val$i = 0, $$idx9$val$idx$i = 0, $$idx9$val$idx$val$i = 0, $$idx9$val$idx$val$idx$val$i = 0, $$off$i = 0, $$pr = 0;
 var $$pr89 = 0, $$pre = 0, $$pre$i$i = 0, $$pre$i24$i = 0, $$pre117 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0;
 var $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0;
 var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0;
 var $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0;
 var $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0;
 var $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0;
 var $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0;
 var $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0;
 var $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0;
 var $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0;
 var $437 = 0, $438 = 0, $439 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond$i = 0, $phitmp = 0, $switch$i = 0, $vararg_buffer = 0, $vararg_buffer13 = 0, $vararg_buffer18 = 0, $vararg_buffer23 = 0, $vararg_buffer3 = 0, $vararg_buffer8 = 0, $vararg_ptr1 = 0, $vararg_ptr11 = 0, $vararg_ptr12 = 0, $vararg_ptr16 = 0, $vararg_ptr17 = 0, $vararg_ptr2 = 0, $vararg_ptr21 = 0;
 var $vararg_ptr22 = 0, $vararg_ptr26 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $vararg_buffer23 = sp + 160|0;
 $vararg_buffer18 = sp + 144|0;
 $vararg_buffer13 = sp + 128|0;
 $vararg_buffer8 = sp + 112|0;
 $vararg_buffer3 = sp + 96|0;
 $vararg_buffer = sp + 80|0;
 $1 = sp + 48|0;
 $2 = sp + 24|0;
 $3 = sp;
 $4 = ((($0)) + 4|0);
 $5 = load4($4);
 $$idx = ((($0)) + 48|0);
 $$idx$val = load4($$idx);
 $$idx33 = ((($0)) + 52|0);
 $$idx33$val = load4($$idx33);
 $6 = ((($$idx33$val)) + 110|0);
 $7 = load2($6);
 $8 = (($7) + 1)<<16>>16;
 store2($6,$8);
 $9 = ($8&65535)>(200);
 if ($9) {
  _errorlimit($$idx$val,200,8527);
  // unreachable;
 }
 $10 = ((($0)) + 16|0);
 $11 = load4($10);
 do {
  switch ($11|0) {
  case 59:  {
   _luaX_next($0);
   $431 = load4($$idx);
   $432 = ((($431)) + 42|0);
   $433 = load1($432);
   $434 = ((($431)) + 44|0);
   store1($434,$433);
   $435 = load4($$idx33);
   $436 = ((($435)) + 110|0);
   $437 = load2($436);
   $438 = (($437) + -1)<<16>>16;
   store2($436,$438);
   STACKTOP = sp;return;
   break;
  }
  case 267:  {
   store4($2,-1);
   _test_then_block($0,$2);
   L17: while(1) {
    $12 = load4($10);
    switch ($12|0) {
    case 260:  {
     label = 8;
     break L17;
     break;
    }
    case 261:  {
     break;
    }
    default: {
     $32 = $12;
     break L17;
    }
    }
    _test_then_block($0,$2);
   }
   if ((label|0) == 8) {
    _luaX_next($0);
    $13 = load4($$idx);
    $14 = ((($1)) + 14|0);
    store1($14,0);
    $15 = ((($13)) + 42|0);
    $16 = load1($15);
    $17 = ((($1)) + 12|0);
    store1($17,$16);
    $18 = ((($13)) + 8|0);
    $19 = load4($18);
    $20 = ((($19)) + 68|0);
    $21 = load4($20);
    $22 = ((($21)) + 28|0);
    $23 = load4($22);
    $24 = ((($1)) + 4|0);
    store4($24,$23);
    $25 = ((($21)) + 16|0);
    $26 = load4($25);
    $27 = ((($1)) + 8|0);
    store4($27,$26);
    $28 = ((($1)) + 13|0);
    store1($28,0);
    $29 = ((($13)) + 12|0);
    $30 = load4($29);
    store4($1,$30);
    store4($29,$1);
    L22: while(1) {
     $$idx$val$i$i$i = load4($10);
     switch ($$idx$val$i$i$i|0) {
     case 277: case 289: case 262: case 261: case 260:  {
      break L22;
      break;
     }
     default: {
     }
     }
     $31 = ($$idx$val$i$i$i|0)==(274);
     _statement($0);
     if ($31) {
      break;
     }
    }
    _leaveblock($13);
    $$pr = load4($10);
    $32 = $$pr;
   }
   $33 = ($32|0)==(262);
   if ($33) {
    _luaX_next($0);
    $40 = load4($2);
    _luaK_patchtohere($$idx$val,$40);
    $431 = load4($$idx);
    $432 = ((($431)) + 42|0);
    $433 = load1($432);
    $434 = ((($431)) + 44|0);
    store1($434,$433);
    $435 = load4($$idx33);
    $436 = ((($435)) + 110|0);
    $437 = load2($436);
    $438 = (($437) + -1)<<16>>16;
    store2($436,$438);
    STACKTOP = sp;return;
   }
   $34 = load4($4);
   $35 = ($34|0)==($5|0);
   if ($35) {
    _error_expected($0,262);
    // unreachable;
   } else {
    $36 = load4($$idx33);
    $37 = (_luaX_token2str($0,262)|0);
    $38 = (_luaX_token2str($0,267)|0);
    store4($vararg_buffer,$37);
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    store4($vararg_ptr1,$38);
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    store4($vararg_ptr2,$5);
    $39 = (_luaO_pushfstring($36,8536,$vararg_buffer)|0);
    _luaX_syntaxerror($0,$39);
    // unreachable;
   }
   break;
  }
  case 278:  {
   _luaX_next($0);
   $41 = (_luaK_getlabel($$idx$val)|0);
   (_subexpr($0,$1,0)|0);
   $42 = load4($1);
   $43 = ($42|0)==(1);
   if ($43) {
    store4($1,3);
   }
   $44 = load4($$idx);
   _luaK_goiftrue($44,$1);
   $45 = ((($1)) + 20|0);
   $46 = load4($45);
   $47 = ((($2)) + 14|0);
   store1($47,1);
   $48 = ((($$idx$val)) + 42|0);
   $49 = load1($48);
   $50 = ((($2)) + 12|0);
   store1($50,$49);
   $51 = ((($$idx$val)) + 8|0);
   $52 = load4($51);
   $53 = ((($52)) + 68|0);
   $54 = load4($53);
   $55 = ((($54)) + 28|0);
   $56 = load4($55);
   $57 = ((($2)) + 4|0);
   store4($57,$56);
   $58 = ((($54)) + 16|0);
   $59 = load4($58);
   $60 = ((($2)) + 8|0);
   store4($60,$59);
   $61 = ((($2)) + 13|0);
   store1($61,0);
   $62 = ((($$idx$val)) + 12|0);
   $63 = load4($62);
   store4($2,$63);
   store4($62,$2);
   $64 = load4($10);
   $65 = ($64|0)==(259);
   if (!($65)) {
    _error_expected($0,259);
    // unreachable;
   }
   _luaX_next($0);
   $66 = load4($$idx);
   $67 = ((($1)) + 14|0);
   store1($67,0);
   $68 = ((($66)) + 42|0);
   $69 = load1($68);
   $70 = ((($1)) + 12|0);
   store1($70,$69);
   $71 = ((($66)) + 8|0);
   $72 = load4($71);
   $73 = ((($72)) + 68|0);
   $74 = load4($73);
   $75 = ((($74)) + 28|0);
   $76 = load4($75);
   $77 = ((($1)) + 4|0);
   store4($77,$76);
   $78 = ((($74)) + 16|0);
   $79 = load4($78);
   $80 = ((($1)) + 8|0);
   store4($80,$79);
   $81 = ((($1)) + 13|0);
   store1($81,0);
   $82 = ((($66)) + 12|0);
   $83 = load4($82);
   store4($1,$83);
   store4($82,$1);
   L41: while(1) {
    $$idx$val$i$i$i35 = load4($10);
    switch ($$idx$val$i$i$i35|0) {
    case 277: case 289: case 262: case 261: case 260:  {
     break L41;
     break;
    }
    default: {
    }
    }
    $84 = ($$idx$val$i$i$i35|0)==(274);
    _statement($0);
    if ($84) {
     break;
    }
   }
   _leaveblock($66);
   $85 = (_luaK_jump($$idx$val)|0);
   _luaK_patchlist($$idx$val,$85,$41);
   $86 = load4($10);
   $87 = ($86|0)==(262);
   if ($87) {
    _luaX_next($0);
    _leaveblock($$idx$val);
    _luaK_patchtohere($$idx$val,$46);
    $431 = load4($$idx);
    $432 = ((($431)) + 42|0);
    $433 = load1($432);
    $434 = ((($431)) + 44|0);
    store1($434,$433);
    $435 = load4($$idx33);
    $436 = ((($435)) + 110|0);
    $437 = load2($436);
    $438 = (($437) + -1)<<16>>16;
    store2($436,$438);
    STACKTOP = sp;return;
   }
   $88 = load4($4);
   $89 = ($88|0)==($5|0);
   if ($89) {
    _error_expected($0,262);
    // unreachable;
   } else {
    $90 = load4($$idx33);
    $91 = (_luaX_token2str($0,262)|0);
    $92 = (_luaX_token2str($0,278)|0);
    store4($vararg_buffer3,$91);
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    store4($vararg_ptr6,$92);
    $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
    store4($vararg_ptr7,$5);
    $93 = (_luaO_pushfstring($90,8536,$vararg_buffer3)|0);
    _luaX_syntaxerror($0,$93);
    // unreachable;
   }
   break;
  }
  case 259:  {
   _luaX_next($0);
   $94 = load4($$idx);
   $95 = ((($1)) + 14|0);
   store1($95,0);
   $96 = ((($94)) + 42|0);
   $97 = load1($96);
   $98 = ((($1)) + 12|0);
   store1($98,$97);
   $99 = ((($94)) + 8|0);
   $100 = load4($99);
   $101 = ((($100)) + 68|0);
   $102 = load4($101);
   $103 = ((($102)) + 28|0);
   $104 = load4($103);
   $105 = ((($1)) + 4|0);
   store4($105,$104);
   $106 = ((($102)) + 16|0);
   $107 = load4($106);
   $108 = ((($1)) + 8|0);
   store4($108,$107);
   $109 = ((($1)) + 13|0);
   store1($109,0);
   $110 = ((($94)) + 12|0);
   $111 = load4($110);
   store4($1,$111);
   store4($110,$1);
   L53: while(1) {
    $$idx$val$i$i = load4($10);
    switch ($$idx$val$i$i|0) {
    case 277: case 289: case 262: case 261: case 260:  {
     break L53;
     break;
    }
    default: {
    }
    }
    $112 = ($$idx$val$i$i|0)==(274);
    _statement($0);
    if ($112) {
     break;
    }
   }
   _leaveblock($94);
   $113 = load4($10);
   $114 = ($113|0)==(262);
   if ($114) {
    _luaX_next($0);
    $431 = load4($$idx);
    $432 = ((($431)) + 42|0);
    $433 = load1($432);
    $434 = ((($431)) + 44|0);
    store1($434,$433);
    $435 = load4($$idx33);
    $436 = ((($435)) + 110|0);
    $437 = load2($436);
    $438 = (($437) + -1)<<16>>16;
    store2($436,$438);
    STACKTOP = sp;return;
   }
   $115 = load4($4);
   $116 = ($115|0)==($5|0);
   if ($116) {
    _error_expected($0,262);
    // unreachable;
   } else {
    $117 = load4($$idx33);
    $118 = (_luaX_token2str($0,262)|0);
    $119 = (_luaX_token2str($0,259)|0);
    store4($vararg_buffer8,$118);
    $vararg_ptr11 = ((($vararg_buffer8)) + 4|0);
    store4($vararg_ptr11,$119);
    $vararg_ptr12 = ((($vararg_buffer8)) + 8|0);
    store4($vararg_ptr12,$5);
    $120 = (_luaO_pushfstring($117,8536,$vararg_buffer8)|0);
    _luaX_syntaxerror($0,$120);
    // unreachable;
   }
   break;
  }
  case 264:  {
   $121 = ((($2)) + 14|0);
   store1($121,1);
   $122 = ((($$idx$val)) + 42|0);
   $123 = load1($122);
   $124 = ((($2)) + 12|0);
   store1($124,$123);
   $125 = ((($$idx$val)) + 8|0);
   $126 = load4($125);
   $127 = ((($126)) + 68|0);
   $128 = load4($127);
   $129 = ((($128)) + 28|0);
   $130 = load4($129);
   $131 = ((($2)) + 4|0);
   store4($131,$130);
   $132 = ((($128)) + 16|0);
   $133 = load4($132);
   $134 = ((($2)) + 8|0);
   store4($134,$133);
   $135 = ((($2)) + 13|0);
   store1($135,0);
   $136 = ((($$idx$val)) + 12|0);
   $137 = load4($136);
   store4($2,$137);
   store4($136,$2);
   _luaX_next($0);
   $138 = load4($10);
   $139 = ($138|0)==(292);
   if (!($139)) {
    _error_expected($0,292);
    // unreachable;
   }
   $140 = ((($0)) + 24|0);
   $141 = load4($140);
   _luaX_next($0);
   $142 = load4($10);
   switch ($142|0) {
   case 61:  {
    $143 = load4($$idx);
    $144 = ((($143)) + 44|0);
    $145 = load1($144);
    $146 = $145&255;
    $147 = (_luaX_newstring($0,8573,11)|0);
    _new_localvar($0,$147);
    $148 = (_luaX_newstring($0,8585,11)|0);
    _new_localvar($0,$148);
    $149 = (_luaX_newstring($0,8597,10)|0);
    _new_localvar($0,$149);
    _new_localvar($0,$141);
    $150 = load4($10);
    $151 = ($150|0)==(61);
    if (!($151)) {
     _error_expected($0,61);
     // unreachable;
    }
    _luaX_next($0);
    (_subexpr($0,$1,0)|0);
    $152 = load4($$idx);
    _luaK_exp2nextreg($152,$1);
    $153 = load4($10);
    $154 = ($153|0)==(44);
    if (!($154)) {
     _error_expected($0,44);
     // unreachable;
    }
    _luaX_next($0);
    (_subexpr($0,$1,0)|0);
    $155 = load4($$idx);
    _luaK_exp2nextreg($155,$1);
    $156 = load4($10);
    $157 = ($156|0)==(44);
    if ($157) {
     _luaX_next($0);
     (_subexpr($0,$1,0)|0);
     $158 = load4($$idx);
     _luaK_exp2nextreg($158,$1);
    } else {
     $159 = load1($144);
     $160 = $159&255;
     $161 = (_luaK_intK($143,i64_const(1,0))|0);
     (_luaK_codek($143,$160,$161)|0);
     _luaK_reserveregs($143,1);
    }
    _forbody($0,$146,$5,1,1);
    break;
   }
   case 268: case 44:  {
    $162 = load4($$idx);
    $163 = ((($162)) + 44|0);
    $164 = load1($163);
    $165 = $164&255;
    $166 = (_luaX_newstring($0,8608,15)|0);
    _new_localvar($0,$166);
    $167 = (_luaX_newstring($0,8624,11)|0);
    _new_localvar($0,$167);
    $168 = (_luaX_newstring($0,8636,13)|0);
    _new_localvar($0,$168);
    _new_localvar($0,$141);
    $169 = load4($10);
    $170 = ($169|0)==(44);
    do {
     if ($170) {
      $$0$i$i3995 = 4;
      while(1) {
       _luaX_next($0);
       $171 = load4($10);
       $172 = ($171|0)==(292);
       if (!($172)) {
        label = 51;
        break;
       }
       $173 = load4($140);
       _luaX_next($0);
       _new_localvar($0,$173);
       $174 = (($$0$i$i3995) + 1)|0;
       $175 = load4($10);
       $176 = ($175|0)==(44);
       if ($176) {
        $$0$i$i3995 = $174;
       } else {
        label = 53;
        break;
       }
      }
      if ((label|0) == 51) {
       _error_expected($0,292);
       // unreachable;
      }
      else if ((label|0) == 53) {
       $phitmp = (($$0$i$i3995) + -2)|0;
       $$0$i$i39$lcssa = $phitmp;$177 = $175;
       break;
      }
     } else {
      $$0$i$i39$lcssa = 1;$177 = $169;
     }
    } while(0);
    $178 = ($177|0)==(268);
    if (!($178)) {
     _error_expected($0,268);
     // unreachable;
    }
    _luaX_next($0);
    $179 = load4($4);
    (_subexpr($0,$1,0)|0);
    $180 = load4($10);
    $181 = ($180|0)==(44);
    if ($181) {
     $$0$i8694 = 1;
     while(1) {
      _luaX_next($0);
      $182 = load4($$idx);
      _luaK_exp2nextreg($182,$1);
      (_subexpr($0,$1,0)|0);
      $183 = (($$0$i8694) + 1)|0;
      $184 = load4($10);
      $185 = ($184|0)==(44);
      if ($185) {
       $$0$i8694 = $183;
      } else {
       $$0$i86$lcssa = $183;
       break;
      }
     }
    } else {
     $$0$i86$lcssa = 1;
    }
    _adjust_assign($0,3,$$0$i86$lcssa,$1);
    _luaK_checkstack($162,3);
    _forbody($0,$165,$179,$$0$i$i39$lcssa,0);
    break;
   }
   default: {
    _luaX_syntaxerror($0,8650);
    // unreachable;
   }
   }
   $186 = load4($10);
   $187 = ($186|0)==(262);
   if ($187) {
    _luaX_next($0);
    _leaveblock($$idx$val);
    $431 = load4($$idx);
    $432 = ((($431)) + 42|0);
    $433 = load1($432);
    $434 = ((($431)) + 44|0);
    store1($434,$433);
    $435 = load4($$idx33);
    $436 = ((($435)) + 110|0);
    $437 = load2($436);
    $438 = (($437) + -1)<<16>>16;
    store2($436,$438);
    STACKTOP = sp;return;
   }
   $188 = load4($4);
   $189 = ($188|0)==($5|0);
   if ($189) {
    _error_expected($0,262);
    // unreachable;
   } else {
    $190 = load4($$idx33);
    $191 = (_luaX_token2str($0,262)|0);
    $192 = (_luaX_token2str($0,264)|0);
    store4($vararg_buffer13,$191);
    $vararg_ptr16 = ((($vararg_buffer13)) + 4|0);
    store4($vararg_ptr16,$192);
    $vararg_ptr17 = ((($vararg_buffer13)) + 8|0);
    store4($vararg_ptr17,$5);
    $193 = (_luaO_pushfstring($190,8536,$vararg_buffer13)|0);
    _luaX_syntaxerror($0,$193);
    // unreachable;
   }
   break;
  }
  case 273:  {
   $194 = (_luaK_getlabel($$idx$val)|0);
   $195 = ((($2)) + 14|0);
   store1($195,1);
   $196 = ((($$idx$val)) + 42|0);
   $197 = load1($196);
   $198 = ((($2)) + 12|0);
   store1($198,$197);
   $199 = ((($$idx$val)) + 8|0);
   $200 = load4($199);
   $201 = ((($200)) + 68|0);
   $202 = load4($201);
   $203 = ((($202)) + 28|0);
   $204 = load4($203);
   $205 = ((($2)) + 4|0);
   store4($205,$204);
   $206 = ((($202)) + 16|0);
   $207 = load4($206);
   $208 = ((($2)) + 8|0);
   store4($208,$207);
   $209 = ((($2)) + 13|0);
   store1($209,0);
   $210 = ((($$idx$val)) + 12|0);
   $211 = load4($210);
   store4($2,$211);
   $212 = ((($3)) + 14|0);
   store1($212,0);
   $213 = ((($3)) + 12|0);
   store1($213,$197);
   $214 = ((($3)) + 4|0);
   store4($214,$204);
   $215 = ((($3)) + 8|0);
   store4($215,$207);
   $216 = ((($3)) + 13|0);
   store1($216,0);
   $217 = $2;
   store4($3,$217);
   store4($210,$3);
   _luaX_next($0);
   L108: while(1) {
    $$idx$val$i$i42 = load4($10);
    switch ($$idx$val$i$i42|0) {
    case 277: case 289: case 262: case 261: case 260:  {
     $219 = $$idx$val$i$i42;
     break L108;
     break;
    }
    default: {
    }
    }
    $218 = ($$idx$val$i$i42|0)==(274);
    _statement($0);
    if ($218) {
     label = 69;
     break;
    }
   }
   if ((label|0) == 69) {
    $$pre117 = load4($10);
    $219 = $$pre117;
   }
   $220 = ($219|0)==(277);
   if (!($220)) {
    $221 = load4($4);
    $222 = ($221|0)==($5|0);
    if ($222) {
     _error_expected($0,277);
     // unreachable;
    } else {
     $223 = load4($$idx33);
     $224 = (_luaX_token2str($0,277)|0);
     $225 = (_luaX_token2str($0,273)|0);
     store4($vararg_buffer18,$224);
     $vararg_ptr21 = ((($vararg_buffer18)) + 4|0);
     store4($vararg_ptr21,$225);
     $vararg_ptr22 = ((($vararg_buffer18)) + 8|0);
     store4($vararg_ptr22,$5);
     $226 = (_luaO_pushfstring($223,8536,$vararg_buffer18)|0);
     _luaX_syntaxerror($0,$226);
     // unreachable;
    }
   }
   _luaX_next($0);
   (_subexpr($0,$1,0)|0);
   $227 = load4($1);
   $228 = ($227|0)==(1);
   if ($228) {
    store4($1,3);
   }
   $229 = load4($$idx);
   _luaK_goiftrue($229,$1);
   $230 = ((($1)) + 20|0);
   $231 = load4($230);
   $232 = load1($216);
   $233 = ($232<<24>>24)==(0);
   if (!($233)) {
    $234 = load1($213);
    $235 = $234&255;
    _luaK_patchclose($$idx$val,$231,$235);
   }
   _leaveblock($$idx$val);
   _luaK_patchlist($$idx$val,$231,$194);
   _leaveblock($$idx$val);
   $431 = load4($$idx);
   $432 = ((($431)) + 42|0);
   $433 = load1($432);
   $434 = ((($431)) + 44|0);
   store1($434,$433);
   $435 = load4($$idx33);
   $436 = ((($435)) + 110|0);
   $437 = load2($436);
   $438 = (($437) + -1)<<16>>16;
   store2($436,$438);
   STACKTOP = sp;return;
   break;
  }
  case 265:  {
   _luaX_next($0);
   $236 = load4($10);
   $237 = ($236|0)==(292);
   if (!($237)) {
    _error_expected($0,292);
    // unreachable;
   }
   $238 = ((($0)) + 24|0);
   $239 = load4($238);
   _luaX_next($0);
   $240 = load4($$idx);
   _singlevaraux($240,$239,$2,1);
   $241 = load4($2);
   $242 = ($241|0)==(0);
   if ($242) {
    $243 = ((($0)) + 76|0);
    $244 = load4($243);
    _singlevaraux($240,$244,$2,1);
    $$idx$val$i$i$i47 = load4($$idx);
    $245 = (_luaK_stringK($$idx$val$i$i$i47,$239)|0);
    $246 = ((($1)) + 16|0);
    store4($246,-1);
    $247 = ((($1)) + 20|0);
    store4($247,-1);
    store4($1,4);
    $248 = ((($1)) + 8|0);
    store4($248,$245);
    _luaK_indexed($240,$2,$1);
   }
   L134: while(1) {
    $249 = load4($10);
    switch ($249|0) {
    case 58:  {
     label = 86;
     break L134;
     break;
    }
    case 46:  {
     break;
    }
    default: {
     $$0$i$i48 = 0;
     break L134;
    }
    }
    _fieldsel($0,$2);
   }
   if ((label|0) == 86) {
    _fieldsel($0,$2);
    $$0$i$i48 = 1;
   }
   _body($0,$3,$$0$i$i48,$5);
   $250 = load4($$idx);
   _luaK_storevar($250,$2,$3);
   $251 = load4($$idx);
   _luaK_fixline($251,$5);
   $431 = load4($$idx);
   $432 = ((($431)) + 42|0);
   $433 = load1($432);
   $434 = ((($431)) + 44|0);
   store1($434,$433);
   $435 = load4($$idx33);
   $436 = ((($435)) + 110|0);
   $437 = load2($436);
   $438 = (($437) + -1)<<16>>16;
   store2($436,$438);
   STACKTOP = sp;return;
   break;
  }
  case 269:  {
   _luaX_next($0);
   $252 = load4($10);
   $253 = ($252|0)==(265);
   if ($253) {
    _luaX_next($0);
    $254 = load4($$idx);
    $255 = load4($10);
    $256 = ($255|0)==(292);
    if (!($256)) {
     _error_expected($0,292);
     // unreachable;
    }
    $257 = ((($0)) + 24|0);
    $258 = load4($257);
    _luaX_next($0);
    _new_localvar($0,$258);
    $$idx11$val$i = load4($$idx);
    $259 = ((($$idx11$val$i)) + 42|0);
    $260 = load1($259);
    $261 = $260&255;
    $262 = (($261) + 1)|0;
    $263 = $262&255;
    store1($259,$263);
    $264 = ((($$idx11$val$i)) + 16|0);
    $265 = load4($264);
    $266 = (($260) + 1)<<24>>24;
    $267 = $266&255;
    $$idx$val$i$i50 = load4($$idx11$val$i);
    $$idx10$i$i = ((($$idx11$val$i)) + 8|0);
    $$idx10$val$i$i = load4($$idx10$i$i);
    $$idx11$i$i = ((($$idx11$val$i)) + 36|0);
    $$idx11$val$i$i = load4($$idx11$i$i);
    $$idx$val$idx$i$i = ((($$idx$val$i$i50)) + 60|0);
    $$idx$val$idx$val$i$i = load4($$idx$val$idx$i$i);
    $$idx10$val$idx$i$i = ((($$idx10$val$i$i)) + 68|0);
    $$idx10$val$idx$val$i$i = load4($$idx10$val$idx$i$i);
    $$idx10$val$idx$val$idx$val$i$i = load4($$idx10$val$idx$val$i$i);
    $268 = (($$idx11$val$i$i) + ($267))|0;
    $269 = (($268) + -1)|0;
    $270 = (($$idx10$val$idx$val$idx$val$i$i) + ($269<<1)|0);
    $271 = load2($270);
    $272 = $271 << 16 >> 16;
    $273 = (((($$idx$val$idx$val$i$i) + (($272*12)|0)|0)) + 4|0);
    store4($273,$265);
    $274 = load4($4);
    _body($0,$1,0,$274);
    $275 = ((($254)) + 16|0);
    $276 = load4($275);
    $277 = ((($1)) + 8|0);
    $278 = load4($277);
    $$idx$val$i = load4($254);
    $$idx9$i = ((($254)) + 8|0);
    $$idx9$val$i = load4($$idx9$i);
    $$idx10$i = ((($254)) + 36|0);
    $$idx10$val$i = load4($$idx10$i);
    $$idx$val$idx$i = ((($$idx$val$i)) + 60|0);
    $$idx$val$idx$val$i = load4($$idx$val$idx$i);
    $$idx9$val$idx$i = ((($$idx9$val$i)) + 68|0);
    $$idx9$val$idx$val$i = load4($$idx9$val$idx$i);
    $$idx9$val$idx$val$idx$val$i = load4($$idx9$val$idx$val$i);
    $279 = (($$idx10$val$i) + ($278))|0;
    $280 = (($$idx9$val$idx$val$idx$val$i) + ($279<<1)|0);
    $281 = load2($280);
    $282 = $281 << 16 >> 16;
    $283 = (((($$idx$val$idx$val$i) + (($282*12)|0)|0)) + 4|0);
    store4($283,$276);
    $431 = load4($$idx);
    $432 = ((($431)) + 42|0);
    $433 = load1($432);
    $434 = ((($431)) + 44|0);
    store1($434,$433);
    $435 = load4($$idx33);
    $436 = ((($435)) + 110|0);
    $437 = load2($436);
    $438 = (($437) + -1)<<16>>16;
    store2($436,$438);
    STACKTOP = sp;return;
   }
   $284 = ($252|0)==(292);
   if (!($284)) {
    _error_expected($0,292);
    // unreachable;
   }
   $285 = ((($0)) + 24|0);
   $$013$i102 = 0;
   L152: while(1) {
    $287 = load4($285);
    _luaX_next($0);
    _new_localvar($0,$287);
    $288 = (($$013$i102) + 1)|0;
    $289 = load4($10);
    switch ($289|0) {
    case 61:  {
     label = 97;
     break L152;
     break;
    }
    case 44:  {
     break;
    }
    default: {
     label = 100;
     break L152;
    }
    }
    _luaX_next($0);
    $$pr89 = load4($10);
    $286 = ($$pr89|0)==(292);
    if ($286) {
     $$013$i102 = $288;
    } else {
     label = 95;
     break;
    }
   }
   if ((label|0) == 95) {
    _error_expected($0,292);
    // unreachable;
   }
   else if ((label|0) == 97) {
    _luaX_next($0);
    (_subexpr($0,$1,0)|0);
    $290 = load4($10);
    $291 = ($290|0)==(44);
    if ($291) {
     $$0$i16$i98 = 1;
     while(1) {
      _luaX_next($0);
      $292 = load4($$idx);
      _luaK_exp2nextreg($292,$1);
      (_subexpr($0,$1,0)|0);
      $293 = (($$0$i16$i98) + 1)|0;
      $294 = load4($10);
      $295 = ($294|0)==(44);
      if ($295) {
       $$0$i16$i98 = $293;
      } else {
       $$0$i57 = $293;
       break;
      }
     }
    } else {
     $$0$i57 = 1;
    }
   }
   else if ((label|0) == 100) {
    store4($1,0);
    $$0$i57 = 0;
   }
   _adjust_assign($0,$288,$$0$i57,$1);
   $$idx$val$i59 = load4($$idx);
   $296 = ((($$idx$val$i59)) + 42|0);
   $297 = load1($296);
   $298 = $297&255;
   $299 = (($288) + ($298))|0;
   $300 = $299&255;
   store1($296,$300);
   $301 = ((($$idx$val$i59)) + 16|0);
   $302 = load4($301);
   $303 = $299 & 255;
   $$idx$val$i$i61 = load4($$idx$val$i59);
   $$idx10$i$i62 = ((($$idx$val$i59)) + 8|0);
   $$idx10$val$i$i63 = load4($$idx10$i$i62);
   $$idx11$i$i64 = ((($$idx$val$i59)) + 36|0);
   $$idx11$val$i$i65 = load4($$idx11$i$i64);
   $$idx$val$idx$i$i66 = ((($$idx$val$i$i61)) + 60|0);
   $$idx$val$idx$val$i$i67 = load4($$idx$val$idx$i$i66);
   $$idx10$val$idx$i$i68 = ((($$idx10$val$i$i63)) + 68|0);
   $$idx10$val$idx$val$i$i69 = load4($$idx10$val$idx$i$i68);
   $$idx10$val$idx$val$idx$val$i$i71 = load4($$idx10$val$idx$val$i$i69);
   $304 = (($$idx11$val$i$i65) + ($303))|0;
   $$01$i$i72 = $288;
   while(1) {
    $305 = (($304) - ($$01$i$i72))|0;
    $306 = (($$idx10$val$idx$val$idx$val$i$i71) + ($305<<1)|0);
    $307 = load2($306);
    $308 = $307 << 16 >> 16;
    $309 = (((($$idx$val$idx$val$i$i67) + (($308*12)|0)|0)) + 4|0);
    store4($309,$302);
    $310 = (($$01$i$i72) + -1)|0;
    $311 = ($310|0)==(0);
    if ($311) {
     break;
    } else {
     $$01$i$i72 = $310;
    }
   }
   $431 = load4($$idx);
   $432 = ((($431)) + 42|0);
   $433 = load1($432);
   $434 = ((($431)) + 44|0);
   store1($434,$433);
   $435 = load4($$idx33);
   $436 = ((($435)) + 110|0);
   $437 = load2($436);
   $438 = (($437) + -1)<<16>>16;
   store2($436,$438);
   STACKTOP = sp;return;
   break;
  }
  case 288:  {
   _luaX_next($0);
   $312 = load4($10);
   $313 = ($312|0)==(292);
   if (!($313)) {
    _error_expected($0,292);
    // unreachable;
   }
   $314 = ((($0)) + 24|0);
   $315 = load4($314);
   _luaX_next($0);
   $316 = load4($$idx);
   $317 = ((($0)) + 68|0);
   $318 = load4($317);
   $319 = ((($318)) + 24|0);
   $320 = ((($316)) + 12|0);
   $321 = load4($320);
   $322 = ((($321)) + 4|0);
   $323 = load4($322);
   $324 = ((($318)) + 28|0);
   $325 = load4($324);
   $326 = ($323|0)<($325|0);
   L171: do {
    if ($326) {
     $327 = load4($319);
     $$015$i$i = $323;
     while(1) {
      $328 = (($327) + ($$015$i$i<<4)|0);
      $329 = load4($328);
      $330 = ($329|0)==($315|0);
      if ($330) {
       break;
      }
      $340 = (($$015$i$i) + 1)|0;
      $341 = ($340|0)<($325|0);
      if ($341) {
       $$015$i$i = $340;
      } else {
       break L171;
      }
     }
     $331 = ((($316)) + 8|0);
     $332 = load4($331);
     $333 = ((($332)) + 52|0);
     $334 = load4($333);
     $335 = ((($315)) + 16|0);
     $336 = (((($327) + ($$015$i$i<<4)|0)) + 8|0);
     $337 = load4($336);
     store4($vararg_buffer23,$335);
     $vararg_ptr26 = ((($vararg_buffer23)) + 4|0);
     store4($vararg_ptr26,$337);
     $338 = (_luaO_pushfstring($334,8671,$vararg_buffer23)|0);
     $339 = load4($331);
     _semerror($339,$338);
     // unreachable;
    }
   } while(0);
   $342 = load4($10);
   $343 = ($342|0)==(288);
   if (!($343)) {
    _error_expected($0,288);
    // unreachable;
   }
   _luaX_next($0);
   $344 = (_luaK_getlabel($316)|0);
   $345 = load4($324);
   $346 = (($345) + 1)|0;
   $347 = ((($318)) + 32|0);
   $348 = load4($347);
   $349 = ($345|0)<($348|0);
   if ($349) {
    $$pre$i$i = load4($319);
    $354 = $$pre$i$i;
   } else {
    $350 = load4($$idx33);
    $351 = load4($319);
    $352 = (_luaM_growaux_($350,$351,$347,16,32767,8368)|0);
    store4($319,$352);
    $354 = $352;
   }
   $353 = (($354) + ($345<<4)|0);
   store4($353,$315);
   $355 = (((($354) + ($345<<4)|0)) + 8|0);
   store4($355,$5);
   $356 = load4($$idx);
   $357 = ((($356)) + 42|0);
   $358 = load1($357);
   $359 = (((($354) + ($345<<4)|0)) + 12|0);
   store1($359,$358);
   $360 = (((($354) + ($345<<4)|0)) + 4|0);
   store4($360,$344);
   store4($324,$346);
   L185: while(1) {
    $361 = load4($10);
    switch ($361|0) {
    case 289: case 262: case 261: case 260:  {
     label = 120;
     break L185;
     break;
    }
    case 288: case 59:  {
     break;
    }
    default: {
     label = 119;
     break L185;
    }
    }
    _statement($0);
   }
   if ((label|0) == 119) {
    $$pre = load4($319);
    $368 = $$pre;
   }
   else if ((label|0) == 120) {
    $362 = load4($320);
    $363 = ((($362)) + 12|0);
    $364 = load1($363);
    $365 = load4($319);
    $366 = (((($365) + ($345<<4)|0)) + 12|0);
    store1($366,$364);
    $368 = $365;
   }
   $367 = (($368) + ($345<<4)|0);
   $369 = load4($317);
   $370 = load4($$idx);
   $371 = ((($370)) + 12|0);
   $372 = load4($371);
   $373 = ((($372)) + 8|0);
   $374 = load4($373);
   $375 = ((($369)) + 16|0);
   $376 = load4($375);
   $377 = ($374|0)<($376|0);
   if (!($377)) {
    $431 = load4($$idx);
    $432 = ((($431)) + 42|0);
    $433 = load1($432);
    $434 = ((($431)) + 44|0);
    store1($434,$433);
    $435 = load4($$idx33);
    $436 = ((($435)) + 110|0);
    $437 = load2($436);
    $438 = (($437) + -1)<<16>>16;
    store2($436,$438);
    STACKTOP = sp;return;
   }
   $378 = ((($369)) + 12|0);
   $$013$i$i = $374;$439 = $376;
   while(1) {
    $379 = load4($378);
    $380 = (($379) + ($$013$i$i<<4)|0);
    $381 = load4($380);
    $382 = load4($367);
    $383 = ($381|0)==($382|0);
    if ($383) {
     _closegoto($0,$$013$i$i,$367);
     $$pre$i24$i = load4($375);
     $$1$i$i = $$013$i$i;$386 = $$pre$i24$i;
    } else {
     $384 = (($$013$i$i) + 1)|0;
     $$1$i$i = $384;$386 = $439;
    }
    $385 = ($$1$i$i|0)<($386|0);
    if ($385) {
     $$013$i$i = $$1$i$i;$439 = $386;
    } else {
     break;
    }
   }
   $431 = load4($$idx);
   $432 = ((($431)) + 42|0);
   $433 = load1($432);
   $434 = ((($431)) + 44|0);
   store1($434,$433);
   $435 = load4($$idx33);
   $436 = ((($435)) + 110|0);
   $437 = load2($436);
   $438 = (($437) + -1)<<16>>16;
   store2($436,$438);
   STACKTOP = sp;return;
   break;
  }
  case 274:  {
   _luaX_next($0);
   $387 = load4($$idx);
   $$idx$val$i78 = load4($10);
   L203: do {
    switch ($$idx$val$i78|0) {
    case 59: case 277: case 289: case 262: case 261: case 260:  {
     $$0$i84 = 0;$$021$i = 0;
     break;
    }
    default: {
     (_subexpr($0,$1,0)|0);
     $388 = load4($10);
     $389 = ($388|0)==(44);
     if ($389) {
      $$0$i23$i104 = 1;
      while(1) {
       _luaX_next($0);
       $390 = load4($$idx);
       _luaK_exp2nextreg($390,$1);
       (_subexpr($0,$1,0)|0);
       $391 = (($$0$i23$i104) + 1)|0;
       $392 = load4($10);
       $393 = ($392|0)==(44);
       if ($393) {
        $$0$i23$i104 = $391;
       } else {
        $$0$i23$i$lcssa = $391;
        break;
       }
      }
     } else {
      $$0$i23$i$lcssa = 1;
     }
     $394 = load4($1);
     $$off$i = (($394) + -13)|0;
     $switch$i = ($$off$i>>>0)<(2);
     if ($switch$i) {
      _luaK_setreturns($387,$1,-1);
      $395 = load4($1);
      $396 = ($395|0)==(13);
      $397 = ($$0$i23$i$lcssa|0)==(1);
      $or$cond$i = $397 & $396;
      if ($or$cond$i) {
       $398 = load4($387);
       $399 = ((($398)) + 48|0);
       $400 = load4($399);
       $401 = ((($1)) + 8|0);
       $402 = load4($401);
       $403 = (($400) + ($402<<2)|0);
       $404 = load4($403);
       $405 = $404 & -64;
       $406 = $405 | 37;
       store4($403,$406);
      }
      $407 = ((($387)) + 42|0);
      $408 = load1($407);
      $409 = $408&255;
      $$0$i84 = -1;$$021$i = $409;
      break L203;
     } else {
      $410 = ($$0$i23$i$lcssa|0)==(1);
      if ($410) {
       $411 = (_luaK_exp2anyreg($387,$1)|0);
       $$0$i84 = 1;$$021$i = $411;
       break L203;
      } else {
       _luaK_exp2nextreg($387,$1);
       $412 = ((($387)) + 42|0);
       $413 = load1($412);
       $414 = $413&255;
       $$0$i84 = $$0$i23$i$lcssa;$$021$i = $414;
       break L203;
      }
     }
    }
    }
   } while(0);
   _luaK_ret($387,$$021$i,$$0$i84);
   $415 = load4($10);
   $416 = ($415|0)==(59);
   if ($416) {
    _luaX_next($0);
   }
   $431 = load4($$idx);
   $432 = ((($431)) + 42|0);
   $433 = load1($432);
   $434 = ((($431)) + 44|0);
   store1($434,$433);
   $435 = load4($$idx33);
   $436 = ((($435)) + 110|0);
   $437 = load2($436);
   $438 = (($437) + -1)<<16>>16;
   store2($436,$438);
   STACKTOP = sp;return;
   break;
  }
  case 266: case 258:  {
   $417 = (_luaK_jump($$idx$val)|0);
   _gotostat($0,$417);
   $431 = load4($$idx);
   $432 = ((($431)) + 42|0);
   $433 = load1($432);
   $434 = ((($431)) + 44|0);
   store1($434,$433);
   $435 = load4($$idx33);
   $436 = ((($435)) + 110|0);
   $437 = load2($436);
   $438 = (($437) + -1)<<16>>16;
   store2($436,$438);
   STACKTOP = sp;return;
   break;
  }
  default: {
   $418 = ((($1)) + 8|0);
   _suffixedexp($0,$418);
   $419 = load4($10);
   L6: do {
    switch ($419|0) {
    case 44: case 61:  {
     store4($1,0);
     _assignment($0,$1,1);
     break;
    }
    default: {
     $420 = load4($418);
     $421 = ($420|0)==(13);
     if ($421) {
      $422 = load4($$idx$val);
      $423 = ((($422)) + 48|0);
      $424 = load4($423);
      $425 = ((($1)) + 16|0);
      $426 = load4($425);
      $427 = (($424) + ($426<<2)|0);
      $428 = load4($427);
      $429 = $428 & -8372225;
      $430 = $429 | 16384;
      store4($427,$430);
      break L6;
     } else {
      _luaX_syntaxerror($0,8709);
      // unreachable;
     }
    }
    }
   } while(0);
   $431 = load4($$idx);
   $432 = ((($431)) + 42|0);
   $433 = load1($432);
   $434 = ((($431)) + 44|0);
   store1($434,$433);
   $435 = load4($$idx33);
   $436 = ((($435)) + 110|0);
   $437 = load2($436);
   $438 = (($437) + -1)<<16>>16;
   store2($436,$438);
   STACKTOP = sp;return;
  }
  }
 } while(0);
}
function _error_expected($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = ((($0)) + 52|0);
 $3 = load4($2);
 $4 = (_luaX_token2str($0,$1)|0);
 store4($vararg_buffer,$4);
 $5 = (_luaO_pushfstring($3,8515,$vararg_buffer)|0);
 _luaX_syntaxerror($0,$5);
 // unreachable;
}
function _close_func($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 52|0);
 $2 = load4($1);
 $3 = ((($0)) + 48|0);
 $4 = load4($3);
 $5 = load4($4);
 _luaK_ret($4,0,0);
 _leaveblock($4);
 $6 = ((($4)) + 16|0);
 $7 = load4($6);
 $8 = (($7) + 1)|0;
 $9 = ($8>>>0)>(1073741823);
 if ($9) {
  _luaM_toobig($2);
  // unreachable;
 }
 $10 = ((($5)) + 48|0);
 $11 = load4($10);
 $12 = ((($5)) + 20|0);
 $13 = load4($12);
 $14 = $13 << 2;
 $15 = $7 << 2;
 $16 = (_luaM_realloc_($2,$11,$14,$15)|0);
 store4($10,$16);
 $17 = load4($6);
 store4($12,$17);
 $18 = (($17) + 1)|0;
 $19 = ($18>>>0)>(1073741823);
 if ($19) {
  _luaM_toobig($2);
  // unreachable;
 }
 $20 = ((($5)) + 56|0);
 $21 = load4($20);
 $22 = ((($5)) + 24|0);
 $23 = load4($22);
 $24 = $23 << 2;
 $25 = $17 << 2;
 $26 = (_luaM_realloc_($2,$21,$24,$25)|0);
 store4($20,$26);
 $27 = load4($6);
 store4($22,$27);
 $28 = ((($4)) + 28|0);
 $29 = load4($28);
 $30 = (($29) + 1)|0;
 $31 = ($30>>>0)>(268435455);
 if ($31) {
  _luaM_toobig($2);
  // unreachable;
 }
 $32 = ((($5)) + 44|0);
 $33 = load4($32);
 $34 = ((($5)) + 16|0);
 $35 = load4($34);
 $36 = $35 << 4;
 $37 = $29 << 4;
 $38 = (_luaM_realloc_($2,$33,$36,$37)|0);
 store4($32,$38);
 $39 = load4($28);
 store4($34,$39);
 $40 = ((($4)) + 32|0);
 $41 = load4($40);
 $42 = (($41) + 1)|0;
 $43 = ($42>>>0)>(1073741823);
 if ($43) {
  _luaM_toobig($2);
  // unreachable;
 }
 $44 = ((($5)) + 52|0);
 $45 = load4($44);
 $46 = ((($5)) + 28|0);
 $47 = load4($46);
 $48 = $47 << 2;
 $49 = $41 << 2;
 $50 = (_luaM_realloc_($2,$45,$48,$49)|0);
 store4($44,$50);
 $51 = load4($40);
 store4($46,$51);
 $52 = ((($5)) + 60|0);
 $53 = load4($52);
 $54 = ((($5)) + 32|0);
 $55 = load4($54);
 $56 = ($55*12)|0;
 $57 = ((($4)) + 40|0);
 $58 = load2($57);
 $59 = $58 << 16 >> 16;
 $60 = ($59*12)|0;
 $61 = (_luaM_realloc_($2,$53,$56,$60)|0);
 store4($52,$61);
 $62 = load2($57);
 $63 = $62 << 16 >> 16;
 store4($54,$63);
 $64 = ((($5)) + 64|0);
 $65 = load4($64);
 $66 = ((($5)) + 12|0);
 $67 = load4($66);
 $68 = $67 << 3;
 $69 = ((($4)) + 43|0);
 $70 = load1($69);
 $71 = $70&255;
 $72 = $71 << 3;
 $73 = (_luaM_realloc_($2,$65,$68,$72)|0);
 store4($64,$73);
 $74 = load1($69);
 $75 = $74&255;
 store4($66,$75);
 $76 = ((($4)) + 4|0);
 $77 = load4($76);
 store4($3,$77);
 $78 = ((($2)) + 16|0);
 $79 = load4($78);
 $80 = ((($79)) + 12|0);
 $81 = load4($80);
 $82 = ($81|0)>(0);
 if (!($82)) {
  return;
 }
 _luaC_step($2);
 return;
}
function _leaveblock($0) {
 $0 = $0|0;
 var $$013$i$i = 0, $$023$i = 0, $$03439$i$i = 0, $$1$i$i = 0, $$idx$val$i = 0, $$idx$val$idx$i = 0, $$idx$val$idx$val$i = 0, $$idx7$val$idx$val$idx$val$i = 0, $$idx8$i = 0, $$idx8$val$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i10$i = 0, $$pre$i33 = 0, $$pre12$i = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $indvars$iv = 0, $indvars$iv$next = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 12|0);
 $2 = load4($1);
 $3 = ((($0)) + 8|0);
 $4 = load4($3);
 $5 = load4($2);
 $6 = ($5|0)==(0|0);
 if (!($6)) {
  $7 = ((($2)) + 13|0);
  $8 = load1($7);
  $9 = ($8<<24>>24)==(0);
  if (!($9)) {
   $10 = (_luaK_jump($0)|0);
   $11 = ((($2)) + 12|0);
   $12 = load1($11);
   $13 = $12&255;
   _luaK_patchclose($0,$10,$13);
   _luaK_patchtohere($0,$10);
  }
 }
 $14 = ((($2)) + 14|0);
 $15 = load1($14);
 $16 = ($15<<24>>24)==(0);
 if (!($16)) {
  $17 = ((($4)) + 52|0);
  $18 = load4($17);
  $19 = (_luaS_new($18,10616)|0);
  $20 = ((($4)) + 68|0);
  $21 = load4($20);
  $22 = ((($21)) + 24|0);
  $23 = ((($4)) + 48|0);
  $24 = load4($23);
  $25 = ((($24)) + 16|0);
  $26 = load4($25);
  $27 = ((($21)) + 28|0);
  $28 = load4($27);
  $29 = (($28) + 1)|0;
  $30 = ((($21)) + 32|0);
  $31 = load4($30);
  $32 = ($28|0)<($31|0);
  if ($32) {
   $$pre$i$i = load4($22);
   $37 = $$pre$i$i;$40 = $24;$45 = $21;
  } else {
   $33 = load4($17);
   $34 = load4($22);
   $35 = (_luaM_growaux_($33,$34,$30,16,32767,8368)|0);
   store4($22,$35);
   $$pre$i = load4($23);
   $$pre12$i = load4($20);
   $37 = $35;$40 = $$pre$i;$45 = $$pre12$i;
  }
  $36 = (($37) + ($28<<4)|0);
  store4($36,$19);
  $38 = (((($37) + ($28<<4)|0)) + 8|0);
  store4($38,0);
  $39 = ((($40)) + 42|0);
  $41 = load1($39);
  $42 = (((($37) + ($28<<4)|0)) + 12|0);
  store1($42,$41);
  $43 = (((($37) + ($28<<4)|0)) + 4|0);
  store4($43,$26);
  store4($27,$29);
  $44 = ((($45)) + 24|0);
  $46 = load4($44);
  $47 = (($46) + ($28<<4)|0);
  $48 = ((($40)) + 12|0);
  $49 = load4($48);
  $50 = ((($49)) + 8|0);
  $51 = load4($50);
  $52 = ((($45)) + 16|0);
  $53 = load4($52);
  $54 = ($51|0)<($53|0);
  if ($54) {
   $55 = ((($45)) + 12|0);
   $$013$i$i = $51;$157 = $53;
   while(1) {
    $56 = load4($55);
    $57 = (($56) + ($$013$i$i<<4)|0);
    $58 = load4($57);
    $59 = load4($47);
    $60 = ($58|0)==($59|0);
    if ($60) {
     _closegoto($4,$$013$i$i,$47);
     $$pre$i10$i = load4($52);
     $$1$i$i = $$013$i$i;$63 = $$pre$i10$i;
    } else {
     $61 = (($$013$i$i) + 1)|0;
     $$1$i$i = $61;$63 = $157;
    }
    $62 = ($$1$i$i|0)<($63|0);
    if ($62) {
     $$013$i$i = $$1$i$i;$157 = $63;
    } else {
     break;
    }
   }
  }
 }
 $64 = load4($2);
 store4($1,$64);
 $65 = ((($2)) + 12|0);
 $66 = load1($65);
 $67 = $66&255;
 $68 = ((($0)) + 42|0);
 $69 = load1($68);
 $70 = $69&255;
 $71 = load4($3);
 $72 = ((($71)) + 68|0);
 $73 = load4($72);
 $74 = ((($73)) + 4|0);
 $75 = load4($74);
 $76 = (($67) - ($70))|0;
 $77 = (($76) + ($75))|0;
 store4($74,$77);
 $78 = ($66&255)<($69&255);
 if ($78) {
  $79 = ((($0)) + 16|0);
  $80 = load4($79);
  $$idx$val$i = load4($0);
  $$idx8$i = ((($0)) + 36|0);
  $$idx8$val$i = load4($$idx8$i);
  $$idx$val$idx$i = ((($$idx$val$i)) + 60|0);
  $$idx$val$idx$val$i = load4($$idx$val$idx$i);
  $$idx7$val$idx$val$idx$val$i = load4($73);
  $indvars$iv = $70;
  while(1) {
   $81 = $indvars$iv&255;
   $82 = (($81) + -1)<<24>>24;
   $83 = $82&255;
   $84 = (($$idx8$val$i) + ($83))|0;
   $85 = (($$idx7$val$idx$val$idx$val$i) + ($84<<1)|0);
   $86 = load2($85);
   $87 = $86 << 16 >> 16;
   $88 = (((($$idx$val$idx$val$i) + (($87*12)|0)|0)) + 8|0);
   store4($88,$80);
   $89 = ($82&255)>($66&255);
   $indvars$iv$next = (($indvars$iv) + -1)|0;
   if ($89) {
    $indvars$iv = $indvars$iv$next;
   } else {
    break;
   }
  }
  store1($68,$66);
  $91 = $66;
 } else {
  $91 = $69;
 }
 $90 = ((($0)) + 44|0);
 store1($90,$91);
 $92 = ((($2)) + 4|0);
 $93 = load4($92);
 $94 = ((($4)) + 68|0);
 $95 = load4($94);
 $96 = ((($95)) + 28|0);
 store4($96,$93);
 $97 = ($64|0)==(0);
 $98 = ((($2)) + 8|0);
 $99 = load4($98);
 if ($97) {
  $151 = ((($95)) + 16|0);
  $152 = load4($151);
  $153 = ($99|0)<($152|0);
  if ($153) {
   $154 = ((($95)) + 12|0);
   $155 = load4($154);
   $156 = (($155) + ($99<<4)|0);
   _undefgoto($4,$156);
   // unreachable;
  } else {
   return;
  }
 }
 $100 = ((($73)) + 16|0);
 $101 = load4($100);
 $102 = ($99|0)<($101|0);
 if (!($102)) {
  return;
 }
 $103 = ((($73)) + 12|0);
 $104 = ((($2)) + 13|0);
 $$023$i = $99;$109 = $66;
 while(1) {
  $105 = load4($103);
  $106 = (((($105) + ($$023$i<<4)|0)) + 12|0);
  $107 = load1($106);
  $108 = $109&255;
  $110 = ($107&255)>($109&255);
  if ($110) {
   $111 = load1($104);
   $112 = ($111<<24>>24)==(0);
   if ($112) {
    $115 = $109;
   } else {
    $113 = (((($105) + ($$023$i<<4)|0)) + 4|0);
    $114 = load4($113);
    _luaK_patchclose($0,$114,$108);
    $$pre$i33 = load1($65);
    $115 = $$pre$i33;
   }
   store1($106,$115);
  }
  $116 = load4($3);
  $117 = ((($116)) + 48|0);
  $118 = load4($117);
  $119 = ((($118)) + 12|0);
  $120 = load4($119);
  $121 = ((($116)) + 68|0);
  $122 = load4($121);
  $123 = ((($122)) + 12|0);
  $124 = load4($123);
  $125 = ((($120)) + 4|0);
  $126 = load4($125);
  $127 = ((($122)) + 28|0);
  $128 = load4($127);
  $129 = ($126|0)<($128|0);
  L42: do {
   if ($129) {
    $130 = ((($122)) + 24|0);
    $131 = load4($130);
    $132 = (($124) + ($$023$i<<4)|0);
    $133 = load4($132);
    $$03439$i$i = $126;
    while(1) {
     $134 = (($131) + ($$03439$i$i<<4)|0);
     $135 = load4($134);
     $136 = ($135|0)==($133|0);
     if ($136) {
      break;
     }
     $145 = (($$03439$i$i) + 1)|0;
     $146 = ($145|0)<($128|0);
     if ($146) {
      $$03439$i$i = $145;
     } else {
      label = 32;
      break L42;
     }
    }
    $137 = (((($124) + ($$023$i<<4)|0)) + 12|0);
    $138 = load1($137);
    $139 = (((($131) + ($$03439$i$i<<4)|0)) + 12|0);
    $140 = load1($139);
    $141 = ($138&255)>($140&255);
    if ($141) {
     $142 = (((($124) + ($$023$i<<4)|0)) + 4|0);
     $143 = $140&255;
     $144 = load4($142);
     _luaK_patchclose($118,$144,$143);
    }
    _closegoto($116,$$023$i,$134);
    $149 = $$023$i;
   } else {
    label = 32;
   }
  } while(0);
  if ((label|0) == 32) {
   label = 0;
   $147 = (($$023$i) + 1)|0;
   $149 = $147;
  }
  $148 = load4($100);
  $150 = ($149|0)<($148|0);
  if (!($150)) {
   break;
  }
  $$pre = load1($65);
  $$023$i = $149;$109 = $$pre;
 }
 return;
}
function _closegoto($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$036 = 0, $$idx$val = 0, $$idx$val$idx = 0, $$idx$val$idx$val = 0, $$idx33 = 0, $$idx33$val = 0, $$idx33$val$idx = 0, $$idx33$val$idx$val = 0, $$idx33$val$idx$val$idx$val = 0, $$idx34 = 0, $$idx34$val = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = ((($0)) + 48|0);
 $4 = load4($3);
 $5 = ((($0)) + 68|0);
 $6 = load4($5);
 $7 = ((($6)) + 12|0);
 $8 = load4($7);
 $9 = (((($8) + ($1<<4)|0)) + 12|0);
 $10 = load1($9);
 $11 = ((($2)) + 12|0);
 $12 = load1($11);
 $13 = ($10&255)<($12&255);
 if ($13) {
  $14 = (($8) + ($1<<4)|0);
  $15 = $10&255;
  $$idx$val = load4($4);
  $$idx33 = ((($4)) + 8|0);
  $$idx33$val = load4($$idx33);
  $$idx34 = ((($4)) + 36|0);
  $$idx34$val = load4($$idx34);
  $$idx$val$idx = ((($$idx$val)) + 60|0);
  $$idx$val$idx$val = load4($$idx$val$idx);
  $$idx33$val$idx = ((($$idx33$val)) + 68|0);
  $$idx33$val$idx$val = load4($$idx33$val$idx);
  $$idx33$val$idx$val$idx$val = load4($$idx33$val$idx$val);
  $16 = (($$idx34$val) + ($15))|0;
  $17 = (($$idx33$val$idx$val$idx$val) + ($16<<1)|0);
  $18 = load2($17);
  $19 = $18 << 16 >> 16;
  $20 = (($$idx$val$idx$val) + (($19*12)|0)|0);
  $21 = load4($20);
  $22 = ((($0)) + 52|0);
  $23 = load4($22);
  $24 = load4($14);
  $25 = ((($24)) + 16|0);
  $26 = (((($8) + ($1<<4)|0)) + 8|0);
  $27 = load4($26);
  $28 = ((($21)) + 16|0);
  store4($vararg_buffer,$25);
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  store4($vararg_ptr1,$27);
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  store4($vararg_ptr2,$28);
  $29 = (_luaO_pushfstring($23,8459,$vararg_buffer)|0);
  _semerror($0,$29);
  // unreachable;
 }
 $30 = (((($8) + ($1<<4)|0)) + 4|0);
 $31 = load4($30);
 $32 = ((($2)) + 4|0);
 $33 = load4($32);
 _luaK_patchlist($4,$31,$33);
 $34 = ((($6)) + 16|0);
 $35 = load4($34);
 $36 = (($35) + -1)|0;
 $37 = ($36|0)>($1|0);
 if (!($37)) {
  $$lcssa = $36;
  store4($34,$$lcssa);
  STACKTOP = sp;return;
 }
 $$036 = $1;
 while(1) {
  $38 = load4($7);
  $39 = (($38) + ($$036<<4)|0);
  $40 = (($$036) + 1)|0;
  $41 = (($38) + ($40<<4)|0);
  ; store8($39,load8($41,4),4); store8($39+8 | 0,load8($41+8 | 0,4),4);
  $42 = load4($34);
  $43 = (($42) + -1)|0;
  $44 = ($40|0)<($43|0);
  if ($44) {
   $$036 = $40;
  } else {
   $$lcssa = $43;
   break;
  }
 }
 store4($34,$$lcssa);
 STACKTOP = sp;return;
}
function _undefgoto($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = load4($1);
 $3 = ((($2)) + 4|0);
 $4 = load1($3);
 $5 = ($4<<24>>24)==(4);
 if ($5) {
  $6 = ((($2)) + 6|0);
  $7 = load1($6);
  $8 = ($7<<24>>24)==(0);
  $phitmp = $8 ? 8381 : 8425;
  $14 = $phitmp;
 } else {
  $14 = 8381;
 }
 $9 = ((($0)) + 52|0);
 $10 = load4($9);
 $11 = ((($2)) + 16|0);
 $12 = ((($1)) + 8|0);
 $13 = load4($12);
 store4($vararg_buffer,$11);
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 store4($vararg_ptr1,$13);
 $15 = (_luaO_pushfstring($10,$14,$vararg_buffer)|0);
 _semerror($0,$15);
 // unreachable;
}
function _semerror($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 store4($2,0);
 _luaX_syntaxerror($0,$1);
 // unreachable;
}
function _errorlimit($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = ((($0)) + 8|0);
 $4 = load4($3);
 $5 = ((($4)) + 52|0);
 $6 = load4($5);
 $7 = load4($0);
 $8 = ((($7)) + 36|0);
 $9 = load4($8);
 $10 = ($9|0)==(0);
 if ($10) {
  $12 = 8887;
 } else {
  store4($vararg_buffer,$9);
  $11 = (_luaO_pushfstring($6,8867,$vararg_buffer)|0);
  $12 = $11;
 }
 store4($vararg_buffer1,$2);
 $vararg_ptr4 = ((($vararg_buffer1)) + 4|0);
 store4($vararg_ptr4,$1);
 $vararg_ptr5 = ((($vararg_buffer1)) + 8|0);
 store4($vararg_ptr5,$12);
 $13 = (_luaO_pushfstring($6,8901,$vararg_buffer1)|0);
 $14 = load4($3);
 _luaX_syntaxerror($14,$13);
 // unreachable;
}
function _test_then_block($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$idx$val = 0, $$idx$val$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $2 = sp + 24|0;
 $3 = sp;
 $4 = ((($0)) + 48|0);
 $5 = load4($4);
 _luaX_next($0);
 (_subexpr($0,$3,0)|0);
 $6 = ((($0)) + 16|0);
 $7 = load4($6);
 $8 = ($7|0)==(275);
 if (!($8)) {
  _error_expected($0,275);
  // unreachable;
 }
 _luaX_next($0);
 $9 = load4($6);
 L4: do {
  switch ($9|0) {
  case 258: case 266:  {
   $10 = load4($4);
   _luaK_goiffalse($10,$3);
   $11 = ((($2)) + 14|0);
   store1($11,0);
   $12 = ((($5)) + 42|0);
   $13 = load1($12);
   $14 = ((($2)) + 12|0);
   store1($14,$13);
   $15 = ((($5)) + 8|0);
   $16 = load4($15);
   $17 = ((($16)) + 68|0);
   $18 = load4($17);
   $19 = ((($18)) + 28|0);
   $20 = load4($19);
   $21 = ((($2)) + 4|0);
   store4($21,$20);
   $22 = ((($18)) + 16|0);
   $23 = load4($22);
   $24 = ((($2)) + 8|0);
   store4($24,$23);
   $25 = ((($2)) + 13|0);
   store1($25,0);
   $26 = ((($5)) + 12|0);
   $27 = load4($26);
   store4($2,$27);
   store4($26,$2);
   $28 = ((($3)) + 16|0);
   $29 = load4($28);
   _gotostat($0,$29);
   $30 = load4($6);
   $31 = ($30|0)==(59);
   if ($31) {
    while(1) {
     _luaX_next($0);
     $32 = load4($6);
     $33 = ($32|0)==(59);
     if (!($33)) {
      $$idx$val = $32;
      break;
     }
    }
   } else {
    $$idx$val = $30;
   }
   switch ($$idx$val|0) {
   case 289: case 262: case 261: case 260:  {
    break;
   }
   default: {
    $34 = (_luaK_jump($5)|0);
    $$0 = $34;
    break L4;
   }
   }
   _leaveblock($5);
   STACKTOP = sp;return;
   break;
  }
  default: {
   $35 = load4($4);
   _luaK_goiftrue($35,$3);
   $36 = ((($2)) + 14|0);
   store1($36,0);
   $37 = ((($5)) + 42|0);
   $38 = load1($37);
   $39 = ((($2)) + 12|0);
   store1($39,$38);
   $40 = ((($5)) + 8|0);
   $41 = load4($40);
   $42 = ((($41)) + 68|0);
   $43 = load4($42);
   $44 = ((($43)) + 28|0);
   $45 = load4($44);
   $46 = ((($2)) + 4|0);
   store4($46,$45);
   $47 = ((($43)) + 16|0);
   $48 = load4($47);
   $49 = ((($2)) + 8|0);
   store4($49,$48);
   $50 = ((($2)) + 13|0);
   store1($50,0);
   $51 = ((($5)) + 12|0);
   $52 = load4($51);
   store4($2,$52);
   store4($51,$2);
   $53 = ((($3)) + 20|0);
   $54 = load4($53);
   $$0 = $54;
  }
  }
 } while(0);
 L17: while(1) {
  $$idx$val$i = load4($6);
  switch ($$idx$val$i|0) {
  case 277: case 289: case 262: case 261: case 260:  {
   break L17;
   break;
  }
  default: {
  }
  }
  $55 = ($$idx$val$i|0)==(274);
  _statement($0);
  if ($55) {
   break;
  }
 }
 _leaveblock($5);
 $56 = load4($6);
 $57 = $56 & -2;
 $switch = ($57|0)==(260);
 if ($switch) {
  $58 = (_luaK_jump($5)|0);
  _luaK_concat($5,$1,$58);
 }
 _luaK_patchtohere($5,$$0);
 STACKTOP = sp;return;
}
function _subexpr($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i$ph = 0, $$0$i40$ph = 0, $$0$lcssa = 0, $$042 = 0, $$idx = 0, $$idx$val = 0, $$idx39 = 0, $$idx39$val = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = i64(), $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $3 = sp;
 $$idx = ((($0)) + 48|0);
 $$idx$val = load4($$idx);
 $$idx39 = ((($0)) + 52|0);
 $$idx39$val = load4($$idx39);
 $4 = ((($$idx39$val)) + 110|0);
 $5 = load2($4);
 $6 = (($5) + 1)<<16>>16;
 store2($4,$6);
 $7 = ($6&65535)>(200);
 if ($7) {
  _errorlimit($$idx$val,200,8527);
  // unreachable;
 }
 $8 = ((($0)) + 16|0);
 $9 = load4($8);
 L4: do {
  switch ($9|0) {
  case 271:  {
   $$0$i40$ph = 2;
   label = 7;
   break;
  }
  case 45:  {
   $$0$i40$ph = 0;
   label = 7;
   break;
  }
  case 126:  {
   $$0$i40$ph = 1;
   label = 7;
   break;
  }
  case 35:  {
   $$0$i40$ph = 3;
   label = 7;
   break;
  }
  case 290:  {
   $13 = ((($1)) + 16|0);
   store4($13,-1);
   $14 = ((($1)) + 20|0);
   store4($14,-1);
   store4($1,5);
   $15 = ((($1)) + 8|0);
   store4($15,0);
   $16 = ((($0)) + 24|0);
   $17 = loadd($16);
   stored($15,$17);
   label = 20;
   break;
  }
  case 291:  {
   $18 = ((($1)) + 16|0);
   store4($18,-1);
   $19 = ((($1)) + 20|0);
   store4($19,-1);
   store4($1,6);
   $20 = ((($1)) + 8|0);
   store4($20,0);
   $21 = ((($0)) + 24|0);
   $22 = load8($21);
   $23 = ((($1)) + 8|0);
   store8($23,$22);
   label = 20;
   break;
  }
  case 293:  {
   $24 = ((($0)) + 24|0);
   $25 = load4($24);
   $26 = (_luaK_stringK($$idx$val,$25)|0);
   $27 = ((($1)) + 16|0);
   store4($27,-1);
   $28 = ((($1)) + 20|0);
   store4($28,-1);
   store4($1,4);
   $29 = ((($1)) + 8|0);
   store4($29,$26);
   label = 20;
   break;
  }
  case 270:  {
   $30 = ((($1)) + 16|0);
   store4($30,-1);
   $31 = ((($1)) + 20|0);
   store4($31,-1);
   store4($1,1);
   $32 = ((($1)) + 8|0);
   store4($32,0);
   label = 20;
   break;
  }
  case 276:  {
   $33 = ((($1)) + 16|0);
   store4($33,-1);
   $34 = ((($1)) + 20|0);
   store4($34,-1);
   store4($1,2);
   $35 = ((($1)) + 8|0);
   store4($35,0);
   label = 20;
   break;
  }
  case 263:  {
   $36 = ((($1)) + 16|0);
   store4($36,-1);
   $37 = ((($1)) + 20|0);
   store4($37,-1);
   store4($1,3);
   $38 = ((($1)) + 8|0);
   store4($38,0);
   label = 20;
   break;
  }
  case 281:  {
   $39 = load4($$idx$val);
   $40 = ((($39)) + 7|0);
   $41 = load1($40);
   $42 = ($41<<24>>24)==(0);
   if ($42) {
    _luaX_syntaxerror($0,8824);
    // unreachable;
   } else {
    $43 = (_luaK_codeABC($$idx$val,45,0,1,0)|0);
    $44 = ((($1)) + 16|0);
    store4($44,-1);
    $45 = ((($1)) + 20|0);
    store4($45,-1);
    store4($1,14);
    $46 = ((($1)) + 8|0);
    store4($46,$43);
    label = 20;
    break L4;
   }
   break;
  }
  case 123:  {
   _constructor($0,$1);
   break;
  }
  case 265:  {
   _luaX_next($0);
   $47 = ((($0)) + 4|0);
   $48 = load4($47);
   _body($0,$1,0,$48);
   break;
  }
  default: {
   _suffixedexp($0,$1);
  }
  }
 } while(0);
 if ((label|0) == 7) {
  $10 = ((($0)) + 4|0);
  $11 = load4($10);
  _luaX_next($0);
  (_subexpr($0,$1,12)|0);
  $12 = load4($$idx);
  _luaK_prefix($12,$$0$i40$ph,$1,$11);
 }
 else if ((label|0) == 20) {
  _luaX_next($0);
 }
 $49 = load4($8);
 do {
  switch ($49|0) {
  case 43:  {
   $$0$i$ph = 0;
   break;
  }
  case 45:  {
   $$0$i$ph = 1;
   break;
  }
  case 42:  {
   $$0$i$ph = 2;
   break;
  }
  case 37:  {
   $$0$i$ph = 3;
   break;
  }
  case 94:  {
   $$0$i$ph = 4;
   break;
  }
  case 47:  {
   $$0$i$ph = 5;
   break;
  }
  case 279:  {
   $$0$i$ph = 6;
   break;
  }
  case 38:  {
   $$0$i$ph = 7;
   break;
  }
  case 124:  {
   $$0$i$ph = 8;
   break;
  }
  case 126:  {
   $$0$i$ph = 9;
   break;
  }
  case 286:  {
   $$0$i$ph = 10;
   break;
  }
  case 287:  {
   $$0$i$ph = 11;
   break;
  }
  case 280:  {
   $$0$i$ph = 12;
   break;
  }
  case 285:  {
   $$0$i$ph = 16;
   break;
  }
  case 282:  {
   $$0$i$ph = 13;
   break;
  }
  case 60:  {
   $$0$i$ph = 14;
   break;
  }
  case 284:  {
   $$0$i$ph = 15;
   break;
  }
  case 62:  {
   $$0$i$ph = 17;
   break;
  }
  case 283:  {
   $$0$i$ph = 18;
   break;
  }
  case 257:  {
   $$0$i$ph = 19;
   break;
  }
  case 272:  {
   $$0$i$ph = 20;
   break;
  }
  default: {
   $$0$lcssa = 21;
   $63 = load4($$idx39);
   $64 = ((($63)) + 110|0);
   $65 = load2($64);
   $66 = (($65) + -1)<<16>>16;
   store2($64,$66);
   STACKTOP = sp;return ($$0$lcssa|0);
  }
  }
 } while(0);
 $50 = ((($0)) + 4|0);
 $$042 = $$0$i$ph;
 while(1) {
  $51 = (1328 + ($$042<<1)|0);
  $52 = load1($51);
  $53 = $52&255;
  $54 = ($53|0)>($2|0);
  if (!($54)) {
   $$0$lcssa = $$042;
   label = 45;
   break;
  }
  $55 = load4($50);
  _luaX_next($0);
  $56 = load4($$idx);
  _luaK_infix($56,$$042,$1);
  $57 = (((1328 + ($$042<<1)|0)) + 1|0);
  $58 = load1($57);
  $59 = $58&255;
  $60 = (_subexpr($0,$3,$59)|0);
  $61 = load4($$idx);
  _luaK_posfix($61,$$042,$1,$3,$55);
  $62 = ($60|0)==(21);
  if ($62) {
   $$0$lcssa = 21;
   label = 45;
   break;
  } else {
   $$042 = $60;
  }
 }
 if ((label|0) == 45) {
  $63 = load4($$idx39);
  $64 = ((($63)) + 110|0);
  $65 = load2($64);
  $66 = (($65) + -1)<<16>>16;
  store2($64,$66);
  STACKTOP = sp;return ($$0$lcssa|0);
 }
 return (0)|0;
}
function _new_localvar($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$026$i = 0, $$phi$trans$insert$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phi23Z2D = 0, $$pre$phi32$iZ2D = 0, $$pre20 = 0, $$pre22 = 0, $$pre29$i = 0, $$pre30$i = 0, $$pre31$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 48|0);
 $3 = load4($2);
 $4 = ((($0)) + 68|0);
 $5 = load4($4);
 $6 = load4($3);
 $7 = ((($6)) + 32|0);
 $8 = load4($7);
 $9 = ((($3)) + 40|0);
 $10 = load2($9);
 $11 = $10 << 16 >> 16;
 $12 = ($8|0)>($11|0);
 if ($12) {
  $$phi$trans$insert$i = ((($6)) + 60|0);
  $$pre29$i = load4($$phi$trans$insert$i);
  $19 = $8;$22 = $$pre29$i;
 } else {
  $13 = ((($0)) + 52|0);
  $14 = load4($13);
  $15 = ((($6)) + 60|0);
  $16 = load4($15);
  $17 = (_luaM_growaux_($14,$16,$7,12,32767,8808)|0);
  store4($15,$17);
  $$pre$i = load4($7);
  $19 = $$pre$i;$22 = $17;
 }
 $18 = ($8|0)<($19|0);
 if ($18) {
  $20 = (($8) + 1)|0;
  $21 = (($22) + (($8*12)|0)|0);
  store4($21,0);
  $23 = ($20|0)<($19|0);
  if ($23) {
   $$026$i = $20;
   while(1) {
    $24 = (($$026$i) + 1)|0;
    $25 = (($22) + (($$026$i*12)|0)|0);
    store4($25,0);
    $exitcond = ($24|0)==($19|0);
    if ($exitcond) {
     break;
    } else {
     $$026$i = $24;
    }
   }
  }
 }
 $26 = load2($9);
 $27 = $26 << 16 >> 16;
 $28 = (($22) + (($27*12)|0)|0);
 store4($28,$1);
 $29 = ((($6)) + 5|0);
 $30 = load1($29);
 $31 = $30 & 4;
 $32 = ($31<<24>>24)==(0);
 if ($32) {
  $$pre$phi32$iZ2D = $27;$40 = $26;
 } else {
  $33 = ((($1)) + 5|0);
  $34 = load1($33);
  $35 = $34 & 3;
  $36 = ($35<<24>>24)==(0);
  if ($36) {
   $$pre$phi32$iZ2D = $27;$40 = $26;
  } else {
   $37 = ((($0)) + 52|0);
   $38 = load4($37);
   _luaC_barrier_($38,$6,$1);
   $$pre30$i = load2($9);
   $$pre31$i = $$pre30$i << 16 >> 16;
   $$pre$phi32$iZ2D = $$pre31$i;$40 = $$pre30$i;
  }
 }
 $39 = (($40) + 1)<<16>>16;
 store2($9,$39);
 $41 = ((($5)) + 4|0);
 $42 = load4($41);
 $43 = (($42) + 1)|0;
 $44 = ((($3)) + 36|0);
 $45 = load4($44);
 $46 = (($43) - ($45))|0;
 $47 = ($46|0)>(200);
 if ($47) {
  _errorlimit($3,200,8808);
  // unreachable;
 }
 $48 = (($42) + 2)|0;
 $49 = ((($5)) + 8|0);
 $50 = load4($49);
 $51 = ($48|0)>($50|0);
 if ($51) {
  $52 = ((($0)) + 52|0);
  $53 = load4($52);
  $54 = load4($5);
  $55 = (_luaM_growaux_($53,$54,$49,2,2147483647,8808)|0);
  store4($5,$55);
  $$pre20 = load4($41);
  $$pre22 = (($$pre20) + 1)|0;
  $$pre$phi23Z2D = $$pre22;$58 = $55;$59 = $$pre20;
  $56 = $$pre$phi32$iZ2D&65535;
  store4($41,$$pre$phi23Z2D);
  $57 = (($58) + ($59<<1)|0);
  store2($57,$56);
  return;
 } else {
  $$pre = load4($5);
  $$pre$phi23Z2D = $43;$58 = $$pre;$59 = $42;
  $56 = $$pre$phi32$iZ2D&65535;
  store4($41,$$pre$phi23Z2D);
  $57 = (($58) + ($59<<1)|0);
  store2($57,$56);
  return;
 }
}
function _forbody($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$01$i45 = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i34 = 0, $$idx$val$idx$i = 0, $$idx$val$idx$i39 = 0, $$idx$val$idx$val$i = 0, $$idx$val$idx$val$i40 = 0, $$idx10$i = 0, $$idx10$i35 = 0, $$idx10$val$i = 0, $$idx10$val$i36 = 0, $$idx10$val$idx$i = 0, $$idx10$val$idx$i41 = 0, $$idx10$val$idx$val$i = 0, $$idx10$val$idx$val$i42 = 0, $$idx10$val$idx$val$idx$val$i = 0, $$idx10$val$idx$val$idx$val$i44 = 0;
 var $$idx11$i = 0, $$idx11$i37 = 0, $$idx11$val$i = 0, $$idx11$val$i38 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $5 = sp + 16|0;
 $6 = sp;
 $7 = ((($0)) + 48|0);
 $8 = load4($7);
 $9 = ((($8)) + 42|0);
 $10 = load1($9);
 $11 = $10&255;
 $12 = (($11) + 3)|0;
 $13 = $12&255;
 store1($9,$13);
 $14 = ((($8)) + 16|0);
 $15 = load4($14);
 $16 = (($10) + 3)<<24>>24;
 $17 = $16&255;
 $$idx$val$i = load4($8);
 $$idx10$i = ((($8)) + 8|0);
 $$idx10$val$i = load4($$idx10$i);
 $$idx11$i = ((($8)) + 36|0);
 $$idx11$val$i = load4($$idx11$i);
 $$idx$val$idx$i = ((($$idx$val$i)) + 60|0);
 $$idx$val$idx$val$i = load4($$idx$val$idx$i);
 $$idx10$val$idx$i = ((($$idx10$val$i)) + 68|0);
 $$idx10$val$idx$val$i = load4($$idx10$val$idx$i);
 $$idx10$val$idx$val$idx$val$i = load4($$idx10$val$idx$val$i);
 $18 = (($$idx11$val$i) + ($17))|0;
 $19 = (($18) + -3)|0;
 $20 = (($$idx10$val$idx$val$idx$val$i) + ($19<<1)|0);
 $21 = load2($20);
 $22 = $21 << 16 >> 16;
 $23 = (((($$idx$val$idx$val$i) + (($22*12)|0)|0)) + 4|0);
 store4($23,$15);
 $24 = (($18) + -2)|0;
 $25 = (($$idx10$val$idx$val$idx$val$i) + ($24<<1)|0);
 $26 = load2($25);
 $27 = $26 << 16 >> 16;
 $28 = (((($$idx$val$idx$val$i) + (($27*12)|0)|0)) + 4|0);
 store4($28,$15);
 $29 = (($18) + -1)|0;
 $30 = (($$idx10$val$idx$val$idx$val$i) + ($29<<1)|0);
 $31 = load2($30);
 $32 = $31 << 16 >> 16;
 $33 = (((($$idx$val$idx$val$i) + (($32*12)|0)|0)) + 4|0);
 store4($33,$15);
 $34 = ((($0)) + 16|0);
 $35 = load4($34);
 $36 = ($35|0)==(259);
 if (!($36)) {
  _error_expected($0,259);
  // unreachable;
 }
 _luaX_next($0);
 $37 = ($4|0)!=(0);
 if ($37) {
  $38 = (_luaK_codeABx($8,40,$1,131070)|0);
  $91 = $38;
 } else {
  $39 = (_luaK_jump($8)|0);
  $91 = $39;
 }
 $40 = ((($6)) + 14|0);
 store1($40,0);
 $41 = load1($9);
 $42 = ((($6)) + 12|0);
 store1($42,$41);
 $43 = load4($$idx10$i);
 $44 = ((($43)) + 68|0);
 $45 = load4($44);
 $46 = ((($45)) + 28|0);
 $47 = load4($46);
 $48 = ((($6)) + 4|0);
 store4($48,$47);
 $49 = ((($45)) + 16|0);
 $50 = load4($49);
 $51 = ((($6)) + 8|0);
 store4($51,$50);
 $52 = ((($6)) + 13|0);
 store1($52,0);
 $53 = ((($8)) + 12|0);
 $54 = load4($53);
 store4($6,$54);
 store4($53,$6);
 $$idx$val = load4($7);
 $55 = ((($$idx$val)) + 42|0);
 $56 = load1($55);
 $57 = $56&255;
 $58 = (($57) + ($3))|0;
 $59 = $58&255;
 store1($55,$59);
 $60 = ($3|0)==(0);
 if (!($60)) {
  $61 = ((($$idx$val)) + 16|0);
  $62 = load4($61);
  $63 = $58 & 255;
  $$idx$val$i34 = load4($$idx$val);
  $$idx10$i35 = ((($$idx$val)) + 8|0);
  $$idx10$val$i36 = load4($$idx10$i35);
  $$idx11$i37 = ((($$idx$val)) + 36|0);
  $$idx11$val$i38 = load4($$idx11$i37);
  $$idx$val$idx$i39 = ((($$idx$val$i34)) + 60|0);
  $$idx$val$idx$val$i40 = load4($$idx$val$idx$i39);
  $$idx10$val$idx$i41 = ((($$idx10$val$i36)) + 68|0);
  $$idx10$val$idx$val$i42 = load4($$idx10$val$idx$i41);
  $$idx10$val$idx$val$idx$val$i44 = load4($$idx10$val$idx$val$i42);
  $64 = (($$idx11$val$i38) + ($63))|0;
  $$01$i45 = $3;
  while(1) {
   $65 = (($64) - ($$01$i45))|0;
   $66 = (($$idx10$val$idx$val$idx$val$i44) + ($65<<1)|0);
   $67 = load2($66);
   $68 = $67 << 16 >> 16;
   $69 = (((($$idx$val$idx$val$i40) + (($68*12)|0)|0)) + 4|0);
   store4($69,$62);
   $70 = (($$01$i45) + -1)|0;
   $71 = ($70|0)==(0);
   if ($71) {
    break;
   } else {
    $$01$i45 = $70;
   }
  }
 }
 _luaK_reserveregs($8,$3);
 $72 = load4($7);
 $73 = ((($5)) + 14|0);
 store1($73,0);
 $74 = ((($72)) + 42|0);
 $75 = load1($74);
 $76 = ((($5)) + 12|0);
 store1($76,$75);
 $77 = ((($72)) + 8|0);
 $78 = load4($77);
 $79 = ((($78)) + 68|0);
 $80 = load4($79);
 $81 = ((($80)) + 28|0);
 $82 = load4($81);
 $83 = ((($5)) + 4|0);
 store4($83,$82);
 $84 = ((($80)) + 16|0);
 $85 = load4($84);
 $86 = ((($5)) + 8|0);
 store4($86,$85);
 $87 = ((($5)) + 13|0);
 store1($87,0);
 $88 = ((($72)) + 12|0);
 $89 = load4($88);
 store4($5,$89);
 store4($88,$5);
 L13: while(1) {
  $$idx$val$i$i = load4($34);
  switch ($$idx$val$i$i|0) {
  case 277: case 289: case 262: case 261: case 260:  {
   break L13;
   break;
  }
  default: {
  }
  }
  $90 = ($$idx$val$i$i|0)==(274);
  _statement($0);
  if ($90) {
   break;
  }
 }
 _leaveblock($72);
 _leaveblock($8);
 _luaK_patchtohere($8,$91);
 if ($37) {
  $92 = (_luaK_codeABx($8,39,$1,131070)|0);
  $$0 = $92;
  $95 = (($91) + 1)|0;
  _luaK_patchlist($8,$$0,$95);
  _luaK_fixline($8,$2);
  STACKTOP = sp;return;
 } else {
  (_luaK_codeABC($8,41,$1,0,$3)|0);
  _luaK_fixline($8,$2);
  $93 = (($1) + 2)|0;
  $94 = (_luaK_codeABx($8,42,$93,131070)|0);
  $$0 = $94;
  $95 = (($91) + 1)|0;
  _luaK_patchlist($8,$$0,$95);
  _luaK_fixline($8,$2);
  STACKTOP = sp;return;
 }
}
function _adjust_assign($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$store$select = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 48|0);
 $5 = load4($4);
 $6 = (($1) - ($2))|0;
 $7 = load4($3);
 switch ($7|0) {
 case 14: case 13:  {
  $8 = (($6) + 1)|0;
  $9 = ($8|0)>(0);
  $spec$store$select = $9 ? $8 : 0;
  _luaK_setreturns($5,$3,$spec$store$select);
  $10 = ($spec$store$select|0)>(1);
  if ($10) {
   $11 = (($spec$store$select) + -1)|0;
   _luaK_reserveregs($5,$11);
  }
  break;
 }
 case 0:  {
  label = 5;
  break;
 }
 default: {
  _luaK_exp2nextreg($5,$3);
  label = 5;
 }
 }
 if ((label|0) == 5) {
  $12 = ($6|0)>(0);
  if ($12) {
   $13 = ((($5)) + 44|0);
   $14 = load1($13);
   $15 = $14&255;
   _luaK_reserveregs($5,$6);
   _luaK_nil($5,$15,$6);
  }
 }
 $16 = ($1|0)<($2|0);
 if (!($16)) {
  return;
 }
 $17 = load4($4);
 $18 = ((($17)) + 44|0);
 $19 = load1($18);
 $20 = $19&255;
 $21 = (($6) + ($20))|0;
 $22 = $21&255;
 store1($18,$22);
 return;
}
function _singlevaraux($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$i27 = 0, $$0$in$i = 0, $$01011$i = 0, $$011$i = 0, $$011$in$i = 0, $$025 = 0, $$idx$val$i = 0, $$idx$val$idx$i = 0, $$idx$val$idx$val$i = 0, $$idx8$i = 0, $$idx8$val$i = 0, $$idx8$val$idx$i = 0, $$idx8$val$idx$val$i = 0, $$idx8$val$idx$val$idx$val$i = 0, $$idx9$i = 0, $$idx9$val$i = 0, $$pre = 0, $$pre$phi35Z2D = 0, $10 = 0, $11 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)==(0|0);
 if ($4) {
  $5 = ((($2)) + 16|0);
  store4($5,-1);
  $6 = ((($2)) + 20|0);
  store4($6,-1);
  store4($2,0);
  $7 = ((($2)) + 8|0);
  store4($7,0);
  return;
 }
 $8 = ((($0)) + 42|0);
 $9 = load1($8);
 $10 = ($9<<24>>24)==(0);
 L4: do {
  if ($10) {
   $$pre = load4($0);
   $32 = $$pre;
  } else {
   $11 = $9&255;
   $$idx$val$i = load4($0);
   $$idx8$i = ((($0)) + 8|0);
   $$idx8$val$i = load4($$idx8$i);
   $$idx9$i = ((($0)) + 36|0);
   $$idx9$val$i = load4($$idx9$i);
   $$idx$val$idx$i = ((($$idx$val$i)) + 60|0);
   $$idx$val$idx$val$i = load4($$idx$val$idx$i);
   $$idx8$val$idx$i = ((($$idx8$val$i)) + 68|0);
   $$idx8$val$idx$val$i = load4($$idx8$val$idx$i);
   $$idx8$val$idx$val$idx$val$i = load4($$idx8$val$idx$val$i);
   $$011$in$i = $11;
   while(1) {
    $$011$i = (($$011$in$i) + -1)|0;
    $13 = (($$011$i) + ($$idx9$val$i))|0;
    $14 = (($$idx8$val$idx$val$idx$val$i) + ($13<<1)|0);
    $15 = load2($14);
    $16 = $15 << 16 >> 16;
    $17 = (($$idx$val$idx$val$i) + (($16*12)|0)|0);
    $18 = load4($17);
    $19 = ($18|0)==($1|0);
    if ($19) {
     break;
    }
    $12 = ($$011$in$i|0)>(1);
    if ($12) {
     $$011$in$i = $$011$i;
    } else {
     $32 = $$idx$val$i;
     break L4;
    }
   }
   $20 = ($$011$in$i|0)>(0);
   if ($20) {
    $21 = ((($2)) + 16|0);
    store4($21,-1);
    $22 = ((($2)) + 20|0);
    store4($22,-1);
    store4($2,8);
    $23 = ((($2)) + 8|0);
    store4($23,$$011$i);
    $24 = ($3|0)==(0);
    if (!($24)) {
     return;
    }
    $25 = ((($0)) + 12|0);
    $$0$in$i = $25;
    while(1) {
     $$0$i27 = load4($$0$in$i);
     $26 = ((($$0$i27)) + 12|0);
     $27 = load1($26);
     $28 = $27&255;
     $29 = ($$011$in$i|0)>($28|0);
     if ($29) {
      break;
     } else {
      $$0$in$i = $$0$i27;
     }
    }
    $30 = ((($$0$i27)) + 13|0);
    store1($30,1);
    return;
   } else {
    $32 = $$idx$val$i;
   }
  }
 } while(0);
 $31 = ((($32)) + 64|0);
 $33 = load4($31);
 $34 = ((($0)) + 43|0);
 $35 = load1($34);
 $36 = ($35<<24>>24)==(0);
 L20: do {
  if ($36) {
   label = 17;
  } else {
   $37 = $35&255;
   $$01011$i = 0;
   while(1) {
    $38 = (($33) + ($$01011$i<<3)|0);
    $39 = load4($38);
    $40 = ($39|0)==($1|0);
    if ($40) {
     break;
    }
    $41 = (($$01011$i) + 1)|0;
    $42 = ($41>>>0)<($37>>>0);
    if ($42) {
     $$01011$i = $41;
    } else {
     label = 17;
     break L20;
    }
   }
   $$025 = $$01011$i;$$pre$phi35Z2D = $2;
  }
 } while(0);
 do {
  if ((label|0) == 17) {
   $43 = ((($0)) + 4|0);
   $44 = load4($43);
   _singlevaraux($44,$1,$2,0);
   $45 = load4($2);
   $46 = ($45|0)==(0);
   if ($46) {
    return;
   } else {
    $47 = (_newupvalue($0,$1,$2)|0);
    $$025 = $47;$$pre$phi35Z2D = $2;
    break;
   }
  }
 } while(0);
 $48 = ((($2)) + 16|0);
 store4($48,-1);
 $49 = ((($2)) + 20|0);
 store4($49,-1);
 store4($$pre$phi35Z2D,9);
 $50 = ((($2)) + 8|0);
 store4($50,$$025);
 return;
}
function _fieldsel($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx$val$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $2 = sp;
 $3 = ((($0)) + 48|0);
 $4 = load4($3);
 _luaK_exp2anyregup($4,$1);
 _luaX_next($0);
 $5 = ((($0)) + 16|0);
 $6 = load4($5);
 $7 = ($6|0)==(292);
 if ($7) {
  $8 = ((($0)) + 24|0);
  $9 = load4($8);
  _luaX_next($0);
  $$idx$val$i = load4($3);
  $10 = (_luaK_stringK($$idx$val$i,$9)|0);
  $11 = ((($2)) + 16|0);
  store4($11,-1);
  $12 = ((($2)) + 20|0);
  store4($12,-1);
  store4($2,4);
  $13 = ((($2)) + 8|0);
  store4($13,$10);
  _luaK_indexed($4,$1,$2);
  STACKTOP = sp;return;
 } else {
  _error_expected($0,292);
  // unreachable;
 }
}
function _body($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$i = 0, $$01$i$i = 0, $$2$i = 0, $$idx = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i21 = 0, $$idx$val$i24 = 0, $$idx$val$idx$i = 0, $$idx$val$idx$i$i = 0, $$idx$val$idx$val$i = 0, $$idx$val$idx$val$i$i = 0, $$idx10$i = 0, $$idx10$i$i = 0, $$idx10$val$i = 0, $$idx10$val$i$i = 0, $$idx10$val$idx$i = 0, $$idx10$val$idx$i$i = 0, $$idx10$val$idx$val$i = 0;
 var $$idx10$val$idx$val$i$i = 0, $$idx10$val$idx$val$idx$val$i = 0, $$idx10$val$idx$val$idx$val$i$i = 0, $$idx11$i = 0, $$idx11$i$i = 0, $$idx11$val$i = 0, $$idx11$val$i$i = 0, $$idx15 = 0, $$idx15$val = 0, $$idx16$val = 0, $$idx17$val = 0, $$idx17$val$idx = 0, $$idx17$val$idx$val = 0, $$pr$i = 0, $$pr23$i = 0, $$pre = 0, $$pre$i = 0, $$pre2$i = 0, $$pre30 = 0, $$pre31 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $vararg_buffer = sp;
 $4 = sp + 32|0;
 $5 = sp + 16|0;
 $$idx = ((($0)) + 48|0);
 $$idx$val = load4($$idx);
 $$idx15 = ((($0)) + 52|0);
 $$idx15$val = load4($$idx15);
 $6 = load4($$idx$val);
 $7 = ((($$idx$val)) + 32|0);
 $8 = load4($7);
 $9 = ((($6)) + 28|0);
 $10 = load4($9);
 $11 = ($8|0)<($10|0);
 $$pre2$i = ((($6)) + 52|0);
 if (!($11)) {
  $12 = load4($$pre2$i);
  $13 = (_luaM_growaux_($$idx15$val,$12,$9,4,262143,8768)|0);
  store4($$pre2$i,$13);
  $14 = load4($9);
  $15 = ($10|0)<($14|0);
  if ($15) {
   $16 = (($10) + 1)|0;
   $17 = (($13) + ($10<<2)|0);
   store4($17,0);
   $18 = ($16|0)<($14|0);
   if ($18) {
    $20 = $16;
    while(1) {
     $$pre$i = load4($$pre2$i);
     $19 = (($20) + 1)|0;
     $21 = (($$pre$i) + ($20<<2)|0);
     store4($21,0);
     $exitcond = ($19|0)==($14|0);
     if ($exitcond) {
      break;
     } else {
      $20 = $19;
     }
    }
   }
  }
 }
 $22 = (_luaF_newproto($$idx15$val)|0);
 $23 = load4($$pre2$i);
 $24 = load4($7);
 $25 = (($24) + 1)|0;
 store4($7,$25);
 $26 = (($23) + ($24<<2)|0);
 store4($26,$22);
 $27 = ((($6)) + 5|0);
 $28 = load1($27);
 $29 = $28 & 4;
 $30 = ($29<<24>>24)==(0);
 if (!($30)) {
  $31 = ((($22)) + 5|0);
  $32 = load1($31);
  $33 = $32 & 3;
  $34 = ($33<<24>>24)==(0);
  if (!($34)) {
   _luaC_barrier_($$idx15$val,$6,$22);
  }
 }
 store4($4,$22);
 $35 = ((($22)) + 36|0);
 store4($35,$3);
 $36 = load4($$idx);
 $37 = ((($4)) + 4|0);
 store4($37,$36);
 $38 = ((($4)) + 8|0);
 store4($38,$0);
 store4($$idx,$4);
 $39 = ((($4)) + 16|0);
 store4($39,0);
 $40 = ((($4)) + 20|0);
 store4($40,0);
 $41 = ((($4)) + 24|0);
 store4($41,-1);
 $42 = ((($4)) + 28|0);
 store4($42,0);
 $43 = ((($4)) + 32|0);
 store4($43,0);
 $44 = ((($4)) + 40|0);
 $45 = ((($0)) + 68|0);
 ; store4($44,0,4); store1($44+4|0,0,1);
 $46 = load4($45);
 $47 = ((($46)) + 4|0);
 $48 = load4($47);
 $49 = ((($4)) + 36|0);
 store4($49,$48);
 $50 = ((($4)) + 12|0);
 $51 = ((($0)) + 72|0);
 $52 = load4($51);
 $53 = ((($22)) + 72|0);
 store4($53,$52);
 $54 = ((($22)) + 8|0);
 store1($54,2);
 $55 = ((($5)) + 14|0);
 store1($55,0);
 $56 = ((($5)) + 12|0);
 store1($56,0);
 $57 = ((($46)) + 28|0);
 $58 = load4($57);
 $59 = ((($5)) + 4|0);
 store4($59,$58);
 $60 = ((($46)) + 16|0);
 $61 = load4($60);
 $62 = ((($5)) + 8|0);
 store4($62,$61);
 $63 = ((($5)) + 13|0);
 store1($63,0);
 store4($5,0);
 store4($50,$5);
 $64 = ((($0)) + 16|0);
 $65 = load4($64);
 $66 = ($65|0)==(40);
 if (!($66)) {
  _error_expected($0,40);
  // unreachable;
 }
 _luaX_next($0);
 $67 = ($2|0)==(0);
 if ($67) {
  $$pre = load4($$idx);
  $$pre30 = load4($$pre);
  $113 = $$pre;$85 = $$pre30;
 } else {
  $68 = (_luaX_newstring($0,8778,4)|0);
  _new_localvar($0,$68);
  $$idx16$val = load4($$idx);
  $69 = ((($$idx16$val)) + 42|0);
  $70 = load1($69);
  $71 = $70&255;
  $72 = (($71) + 1)|0;
  $73 = $72&255;
  store1($69,$73);
  $74 = ((($$idx16$val)) + 16|0);
  $75 = load4($74);
  $76 = (($70) + 1)<<24>>24;
  $77 = $76&255;
  $$idx$val$i = load4($$idx16$val);
  $$idx10$i = ((($$idx16$val)) + 8|0);
  $$idx10$val$i = load4($$idx10$i);
  $$idx11$i = ((($$idx16$val)) + 36|0);
  $$idx11$val$i = load4($$idx11$i);
  $$idx$val$idx$i = ((($$idx$val$i)) + 60|0);
  $$idx$val$idx$val$i = load4($$idx$val$idx$i);
  $$idx10$val$idx$i = ((($$idx10$val$i)) + 68|0);
  $$idx10$val$idx$val$i = load4($$idx10$val$idx$i);
  $$idx10$val$idx$val$idx$val$i = load4($$idx10$val$idx$val$i);
  $78 = (($$idx11$val$i) + ($77))|0;
  $79 = (($78) + -1)|0;
  $80 = (($$idx10$val$idx$val$idx$val$i) + ($79<<1)|0);
  $81 = load2($80);
  $82 = $81 << 16 >> 16;
  $83 = (((($$idx$val$idx$val$i) + (($82*12)|0)|0)) + 4|0);
  store4($83,$75);
  $113 = $$idx16$val;$85 = $$idx$val$i;
 }
 $84 = ((($85)) + 7|0);
 store1($84,0);
 $86 = load4($64);
 $87 = ($86|0)==(41);
 L19: do {
  if ($87) {
   $$2$i = 0;
  } else {
   $88 = ((($0)) + 24|0);
   $$0$i = 0;$89 = $86;
   L21: while(1) {
    switch ($89|0) {
    case 281:  {
     label = 18;
     break L21;
     break;
    }
    case 292:  {
     break;
    }
    default: {
     label = 19;
     break L21;
    }
    }
    $90 = load4($88);
    _luaX_next($0);
    _new_localvar($0,$90);
    $91 = (($$0$i) + 1)|0;
    $$pr23$i = load1($84);
    $92 = ($$pr23$i<<24>>24)==(0);
    if (!($92)) {
     $$2$i = $91;
     break L19;
    }
    $93 = load4($64);
    $94 = ($93|0)==(44);
    if (!($94)) {
     $$2$i = $91;
     break L19;
    }
    _luaX_next($0);
    $$pr$i = load4($64);
    $$0$i = $91;$89 = $$pr$i;
   }
   if ((label|0) == 18) {
    _luaX_next($0);
    store1($84,1);
    $$2$i = $$0$i;
    break;
   }
   else if ((label|0) == 19) {
    _luaX_syntaxerror($0,8783);
    // unreachable;
   }
  }
 } while(0);
 $$idx$val$i21 = load4($$idx);
 $95 = ((($$idx$val$i21)) + 42|0);
 $96 = load1($95);
 $97 = $96&255;
 $98 = (($$2$i) + ($97))|0;
 $99 = $98&255;
 store1($95,$99);
 $100 = ($$2$i|0)==(0);
 if (!($100)) {
  $101 = ((($$idx$val$i21)) + 16|0);
  $102 = load4($101);
  $103 = $98 & 255;
  $$idx$val$i$i = load4($$idx$val$i21);
  $$idx10$i$i = ((($$idx$val$i21)) + 8|0);
  $$idx10$val$i$i = load4($$idx10$i$i);
  $$idx11$i$i = ((($$idx$val$i21)) + 36|0);
  $$idx11$val$i$i = load4($$idx11$i$i);
  $$idx$val$idx$i$i = ((($$idx$val$i$i)) + 60|0);
  $$idx$val$idx$val$i$i = load4($$idx$val$idx$i$i);
  $$idx10$val$idx$i$i = ((($$idx10$val$i$i)) + 68|0);
  $$idx10$val$idx$val$i$i = load4($$idx10$val$idx$i$i);
  $$idx10$val$idx$val$idx$val$i$i = load4($$idx10$val$idx$val$i$i);
  $104 = (($$idx11$val$i$i) + ($103))|0;
  $$01$i$i = $$2$i;
  while(1) {
   $105 = (($104) - ($$01$i$i))|0;
   $106 = (($$idx10$val$idx$val$idx$val$i$i) + ($105<<1)|0);
   $107 = load2($106);
   $108 = $107 << 16 >> 16;
   $109 = (((($$idx$val$idx$val$i$i) + (($108*12)|0)|0)) + 4|0);
   store4($109,$102);
   $110 = (($$01$i$i) + -1)|0;
   $111 = ($110|0)==(0);
   if ($111) {
    break;
   } else {
    $$01$i$i = $110;
   }
  }
 }
 $112 = ((($113)) + 42|0);
 $114 = load1($112);
 $115 = ((($85)) + 6|0);
 store1($115,$114);
 $116 = $114&255;
 _luaK_reserveregs($113,$116);
 $117 = load4($64);
 $118 = ($117|0)==(41);
 if (!($118)) {
  _error_expected($0,41);
  // unreachable;
 }
 _luaX_next($0);
 L38: while(1) {
  $$idx$val$i24 = load4($64);
  switch ($$idx$val$i24|0) {
  case 277: case 289: case 262: case 261: case 260:  {
   $124 = $$idx$val$i24;
   break L38;
   break;
  }
  default: {
  }
  }
  $119 = ($$idx$val$i24|0)==(274);
  _statement($0);
  if ($119) {
   label = 30;
   break;
  }
 }
 if ((label|0) == 30) {
  $$pre31 = load4($64);
  $124 = $$pre31;
 }
 $120 = ((($0)) + 4|0);
 $121 = load4($120);
 $122 = load4($4);
 $123 = ((($122)) + 40|0);
 store4($123,$121);
 $125 = ($124|0)==(262);
 if ($125) {
  _luaX_next($0);
  $$idx17$val = load4($$idx);
  $$idx17$val$idx = ((($$idx17$val)) + 4|0);
  $$idx17$val$idx$val = load4($$idx17$val$idx);
  $131 = ((($$idx17$val$idx$val)) + 32|0);
  $132 = load4($131);
  $133 = (($132) + -1)|0;
  $134 = (_luaK_codeABx($$idx17$val$idx$val,44,0,$133)|0);
  $135 = ((($1)) + 16|0);
  store4($135,-1);
  $136 = ((($1)) + 20|0);
  store4($136,-1);
  store4($1,12);
  $137 = ((($1)) + 8|0);
  store4($137,$134);
  _luaK_exp2nextreg($$idx17$val$idx$val,$1);
  _close_func($0);
  STACKTOP = sp;return;
 }
 $126 = ($121|0)==($3|0);
 if ($126) {
  _error_expected($0,262);
  // unreachable;
 } else {
  $127 = load4($$idx15);
  $128 = (_luaX_token2str($0,262)|0);
  $129 = (_luaX_token2str($0,265)|0);
  store4($vararg_buffer,$128);
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  store4($vararg_ptr1,$129);
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  store4($vararg_ptr2,$3);
  $130 = (_luaO_pushfstring($127,8536,$vararg_buffer)|0);
  _luaX_syntaxerror($0,$130);
  // unreachable;
 }
}
function _gotostat($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$03439$i = 0, $$pre = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = load4($2);
 $4 = ((($0)) + 16|0);
 $5 = load4($4);
 $6 = ($5|0)==(266);
 _luaX_next($0);
 do {
  if ($6) {
   $7 = load4($4);
   $8 = ($7|0)==(292);
   if ($8) {
    $9 = ((($0)) + 24|0);
    $10 = load4($9);
    _luaX_next($0);
    $$0 = $10;
    break;
   } else {
    _error_expected($0,292);
    // unreachable;
   }
  } else {
   $11 = ((($0)) + 52|0);
   $12 = load4($11);
   $13 = (_luaS_new($12,10616)|0);
   $$0 = $13;
  }
 } while(0);
 $14 = ((($0)) + 68|0);
 $15 = load4($14);
 $16 = ((($15)) + 12|0);
 $17 = ((($15)) + 16|0);
 $18 = load4($17);
 $19 = (($18) + 1)|0;
 $20 = ((($15)) + 20|0);
 $21 = load4($20);
 $22 = ($18|0)<($21|0);
 if ($22) {
  $$pre$i = load4($16);
  $28 = $$pre$i;$39 = $15;
 } else {
  $23 = ((($0)) + 52|0);
  $24 = load4($23);
  $25 = load4($16);
  $26 = (_luaM_growaux_($24,$25,$20,16,32767,8368)|0);
  store4($16,$26);
  $$pre = load4($14);
  $28 = $26;$39 = $$pre;
 }
 $27 = (($28) + ($18<<4)|0);
 store4($27,$$0);
 $29 = (((($28) + ($18<<4)|0)) + 8|0);
 store4($29,$3);
 $30 = ((($0)) + 48|0);
 $31 = load4($30);
 $32 = ((($31)) + 42|0);
 $33 = load1($32);
 $34 = (((($28) + ($18<<4)|0)) + 12|0);
 store1($34,$33);
 $35 = (((($28) + ($18<<4)|0)) + 4|0);
 store4($35,$1);
 store4($17,$19);
 $36 = ((($31)) + 12|0);
 $37 = load4($36);
 $38 = ((($39)) + 12|0);
 $40 = load4($38);
 $41 = ((($37)) + 4|0);
 $42 = load4($41);
 $43 = ((($39)) + 28|0);
 $44 = load4($43);
 $45 = ($42|0)<($44|0);
 if (!($45)) {
  return;
 }
 $46 = ((($39)) + 24|0);
 $47 = load4($46);
 $48 = (($40) + ($18<<4)|0);
 $49 = load4($48);
 $$03439$i = $42;
 while(1) {
  $50 = (($47) + ($$03439$i<<4)|0);
  $51 = load4($50);
  $52 = ($51|0)==($49|0);
  if ($52) {
   break;
  }
  $61 = (($$03439$i) + 1)|0;
  $62 = ($61|0)<($44|0);
  if ($62) {
   $$03439$i = $61;
  } else {
   label = 16;
   break;
  }
 }
 if ((label|0) == 16) {
  return;
 }
 $53 = (((($40) + ($18<<4)|0)) + 12|0);
 $54 = load1($53);
 $55 = (((($47) + ($$03439$i<<4)|0)) + 12|0);
 $56 = load1($55);
 $57 = ($54&255)>($56&255);
 if ($57) {
  $58 = $56&255;
  $59 = (((($40) + ($18<<4)|0)) + 4|0);
  $60 = load4($59);
  _luaK_patchclose($31,$60,$58);
 }
 _closegoto($0,$18,$50);
 return;
}
function _suffixedexp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx$val$i = 0, $$idx$val$i$i = 0, $$pre = 0, $$pre$phi27Z2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer = sp + 24|0;
 $2 = sp;
 $3 = ((($0)) + 48|0);
 $4 = load4($3);
 $5 = ((($0)) + 4|0);
 $6 = load4($5);
 $7 = ((($0)) + 16|0);
 $8 = load4($7);
 L1: do {
  switch ($8|0) {
  case 40:  {
   _luaX_next($0);
   (_subexpr($0,$1,0)|0);
   $9 = load4($7);
   $10 = ($9|0)==(41);
   if ($10) {
    _luaX_next($0);
    $18 = load4($3);
    _luaK_dischargevars($18,$1);
    $$pre = ((($0)) + 24|0);
    $$pre$phi27Z2D = $$pre;
    break L1;
   }
   $11 = load4($5);
   $12 = ($11|0)==($6|0);
   if ($12) {
    _error_expected($0,41);
    // unreachable;
   } else {
    $13 = ((($0)) + 52|0);
    $14 = load4($13);
    $15 = (_luaX_token2str($0,41)|0);
    $16 = (_luaX_token2str($0,40)|0);
    store4($vararg_buffer,$15);
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    store4($vararg_ptr1,$16);
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    store4($vararg_ptr2,$6);
    $17 = (_luaO_pushfstring($14,8536,$vararg_buffer)|0);
    _luaX_syntaxerror($0,$17);
    // unreachable;
   }
   break;
  }
  case 292:  {
   $19 = ((($0)) + 24|0);
   $20 = load4($19);
   _luaX_next($0);
   $21 = load4($3);
   _singlevaraux($21,$20,$1,1);
   $22 = load4($1);
   $23 = ($22|0)==(0);
   if ($23) {
    $24 = ((($0)) + 76|0);
    $25 = load4($24);
    _singlevaraux($21,$25,$1,1);
    $$idx$val$i$i = load4($3);
    $26 = (_luaK_stringK($$idx$val$i$i,$20)|0);
    $27 = ((($2)) + 16|0);
    store4($27,-1);
    $28 = ((($2)) + 20|0);
    store4($28,-1);
    store4($2,4);
    $29 = ((($2)) + 8|0);
    store4($29,$26);
    _luaK_indexed($21,$1,$2);
    $$pre$phi27Z2D = $19;
   } else {
    $$pre$phi27Z2D = $19;
   }
   break;
  }
  default: {
   _luaX_syntaxerror($0,8722);
   // unreachable;
  }
  }
 } while(0);
 $30 = ((($2)) + 16|0);
 $31 = ((($2)) + 20|0);
 $32 = ((($2)) + 8|0);
 L13: while(1) {
  $33 = load4($7);
  switch ($33|0) {
  case 46:  {
   _fieldsel($0,$1);
   break;
  }
  case 91:  {
   _luaK_exp2anyregup($4,$1);
   _luaX_next($0);
   (_subexpr($0,$2,0)|0);
   $34 = load4($3);
   _luaK_exp2val($34,$2);
   $35 = load4($7);
   $36 = ($35|0)==(93);
   if (!($36)) {
    label = 14;
    break L13;
   }
   _luaX_next($0);
   _luaK_indexed($4,$1,$2);
   break;
  }
  case 58:  {
   _luaX_next($0);
   $37 = load4($7);
   $38 = ($37|0)==(292);
   if (!($38)) {
    label = 17;
    break L13;
   }
   $39 = load4($$pre$phi27Z2D);
   _luaX_next($0);
   $$idx$val$i = load4($3);
   $40 = (_luaK_stringK($$idx$val$i,$39)|0);
   store4($30,-1);
   store4($31,-1);
   store4($2,4);
   store4($32,$40);
   _luaK_self($4,$1,$2);
   _funcargs($0,$1,$6);
   break;
  }
  case 123: case 293: case 40:  {
   _luaK_exp2nextreg($4,$1);
   _funcargs($0,$1,$6);
   break;
  }
  default: {
   label = 21;
   break L13;
  }
  }
 }
 if ((label|0) == 14) {
  _error_expected($0,93);
  // unreachable;
 }
 else if ((label|0) == 17) {
  _error_expected($0,292);
  // unreachable;
 }
 else if ((label|0) == 21) {
  STACKTOP = sp;return;
 }
}
function _assignment($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i26$lcssa = 0, $$0$i2627 = 0, $$02$i = 0, $$0301$i = 0, $$1$i = 0, $$2$i = 0, $$idx = 0, $$idx$val = 0, $$off = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $3 = sp + 32|0;
 $4 = sp;
 $5 = ((($1)) + 8|0);
 $6 = load4($5);
 $$off = (($6) + -8)|0;
 $7 = ($$off>>>0)<(3);
 if (!($7)) {
  _luaX_syntaxerror($0,8709);
  // unreachable;
 }
 $8 = ((($0)) + 16|0);
 $9 = load4($8);
 L4: do {
  switch ($9|0) {
  case 44:  {
   _luaX_next($0);
   store4($4,$1);
   $10 = ((($4)) + 8|0);
   _suffixedexp($0,$10);
   $11 = load4($10);
   $12 = ($11|0)==(10);
   if (!($12)) {
    $$idx = ((($0)) + 48|0);
    $$idx$val = load4($$idx);
    $13 = ((($$idx$val)) + 44|0);
    $14 = load1($13);
    $15 = ((($4)) + 16|0);
    $16 = $14&255;
    $17 = ($11|0)==(8);
    $$02$i = $1;$$0301$i = 0;
    while(1) {
     $18 = ((($$02$i)) + 8|0);
     $19 = load4($18);
     $20 = ($19|0)==(10);
     if ($20) {
      $21 = ((($$02$i)) + 16|0);
      $22 = ((($21)) + 3|0);
      $23 = load1($22);
      $24 = $23&255;
      $25 = ($11|0)==($24|0);
      if ($25) {
       $26 = ((($21)) + 2|0);
       $27 = load1($26);
       $28 = $27&255;
       $29 = load4($15);
       $30 = ($29|0)==($28|0);
       if ($30) {
        store1($22,8);
        store1($26,$14);
        $$1$i = 1;
       } else {
        $$1$i = $$0301$i;
       }
      } else {
       $$1$i = $$0301$i;
      }
      if ($17) {
       $31 = load2($21);
       $32 = $31 << 16 >> 16;
       $33 = load4($15);
       $34 = ($33|0)==($32|0);
       if ($34) {
        store2($21,$16);
        $$2$i = 1;
       } else {
        $$2$i = $$1$i;
       }
      } else {
       $$2$i = $$1$i;
      }
     } else {
      $$2$i = $$0301$i;
     }
     $35 = load4($$02$i);
     $36 = ($35|0)==(0|0);
     if ($36) {
      break;
     } else {
      $$02$i = $35;$$0301$i = $$2$i;
     }
    }
    $37 = ($$2$i|0)==(0);
    if (!($37)) {
     $38 = $14&255;
     $39 = ($11|0)==(8);
     $40 = $39 ? 0 : 5;
     $41 = load4($15);
     (_luaK_codeABC($$idx$val,$40,$38,$41,0)|0);
     _luaK_reserveregs($$idx$val,1);
    }
   }
   $42 = ((($0)) + 52|0);
   $43 = load4($42);
   $44 = ((($43)) + 110|0);
   $45 = load2($44);
   $46 = $45&65535;
   $47 = (($46) + ($2))|0;
   $48 = ($47|0)>(200);
   if ($48) {
    $49 = ((($0)) + 48|0);
    $50 = load4($49);
    _errorlimit($50,200,8527);
    // unreachable;
   } else {
    $51 = (($2) + 1)|0;
    _assignment($0,$4,$51);
    break L4;
   }
   break;
  }
  case 61:  {
   _luaX_next($0);
   (_subexpr($0,$3,0)|0);
   $52 = load4($8);
   $53 = ($52|0)==(44);
   if ($53) {
    $54 = ((($0)) + 48|0);
    $$0$i2627 = 1;
    while(1) {
     _luaX_next($0);
     $55 = load4($54);
     _luaK_exp2nextreg($55,$3);
     (_subexpr($0,$3,0)|0);
     $56 = (($$0$i2627) + 1)|0;
     $57 = load4($8);
     $58 = ($57|0)==(44);
     if ($58) {
      $$0$i2627 = $56;
     } else {
      $$0$i26$lcssa = $56;
      break;
     }
    }
   } else {
    $$0$i26$lcssa = 1;
   }
   $59 = ($$0$i26$lcssa|0)==($2|0);
   if (!($59)) {
    _adjust_assign($0,$2,$$0$i26$lcssa,$3);
    break L4;
   }
   $60 = ((($0)) + 48|0);
   $61 = load4($60);
   _luaK_setoneret($61,$3);
   $62 = load4($60);
   _luaK_storevar($62,$5,$3);
   STACKTOP = sp;return;
   break;
  }
  default: {
   _error_expected($0,61);
   // unreachable;
  }
  }
 } while(0);
 $63 = ((($0)) + 48|0);
 $64 = load4($63);
 $65 = ((($64)) + 44|0);
 $66 = load1($65);
 $67 = $66&255;
 $68 = (($67) + -1)|0;
 $69 = ((($3)) + 16|0);
 store4($69,-1);
 $70 = ((($3)) + 20|0);
 store4($70,-1);
 store4($3,7);
 $71 = ((($3)) + 8|0);
 store4($71,$68);
 _luaK_storevar($64,$5,$3);
 STACKTOP = sp;return;
}
function _funcargs($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$pr = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $phitmp = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer = sp + 24|0;
 $3 = sp;
 $4 = ((($0)) + 48|0);
 $5 = load4($4);
 $6 = ((($0)) + 16|0);
 $7 = load4($6);
 switch ($7|0) {
 case 40:  {
  _luaX_next($0);
  $8 = load4($6);
  $9 = ($8|0)==(41);
  if ($9) {
   store4($3,0);
  } else {
   (_subexpr($0,$3,0)|0);
   $10 = load4($6);
   $11 = ($10|0)==(44);
   if ($11) {
    while(1) {
     _luaX_next($0);
     $12 = load4($4);
     _luaK_exp2nextreg($12,$3);
     (_subexpr($0,$3,0)|0);
     $13 = load4($6);
     $14 = ($13|0)==(44);
     if (!($14)) {
      break;
     }
    }
   }
   _luaK_setreturns($5,$3,-1);
   $$pr = load4($6);
   $15 = ($$pr|0)==(41);
   if (!($15)) {
    $16 = ((($0)) + 4|0);
    $17 = load4($16);
    $18 = ($17|0)==($2|0);
    if ($18) {
     _error_expected($0,41);
     // unreachable;
    } else {
     $19 = ((($0)) + 52|0);
     $20 = load4($19);
     $21 = (_luaX_token2str($0,41)|0);
     $22 = (_luaX_token2str($0,40)|0);
     store4($vararg_buffer,$21);
     $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
     store4($vararg_ptr1,$22);
     $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
     store4($vararg_ptr2,$2);
     $23 = (_luaO_pushfstring($20,8536,$vararg_buffer)|0);
     _luaX_syntaxerror($0,$23);
     // unreachable;
    }
   }
  }
  _luaX_next($0);
  break;
 }
 case 123:  {
  _constructor($0,$3);
  break;
 }
 case 293:  {
  $24 = ((($0)) + 24|0);
  $25 = load4($24);
  $26 = (_luaK_stringK($5,$25)|0);
  $27 = ((($3)) + 16|0);
  store4($27,-1);
  $28 = ((($3)) + 20|0);
  store4($28,-1);
  store4($3,4);
  $29 = ((($3)) + 8|0);
  store4($29,$26);
  _luaX_next($0);
  break;
 }
 default: {
  _luaX_syntaxerror($0,8740);
  // unreachable;
 }
 }
 $30 = ((($1)) + 8|0);
 $31 = load4($30);
 $32 = load4($3);
 switch ($32|0) {
 case 0:  {
  break;
 }
 case 14: case 13:  {
  $$0 = 0;
  $36 = (_luaK_codeABC($5,36,$31,$$0,2)|0);
  $37 = ((($1)) + 16|0);
  store4($37,-1);
  $38 = ((($1)) + 20|0);
  store4($38,-1);
  store4($1,13);
  store4($30,$36);
  _luaK_fixline($5,$2);
  $39 = (($31) + 1)|0;
  $40 = $39&255;
  $41 = ((($5)) + 44|0);
  store1($41,$40);
  STACKTOP = sp;return;
  break;
 }
 default: {
  _luaK_exp2nextreg($5,$3);
 }
 }
 $33 = ((($5)) + 44|0);
 $34 = load1($33);
 $35 = $34&255;
 $phitmp = (($35) - ($31))|0;
 $$0 = $phitmp;
 $36 = (_luaK_codeABC($5,36,$31,$$0,2)|0);
 $37 = ((($1)) + 16|0);
 store4($37,-1);
 $38 = ((($1)) + 20|0);
 store4($38,-1);
 store4($1,13);
 store4($30,$36);
 _luaK_fixline($5,$2);
 $39 = (($31) + 1)|0;
 $40 = $39&255;
 $41 = ((($5)) + 44|0);
 store1($41,$40);
 STACKTOP = sp;return;
}
function _constructor($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $vararg_buffer = sp + 40|0;
 $2 = sp;
 $3 = ((($0)) + 48|0);
 $4 = load4($3);
 $5 = ((($0)) + 4|0);
 $6 = load4($5);
 $7 = (_luaK_codeABC($4,11,0,0,0)|0);
 $8 = ((($2)) + 36|0);
 store4($8,0);
 $9 = ((($2)) + 28|0);
 store4($9,0);
 $10 = ((($2)) + 32|0);
 store4($10,0);
 $11 = ((($2)) + 24|0);
 store4($11,$1);
 $12 = ((($1)) + 16|0);
 store4($12,-1);
 $13 = ((($1)) + 20|0);
 store4($13,-1);
 store4($1,12);
 $14 = ((($1)) + 8|0);
 store4($14,$7);
 $15 = ((($2)) + 16|0);
 store4($15,-1);
 $16 = ((($2)) + 20|0);
 store4($16,-1);
 store4($2,0);
 $17 = ((($2)) + 8|0);
 store4($17,0);
 $18 = load4($3);
 _luaK_exp2nextreg($18,$1);
 $19 = ((($0)) + 16|0);
 $20 = load4($19);
 $21 = ($20|0)==(123);
 if (!($21)) {
  _error_expected($0,123);
  // unreachable;
 }
 _luaX_next($0);
 $22 = load4($19);
 $23 = ($22|0)==(125);
 L4: do {
  if (!($23)) {
   $26 = 0;
   L6: while(1) {
    $27 = ($26|0)==(0);
    if (!($27)) {
     _luaK_exp2nextreg($4,$2);
     store4($2,0);
     $28 = load4($8);
     $29 = ($28|0)==(50);
     if ($29) {
      $30 = load4($11);
      $31 = ((($30)) + 8|0);
      $32 = load4($31);
      $33 = load4($10);
      _luaK_setlist($4,$32,$33,50);
      store4($8,0);
     }
    }
    $34 = load4($19);
    L12: do {
     switch ($34|0) {
     case 292:  {
      $35 = (_luaX_lookahead($0)|0);
      $36 = ($35|0)==(61);
      if ($36) {
       _recfield($0,$2);
       break L12;
      } else {
       (_subexpr($0,$2,0)|0);
       $37 = load4($10);
       $38 = (($37) + 1)|0;
       store4($10,$38);
       $39 = load4($8);
       $40 = (($39) + 1)|0;
       store4($8,$40);
       break L12;
      }
      break;
     }
     case 91:  {
      _recfield($0,$2);
      break;
     }
     default: {
      (_subexpr($0,$2,0)|0);
      $41 = load4($10);
      $42 = (($41) + 1)|0;
      store4($10,$42);
      $43 = load4($8);
      $44 = (($43) + 1)|0;
      store4($8,$44);
     }
     }
    } while(0);
    $45 = load4($19);
    switch ($45|0) {
    case 125:  {
     break L4;
     break;
    }
    case 44:  {
     _luaX_next($0);
     break;
    }
    case 59:  {
     _luaX_next($0);
     break;
    }
    default: {
     break L6;
    }
    }
    $24 = load4($19);
    $25 = ($24|0)==(125);
    if ($25) {
     break L4;
    }
    $$pre = load4($2);
    $26 = $$pre;
   }
   $46 = load4($5);
   $47 = ($46|0)==($6|0);
   if ($47) {
    _error_expected($0,125);
    // unreachable;
   } else {
    $48 = ((($0)) + 52|0);
    $49 = load4($48);
    $50 = (_luaX_token2str($0,125)|0);
    $51 = (_luaX_token2str($0,123)|0);
    store4($vararg_buffer,$50);
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    store4($vararg_ptr1,$51);
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    store4($vararg_ptr2,$6);
    $52 = (_luaO_pushfstring($49,8536,$vararg_buffer)|0);
    _luaX_syntaxerror($0,$52);
    // unreachable;
   }
  }
 } while(0);
 _luaX_next($0);
 $53 = load4($8);
 $54 = ($53|0)==(0);
 L30: do {
  if (!($54)) {
   $55 = load4($2);
   switch ($55|0) {
   case 14: case 13:  {
    _luaK_setreturns($4,$2,-1);
    $56 = load4($11);
    $57 = ((($56)) + 8|0);
    $58 = load4($57);
    $59 = load4($10);
    _luaK_setlist($4,$58,$59,-1);
    $60 = load4($10);
    $61 = (($60) + -1)|0;
    store4($10,$61);
    break L30;
    break;
   }
   case 0:  {
    $66 = $53;
    break;
   }
   default: {
    _luaK_exp2nextreg($4,$2);
    $$pre$i = load4($8);
    $66 = $$pre$i;
   }
   }
   $62 = load4($11);
   $63 = ((($62)) + 8|0);
   $64 = load4($63);
   $65 = load4($10);
   _luaK_setlist($4,$64,$65,$66);
  }
 } while(0);
 $67 = load4($4);
 $68 = ((($67)) + 48|0);
 $69 = load4($68);
 $70 = (($69) + ($7<<2)|0);
 $71 = load4($70);
 $72 = $71 & 8388607;
 $73 = load4($10);
 $74 = (_luaO_int2fb($73)|0);
 $75 = $74 << 23;
 $76 = $75 | $72;
 $77 = load4($4);
 $78 = ((($77)) + 48|0);
 $79 = load4($78);
 $80 = (($79) + ($7<<2)|0);
 store4($80,$76);
 $81 = $76 & -8372225;
 $82 = load4($9);
 $83 = (_luaO_int2fb($82)|0);
 $84 = $83 << 14;
 $85 = $84 & 8372224;
 $86 = $85 | $81;
 $87 = load4($4);
 $88 = ((($87)) + 48|0);
 $89 = load4($88);
 $90 = (($89) + ($7<<2)|0);
 store4($90,$86);
 STACKTOP = sp;return;
}
function _recfield($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$idx$val$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $2 = sp + 24|0;
 $3 = sp;
 $4 = ((($0)) + 48|0);
 $5 = load4($4);
 $6 = ((($5)) + 44|0);
 $7 = load1($6);
 $8 = ((($0)) + 16|0);
 $9 = load4($8);
 $10 = ($9|0)==(292);
 do {
  if ($10) {
   $11 = ((($0)) + 24|0);
   $12 = load4($11);
   _luaX_next($0);
   $$idx$val$i = load4($4);
   $13 = (_luaK_stringK($$idx$val$i,$12)|0);
   $14 = ((($2)) + 16|0);
   store4($14,-1);
   $15 = ((($2)) + 20|0);
   store4($15,-1);
   store4($2,4);
   $16 = ((($2)) + 8|0);
   store4($16,$13);
  } else {
   _luaX_next($0);
   (_subexpr($0,$2,0)|0);
   $17 = load4($4);
   _luaK_exp2val($17,$2);
   $18 = load4($8);
   $19 = ($18|0)==(93);
   if ($19) {
    _luaX_next($0);
    break;
   } else {
    _error_expected($0,93);
    // unreachable;
   }
  }
 } while(0);
 $20 = ((($1)) + 28|0);
 $21 = load4($20);
 $22 = (($21) + 1)|0;
 store4($20,$22);
 $23 = load4($8);
 $24 = ($23|0)==(61);
 if ($24) {
  _luaX_next($0);
  $25 = (_luaK_exp2RK($5,$2)|0);
  (_subexpr($0,$3,0)|0);
  $26 = ((($1)) + 24|0);
  $27 = load4($26);
  $28 = ((($27)) + 8|0);
  $29 = load4($28);
  $30 = (_luaK_exp2RK($5,$3)|0);
  (_luaK_codeABC($5,10,$29,$25,$30)|0);
  store1($6,$7);
  STACKTOP = sp;return;
 } else {
  _error_expected($0,61);
  // unreachable;
 }
}
function _luaE_setdebt($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = load4($2);
 $4 = ((($0)) + 12|0);
 $5 = load4($4);
 $6 = (($5) + ($3))|0;
 $7 = (($6) + -2147483647)|0;
 $8 = ($7|0)>($1|0);
 $spec$select = $8 ? $7 : $1;
 $9 = (($6) - ($spec$select))|0;
 store4($2,$9);
 store4($4,$spec$select);
 return;
}
function _luaE_extendCI($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_luaM_realloc_($0,0,0,36)|0);
 $2 = ((($0)) + 20|0);
 $3 = load4($2);
 $4 = ((($3)) + 12|0);
 store4($4,$1);
 $5 = $3;
 $6 = ((($1)) + 8|0);
 store4($6,$5);
 $7 = ((($1)) + 12|0);
 store4($7,0);
 $8 = ((($0)) + 6|0);
 $9 = load2($8);
 $10 = (($9) + 1)<<16>>16;
 store2($8,$10);
 return ($1|0);
}
function _luaE_freeCI($0) {
 $0 = $0|0;
 var $$in1112 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = load4($1);
 $3 = ((($2)) + 12|0);
 $4 = load4($3);
 store4($3,0);
 $5 = ($4|0)==(0|0);
 if ($5) {
  return;
 }
 $6 = ((($0)) + 6|0);
 $$in1112 = $4;
 while(1) {
  $7 = ((($$in1112)) + 12|0);
  $8 = load4($7);
  (_luaM_realloc_($0,$$in1112,36,0)|0);
  $9 = load2($6);
  $10 = (($9) + -1)<<16>>16;
  store2($6,$10);
  $11 = ($8|0)==(0|0);
  if ($11) {
   break;
  } else {
   $$in1112 = $8;
  }
 }
 return;
}
function _luaE_shrinkCI($0) {
 $0 = $0|0;
 var $$014 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = load4($1);
 $3 = ((($2)) + 12|0);
 $4 = load4($3);
 $5 = ($4|0)==(0|0);
 if ($5) {
  return;
 }
 $6 = ((($0)) + 6|0);
 $$014 = $2;$13 = $3;$8 = $4;
 while(1) {
  $7 = ((($8)) + 12|0);
  $9 = load4($7);
  $10 = ($9|0)==(0|0);
  if ($10) {
   label = 5;
   break;
  }
  (_luaM_realloc_($0,$8,36,0)|0);
  $11 = load2($6);
  $12 = (($11) + -1)<<16>>16;
  store2($6,$12);
  store4($13,$9);
  $14 = ((($9)) + 8|0);
  store4($14,$$014);
  $15 = ((($9)) + 12|0);
  $16 = load4($15);
  $17 = ($16|0)==(0|0);
  if ($17) {
   label = 5;
   break;
  } else {
   $$014 = $9;$13 = $15;$8 = $16;
  }
 }
 if ((label|0) == 5) {
  return;
 }
}
function _lua_newthread($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = load4($1);
 $3 = ((($2)) + 12|0);
 $4 = load4($3);
 $5 = ($4|0)>(0);
 if ($5) {
  _luaC_step($0);
 }
 $6 = (_luaM_realloc_($0,0,8,124)|0);
 $7 = ((($6)) + 4|0);
 $8 = ((($2)) + 60|0);
 $9 = load1($8);
 $10 = $9 & 3;
 $11 = ((($6)) + 9|0);
 store1($11,$10);
 $12 = ((($6)) + 8|0);
 store1($12,8);
 $13 = ((($2)) + 64|0);
 $14 = load4($13);
 store4($7,$14);
 store4($13,$7);
 $15 = ((($0)) + 12|0);
 $16 = load4($15);
 store4($16,$7);
 $17 = ((($16)) + 8|0);
 store4($17,72);
 $18 = load4($15);
 $19 = ((($18)) + 16|0);
 store4($15,$19);
 $20 = ((($6)) + 20|0);
 store4($20,$2);
 $21 = ((($6)) + 36|0);
 store4($21,0);
 $22 = ((($6)) + 24|0);
 store4($22,0);
 $23 = ((($6)) + 10|0);
 store2($23,0);
 $24 = ((($6)) + 100|0);
 store4($24,0);
 $25 = ((($6)) + 48|0);
 store4($25,$7);
 $26 = ((($6)) + 52|0);
 store4($26,0);
 $27 = ((($6)) + 114|0);
 store2($27,0);
 $28 = ((($6)) + 92|0);
 store4($28,0);
 $29 = ((($6)) + 116|0);
 store4($29,0);
 $30 = ((($6)) + 104|0);
 store4($30,0);
 $31 = ((($6)) + 120|0);
 store1($31,1);
 $32 = ((($6)) + 108|0);
 $33 = ((($6)) + 40|0);
 store4($33,0);
 $34 = ((($6)) + 112|0);
 store2($34,1);
 $35 = ((($6)) + 12|0);
 store1($35,0);
 $36 = ((($6)) + 96|0);
 store4($36,0);
 $37 = ((($0)) + 112|0);
 $38 = load4($37);
 store4($29,$38);
 $39 = ((($0)) + 100|0);
 $40 = load4($39);
 store4($30,$40);
 $41 = ((($0)) + 88|0);
 $42 = load4($41);
 store4($28,$42);
 store4($32,$40);
 $43 = ((($2)) + 124|0);
 $44 = load4($43);
 $45 = ((($44)) + -4|0);
 $46 = load4($45,1);
 store4($6,$46,1);
 $47 = (_luaM_realloc_($0,0,0,640)|0);
 store4($21,$47);
 store4($24,40);
 $48 = ((($47)) + 8|0);
 store4($48,0);
 $49 = ((($47)) + 24|0);
 store4($49,0);
 $50 = ((($47)) + 40|0);
 store4($50,0);
 $51 = ((($47)) + 56|0);
 store4($51,0);
 $52 = ((($47)) + 72|0);
 store4($52,0);
 $53 = ((($47)) + 88|0);
 store4($53,0);
 $54 = ((($47)) + 104|0);
 store4($54,0);
 $55 = ((($47)) + 120|0);
 store4($55,0);
 $56 = ((($47)) + 136|0);
 store4($56,0);
 $57 = ((($47)) + 152|0);
 store4($57,0);
 $58 = ((($47)) + 168|0);
 store4($58,0);
 $59 = ((($47)) + 184|0);
 store4($59,0);
 $60 = ((($47)) + 200|0);
 store4($60,0);
 $61 = ((($47)) + 216|0);
 store4($61,0);
 $62 = ((($47)) + 232|0);
 store4($62,0);
 $63 = ((($47)) + 248|0);
 store4($63,0);
 $64 = ((($47)) + 264|0);
 store4($64,0);
 $65 = ((($47)) + 280|0);
 store4($65,0);
 $66 = ((($47)) + 296|0);
 store4($66,0);
 $67 = ((($47)) + 312|0);
 store4($67,0);
 $68 = ((($47)) + 328|0);
 store4($68,0);
 $69 = ((($47)) + 344|0);
 store4($69,0);
 $70 = ((($47)) + 360|0);
 store4($70,0);
 $71 = ((($47)) + 376|0);
 store4($71,0);
 $72 = ((($47)) + 392|0);
 store4($72,0);
 $73 = ((($47)) + 408|0);
 store4($73,0);
 $74 = ((($47)) + 424|0);
 store4($74,0);
 $75 = ((($47)) + 440|0);
 store4($75,0);
 $76 = ((($47)) + 456|0);
 store4($76,0);
 $77 = ((($47)) + 472|0);
 store4($77,0);
 $78 = ((($47)) + 488|0);
 store4($78,0);
 $79 = ((($47)) + 504|0);
 store4($79,0);
 $80 = ((($47)) + 520|0);
 store4($80,0);
 $81 = ((($47)) + 536|0);
 store4($81,0);
 $82 = ((($47)) + 552|0);
 store4($82,0);
 $83 = ((($47)) + 568|0);
 store4($83,0);
 $84 = ((($47)) + 584|0);
 store4($84,0);
 $85 = ((($47)) + 600|0);
 store4($85,0);
 $86 = ((($47)) + 616|0);
 store4($86,0);
 $87 = ((($47)) + 632|0);
 store4($87,0);
 $88 = ((($6)) + 16|0);
 $89 = ((($47)) + 560|0);
 $90 = ((($6)) + 32|0);
 store4($90,$89);
 $91 = ((($6)) + 56|0);
 $92 = ((($6)) + 64|0);
 store4($92,0);
 $93 = ((($6)) + 68|0);
 store4($93,0);
 $94 = ((($6)) + 90|0);
 store2($94,0);
 $95 = $47;
 store4($91,$95);
 $96 = ((($47)) + 16|0);
 store4($88,$96);
 store4($48,0);
 $97 = ((($47)) + 336|0);
 $98 = ((($6)) + 60|0);
 store4($98,$97);
 store4($22,$91);
 return ($7|0);
}
function _luaE_freethread($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$in1112$i$i = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + -4|0);
 $3 = ((($1)) + 32|0);
 $4 = load4($3);
 _luaF_close($1,$4);
 $5 = load4($3);
 $6 = ($5|0)==(0|0);
 if ($6) {
  (_luaM_realloc_($0,$2,124,0)|0);
  return;
 }
 $7 = ((($1)) + 52|0);
 $8 = ((($1)) + 20|0);
 store4($8,$7);
 $9 = ((($1)) + 64|0);
 $10 = load4($9);
 store4($9,0);
 $11 = ($10|0)==(0|0);
 if ($11) {
  $21 = $5;
 } else {
  $12 = ((($1)) + 6|0);
  $$in1112$i$i = $10;
  while(1) {
   $13 = ((($$in1112$i$i)) + 12|0);
   $14 = load4($13);
   (_luaM_realloc_($1,$$in1112$i$i,36,0)|0);
   $15 = load2($12);
   $16 = (($15) + -1)<<16>>16;
   store2($12,$16);
   $17 = ($14|0)==(0|0);
   if ($17) {
    break;
   } else {
    $$in1112$i$i = $14;
   }
  }
  $$pre$i = load4($3);
  $21 = $$pre$i;
 }
 $18 = ((($1)) + 96|0);
 $19 = load4($18);
 $20 = $19 << 4;
 (_luaM_realloc_($1,$21,$20,0)|0);
 (_luaM_realloc_($0,$2,124,0)|0);
 return;
}
function _lua_newstate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $2 = sp;
 $3 = sp + 16|0;
 $4 = (FUNCTION_TABLE_iiiii[$0 & 3]($1,0,8,824)|0);
 $5 = ($4|0)==(0|0);
 if ($5) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $6 = ((($4)) + 4|0);
 $7 = ((($4)) + 128|0);
 store4($6,0);
 $8 = ((($4)) + 8|0);
 store1($8,8);
 $9 = ((($4)) + 188|0);
 store1($9,1);
 $10 = ((($4)) + 9|0);
 store1($10,1);
 $11 = ((($4)) + 20|0);
 store4($11,$7);
 $12 = ((($4)) + 36|0);
 store4($12,0);
 $13 = ((($4)) + 24|0);
 store4($13,0);
 $14 = ((($4)) + 10|0);
 store2($14,0);
 $15 = ((($4)) + 100|0);
 store4($15,0);
 $16 = ((($4)) + 48|0);
 store4($16,$6);
 $17 = ((($4)) + 52|0);
 store4($17,0);
 $18 = ((($4)) + 114|0);
 store2($18,0);
 $19 = ((($4)) + 92|0);
 store4($19,0);
 $20 = ((($4)) + 116|0);
 store4($20,0);
 $21 = ((($4)) + 104|0);
 store4($21,0);
 $22 = ((($4)) + 120|0);
 store1($22,1);
 $23 = ((($4)) + 108|0);
 store4($23,0);
 $24 = ((($4)) + 40|0);
 store4($24,0);
 $25 = ((($4)) + 112|0);
 store2($25,1);
 $26 = ((($4)) + 12|0);
 store1($26,0);
 $27 = ((($4)) + 96|0);
 store4($27,0);
 store4($7,$0);
 $28 = ((($4)) + 132|0);
 store4($28,$1);
 $29 = ((($4)) + 252|0);
 store4($29,$6);
 $30 = (_time((0|0))|0);
 store4($3,$30);
 $31 = $6;
 store4($2,$31);
 $32 = $3;
 $33 = ((($2)) + 4|0);
 store4($33,$32);
 $34 = ((($2)) + 8|0);
 store4($34,(18336));
 $35 = ((($2)) + 12|0);
 store4($35,(1));
 $36 = (_luaS_hash($2,16,$30)|0);
 $37 = ((($4)) + 184|0);
 store4($37,$36);
 $38 = ((($4)) + 191|0);
 store1($38,0);
 $39 = ((($4)) + 148|0);
 $40 = ((($4)) + 176|0);
 store4($40,0);
 $41 = ((($4)) + 248|0);
 store4($41,0);
 $42 = ((($4)) + 256|0);
 store4($42,0);
 $43 = ((($4)) + 189|0);
 ; store8($39,i64_const(0,0),4); store8($39+8|0,i64_const(0,0),4);
 store1($43,7);
 $44 = ((($4)) + 190|0);
 store1($44,0);
 $45 = ((($4)) + 192|0);
 $46 = ((($4)) + 136|0);
 ; store8($45,i64_const(0,0),8); store8($45+8|0,i64_const(0,0),8); store8($45+16|0,i64_const(0,0),8); store8($45+24|0,i64_const(0,0),8); store8($45+32|0,i64_const(0,0),8); store4($45+40|0,0,4);
 store4($46,824);
 $47 = ((($4)) + 140|0);
 store4($47,0);
 $48 = ((($4)) + 236|0);
 store4($48,0);
 $49 = ((($4)) + 240|0);
 store4($49,200);
 $50 = ((($4)) + 244|0);
 store4($50,200);
 $51 = ((($4)) + 360|0);
 ; store8($51,i64_const(0,0),4); store8($51+8|0,i64_const(0,0),4); store8($51+16|0,i64_const(0,0),4); store8($51+24|0,i64_const(0,0),4); store4($51+32|0,0,4);
 $52 = (_luaD_rawrunprotected($6,7,0)|0);
 $53 = ($52|0)==(0);
 if ($53) {
  $$0 = $6;
  STACKTOP = sp;return ($$0|0);
 }
 _close_state($6);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _f_luaopen($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = ((($0)) + 16|0);
 $4 = load4($3);
 $5 = (_luaM_realloc_($0,0,0,640)|0);
 $6 = ((($0)) + 32|0);
 store4($6,$5);
 $7 = ((($0)) + 96|0);
 store4($7,40);
 $8 = ((($5)) + 8|0);
 store4($8,0);
 $9 = ((($5)) + 24|0);
 store4($9,0);
 $10 = ((($5)) + 40|0);
 store4($10,0);
 $11 = ((($5)) + 56|0);
 store4($11,0);
 $12 = ((($5)) + 72|0);
 store4($12,0);
 $13 = ((($5)) + 88|0);
 store4($13,0);
 $14 = ((($5)) + 104|0);
 store4($14,0);
 $15 = ((($5)) + 120|0);
 store4($15,0);
 $16 = ((($5)) + 136|0);
 store4($16,0);
 $17 = ((($5)) + 152|0);
 store4($17,0);
 $18 = ((($5)) + 168|0);
 store4($18,0);
 $19 = ((($5)) + 184|0);
 store4($19,0);
 $20 = ((($5)) + 200|0);
 store4($20,0);
 $21 = ((($5)) + 216|0);
 store4($21,0);
 $22 = ((($5)) + 232|0);
 store4($22,0);
 $23 = ((($5)) + 248|0);
 store4($23,0);
 $24 = ((($5)) + 264|0);
 store4($24,0);
 $25 = ((($5)) + 280|0);
 store4($25,0);
 $26 = ((($5)) + 296|0);
 store4($26,0);
 $27 = ((($5)) + 312|0);
 store4($27,0);
 $28 = ((($5)) + 328|0);
 store4($28,0);
 $29 = ((($5)) + 344|0);
 store4($29,0);
 $30 = ((($5)) + 360|0);
 store4($30,0);
 $31 = ((($5)) + 376|0);
 store4($31,0);
 $32 = ((($5)) + 392|0);
 store4($32,0);
 $33 = ((($5)) + 408|0);
 store4($33,0);
 $34 = ((($5)) + 424|0);
 store4($34,0);
 $35 = ((($5)) + 440|0);
 store4($35,0);
 $36 = ((($5)) + 456|0);
 store4($36,0);
 $37 = ((($5)) + 472|0);
 store4($37,0);
 $38 = ((($5)) + 488|0);
 store4($38,0);
 $39 = ((($5)) + 504|0);
 store4($39,0);
 $40 = ((($5)) + 520|0);
 store4($40,0);
 $41 = ((($5)) + 536|0);
 store4($41,0);
 $42 = ((($5)) + 552|0);
 store4($42,0);
 $43 = ((($5)) + 568|0);
 store4($43,0);
 $44 = ((($5)) + 584|0);
 store4($44,0);
 $45 = ((($5)) + 600|0);
 store4($45,0);
 $46 = ((($5)) + 616|0);
 store4($46,0);
 $47 = ((($5)) + 632|0);
 store4($47,0);
 $48 = ((($0)) + 12|0);
 $49 = ((($5)) + 560|0);
 $50 = ((($0)) + 28|0);
 store4($50,$49);
 $51 = ((($0)) + 52|0);
 $52 = ((($0)) + 60|0);
 store4($52,0);
 $53 = ((($0)) + 64|0);
 store4($53,0);
 $54 = ((($0)) + 86|0);
 store2($54,0);
 $55 = $5;
 store4($51,$55);
 $56 = ((($5)) + 16|0);
 store4($48,$56);
 store4($8,0);
 $57 = ((($5)) + 336|0);
 $58 = ((($0)) + 56|0);
 store4($58,$57);
 $59 = ((($0)) + 20|0);
 store4($59,$51);
 $60 = (_luaH_new($0)|0);
 $61 = ((($4)) + 40|0);
 store4($61,$60);
 $62 = ((($4)) + 48|0);
 store4($62,69);
 _luaH_resize($0,$60,2,0);
 store4($2,$0);
 $63 = ((($2)) + 8|0);
 store4($63,72);
 _luaH_setint($0,$60,i64_const(1,0),$2);
 $64 = (_luaH_new($0)|0);
 store4($2,$64);
 store4($63,69);
 _luaH_setint($0,$60,i64_const(2,0),$2);
 _luaS_init($0);
 _luaT_init($0);
 _luaX_init($0);
 $65 = ((($4)) + 63|0);
 store1($65,1);
 $66 = (_lua_version(0)|0);
 $67 = ((($4)) + 128|0);
 store4($67,$66);
 STACKTOP = sp;return;
}
function _close_state($0) {
 $0 = $0|0;
 var $$in1112$i$i = 0, $$pre$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = load4($1);
 $3 = ((($0)) + 32|0);
 $4 = load4($3);
 _luaF_close($0,$4);
 _luaC_freeallobjects($0);
 $5 = load4($1);
 $6 = ((($5)) + 24|0);
 $7 = load4($6);
 $8 = ((($5)) + 32|0);
 $9 = load4($8);
 $10 = $9 << 2;
 (_luaM_realloc_($0,$7,$10,0)|0);
 $11 = load4($3);
 $12 = ($11|0)==(0|0);
 if ($12) {
  $28 = load4($2);
  $29 = ((($2)) + 4|0);
  $30 = load4($29);
  $31 = ((($0)) + -4|0);
  (FUNCTION_TABLE_iiiii[$28 & 3]($30,$31,824,0)|0);
  return;
 }
 $13 = ((($0)) + 52|0);
 $14 = ((($0)) + 20|0);
 store4($14,$13);
 $15 = ((($0)) + 64|0);
 $16 = load4($15);
 store4($15,0);
 $17 = ($16|0)==(0|0);
 if ($17) {
  $27 = $11;
 } else {
  $18 = ((($0)) + 6|0);
  $$in1112$i$i = $16;
  while(1) {
   $19 = ((($$in1112$i$i)) + 12|0);
   $20 = load4($19);
   (_luaM_realloc_($0,$$in1112$i$i,36,0)|0);
   $21 = load2($18);
   $22 = (($21) + -1)<<16>>16;
   store2($18,$22);
   $23 = ($20|0)==(0|0);
   if ($23) {
    break;
   } else {
    $$in1112$i$i = $20;
   }
  }
  $$pre$i = load4($3);
  $27 = $$pre$i;
 }
 $24 = ((($0)) + 96|0);
 $25 = load4($24);
 $26 = $25 << 4;
 (_luaM_realloc_($0,$27,$26,0)|0);
 $28 = load4($2);
 $29 = ((($2)) + 4|0);
 $30 = load4($29);
 $31 = ((($0)) + -4|0);
 (FUNCTION_TABLE_iiiii[$28 & 3]($30,$31,824,0)|0);
 return;
}
function _lua_close($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = load4($1);
 $3 = ((($2)) + 124|0);
 $4 = load4($3);
 _close_state($4);
 return;
}
function _luaS_eqlngstr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = load4($2);
 $4 = ($0|0)==($1|0);
 if ($4) {
  $12 = 1;
  return ($12|0);
 }
 $5 = ((($1)) + 12|0);
 $6 = load4($5);
 $7 = ($3|0)==($6|0);
 if (!($7)) {
  $12 = 0;
  return ($12|0);
 }
 $8 = ((($0)) + 16|0);
 $9 = ((($1)) + 16|0);
 $10 = (_memcmp($8,$9,$3)|0);
 $11 = ($10|0)==(0);
 $phitmp = $11&1;
 $12 = $phitmp;
 return ($12|0);
}
function _luaS_hash($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$014$lcssa = 0, $$01416 = 0, $$017 = 0, $$neg15 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $2 ^ $1;
 $4 = $1 >>> 5;
 $5 = ($4>>>0)<($1>>>0);
 if (!($5)) {
  $$014$lcssa = $3;
  return ($$014$lcssa|0);
 }
 $$neg15 = $4 ^ -1;
 $$01416 = $3;$$017 = $1;
 while(1) {
  $6 = $$01416 << 5;
  $7 = $$01416 >>> 2;
  $8 = (($6) + ($7))|0;
  $9 = (($$017) + -1)|0;
  $10 = (($0) + ($9)|0);
  $11 = load1($10);
  $12 = $11&255;
  $13 = (($8) + ($12))|0;
  $14 = $13 ^ $$01416;
  $15 = (($$017) + ($$neg15))|0;
  $16 = ($15>>>0)>($4>>>0);
  if ($16) {
   $$01416 = $14;$$017 = $15;
  } else {
   $$014$lcssa = $14;
   break;
  }
 }
 return ($$014$lcssa|0);
}
function _luaS_hashlongstr($0) {
 $0 = $0|0;
 var $$014$lcssa$i = 0, $$01416$i = 0, $$017$i = 0, $$neg15$i = 0, $$phi$trans$insert = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 6|0);
 $2 = load1($1);
 $3 = ($2<<24>>24)==(0);
 if (!($3)) {
  $$phi$trans$insert = ((($0)) + 8|0);
  $$pre = load4($$phi$trans$insert);
  $23 = $$pre;
  return ($23|0);
 }
 $4 = ((($0)) + 16|0);
 $5 = ((($0)) + 12|0);
 $6 = load4($5);
 $7 = ((($0)) + 8|0);
 $8 = load4($7);
 $9 = $8 ^ $6;
 $10 = $6 >>> 5;
 $11 = ($10>>>0)<($6>>>0);
 if ($11) {
  $$neg15$i = $10 ^ -1;
  $$01416$i = $9;$$017$i = $6;
  while(1) {
   $12 = $$01416$i << 5;
   $13 = $$01416$i >>> 2;
   $14 = (($12) + ($13))|0;
   $15 = (($$017$i) + -1)|0;
   $16 = (($4) + ($15)|0);
   $17 = load1($16);
   $18 = $17&255;
   $19 = (($14) + ($18))|0;
   $20 = $19 ^ $$01416$i;
   $21 = (($$017$i) + ($$neg15$i))|0;
   $22 = ($21>>>0)>($10>>>0);
   if ($22) {
    $$01416$i = $20;$$017$i = $21;
   } else {
    $$014$lcssa$i = $20;
    break;
   }
  }
 } else {
  $$014$lcssa$i = $9;
 }
 store4($7,$$014$lcssa$i);
 store1($1,1);
 $23 = $$014$lcssa$i;
 return ($23|0);
}
function _luaS_resize($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$05152 = 0, $$153 = 0, $$lcssa = 0, $$pre = 0, $$pre62 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond65 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = load4($2);
 $4 = ((($3)) + 24|0);
 $5 = ((($3)) + 32|0);
 $6 = load4($5);
 $7 = ($6|0)<($1|0);
 if ($7) {
  $8 = (($1) + 1)|0;
  $9 = ($8>>>0)>(1073741823);
  if ($9) {
   _luaM_toobig($0);
   // unreachable;
  }
  $10 = load4($4);
  $11 = $6 << 2;
  $12 = $1 << 2;
  $13 = (_luaM_realloc_($0,$10,$11,$12)|0);
  store4($4,$13);
  $14 = load4($5);
  $15 = ($14|0)<($1|0);
  if ($15) {
   $16 = (($13) + ($14<<2)|0);
   store4($16,0);
   $17 = (($14) + 1)|0;
   $exitcond65 = ($17|0)==($1|0);
   if ($exitcond65) {
    $21 = $14;
   } else {
    $19 = $17;
    while(1) {
     $$pre = load4($4);
     $18 = (($$pre) + ($19<<2)|0);
     store4($18,0);
     $20 = (($19) + 1)|0;
     $exitcond = ($20|0)==($1|0);
     if ($exitcond) {
      $21 = $14;
      break;
     } else {
      $19 = $20;
     }
    }
   }
  } else {
   $21 = $14;
  }
 } else {
  $21 = $6;
 }
 $22 = ($21|0)>(0);
 if ($22) {
  $23 = (($1) + -1)|0;
  $$153 = 0;$49 = $21;
  while(1) {
   $24 = load4($4);
   $25 = (($24) + ($$153<<2)|0);
   $26 = load4($25);
   store4($25,0);
   $27 = ($26|0)==(0|0);
   if ($27) {
    $41 = $49;
   } else {
    $$05152 = $26;
    while(1) {
     $28 = ((($$05152)) + 12|0);
     $29 = load4($28);
     $30 = ((($$05152)) + 8|0);
     $31 = load4($30);
     $32 = $31 & $23;
     $33 = load4($4);
     $34 = (($33) + ($32<<2)|0);
     $35 = load4($34);
     store4($28,$35);
     $36 = load4($4);
     $37 = (($36) + ($32<<2)|0);
     store4($37,$$05152);
     $38 = ($29|0)==(0|0);
     if ($38) {
      break;
     } else {
      $$05152 = $29;
     }
    }
    $$pre62 = load4($5);
    $41 = $$pre62;
   }
   $39 = (($$153) + 1)|0;
   $40 = ($39|0)<($41|0);
   if ($40) {
    $$153 = $39;$49 = $41;
   } else {
    $$lcssa = $41;
    break;
   }
  }
 } else {
  $$lcssa = $21;
 }
 $42 = ($$lcssa|0)>($1|0);
 if (!($42)) {
  store4($5,$1);
  return;
 }
 $43 = (($1) + 1)|0;
 $44 = ($43>>>0)>(1073741823);
 if ($44) {
  _luaM_toobig($0);
  // unreachable;
 }
 $45 = load4($4);
 $46 = $$lcssa << 2;
 $47 = $1 << 2;
 $48 = (_luaM_realloc_($0,$45,$46,$47)|0);
 store4($4,$48);
 store4($5,$1);
 return;
}
function _luaS_clearcache($0) {
 $0 = $0|0;
 var $$01315 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 132|0);
 $$01315 = 0;
 while(1) {
  $2 = (((($0)) + 268|0) + ($$01315<<3)|0);
  $3 = load4($2);
  $4 = ((($3)) + 5|0);
  $5 = load1($4);
  $6 = $5 & 3;
  $7 = ($6<<24>>24)==(0);
  if (!($7)) {
   $8 = load4($1);
   store4($2,$8);
  }
  $9 = (((((($0)) + 268|0) + ($$01315<<3)|0)) + 4|0);
  $10 = load4($9);
  $11 = ((($10)) + 5|0);
  $12 = load1($11);
  $13 = $12 & 3;
  $14 = ($13<<24>>24)==(0);
  if (!($14)) {
   $15 = load4($1);
   store4($9,$15);
  }
  $16 = (($$01315) + 1)|0;
  $exitcond = ($16|0)==(53);
  if ($exitcond) {
   break;
  } else {
   $$01315 = $16;
  }
 }
 return;
}
function _luaS_init($0) {
 $0 = $0|0;
 var $$pre = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = load4($1);
 _luaS_resize($0,128);
 $3 = (_luaS_newlstr($0,8942,17)|0);
 $4 = ((($2)) + 132|0);
 store4($4,$3);
 _luaC_fix($0,$3);
 $$pre = load4($4);
 $5 = ((($2)) + 268|0);
 store4($5,$$pre);
 $6 = ((($2)) + 272|0);
 store4($6,$$pre);
 $7 = ((($2)) + 276|0);
 store4($7,$$pre);
 $8 = ((($2)) + 280|0);
 store4($8,$$pre);
 $9 = ((($2)) + 284|0);
 store4($9,$$pre);
 $10 = ((($2)) + 288|0);
 store4($10,$$pre);
 $11 = ((($2)) + 292|0);
 store4($11,$$pre);
 $12 = ((($2)) + 296|0);
 store4($12,$$pre);
 $13 = ((($2)) + 300|0);
 store4($13,$$pre);
 $14 = ((($2)) + 304|0);
 store4($14,$$pre);
 $15 = ((($2)) + 308|0);
 store4($15,$$pre);
 $16 = ((($2)) + 312|0);
 store4($16,$$pre);
 $17 = ((($2)) + 316|0);
 store4($17,$$pre);
 $18 = ((($2)) + 320|0);
 store4($18,$$pre);
 $19 = ((($2)) + 324|0);
 store4($19,$$pre);
 $20 = ((($2)) + 328|0);
 store4($20,$$pre);
 $21 = ((($2)) + 332|0);
 store4($21,$$pre);
 $22 = ((($2)) + 336|0);
 store4($22,$$pre);
 $23 = ((($2)) + 340|0);
 store4($23,$$pre);
 $24 = ((($2)) + 344|0);
 store4($24,$$pre);
 $25 = ((($2)) + 348|0);
 store4($25,$$pre);
 $26 = ((($2)) + 352|0);
 store4($26,$$pre);
 $27 = ((($2)) + 356|0);
 store4($27,$$pre);
 $28 = ((($2)) + 360|0);
 store4($28,$$pre);
 $29 = ((($2)) + 364|0);
 store4($29,$$pre);
 $30 = ((($2)) + 368|0);
 store4($30,$$pre);
 $31 = ((($2)) + 372|0);
 store4($31,$$pre);
 $32 = ((($2)) + 376|0);
 store4($32,$$pre);
 $33 = ((($2)) + 380|0);
 store4($33,$$pre);
 $34 = ((($2)) + 384|0);
 store4($34,$$pre);
 $35 = ((($2)) + 388|0);
 store4($35,$$pre);
 $36 = ((($2)) + 392|0);
 store4($36,$$pre);
 $37 = ((($2)) + 396|0);
 store4($37,$$pre);
 $38 = ((($2)) + 400|0);
 store4($38,$$pre);
 $39 = ((($2)) + 404|0);
 store4($39,$$pre);
 $40 = ((($2)) + 408|0);
 store4($40,$$pre);
 $41 = ((($2)) + 412|0);
 store4($41,$$pre);
 $42 = ((($2)) + 416|0);
 store4($42,$$pre);
 $43 = ((($2)) + 420|0);
 store4($43,$$pre);
 $44 = ((($2)) + 424|0);
 store4($44,$$pre);
 $45 = ((($2)) + 428|0);
 store4($45,$$pre);
 $46 = ((($2)) + 432|0);
 store4($46,$$pre);
 $47 = ((($2)) + 436|0);
 store4($47,$$pre);
 $48 = ((($2)) + 440|0);
 store4($48,$$pre);
 $49 = ((($2)) + 444|0);
 store4($49,$$pre);
 $50 = ((($2)) + 448|0);
 store4($50,$$pre);
 $51 = ((($2)) + 452|0);
 store4($51,$$pre);
 $52 = ((($2)) + 456|0);
 store4($52,$$pre);
 $53 = ((($2)) + 460|0);
 store4($53,$$pre);
 $54 = ((($2)) + 464|0);
 store4($54,$$pre);
 $55 = ((($2)) + 468|0);
 store4($55,$$pre);
 $56 = ((($2)) + 472|0);
 store4($56,$$pre);
 $57 = ((($2)) + 476|0);
 store4($57,$$pre);
 $58 = ((($2)) + 480|0);
 store4($58,$$pre);
 $59 = ((($2)) + 484|0);
 store4($59,$$pre);
 $60 = ((($2)) + 488|0);
 store4($60,$$pre);
 $61 = ((($2)) + 492|0);
 store4($61,$$pre);
 $62 = ((($2)) + 496|0);
 store4($62,$$pre);
 $63 = ((($2)) + 500|0);
 store4($63,$$pre);
 $64 = ((($2)) + 504|0);
 store4($64,$$pre);
 $65 = ((($2)) + 508|0);
 store4($65,$$pre);
 $66 = ((($2)) + 512|0);
 store4($66,$$pre);
 $67 = ((($2)) + 516|0);
 store4($67,$$pre);
 $68 = ((($2)) + 520|0);
 store4($68,$$pre);
 $69 = ((($2)) + 524|0);
 store4($69,$$pre);
 $70 = ((($2)) + 528|0);
 store4($70,$$pre);
 $71 = ((($2)) + 532|0);
 store4($71,$$pre);
 $72 = ((($2)) + 536|0);
 store4($72,$$pre);
 $73 = ((($2)) + 540|0);
 store4($73,$$pre);
 $74 = ((($2)) + 544|0);
 store4($74,$$pre);
 $75 = ((($2)) + 548|0);
 store4($75,$$pre);
 $76 = ((($2)) + 552|0);
 store4($76,$$pre);
 $77 = ((($2)) + 556|0);
 store4($77,$$pre);
 $78 = ((($2)) + 560|0);
 store4($78,$$pre);
 $79 = ((($2)) + 564|0);
 store4($79,$$pre);
 $80 = ((($2)) + 568|0);
 store4($80,$$pre);
 $81 = ((($2)) + 572|0);
 store4($81,$$pre);
 $82 = ((($2)) + 576|0);
 store4($82,$$pre);
 $83 = ((($2)) + 580|0);
 store4($83,$$pre);
 $84 = ((($2)) + 584|0);
 store4($84,$$pre);
 $85 = ((($2)) + 588|0);
 store4($85,$$pre);
 $86 = ((($2)) + 592|0);
 store4($86,$$pre);
 $87 = ((($2)) + 596|0);
 store4($87,$$pre);
 $88 = ((($2)) + 600|0);
 store4($88,$$pre);
 $89 = ((($2)) + 604|0);
 store4($89,$$pre);
 $90 = ((($2)) + 608|0);
 store4($90,$$pre);
 $91 = ((($2)) + 612|0);
 store4($91,$$pre);
 $92 = ((($2)) + 616|0);
 store4($92,$$pre);
 $93 = ((($2)) + 620|0);
 store4($93,$$pre);
 $94 = ((($2)) + 624|0);
 store4($94,$$pre);
 $95 = ((($2)) + 628|0);
 store4($95,$$pre);
 $96 = ((($2)) + 632|0);
 store4($96,$$pre);
 $97 = ((($2)) + 636|0);
 store4($97,$$pre);
 $98 = ((($2)) + 640|0);
 store4($98,$$pre);
 $99 = ((($2)) + 644|0);
 store4($99,$$pre);
 $100 = ((($2)) + 648|0);
 store4($100,$$pre);
 $101 = ((($2)) + 652|0);
 store4($101,$$pre);
 $102 = ((($2)) + 656|0);
 store4($102,$$pre);
 $103 = ((($2)) + 660|0);
 store4($103,$$pre);
 $104 = ((($2)) + 664|0);
 store4($104,$$pre);
 $105 = ((($2)) + 668|0);
 store4($105,$$pre);
 $106 = ((($2)) + 672|0);
 store4($106,$$pre);
 $107 = ((($2)) + 676|0);
 store4($107,$$pre);
 $108 = ((($2)) + 680|0);
 store4($108,$$pre);
 $109 = ((($2)) + 684|0);
 store4($109,$$pre);
 $110 = ((($2)) + 688|0);
 store4($110,$$pre);
 return;
}
function _luaS_newlstr($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$i = 0, $$014$lcssa$i$i = 0, $$01416$i$i = 0, $$017$i$i = 0, $$049$i = 0, $$04951$i = 0, $$04952$i = 0, $$neg15$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, $or$cond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2>>>0)<(41);
 if (!($3)) {
  $69 = ($2>>>0)>(4294967278);
  if ($69) {
   _luaM_toobig($0);
   // unreachable;
  }
  $70 = ((($0)) + 16|0);
  $71 = load4($70);
  $72 = ((($71)) + 56|0);
  $73 = load4($72);
  $74 = (($2) + 17)|0;
  $75 = (_luaC_newobj($0,20,$74)|0);
  $76 = ((($75)) + 8|0);
  store4($76,$73);
  $77 = ((($75)) + 6|0);
  store1($77,0);
  $78 = ((($75)) + 16|0);
  $79 = (($78) + ($2)|0);
  store1($79,0);
  $80 = ((($75)) + 12|0);
  store4($80,$2);
  _memcpy(($78|0),($1|0),($2|0))|0;
  $$0 = $75;
  return ($$0|0);
 }
 $4 = ((($0)) + 16|0);
 $5 = load4($4);
 $6 = ((($5)) + 56|0);
 $7 = load4($6);
 $8 = $7 ^ $2;
 $9 = $2 >>> 5;
 $10 = ($9>>>0)<($2>>>0);
 if ($10) {
  $$neg15$i$i = $9 ^ -1;
  $$01416$i$i = $8;$$017$i$i = $2;
  while(1) {
   $11 = $$01416$i$i << 5;
   $12 = $$01416$i$i >>> 2;
   $13 = (($11) + ($12))|0;
   $14 = (($$017$i$i) + -1)|0;
   $15 = (($1) + ($14)|0);
   $16 = load1($15);
   $17 = $16&255;
   $18 = (($13) + ($17))|0;
   $19 = $18 ^ $$01416$i$i;
   $20 = (($$017$i$i) + ($$neg15$i$i))|0;
   $21 = ($20>>>0)>($9>>>0);
   if ($21) {
    $$01416$i$i = $19;$$017$i$i = $20;
   } else {
    $$014$lcssa$i$i = $19;
    break;
   }
  }
 } else {
  $$014$lcssa$i$i = $8;
 }
 $22 = ((($5)) + 24|0);
 $23 = load4($22);
 $24 = ((($5)) + 32|0);
 $25 = load4($24);
 $26 = (($25) + -1)|0;
 $27 = $26 & $$014$lcssa$i$i;
 $28 = (($23) + ($27<<2)|0);
 $$04951$i = load4($28);
 $29 = ($$04951$i|0)==(0|0);
 L13: do {
  if (!($29)) {
   $$04952$i = $$04951$i;
   while(1) {
    $30 = ((($$04952$i)) + 7|0);
    $31 = load1($30);
    $32 = $31&255;
    $33 = ($32|0)==($2|0);
    if ($33) {
     $34 = ((($$04952$i)) + 16|0);
     $35 = (_memcmp($1,$34,$2)|0);
     $36 = ($35|0)==(0);
     if ($36) {
      break;
     }
    }
    $45 = ((($$04952$i)) + 12|0);
    $$049$i = load4($45);
    $46 = ($$049$i|0)==(0|0);
    if ($46) {
     break L13;
    } else {
     $$04952$i = $$049$i;
    }
   }
   $37 = ((($$04952$i)) + 5|0);
   $38 = load1($37);
   $39 = $38 ^ 3;
   $40 = ((($5)) + 60|0);
   $41 = load1($40);
   $42 = $41 ^ 3;
   $43 = $42 & $39;
   $44 = ($43<<24>>24)==(0);
   if (!($44)) {
    $$0 = $$04952$i;
    return ($$0|0);
   }
   store1($37,$39);
   $$0 = $$04952$i;
   return ($$0|0);
  }
 } while(0);
 $47 = ((($5)) + 28|0);
 $48 = load4($47);
 $49 = ($48|0)>=($25|0);
 $50 = ($25|0)<(1073741824);
 $or$cond$i = $50 & $49;
 if ($or$cond$i) {
  $51 = $25 << 1;
  _luaS_resize($0,$51);
  $52 = load4($22);
  $53 = load4($24);
  $54 = (($53) + -1)|0;
  $55 = $54 & $$014$lcssa$i$i;
  $56 = (($52) + ($55<<2)|0);
  $$0$i = $56;
 } else {
  $$0$i = $28;
 }
 $57 = (($2) + 17)|0;
 $58 = (_luaC_newobj($0,4,$57)|0);
 $59 = ((($58)) + 8|0);
 store4($59,$$014$lcssa$i$i);
 $60 = ((($58)) + 6|0);
 store1($60,0);
 $61 = ((($58)) + 16|0);
 $62 = (($61) + ($2)|0);
 store1($62,0);
 _memcpy(($61|0),($1|0),($2|0))|0;
 $63 = $2&255;
 $64 = ((($58)) + 7|0);
 store1($64,$63);
 $65 = load4($$0$i);
 $66 = ((($58)) + 12|0);
 store4($66,$65);
 store4($$0$i,$58);
 $67 = load4($47);
 $68 = (($67) + 1)|0;
 store4($47,$68);
 $$0 = $58;
 return ($$0|0);
}
function _luaS_createlngstrobj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = load4($2);
 $4 = ((($3)) + 56|0);
 $5 = load4($4);
 $6 = (($1) + 17)|0;
 $7 = (_luaC_newobj($0,20,$6)|0);
 $8 = ((($7)) + 8|0);
 store4($8,$5);
 $9 = ((($7)) + 6|0);
 store1($9,0);
 $10 = ((($7)) + 16|0);
 $11 = (($10) + ($1)|0);
 store1($11,0);
 $12 = ((($7)) + 12|0);
 store4($12,$1);
 return ($7|0);
}
function _luaS_remove($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$lcssa = 0, $$pn = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = load4($2);
 $4 = ((($3)) + 24|0);
 $5 = load4($4);
 $6 = ((($1)) + 8|0);
 $7 = load4($6);
 $8 = ((($3)) + 32|0);
 $9 = load4($8);
 $10 = (($9) + -1)|0;
 $11 = $10 & $7;
 $12 = (($5) + ($11<<2)|0);
 $13 = load4($12);
 $14 = ($13|0)==($1|0);
 if ($14) {
  $$0$lcssa = $12;
 } else {
  $$pn = $13;
  while(1) {
   $15 = ((($$pn)) + 12|0);
   $16 = load4($15);
   $17 = ($16|0)==($1|0);
   if ($17) {
    break;
   } else {
    $$pn = $16;
   }
  }
  $$0$lcssa = $15;
 }
 $18 = ((($1)) + 12|0);
 $19 = load4($18);
 store4($$0$lcssa,$19);
 $20 = ((($3)) + 28|0);
 $21 = load4($20);
 $22 = (($21) + -1)|0;
 store4($20,$22);
 return;
}
function _luaS_new($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$in = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = $1;
 $3 = (($2>>>0) % 53)&-1;
 $4 = ((($0)) + 16|0);
 $5 = load4($4);
 $6 = (((($5)) + 268|0) + ($3<<3)|0);
 $7 = load4($6);
 $8 = ((($7)) + 16|0);
 $9 = (_strcmp($1,$8)|0);
 $10 = ($9|0)==(0);
 $11 = $7;
 if ($10) {
  $$in = $7;
 } else {
  $12 = (((((($5)) + 268|0) + ($3<<3)|0)) + 4|0);
  $13 = load4($12);
  $14 = ((($13)) + 16|0);
  $15 = (_strcmp($1,$14)|0);
  $16 = ($15|0)==(0);
  if ($16) {
   $$in = $13;
  } else {
   store4($12,$11);
   $17 = (_strlen($1)|0);
   $18 = (_luaS_newlstr($0,$1,$17)|0);
   store4($6,$18);
   $$0 = $18;
   return ($$0|0);
  }
 }
 $$0 = $$in;
 return ($$0|0);
}
function _luaS_newudata($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = i64(), $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1>>>0)>(4294967271);
 if ($2) {
  _luaM_toobig($0);
  // unreachable;
 } else {
  $3 = (($1) + 24)|0;
  $4 = (_luaC_newobj($0,7,$3)|0);
  $5 = ((($4)) + 12|0);
  store4($5,$1);
  $6 = ((($4)) + 8|0);
  store4($6,0);
  $7 = ((($4)) + 16|0);
  $8 = load8(18336);
  store8($7,$8);
  $9 = load4((18344));
  $10 = $9&255;
  $11 = ((($4)) + 6|0);
  store1($11,$10);
  return ($4|0);
 }
 return (0)|0;
}
function _luaH_next($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$lcssa$i = 0, $$028$i = 0, $$030$i = 0, $$042$lcssa = 0, $$04251 = 0, $$150 = 0, $$phi$trans$insert = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = i64(), $50 = 0, $51 = 0, $52 = i64(), $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0, $not$or$cond$i$i = 0;
 var $or$cond$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = ((($2)) + 8|0);
 $4 = load4($3);
 switch ($4|0) {
 case 0:  {
  $$phi$trans$insert = ((($1)) + 8|0);
  $$pre = load4($$phi$trans$insert);
  $$028$i = 0;$44 = $$pre;
  break;
 }
 case 19:  {
  $5 = load8($2);
  $6 = i64_slt($5,i64_const(1,0));
  $7 = i64_ugt($5,i64_const(2147483648,0));
  $8 = i64_trunc($5);
  $not$or$cond$i$i = $7 | $6;
  $9 = ($8|0)==(0);
  $or$cond$i = $not$or$cond$i$i | $9;
  if ($or$cond$i) {
   label = 5;
  } else {
   $10 = ((($1)) + 8|0);
   $11 = load4($10);
   $12 = ($11>>>0)<($8>>>0);
   if ($12) {
    label = 5;
   } else {
    $$028$i = $8;$44 = $11;
   }
  }
  break;
 }
 default: {
  label = 5;
 }
 }
 if ((label|0) == 5) {
  $13 = (_mainposition($1,$2)|0);
  $14 = ((($13)) + 16|0);
  $15 = (_luaV_equalobj(0,$14,$2)|0);
  $16 = ($15|0)==(0);
  L7: do {
   if ($16) {
    $$030$i = $13;$24 = $14;
    while(1) {
     $17 = ((($$030$i)) + 24|0);
     $18 = load4($17);
     $19 = ($18|0)==(10);
     if ($19) {
      $20 = load4($3);
      $21 = $20 & 64;
      $22 = ($21|0)==(0);
      if (!($22)) {
       $23 = load4($24);
       $25 = load4($2);
       $26 = ($23|0)==($25|0);
       if ($26) {
        $$0$lcssa$i = $$030$i;
        break L7;
       }
      }
     }
     $36 = ((($$030$i)) + 28|0);
     $37 = load4($36);
     $38 = ($37|0)==(0);
     if ($38) {
      break;
     }
     $39 = (($$030$i) + ($37<<5)|0);
     $40 = (((($$030$i) + ($37<<5)|0)) + 16|0);
     $41 = (_luaV_equalobj(0,$40,$2)|0);
     $42 = ($41|0)==(0);
     if ($42) {
      $$030$i = $39;$24 = $40;
     } else {
      $$0$lcssa$i = $39;
      break L7;
     }
    }
    _luaG_runerror($0,8960,$vararg_buffer);
    // unreachable;
   } else {
    $$0$lcssa$i = $13;
   }
  } while(0);
  $27 = ((($1)) + 16|0);
  $28 = load4($27);
  $29 = $$0$lcssa$i;
  $30 = (($29) - ($28))|0;
  $31 = $30 >> 5;
  $32 = ((($1)) + 8|0);
  $33 = load4($32);
  $34 = (($33) + 1)|0;
  $35 = (($34) + ($31))|0;
  $$028$i = $35;$44 = $33;
 }
 $43 = ($$028$i>>>0)<($44>>>0);
 L19: do {
  if ($43) {
   $45 = ((($1)) + 12|0);
   $46 = load4($45);
   $$04251 = $$028$i;
   while(1) {
    $49 = (((($46) + ($$04251<<4)|0)) + 8|0);
    $50 = load4($49);
    $51 = ($50|0)==(0);
    $47 = (($$04251) + 1)|0;
    if (!($51)) {
     break;
    }
    $48 = ($47>>>0)<($44>>>0);
    if ($48) {
     $$04251 = $47;
    } else {
     $$042$lcssa = $47;
     break L19;
    }
   }
   $52 = i64_zext($47>>>0);
   store8($2,$52);
   store4($3,19);
   $53 = ((($2)) + 16|0);
   $54 = load4($45);
   $55 = (($54) + ($$04251<<4)|0);
   ; store8($53,load8($55,8),8); store8($53+8 | 0,load8($55+8 | 0,8),8);
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  } else {
   $$042$lcssa = $$028$i;
  }
 } while(0);
 $56 = (($$042$lcssa) - ($44))|0;
 $57 = ((($1)) + 7|0);
 $58 = load1($57);
 $59 = $58&255;
 $60 = 1 << $59;
 $61 = ($56|0)<($60|0);
 if (!($61)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $62 = ((($1)) + 16|0);
 $63 = load4($62);
 $$150 = $56;
 while(1) {
  $64 = (((($63) + ($$150<<5)|0)) + 8|0);
  $65 = load4($64);
  $66 = ($65|0)==(0);
  if (!($66)) {
   break;
  }
  $71 = (($$150) + 1)|0;
  $72 = ($71|0)<($60|0);
  if ($72) {
   $$150 = $71;
  } else {
   $$0 = 0;
   label = 24;
   break;
  }
 }
 if ((label|0) == 24) {
  STACKTOP = sp;return ($$0|0);
 }
 $67 = (((($63) + ($$150<<5)|0)) + 16|0);
 ; store8($2,load8($67,8),8); store8($2+8 | 0,load8($67+8 | 0,8),8);
 $68 = ((($2)) + 16|0);
 $69 = load4($62);
 $70 = (($69) + ($$150<<5)|0);
 ; store8($68,load8($70,8),8); store8($68+8 | 0,load8($70+8 | 0,8),8);
 $$0 = 1;
 STACKTOP = sp;return ($$0|0);
}
function _mainposition($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$lobit$i = 0, $10 = 0, $100 = 0, $101 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0.0, $19 = 0.0, $2 = 0, $20 = 0.0, $21 = 0, $22 = 0, $23 = i64();
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = i64(), $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $or$cond$i = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = ((($1)) + 8|0);
 $4 = load4($3);
 $trunc = $4&255;
 $trunc$clear = $trunc & 63;
 switch ($trunc$clear<<24>>24) {
 case 19:  {
  $5 = ((($0)) + 16|0);
  $6 = load4($5);
  $7 = load8($1);
  $8 = ((($0)) + 7|0);
  $9 = load1($8);
  $10 = $9&255;
  $11 = 1 << $10;
  $12 = (($11) + -1)|0;
  $13 = i64_trunc($7);
  $14 = $12 & $13;
  $15 = (($6) + ($14<<5)|0);
  $$0 = $15;
  STACKTOP = sp;return ($$0|0);
  break;
 }
 case 3:  {
  $16 = ((($0)) + 16|0);
  $17 = load4($16);
  $18 = loadd($1);
  $19 = (+_frexp($18,$2));
  $20 = $19 * 2147483648.0;
  $21 = $20 >= -9.2233720368547758E+18;
  $22 = $20 < 9.2233720368547758E+18;
  $or$cond$i = $21 & $22;
  if ($or$cond$i) {
   $23 = i64_d2s($20);
   $24 = load4($2);
   $25 = i64_trunc($23);
   $26 = (($24) + ($25))|0;
   $$lobit$i = $26 >> 31;
   $27 = $$lobit$i ^ $26;
   $$0$i = $27;
  } else {
   $$0$i = 0;
  }
  $28 = ((($0)) + 7|0);
  $29 = load1($28);
  $30 = $29&255;
  $31 = 1 << $30;
  $32 = (($31) + -1)|0;
  $33 = $32 | 1;
  $34 = (($$0$i|0) % ($33|0))&-1;
  $35 = (($17) + ($34<<5)|0);
  $$0 = $35;
  STACKTOP = sp;return ($$0|0);
  break;
 }
 case 4:  {
  $36 = ((($0)) + 16|0);
  $37 = load4($36);
  $38 = load4($1);
  $39 = ((($38)) + 8|0);
  $40 = load4($39);
  $41 = ((($0)) + 7|0);
  $42 = load1($41);
  $43 = $42&255;
  $44 = 1 << $43;
  $45 = (($44) + -1)|0;
  $46 = $45 & $40;
  $47 = (($37) + ($46<<5)|0);
  $$0 = $47;
  STACKTOP = sp;return ($$0|0);
  break;
 }
 case 20:  {
  $48 = ((($0)) + 16|0);
  $49 = load4($48);
  $50 = load4($1);
  $51 = (_luaS_hashlongstr($50)|0);
  $52 = ((($0)) + 7|0);
  $53 = load1($52);
  $54 = $53&255;
  $55 = 1 << $54;
  $56 = (($55) + -1)|0;
  $57 = $56 & $51;
  $58 = (($49) + ($57<<5)|0);
  $$0 = $58;
  STACKTOP = sp;return ($$0|0);
  break;
 }
 case 1:  {
  $59 = ((($0)) + 16|0);
  $60 = load4($59);
  $61 = load4($1);
  $62 = ((($0)) + 7|0);
  $63 = load1($62);
  $64 = $63&255;
  $65 = 1 << $64;
  $66 = (($65) + -1)|0;
  $67 = $66 & $61;
  $68 = (($60) + ($67<<5)|0);
  $$0 = $68;
  STACKTOP = sp;return ($$0|0);
  break;
 }
 case 2:  {
  $69 = ((($0)) + 16|0);
  $70 = load4($69);
  $71 = load4($1);
  $72 = ((($0)) + 7|0);
  $73 = load1($72);
  $74 = $73&255;
  $75 = 1 << $74;
  $76 = (($75) + -1)|0;
  $77 = $76 | 1;
  $78 = (($71>>>0) % ($77>>>0))&-1;
  $79 = (($70) + ($78<<5)|0);
  $$0 = $79;
  STACKTOP = sp;return ($$0|0);
  break;
 }
 case 22:  {
  $80 = ((($0)) + 16|0);
  $81 = load4($80);
  $82 = load4($1);
  $83 = ((($0)) + 7|0);
  $84 = load1($83);
  $85 = $84&255;
  $86 = 1 << $85;
  $87 = (($86) + -1)|0;
  $88 = $87 | 1;
  $89 = (($82>>>0) % ($88>>>0))&-1;
  $90 = (($81) + ($89<<5)|0);
  $$0 = $90;
  STACKTOP = sp;return ($$0|0);
  break;
 }
 default: {
  $91 = ((($0)) + 16|0);
  $92 = load4($91);
  $93 = load4($1);
  $94 = ((($0)) + 7|0);
  $95 = load1($94);
  $96 = $95&255;
  $97 = 1 << $96;
  $98 = (($97) + -1)|0;
  $99 = $98 | 1;
  $100 = (($93>>>0) % ($99>>>0))&-1;
  $101 = (($92) + ($100<<5)|0);
  $$0 = $101;
  STACKTOP = sp;return ($$0|0);
 }
 }
 return (0)|0;
}
function _luaH_resize($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$i = 0, $$0$i66 = 0, $$014$i = 0, $$020$i$i = 0, $$06569 = 0, $$06569$in = 0, $$070 = 0, $$1$i$i = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = i64(), $43 = i64(), $44 = 0, $45 = i64(), $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = i64(), $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, $exitcond = 0, $exitcond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $4 = sp;
 $5 = sp + 16|0;
 $6 = ((($1)) + 8|0);
 $7 = load4($6);
 $8 = ((($1)) + 20|0);
 $9 = load4($8);
 $10 = ($9|0)==(0|0);
 if ($10) {
  $74 = 0;
 } else {
  $11 = ((($1)) + 7|0);
  $12 = load1($11);
  $13 = $12&255;
  $14 = 1 << $13;
  $74 = $14;
 }
 $15 = ((($1)) + 16|0);
 $16 = load4($15);
 $17 = ($7>>>0)<($2>>>0);
 if ($17) {
  $18 = (($2) + 1)|0;
  $19 = ($18>>>0)>(268435455);
  if ($19) {
   _luaM_toobig($0);
   // unreachable;
  }
  $20 = ((($1)) + 12|0);
  $21 = load4($20);
  $22 = $7 << 4;
  $23 = $2 << 4;
  $24 = (_luaM_realloc_($0,$21,$22,$23)|0);
  store4($20,$24);
  $25 = load4($6);
  $26 = ($25>>>0)<($2>>>0);
  if ($26) {
   $$014$i = $25;
   while(1) {
    $27 = (((($24) + ($$014$i<<4)|0)) + 8|0);
    store4($27,0);
    $28 = (($$014$i) + 1)|0;
    $exitcond$i = ($28|0)==($2|0);
    if ($exitcond$i) {
     break;
    } else {
     $$014$i = $28;
    }
   }
  }
  store4($6,$2);
 }
 store4($5,$1);
 $29 = ((($5)) + 4|0);
 store4($29,$3);
 $30 = (_luaD_rawrunprotected($0,8,$5)|0);
 $31 = ($30|0)==(0);
 if (!($31)) {
  _setarrayvector($0,$1,$7);
  _luaD_throw($0,4);
  // unreachable;
 }
 $32 = ($7>>>0)>($2>>>0);
 do {
  if ($32) {
   store4($6,$2);
   $33 = ((($1)) + 12|0);
   $34 = ((($4)) + 8|0);
   $35 = ((($1)) + 7|0);
   $$070 = $2;
   while(1) {
    $36 = load4($33);
    $37 = (((($36) + ($$070<<4)|0)) + 8|0);
    $38 = load4($37);
    $39 = ($38|0)==(0);
    if ($39) {
     $$pre = (($$070) + 1)|0;
     $$pre$phiZ2D = $$pre;
    } else {
     $40 = (($36) + ($$070<<4)|0);
     $41 = (($$070) + 1)|0;
     $42 = i64_zext($41>>>0);
     $43 = i64_add($42,i64_const(4294967295,4294967295));
     $44 = load4($6);
     $45 = i64_zext($44>>>0);
     $46 = i64_ult($43,$45);
     L25: do {
      if ($46) {
       $47 = i64_trunc($43);
       $48 = (($36) + ($47<<4)|0);
       $$1$i$i = $48;
       label = 24;
      } else {
       $49 = load4($15);
       $50 = load1($35);
       $51 = $50&255;
       $52 = 1 << $51;
       $53 = (($52) + -1)|0;
       $54 = $53 & $41;
       $55 = (($49) + ($54<<5)|0);
       $$020$i$i = $55;
       while(1) {
        $56 = ((($$020$i$i)) + 24|0);
        $57 = load4($56);
        $58 = ($57|0)==(19);
        if ($58) {
         $59 = ((($$020$i$i)) + 16|0);
         $60 = load8($59);
         $61 = i64_eq($60,$42);
         if ($61) {
          break;
         }
        }
        $62 = ((($$020$i$i)) + 28|0);
        $63 = load4($62);
        $64 = ($63|0)==(0);
        if ($64) {
         label = 25;
         break L25;
        }
        $65 = (($$020$i$i) + ($63<<5)|0);
        $$020$i$i = $65;
       }
       $$1$i$i = $$020$i$i;
       label = 24;
      }
     } while(0);
     if ((label|0) == 24) {
      label = 0;
      $66 = ($$1$i$i|0)==(18336|0);
      if ($66) {
       label = 25;
      } else {
       $$0$i = $$1$i$i;
      }
     }
     if ((label|0) == 25) {
      label = 0;
      store8($4,$42);
      store4($34,19);
      $67 = (_luaH_newkey($0,$1,$4)|0);
      $$0$i = $67;
     }
     ; store8($$0$i,load8($40,8),8); store8($$0$i+8 | 0,load8($40+8 | 0,8),8);
     $$pre$phiZ2D = $41;
    }
    $exitcond = ($$pre$phiZ2D|0)==($7|0);
    if ($exitcond) {
     break;
    } else {
     $$070 = $$pre$phiZ2D;
    }
   }
   $68 = (($2) + 1)|0;
   $69 = ($68>>>0)>(268435455);
   if ($69) {
    _luaM_toobig($0);
    // unreachable;
   } else {
    $70 = load4($33);
    $71 = $7 << 4;
    $72 = $2 << 4;
    $73 = (_luaM_realloc_($0,$70,$71,$72)|0);
    store4($33,$73);
    break;
   }
  }
 } while(0);
 $75 = ($74|0)>(0);
 if (!($75)) {
  STACKTOP = sp;return;
 }
 $$06569$in = $74;
 while(1) {
  $$06569 = (($$06569$in) + -1)|0;
  $76 = (((($16) + ($$06569<<5)|0)) + 8|0);
  $77 = load4($76);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $79 = (($16) + ($$06569<<5)|0);
   $80 = (((($16) + ($$06569<<5)|0)) + 16|0);
   $81 = (_luaH_get($1,$80)|0);
   $82 = ($81|0)==(18336|0);
   if ($82) {
    $83 = (_luaH_newkey($0,$1,$80)|0);
    $$0$i66 = $83;
   } else {
    $$0$i66 = $81;
   }
   ; store8($$0$i66,load8($79,8),8); store8($$0$i66+8 | 0,load8($79+8 | 0,8),8);
  }
  $84 = ($$06569$in|0)>(1);
  if ($84) {
   $$06569$in = $$06569;
  } else {
   break;
  }
 }
 if (!($75)) {
  STACKTOP = sp;return;
 }
 $85 = $74 << 5;
 (_luaM_realloc_($0,$16,$85,0)|0);
 STACKTOP = sp;return;
}
function _auxsetnode($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = load4($1);
 $3 = ((($1)) + 4|0);
 $4 = load4($3);
 _setnodevector($0,$2,$4);
 return;
}
function _setarrayvector($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$014 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (($2) + 1)|0;
 $4 = ($3>>>0)>(268435455);
 if ($4) {
  _luaM_toobig($0);
  // unreachable;
 }
 $5 = ((($1)) + 12|0);
 $6 = load4($5);
 $7 = ((($1)) + 8|0);
 $8 = load4($7);
 $9 = $8 << 4;
 $10 = $2 << 4;
 $11 = (_luaM_realloc_($0,$6,$9,$10)|0);
 store4($5,$11);
 $12 = load4($7);
 $13 = ($12>>>0)<($2>>>0);
 if (!($13)) {
  store4($7,$2);
  return;
 }
 $$014 = $12;
 while(1) {
  $14 = (((($11) + ($$014<<4)|0)) + 8|0);
  store4($14,0);
  $15 = (($$014) + 1)|0;
  $exitcond = ($15|0)==($2|0);
  if ($exitcond) {
   break;
  } else {
   $$014 = $15;
  }
 }
 store4($7,$2);
 return;
}
function _luaH_newkey($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i$i = 0, $$0$i$i$i = 0, $$0$lcssa$i$i = 0, $$01921$i$i = 0, $$022$i$i = 0, $$025$lcssa$i$i = 0, $$02538$i$i = 0, $$02737$i$i = 0, $$02936$i$i = 0, $$03035$i$i = 0, $$032$i$i = 0, $$033$lcssa$i$i = 0, $$03344$i$i = 0, $$03449$i$i = 0, $$036$lcssa$i$i = 0, $$03648$i$i = 0, $$039$i$i = 0, $$03947$i$i = 0, $$04046$i$i = 0, $$075 = 0;
 var $$080 = 0, $$1 = 0, $$1$i$i = 0, $$120$i$i = 0, $$135$lcssa$i$i = 0, $$13543$i$i = 0, $$176 = 0, $$2 = 0, $$in$i$i = 0, $$pre$phi100Z2D = 0, $$pre99 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0.0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = i64(), $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = i64(), $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = i64(), $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = i64(), $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $not$or$cond$i$i$i = 0, $not$or$cond$i$i$i$i = 0, $or$cond$i$i = 0, $or$cond$i$i$i = 0, $spec$select$i$i = 0, $spec$select$i16$i = 0, $spec$select31$i$i = 0, $spec$select33$i$i = 0, $spec$select34$i$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0;
 $vararg_buffer1 = sp + 152|0;
 $vararg_buffer = sp + 144|0;
 $3 = sp;
 $4 = sp + 128|0;
 $5 = ((($2)) + 8|0);
 $6 = load4($5);
 switch ($6|0) {
 case 0:  {
  _luaG_runerror($0,8982,$vararg_buffer);
  // unreachable;
  break;
 }
 case 3:  {
  label = 3;
  break;
 }
 default: {
  $$176 = $2;
 }
 }
 if ((label|0) == 3) {
  $7 = (_luaV_tointeger($2,$3,0)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $11 = loadd($2);
   $12 = ($11 == $11) & (0.0 == 0.0);
   if ($12) {
    $$075 = $2;
   } else {
    _luaG_runerror($0,9001,$vararg_buffer1);
    // unreachable;
   }
  } else {
   $9 = load8($3);
   store8($4,$9);
   $10 = ((($4)) + 8|0);
   store4($10,19);
   $$075 = $4;
  }
  $$176 = $$075;
 }
 $13 = (_mainposition($1,$$176)|0);
 $14 = ((($13)) + 8|0);
 $15 = load4($14);
 $16 = ($15|0)==(0);
 $17 = ((($1)) + 20|0);
 $18 = load4($17);
 $19 = ($18|0)==(0|0);
 L11: do {
  if ($16) {
   if (!($19)) {
    $$2 = $13;
    label = 47;
   }
  } else {
   if (!($19)) {
    $20 = ((($1)) + 16|0);
    $21 = load4($20);
    $22 = ($18>>>0)>($21>>>0);
    if ($22) {
     $25 = $18;
     while(1) {
      $23 = ((($25)) + -32|0);
      store4($17,$23);
      $26 = ((($25)) + -8|0);
      $27 = load4($26);
      $28 = ($27|0)==(0);
      if ($28) {
       break;
      }
      $24 = ($23>>>0)>($21>>>0);
      if ($24) {
       $25 = $23;
      } else {
       break L11;
      }
     }
     $106 = ((($13)) + 16|0);
     $107 = (_mainposition($1,$106)|0);
     $108 = ($107|0)==($13|0);
     if ($108) {
      $127 = ((($13)) + 28|0);
      $128 = load4($127);
      $129 = ($128|0)==(0);
      if ($129) {
       $$pre99 = $23;
       $$pre$phi100Z2D = $$pre99;
      } else {
       $130 = ((($25)) + -4|0);
       $131 = (($13) + ($128<<5)|0);
       $132 = $131;
       $133 = $23;
       $134 = (($132) - ($133))|0;
       $135 = $134 >> 5;
       store4($130,$135);
       $$pre$phi100Z2D = $133;
      }
      $136 = $13;
      $137 = (($$pre$phi100Z2D) - ($136))|0;
      $138 = $137 >> 5;
      store4($127,$138);
      $$2 = $23;
      label = 47;
      break;
     }
     $$080 = $107;
     while(1) {
      $109 = ((($$080)) + 28|0);
      $110 = load4($109);
      $111 = (($$080) + ($110<<5)|0);
      $112 = ($111|0)==($13|0);
      if ($112) {
       break;
      } else {
       $$080 = $111;
      }
     }
     $113 = ((($$080)) + 28|0);
     $114 = $23;
     $115 = $$080;
     $116 = (($114) - ($115))|0;
     $117 = $116 >> 5;
     store4($113,$117);
     ; store8($23,load8($13,8),8); store8($23+8 | 0,load8($13+8 | 0,8),8); store8($23+16 | 0,load8($13+16 | 0,8),8); store8($23+24 | 0,load8($13+24 | 0,8),8);
     $118 = ((($13)) + 28|0);
     $119 = load4($118);
     $120 = ($119|0)==(0);
     $121 = ((($25)) + -4|0);
     if (!($120)) {
      $122 = $13;
      $123 = (($122) - ($114))|0;
      $124 = $123 >> 5;
      $125 = load4($121);
      $126 = (($125) + ($124))|0;
      store4($121,$126);
      store4($118,0);
     }
     store4($14,0);
     $$2 = $13;
     label = 47;
    }
   }
  }
 } while(0);
 if ((label|0) == 47) {
  $139 = ((($$2)) + 16|0);
  $140 = load8($$176);
  store8($139,$140);
  $141 = ((($$176)) + 8|0);
  $142 = load4($141);
  $143 = ((($$2)) + 24|0);
  store4($143,$142);
  $144 = load4($141);
  $145 = $144 & 64;
  $146 = ($145|0)==(0);
  if (!($146)) {
   $147 = ((($1)) + 5|0);
   $148 = load1($147);
   $149 = $148 & 4;
   $150 = ($149<<24>>24)==(0);
   if (!($150)) {
    $151 = load4($$176);
    $152 = ((($151)) + 5|0);
    $153 = load1($152);
    $154 = $153 & 3;
    $155 = ($154<<24>>24)==(0);
    if (!($155)) {
     _luaC_barrierback_($0,$1);
    }
   }
  }
  $$1 = $$2;
  STACKTOP = sp;return ($$1|0);
 }
 ; store8($3,i64_const(0,0),8); store8($3+8|0,i64_const(0,0),8); store8($3+16|0,i64_const(0,0),8); store8($3+24|0,i64_const(0,0),8); store8($3+32|0,i64_const(0,0),8); store8($3+40|0,i64_const(0,0),8); store8($3+48|0,i64_const(0,0),8); store8($3+56|0,i64_const(0,0),8); store8($3+64|0,i64_const(0,0),8); store8($3+72|0,i64_const(0,0),8); store8($3+80|0,i64_const(0,0),8); store8($3+88|0,i64_const(0,0),8); store8($3+96|0,i64_const(0,0),8); store8($3+104|0,i64_const(0,0),8); store8($3+112|0,i64_const(0,0),8); store8($3+120|0,i64_const(0,0),8);
 $29 = ((($1)) + 8|0);
 $30 = ((($1)) + 12|0);
 $31 = load4($29);
 $$03449$i$i = 1;$$03648$i$i = 0;$$03947$i$i = 1;$$04046$i$i = 0;
 while(1) {
  $32 = ($$03947$i$i>>>0)>($31>>>0);
  if ($32) {
   $33 = ($$03449$i$i>>>0)>($31>>>0);
   if ($33) {
    $$036$lcssa$i$i = $$03648$i$i;
    break;
   } else {
    $$032$i$i = $31;
   }
  } else {
   $$032$i$i = $$03947$i$i;
  }
  $34 = ($$03449$i$i>>>0)>($$032$i$i>>>0);
  if ($34) {
   $$033$lcssa$i$i = 0;$$135$lcssa$i$i = $$03449$i$i;
  } else {
   $35 = load4($30);
   $$03344$i$i = 0;$$13543$i$i = $$03449$i$i;
   while(1) {
    $36 = (($$13543$i$i) + -1)|0;
    $37 = (((($35) + ($36<<4)|0)) + 8|0);
    $38 = load4($37);
    $39 = ($38|0)!=(0);
    $40 = $39&1;
    $spec$select$i$i = (($$03344$i$i) + ($40))|0;
    $41 = (($$13543$i$i) + 1)|0;
    $42 = ($41>>>0)>($$032$i$i>>>0);
    if ($42) {
     $$033$lcssa$i$i = $spec$select$i$i;$$135$lcssa$i$i = $41;
     break;
    } else {
     $$03344$i$i = $spec$select$i$i;$$13543$i$i = $41;
    }
   }
  }
  $43 = (($3) + ($$04046$i$i<<2)|0);
  $44 = load4($43);
  $45 = (($44) + ($$033$lcssa$i$i))|0;
  store4($43,$45);
  $46 = (($$033$lcssa$i$i) + ($$03648$i$i))|0;
  $47 = (($$04046$i$i) + 1)|0;
  $48 = $$03947$i$i << 1;
  $49 = ($47>>>0)<(32);
  if ($49) {
   $$03449$i$i = $$135$lcssa$i$i;$$03648$i$i = $46;$$03947$i$i = $48;$$04046$i$i = $47;
  } else {
   $$036$lcssa$i$i = $46;
   break;
  }
 }
 $50 = ((($1)) + 7|0);
 $51 = load1($50);
 $52 = $51&255;
 $53 = 1 << $52;
 $54 = ((($1)) + 16|0);
 $$01921$i$i = 0;$$022$i$i = 0;$$in$i$i = $53;
 while(1) {
  $55 = (($$in$i$i) + -1)|0;
  $56 = load4($54);
  $57 = (((($56) + ($55<<5)|0)) + 8|0);
  $58 = load4($57);
  $59 = ($58|0)==(0);
  if ($59) {
   $$1$i$i = $$022$i$i;$$120$i$i = $$01921$i$i;
  } else {
   $60 = (((($56) + ($55<<5)|0)) + 24|0);
   $61 = load4($60);
   $62 = ($61|0)==(19);
   if ($62) {
    $63 = (((($56) + ($55<<5)|0)) + 16|0);
    $64 = load8($63);
    $65 = i64_slt($64,i64_const(1,0));
    $66 = i64_ugt($64,i64_const(2147483648,0));
    $67 = i64_trunc($64);
    $not$or$cond$i$i$i$i = $66 | $65;
    $68 = ($67|0)==(0);
    $or$cond$i$i$i = $not$or$cond$i$i$i$i | $68;
    if ($or$cond$i$i$i) {
     $$0$i$i$i = 0;
    } else {
     $69 = (_luaO_ceillog2($67)|0);
     $70 = (($3) + ($69<<2)|0);
     $71 = load4($70);
     $72 = (($71) + 1)|0;
     store4($70,$72);
     $$0$i$i$i = 1;
    }
   } else {
    $$0$i$i$i = 0;
   }
   $73 = (($$0$i$i$i) + ($$01921$i$i))|0;
   $74 = (($$022$i$i) + 1)|0;
   $$1$i$i = $74;$$120$i$i = $73;
  }
  $75 = ($55|0)==(0);
  if ($75) {
   break;
  } else {
   $$01921$i$i = $$120$i$i;$$022$i$i = $$1$i$i;$$in$i$i = $55;
  }
 }
 $76 = (($$120$i$i) + ($$036$lcssa$i$i))|0;
 $77 = ((($$176)) + 8|0);
 $78 = load4($77);
 $79 = ($78|0)==(19);
 if ($79) {
  $80 = load8($$176);
  $81 = i64_slt($80,i64_const(1,0));
  $82 = i64_ugt($80,i64_const(2147483648,0));
  $83 = i64_trunc($80);
  $not$or$cond$i$i$i = $82 | $81;
  $84 = ($83|0)==(0);
  $or$cond$i$i = $not$or$cond$i$i$i | $84;
  if ($or$cond$i$i) {
   $$0$i$i = 0;
  } else {
   $85 = (_luaO_ceillog2($83)|0);
   $86 = (($3) + ($85<<2)|0);
   $87 = load4($86);
   $88 = (($87) + 1)|0;
   store4($86,$88);
   $$0$i$i = 1;
  }
 } else {
  $$0$i$i = 0;
 }
 $89 = (($76) + ($$0$i$i))|0;
 $$02538$i$i = 0;$$02737$i$i = 0;$$02936$i$i = 1;$$03035$i$i = 0;$$039$i$i = 0;
 while(1) {
  $90 = $$02936$i$i >>> 1;
  $91 = ($89>>>0)>($90>>>0);
  if (!($91)) {
   $$0$lcssa$i$i = $$039$i$i;$$025$lcssa$i$i = $$02538$i$i;
   break;
  }
  $92 = (($3) + ($$03035$i$i<<2)|0);
  $93 = load4($92);
  $94 = ($93|0)==(0);
  $95 = (($93) + ($$02737$i$i))|0;
  $96 = ($95>>>0)>($90>>>0);
  $spec$select$i16$i = $96 ? $95 : $$02538$i$i;
  $spec$select31$i$i = $96 ? $$02936$i$i : $$039$i$i;
  $spec$select33$i$i = $94 ? $$02538$i$i : $spec$select$i16$i;
  $spec$select34$i$i = $94 ? $$039$i$i : $spec$select31$i$i;
  $97 = (($$03035$i$i) + 1)|0;
  $98 = $$02936$i$i << 1;
  $99 = ($98|0)==(0);
  if ($99) {
   $$0$lcssa$i$i = $spec$select34$i$i;$$025$lcssa$i$i = $spec$select33$i$i;
   break;
  } else {
   $$02538$i$i = $spec$select33$i$i;$$02737$i$i = $95;$$02936$i$i = $98;$$03035$i$i = $97;$$039$i$i = $spec$select34$i$i;
  }
 }
 $100 = (($$036$lcssa$i$i) + 1)|0;
 $101 = (($100) + ($$1$i$i))|0;
 $102 = (($101) - ($$025$lcssa$i$i))|0;
 _luaH_resize($0,$1,$$0$lcssa$i$i,$102);
 $103 = (_luaH_get($1,$$176)|0);
 $104 = ($103|0)==(18336|0);
 if (!($104)) {
  $$1 = $103;
  STACKTOP = sp;return ($$1|0);
 }
 $105 = (_luaH_newkey($0,$1,$$176)|0);
 $$1 = $105;
 STACKTOP = sp;return ($$1|0);
}
function _luaH_get($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$010$ph = 0, $$014$lcssa$i = 0, $$01417$i = 0, $$020$i = 0, $$020$i11 = 0, $$022$i = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = i64(), $28 = i64(), $29 = 0, $3 = 0, $30 = 0, $31 = i64(), $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = i64(), $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = i64(), $6 = 0, $60 = i64(), $61 = 0, $62 = 0, $63 = i64(), $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = i64(), $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = ((($1)) + 8|0);
 $4 = load4($3);
 $trunc = $4&255;
 $trunc$clear = $trunc & 63;
 L1: do {
  switch ($trunc$clear<<24>>24) {
  case 4:  {
   $5 = load4($1);
   $6 = ((($0)) + 16|0);
   $7 = load4($6);
   $8 = ((($5)) + 8|0);
   $9 = load4($8);
   $10 = ((($0)) + 7|0);
   $11 = load1($10);
   $12 = $11&255;
   $13 = 1 << $12;
   $14 = (($13) + -1)|0;
   $15 = $14 & $9;
   $16 = (($7) + ($15<<5)|0);
   $$022$i = $16;
   while(1) {
    $17 = ((($$022$i)) + 24|0);
    $18 = load4($17);
    $19 = ($18|0)==(68);
    if ($19) {
     $20 = ((($$022$i)) + 16|0);
     $21 = load4($20);
     $22 = ($21|0)==($5|0);
     if ($22) {
      break;
     }
    }
    $23 = ((($$022$i)) + 28|0);
    $24 = load4($23);
    $25 = ($24|0)==(0);
    if ($25) {
     $$1 = 18336;
     label = 32;
     break;
    }
    $26 = (($$022$i) + ($24<<5)|0);
    $$022$i = $26;
   }
   if ((label|0) == 32) {
    STACKTOP = sp;return ($$1|0);
   }
   $$1 = $$022$i;
   STACKTOP = sp;return ($$1|0);
   break;
  }
  case 19:  {
   $27 = load8($1);
   $28 = i64_add($27,i64_const(4294967295,4294967295));
   $29 = ((($0)) + 8|0);
   $30 = load4($29);
   $31 = i64_zext($30>>>0);
   $32 = i64_ult($28,$31);
   if ($32) {
    $33 = ((($0)) + 12|0);
    $34 = load4($33);
    $35 = i64_trunc($28);
    $36 = (($34) + ($35<<4)|0);
    $$1 = $36;
    STACKTOP = sp;return ($$1|0);
   }
   $37 = ((($0)) + 16|0);
   $38 = load4($37);
   $39 = ((($0)) + 7|0);
   $40 = load1($39);
   $41 = $40&255;
   $42 = 1 << $41;
   $43 = (($42) + -1)|0;
   $44 = i64_trunc($27);
   $45 = $43 & $44;
   $46 = (($38) + ($45<<5)|0);
   $$020$i = $46;
   while(1) {
    $47 = ((($$020$i)) + 24|0);
    $48 = load4($47);
    $49 = ($48|0)==(19);
    if ($49) {
     $50 = ((($$020$i)) + 16|0);
     $51 = load8($50);
     $52 = i64_eq($51,$27);
     if ($52) {
      break;
     }
    }
    $53 = ((($$020$i)) + 28|0);
    $54 = load4($53);
    $55 = ($54|0)==(0);
    if ($55) {
     $$1 = 18336;
     label = 32;
     break;
    }
    $56 = (($$020$i) + ($54<<5)|0);
    $$020$i = $56;
   }
   if ((label|0) == 32) {
    STACKTOP = sp;return ($$1|0);
   }
   $$1 = $$020$i;
   STACKTOP = sp;return ($$1|0);
   break;
  }
  case 3:  {
   $57 = (_luaV_tointeger($1,$2,0)|0);
   $58 = ($57|0)==(0);
   if ($58) {
    break L1;
   }
   $59 = load8($2);
   $60 = i64_add($59,i64_const(4294967295,4294967295));
   $61 = ((($0)) + 8|0);
   $62 = load4($61);
   $63 = i64_zext($62>>>0);
   $64 = i64_ult($60,$63);
   L32: do {
    if ($64) {
     $65 = ((($0)) + 12|0);
     $66 = load4($65);
     $67 = i64_trunc($60);
     $68 = (($66) + ($67<<4)|0);
     $$010$ph = $68;
    } else {
     $69 = ((($0)) + 16|0);
     $70 = load4($69);
     $71 = ((($0)) + 7|0);
     $72 = load1($71);
     $73 = $72&255;
     $74 = 1 << $73;
     $75 = (($74) + -1)|0;
     $76 = i64_trunc($59);
     $77 = $75 & $76;
     $78 = (($70) + ($77<<5)|0);
     $$020$i11 = $78;
     while(1) {
      $79 = ((($$020$i11)) + 24|0);
      $80 = load4($79);
      $81 = ($80|0)==(19);
      if ($81) {
       $82 = ((($$020$i11)) + 16|0);
       $83 = load8($82);
       $84 = i64_eq($83,$59);
       if ($84) {
        break;
       }
      }
      $85 = ((($$020$i11)) + 28|0);
      $86 = load4($85);
      $87 = ($86|0)==(0);
      if ($87) {
       $$010$ph = 18336;
       break L32;
      }
      $88 = (($$020$i11) + ($86<<5)|0);
      $$020$i11 = $88;
     }
     $$010$ph = $$020$i11;
    }
   } while(0);
   $$1 = $$010$ph;
   STACKTOP = sp;return ($$1|0);
   break;
  }
  case 0:  {
   $$1 = 18336;
   STACKTOP = sp;return ($$1|0);
   break;
  }
  default: {
  }
  }
 } while(0);
 $89 = (_mainposition($0,$1)|0);
 $90 = ((($89)) + 16|0);
 $91 = (_luaV_equalobj(0,$90,$1)|0);
 $92 = ($91|0)==(0);
 L46: do {
  if ($92) {
   $$01417$i = $89;
   while(1) {
    $93 = ((($$01417$i)) + 28|0);
    $94 = load4($93);
    $95 = ($94|0)==(0);
    if ($95) {
     $$1 = 18336;
     break;
    }
    $96 = (($$01417$i) + ($94<<5)|0);
    $97 = (((($$01417$i) + ($94<<5)|0)) + 16|0);
    $98 = (_luaV_equalobj(0,$97,$1)|0);
    $99 = ($98|0)==(0);
    if ($99) {
     $$01417$i = $96;
    } else {
     $$014$lcssa$i = $96;
     break L46;
    }
   }
   STACKTOP = sp;return ($$1|0);
  } else {
   $$014$lcssa$i = $89;
  }
 } while(0);
 $$1 = $$014$lcssa$i;
 STACKTOP = sp;return ($$1|0);
}
function _setnodevector($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$029 = 0, $$pre = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = ($2|0)==(0);
 if ($3) {
  $4 = ((($1)) + 16|0);
  store4($4,18352);
  $5 = ((($1)) + 7|0);
  store1($5,0);
  $$sink = 0;
  $23 = ((($1)) + 20|0);
  store4($23,$$sink);
  STACKTOP = sp;return;
 }
 $6 = (_luaO_ceillog2($2)|0);
 $7 = ($6|0)>(30);
 if ($7) {
  _luaG_runerror($0,9020,$vararg_buffer);
  // unreachable;
 }
 $8 = 1 << $6;
 $9 = (($8) + 1)|0;
 $10 = ($9>>>0)>(134217727);
 if ($10) {
  _luaM_toobig($0);
  // unreachable;
 }
 $11 = $8 << 5;
 $12 = (_luaM_realloc_($0,0,0,$11)|0);
 $13 = ((($1)) + 16|0);
 store4($13,$12);
 $$029 = 0;$15 = $12;
 while(1) {
  $14 = (((($15) + ($$029<<5)|0)) + 28|0);
  store4($14,0);
  $16 = (((($15) + ($$029<<5)|0)) + 24|0);
  store4($16,0);
  $17 = (((($15) + ($$029<<5)|0)) + 8|0);
  store4($17,0);
  $18 = (($$029) + 1)|0;
  $19 = ($18|0)<($8|0);
  $$pre = load4($13);
  if ($19) {
   $$029 = $18;$15 = $$pre;
  } else {
   break;
  }
 }
 $20 = $6&255;
 $21 = ((($1)) + 7|0);
 store1($21,$20);
 $22 = (($$pre) + ($8<<5)|0);
 $$sink = $22;
 $23 = ((($1)) + 20|0);
 store4($23,$$sink);
 STACKTOP = sp;return;
}
function _luaH_setint($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = i64($2);
 $3 = $3|0;
 var $$0 = 0, $$020$i = 0, $$1$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = i64(), $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = i64(), $6 = 0, $7 = 0, $8 = i64(), $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $4 = sp;
 $5 = i64_add($2,i64_const(4294967295,4294967295));
 $6 = ((($1)) + 8|0);
 $7 = load4($6);
 $8 = i64_zext($7>>>0);
 $9 = i64_ult($5,$8);
 L1: do {
  if ($9) {
   $10 = ((($1)) + 12|0);
   $11 = load4($10);
   $12 = i64_trunc($5);
   $13 = (($11) + ($12<<4)|0);
   $$1$i = $13;
   label = 9;
  } else {
   $14 = ((($1)) + 16|0);
   $15 = load4($14);
   $16 = ((($1)) + 7|0);
   $17 = load1($16);
   $18 = $17&255;
   $19 = 1 << $18;
   $20 = (($19) + -1)|0;
   $21 = i64_trunc($2);
   $22 = $20 & $21;
   $23 = (($15) + ($22<<5)|0);
   $$020$i = $23;
   while(1) {
    $24 = ((($$020$i)) + 24|0);
    $25 = load4($24);
    $26 = ($25|0)==(19);
    if ($26) {
     $27 = ((($$020$i)) + 16|0);
     $28 = load8($27);
     $29 = i64_eq($28,$2);
     if ($29) {
      break;
     }
    }
    $30 = ((($$020$i)) + 28|0);
    $31 = load4($30);
    $32 = ($31|0)==(0);
    if ($32) {
     break L1;
    }
    $33 = (($$020$i) + ($31<<5)|0);
    $$020$i = $33;
   }
   $$1$i = $$020$i;
   label = 9;
  }
 } while(0);
 if ((label|0) == 9) {
  $34 = ($$1$i|0)==(18336|0);
  if (!($34)) {
   $$0 = $$1$i;
   ; store8($$0,load8($3,8),8); store8($$0+8 | 0,load8($3+8 | 0,8),8);
   STACKTOP = sp;return;
  }
 }
 store8($4,$2);
 $35 = ((($4)) + 8|0);
 store4($35,19);
 $36 = (_luaH_newkey($0,$1,$4)|0);
 $$0 = $36;
 ; store8($$0,load8($3,8),8); store8($$0+8 | 0,load8($3+8 | 0,8),8);
 STACKTOP = sp;return;
}
function _luaH_set($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_luaH_get($1,$2)|0);
 $4 = ($3|0)==(18336|0);
 if (!($4)) {
  $$0 = $3;
  return ($$0|0);
 }
 $5 = (_luaH_newkey($0,$1,$2)|0);
 $$0 = $5;
 return ($$0|0);
}
function _luaH_resizearray($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 20|0);
 $4 = load4($3);
 $5 = ($4|0)==(0|0);
 if ($5) {
  $10 = 0;
 } else {
  $6 = ((($1)) + 7|0);
  $7 = load1($6);
  $8 = $7&255;
  $9 = 1 << $8;
  $10 = $9;
 }
 _luaH_resize($0,$1,$2,$10);
 return;
}
function _luaH_new($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_luaC_newobj($0,5,32)|0);
 $2 = ((($1)) + 24|0);
 store4($2,0);
 $3 = ((($1)) + 6|0);
 store1($3,-1);
 $4 = ((($1)) + 12|0);
 store4($4,0);
 $5 = ((($1)) + 8|0);
 store4($5,0);
 $6 = ((($1)) + 16|0);
 store4($6,18352);
 $7 = ((($1)) + 7|0);
 store1($7,0);
 $8 = ((($1)) + 20|0);
 store4($8,0);
 return ($1|0);
}
function _luaH_free($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 20|0);
 $3 = load4($2);
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  $5 = ((($1)) + 16|0);
  $6 = load4($5);
  $7 = ((($1)) + 7|0);
  $8 = load1($7);
  $9 = $8&255;
  $10 = 32 << $9;
  (_luaM_realloc_($0,$6,$10,0)|0);
 }
 $11 = ((($1)) + 12|0);
 $12 = load4($11);
 $13 = ((($1)) + 8|0);
 $14 = load4($13);
 $15 = $14 << 4;
 (_luaM_realloc_($0,$12,$15,0)|0);
 (_luaM_realloc_($0,$1,32,0)|0);
 return;
}
function _luaH_getint($0,$1) {
 $0 = $0|0;
 $1 = i64($1);
 var $$020 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = i64(), $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = i64(), $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = i64(), $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = i64_add($1,i64_const(4294967295,4294967295));
 $3 = ((($0)) + 8|0);
 $4 = load4($3);
 $5 = i64_zext($4>>>0);
 $6 = i64_ult($2,$5);
 if ($6) {
  $7 = ((($0)) + 12|0);
  $8 = load4($7);
  $9 = i64_trunc($2);
  $10 = (($8) + ($9<<4)|0);
  $$1 = $10;
  return ($$1|0);
 }
 $11 = ((($0)) + 16|0);
 $12 = load4($11);
 $13 = ((($0)) + 7|0);
 $14 = load1($13);
 $15 = $14&255;
 $16 = 1 << $15;
 $17 = (($16) + -1)|0;
 $18 = i64_trunc($1);
 $19 = $17 & $18;
 $20 = (($12) + ($19<<5)|0);
 $$020 = $20;
 while(1) {
  $21 = ((($$020)) + 24|0);
  $22 = load4($21);
  $23 = ($22|0)==(19);
  if ($23) {
   $24 = ((($$020)) + 16|0);
   $25 = load8($24);
   $26 = i64_eq($25,$1);
   if ($26) {
    break;
   }
  }
  $27 = ((($$020)) + 28|0);
  $28 = load4($27);
  $29 = ($28|0)==(0);
  if ($29) {
   $$1 = 18336;
   label = 9;
   break;
  }
  $30 = (($$020) + ($28<<5)|0);
  $$020 = $30;
 }
 if ((label|0) == 9) {
  return ($$1|0);
 }
 $$1 = $$020;
 return ($$1|0);
}
function _luaH_getshortstr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$022 = 0, $$226 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = load4($2);
 $4 = ((($1)) + 8|0);
 $5 = load4($4);
 $6 = ((($0)) + 7|0);
 $7 = load1($6);
 $8 = $7&255;
 $9 = 1 << $8;
 $10 = (($9) + -1)|0;
 $11 = $10 & $5;
 $12 = (($3) + ($11<<5)|0);
 $$022 = $12;
 while(1) {
  $13 = ((($$022)) + 24|0);
  $14 = load4($13);
  $15 = ($14|0)==(68);
  if ($15) {
   $16 = ((($$022)) + 16|0);
   $17 = load4($16);
   $18 = ($17|0)==($1|0);
   if ($18) {
    break;
   }
  }
  $19 = ((($$022)) + 28|0);
  $20 = load4($19);
  $21 = ($20|0)==(0);
  if ($21) {
   $$226 = 18336;
   label = 7;
   break;
  }
  $22 = (($$022) + ($20<<5)|0);
  $$022 = $22;
 }
 if ((label|0) == 7) {
  return ($$226|0);
 }
 $$226 = $$022;
 return ($$226|0);
}
function _luaH_getstr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$014$lcssa$i = 0, $$01417$i = 0, $$022$i = 0, $$2$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = ((($1)) + 4|0);
 $4 = load1($3);
 $5 = ($4<<24>>24)==(4);
 if (!($5)) {
  store4($2,$1);
  $27 = $4 | 64;
  $28 = $27&255;
  $29 = ((($2)) + 8|0);
  store4($29,$28);
  $30 = (_mainposition($0,$2)|0);
  $31 = ((($30)) + 16|0);
  $32 = (_luaV_equalobj(0,$31,$2)|0);
  $33 = ($32|0)==(0);
  L3: do {
   if ($33) {
    $$01417$i = $30;
    while(1) {
     $34 = ((($$01417$i)) + 28|0);
     $35 = load4($34);
     $36 = ($35|0)==(0);
     if ($36) {
      $$2$i = 18336;
      break L3;
     }
     $37 = (($$01417$i) + ($35<<5)|0);
     $38 = (((($$01417$i) + ($35<<5)|0)) + 16|0);
     $39 = (_luaV_equalobj(0,$38,$2)|0);
     $40 = ($39|0)==(0);
     if ($40) {
      $$01417$i = $37;
     } else {
      $$014$lcssa$i = $37;
      label = 10;
      break;
     }
    }
   } else {
    $$014$lcssa$i = $30;
    label = 10;
   }
  } while(0);
  if ((label|0) == 10) {
   $$2$i = $$014$lcssa$i;
  }
  $$0 = $$2$i;
  STACKTOP = sp;return ($$0|0);
 }
 $6 = ((($0)) + 16|0);
 $7 = load4($6);
 $8 = ((($1)) + 8|0);
 $9 = load4($8);
 $10 = ((($0)) + 7|0);
 $11 = load1($10);
 $12 = $11&255;
 $13 = 1 << $12;
 $14 = (($13) + -1)|0;
 $15 = $14 & $9;
 $16 = (($7) + ($15<<5)|0);
 $$022$i = $16;
 while(1) {
  $17 = ((($$022$i)) + 24|0);
  $18 = load4($17);
  $19 = ($18|0)==(68);
  if ($19) {
   $20 = ((($$022$i)) + 16|0);
   $21 = load4($20);
   $22 = ($21|0)==($1|0);
   if ($22) {
    break;
   }
  }
  $23 = ((($$022$i)) + 28|0);
  $24 = load4($23);
  $25 = ($24|0)==(0);
  if ($25) {
   $$0 = 18336;
   label = 14;
   break;
  }
  $26 = (($$022$i) + ($24<<5)|0);
  $$022$i = $26;
 }
 if ((label|0) == 14) {
  STACKTOP = sp;return ($$0|0);
 }
 $$0 = $$022$i;
 STACKTOP = sp;return ($$0|0);
}
function _luaH_getn($0) {
 $0 = $0|0;
 var $$$022 = 0, $$$123$i = i64(), $$0 = i64(), $$020$i$i = 0, $$020$i25$i = 0, $$020$i28$i = 0, $$021$ = 0, $$021$i = i64(), $$021$i$phi = i64(), $$02131 = 0, $$022$i = i64(), $$02230 = 0, $$1$i = i64(), $$1$i$i = 0, $$1$i26$i = 0, $$1$i29$i = 0, $$12339$i = i64(), $$2$$i = i64(), $$240$i = i64(), $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = i64(), $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = i64(), $113 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = i64(), $23 = i64(), $24 = 0, $25 = 0, $26 = 0, $27 = i64(), $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = i64(), $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = i64(), $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = i64(), $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = i64(), $81 = i64(), $82 = i64(), $83 = 0, $84 = i64(), $85 = i64(), $86 = i64(), $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $phitmp = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = load4($1);
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = ((($0)) + 12|0);
  $5 = load4($4);
  $6 = (($2) + -1)|0;
  $7 = (((($5) + ($6<<4)|0)) + 8|0);
  $8 = load4($7);
  $9 = ($8|0)==(0);
  if ($9) {
   $10 = ($2>>>0)>(1);
   if (!($10)) {
    $$0 = i64_const(0,0);
    return (i64($$0));
   }
   $$02131 = 0;$$02230 = $2;
   while(1) {
    $11 = (($$02131) + ($$02230))|0;
    $12 = $11 >>> 1;
    $13 = (($12) + -1)|0;
    $14 = (((($5) + ($13<<4)|0)) + 8|0);
    $15 = load4($14);
    $16 = ($15|0)==(0);
    $$$022 = $16 ? $12 : $$02230;
    $$021$ = $16 ? $$02131 : $12;
    $17 = (($$$022) - ($$021$))|0;
    $18 = ($17>>>0)>(1);
    if ($18) {
     $$02131 = $$021$;$$02230 = $$$022;
    } else {
     break;
    }
   }
   $phitmp = i64_zext($$021$>>>0);
   $$0 = $phitmp;
   return (i64($$0));
  }
 }
 $19 = ((($0)) + 20|0);
 $20 = load4($19);
 $21 = ($20|0)==(0|0);
 $22 = i64_zext($2>>>0);
 if ($21) {
  $$0 = $22;
  return (i64($$0));
 }
 $23 = i64_add($22,i64_const(1,0));
 $24 = ((($0)) + 12|0);
 $25 = ((($0)) + 16|0);
 $26 = ((($0)) + 7|0);
 $$021$i = $22;$$022$i = $23;
 while(1) {
  $27 = i64_add($$022$i,i64_const(4294967295,4294967295));
  $28 = i64_ult($27,$22);
  L17: do {
   if ($28) {
    $29 = load4($24);
    $30 = i64_trunc($27);
    $31 = (($29) + ($30<<4)|0);
    $$1$i$i = $31;
   } else {
    $32 = load4($25);
    $33 = load1($26);
    $34 = $33&255;
    $35 = 1 << $34;
    $36 = (($35) + -1)|0;
    $37 = i64_trunc($$022$i);
    $38 = $36 & $37;
    $39 = (($32) + ($38<<5)|0);
    $$020$i$i = $39;
    while(1) {
     $40 = ((($$020$i$i)) + 24|0);
     $41 = load4($40);
     $42 = ($41|0)==(19);
     if ($42) {
      $43 = ((($$020$i$i)) + 16|0);
      $44 = load8($43);
      $45 = i64_eq($44,$$022$i);
      if ($45) {
       break;
      }
     }
     $46 = ((($$020$i$i)) + 28|0);
     $47 = load4($46);
     $48 = ($47|0)==(0);
     if ($48) {
      $$1$i$i = 18336;
      break L17;
     }
     $49 = (($$020$i$i) + ($47<<5)|0);
     $$020$i$i = $49;
    }
    $$1$i$i = $$020$i$i;
   }
  } while(0);
  $50 = ((($$1$i$i)) + 8|0);
  $51 = load4($50);
  $52 = ($51|0)==(0);
  if ($52) {
   break;
  }
  $53 = i64_ugt($$022$i,i64_const(4294967295,1073741823));
  if ($53) {
   label = 19;
   break;
  }
  $81 = i64_shl($$022$i,i64_const(1,0));
  $$021$i$phi = $$022$i;$$022$i = $81;$$021$i = $$021$i$phi;
 }
 if ((label|0) == 19) {
  $$1$i = i64_const(1,0);
  while(1) {
   $54 = i64_add($$1$i,i64_const(4294967295,4294967295));
   $55 = i64_ult($54,$22);
   L34: do {
    if ($55) {
     $56 = load4($24);
     $57 = i64_trunc($54);
     $58 = (($56) + ($57<<4)|0);
     $$1$i29$i = $58;
    } else {
     $59 = load4($25);
     $60 = load1($26);
     $61 = $60&255;
     $62 = 1 << $61;
     $63 = (($62) + -1)|0;
     $64 = i64_trunc($$1$i);
     $65 = $63 & $64;
     $66 = (($59) + ($65<<5)|0);
     $$020$i28$i = $66;
     while(1) {
      $67 = ((($$020$i28$i)) + 24|0);
      $68 = load4($67);
      $69 = ($68|0)==(19);
      if ($69) {
       $70 = ((($$020$i28$i)) + 16|0);
       $71 = load8($70);
       $72 = i64_eq($71,$$1$i);
       if ($72) {
        break;
       }
      }
      $73 = ((($$020$i28$i)) + 28|0);
      $74 = load4($73);
      $75 = ($74|0)==(0);
      if ($75) {
       $$1$i29$i = 18336;
       break L34;
      }
      $76 = (($$020$i28$i) + ($74<<5)|0);
      $$020$i28$i = $76;
     }
     $$1$i29$i = $$020$i28$i;
    }
   } while(0);
   $77 = ((($$1$i29$i)) + 8|0);
   $78 = load4($77);
   $79 = ($78|0)==(0);
   $80 = i64_add($$1$i,i64_const(1,0));
   if ($79) {
    $$0 = $54;
    break;
   } else {
    $$1$i = $80;
   }
  }
  return (i64($$0));
 }
 $82 = i64_sub($$022$i,$$021$i);
 $83 = i64_ugt($82,i64_const(1,0));
 if (!($83)) {
  $$0 = $$021$i;
  return (i64($$0));
 }
 $$12339$i = $$022$i;$$240$i = $$021$i;
 while(1) {
  $84 = i64_add($$12339$i,$$240$i);
  $85 = i64_lshr($84,i64_const(1,0));
  $86 = i64_add($85,i64_const(4294967295,4294967295));
  $87 = i64_ult($86,$22);
  L52: do {
   if ($87) {
    $88 = load4($24);
    $89 = i64_trunc($86);
    $90 = (($88) + ($89<<4)|0);
    $$1$i26$i = $90;
   } else {
    $91 = load4($25);
    $92 = load1($26);
    $93 = $92&255;
    $94 = 1 << $93;
    $95 = (($94) + -1)|0;
    $96 = i64_trunc($85);
    $97 = $95 & $96;
    $98 = (($91) + ($97<<5)|0);
    $$020$i25$i = $98;
    while(1) {
     $99 = ((($$020$i25$i)) + 24|0);
     $100 = load4($99);
     $101 = ($100|0)==(19);
     if ($101) {
      $102 = ((($$020$i25$i)) + 16|0);
      $103 = load8($102);
      $104 = i64_eq($103,$85);
      if ($104) {
       break;
      }
     }
     $105 = ((($$020$i25$i)) + 28|0);
     $106 = load4($105);
     $107 = ($106|0)==(0);
     if ($107) {
      $$1$i26$i = 18336;
      break L52;
     }
     $108 = (($$020$i25$i) + ($106<<5)|0);
     $$020$i25$i = $108;
    }
    $$1$i26$i = $$020$i25$i;
   }
  } while(0);
  $109 = ((($$1$i26$i)) + 8|0);
  $110 = load4($109);
  $111 = ($110|0)==(0);
  $$$123$i = $111 ? $85 : $$12339$i;
  $$2$$i = $111 ? $$240$i : $85;
  $112 = i64_sub($$$123$i,$$2$$i);
  $113 = i64_ugt($112,i64_const(1,0));
  if ($113) {
   $$12339$i = $$$123$i;$$240$i = $$2$$i;
  } else {
   $$0 = $$2$$i;
   break;
  }
 }
 return (i64($$0));
}
function _luaT_init($0) {
 $0 = $0|0;
 var $$09 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $$09 = 0;
 while(1) {
  $2 = (1424 + ($$09<<2)|0);
  $3 = load4($2);
  $4 = (_luaS_new($0,$3)|0);
  $5 = load4($1);
  $6 = (((($5)) + 136|0) + ($$09<<2)|0);
  store4($6,$4);
  $7 = load4($1);
  $8 = (((($7)) + 136|0) + ($$09<<2)|0);
  $9 = load4($8);
  _luaC_fix($0,$9);
  $10 = (($$09) + 1)|0;
  $exitcond = ($10|0)==(24);
  if ($exitcond) {
   break;
  } else {
   $$09 = $10;
  }
 }
 return;
}
function _luaT_gettm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_luaH_getshortstr($0,$2)|0);
 $4 = ((($3)) + 8|0);
 $5 = load4($4);
 $6 = ($5|0)==(0);
 if (!($6)) {
  $$0 = $3;
  return ($$0|0);
 }
 $7 = 1 << $1;
 $8 = ((($0)) + 6|0);
 $9 = load1($8);
 $10 = $9&255;
 $11 = $7 | $10;
 $12 = $11&255;
 store1($8,$12);
 $$0 = 0;
 return ($$0|0);
}
function _luaT_gettmbyobj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$in = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $trunc = 0;
 var $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = load4($3);
 $trunc = $4&255;
 $trunc$clear = $trunc & 15;
 switch ($trunc$clear<<24>>24) {
 case 5:  {
  $5 = load4($1);
  $6 = ((($5)) + 24|0);
  $$0$in = $6;
  break;
 }
 case 7:  {
  $7 = load4($1);
  $8 = ((($7)) + 8|0);
  $$0$in = $8;
  break;
 }
 default: {
  $9 = $4 & 15;
  $10 = ((($0)) + 16|0);
  $11 = load4($10);
  $12 = (((($11)) + 232|0) + ($9<<2)|0);
  $$0$in = $12;
 }
 }
 $$0 = load4($$0$in);
 $13 = ($$0|0)==(0|0);
 if ($13) {
  $19 = 18336;
  return ($19|0);
 }
 $14 = ((($0)) + 16|0);
 $15 = load4($14);
 $16 = (((($15)) + 136|0) + ($2<<2)|0);
 $17 = load4($16);
 $18 = (_luaH_getshortstr($$0,$17)|0);
 $19 = $18;
 return ($19|0);
}
function _luaT_objtypename($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$014 = 0, $$1 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 $3 = load4($2);
 switch ($3|0) {
 case 69:  {
  $4 = load4($1);
  $5 = ((($4)) + 24|0);
  $6 = load4($5);
  $7 = ($6|0)==(0|0);
  if ($7) {
   $21 = 69;
  } else {
   $$014 = $6;
   label = 4;
  }
  break;
 }
 case 71:  {
  $8 = load4($1);
  $9 = ((($8)) + 8|0);
  $10 = load4($9);
  $11 = ($10|0)==(0|0);
  if ($11) {
   $21 = 71;
  } else {
   $$014 = $10;
   label = 4;
  }
  break;
 }
 default: {
  $21 = $3;
 }
 }
 do {
  if ((label|0) == 4) {
   $12 = (_luaS_new($0,9991)|0);
   $13 = (_luaH_getshortstr($$014,$12)|0);
   $14 = ((($13)) + 8|0);
   $15 = load4($14);
   $16 = $15 & 15;
   $17 = ($16|0)==(4);
   if (!($17)) {
    $$pre = load4($2);
    $21 = $$pre;
    break;
   }
   $18 = load4($13);
   $19 = ((($18)) + 16|0);
   $$1 = $19;
   return ($$1|0);
  }
 } while(0);
 $20 = $21 & 15;
 $22 = (($20) + 1)|0;
 $23 = (1376 + ($22<<2)|0);
 $24 = load4($23);
 $$1 = $24;
 return ($$1|0);
}
function _luaT_callTM($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ((($0)) + 32|0);
 $7 = load4($6);
 $8 = $4;
 $9 = (($8) - ($7))|0;
 $10 = ((($0)) + 12|0);
 $11 = load4($10);
 ; store8($11,load8($1,8),8); store8($11+8 | 0,load8($1+8 | 0,8),8);
 $12 = ((($11)) + 16|0);
 ; store8($12,load8($2,8),8); store8($12+8 | 0,load8($2+8 | 0,8),8);
 $13 = ((($11)) + 32|0);
 ; store8($13,load8($3,8),8); store8($13+8 | 0,load8($3+8 | 0,8),8);
 $14 = load4($10);
 $15 = ((($14)) + 48|0);
 store4($10,$15);
 $16 = ($5|0)!=(0);
 if (!($16)) {
  $17 = ((($14)) + 64|0);
  store4($10,$17);
  ; store8($15,load8($4,8),8); store8($15+8 | 0,load8($4+8 | 0,8),8);
 }
 $18 = ((($0)) + 20|0);
 $19 = load4($18);
 $20 = ((($19)) + 34|0);
 $21 = load2($20);
 $22 = $21 & 2;
 $23 = ($22<<16>>16)==(0);
 if ($23) {
  _luaD_callnoyield($0,$11,$5);
 } else {
  _luaD_call($0,$11,$5);
 }
 if (!($16)) {
  return;
 }
 $24 = load4($6);
 $25 = (($24) + ($9)|0);
 $26 = load4($10);
 $27 = ((($26)) + -16|0);
 store4($10,$27);
 ; store8($25,load8($27,8),8); store8($25+8 | 0,load8($27+8 | 0,8),8);
 return;
}
function _luaT_callbinTM($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$0$i = 0, $$0$i17 = 0, $$0$in$i = 0, $$0$in$i16 = 0, $$014 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0, $trunc$i = 0, $trunc$i$clear = 0, $trunc$i15 = 0, $trunc$i15$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($1)) + 8|0);
 $6 = load4($5);
 $trunc$i = $6&255;
 $trunc$i$clear = $trunc$i & 15;
 switch ($trunc$i$clear<<24>>24) {
 case 5:  {
  $7 = load4($1);
  $8 = ((($7)) + 24|0);
  $$0$in$i = $8;
  break;
 }
 case 7:  {
  $9 = load4($1);
  $10 = ((($9)) + 8|0);
  $$0$in$i = $10;
  break;
 }
 default: {
  $11 = $6 & 15;
  $12 = ((($0)) + 16|0);
  $13 = load4($12);
  $14 = (((($13)) + 232|0) + ($11<<2)|0);
  $$0$in$i = $14;
 }
 }
 $$0$i = load4($$0$in$i);
 $15 = ($$0$i|0)==(0|0);
 if ($15) {
  $22 = 18336;
 } else {
  $16 = ((($0)) + 16|0);
  $17 = load4($16);
  $18 = (((($17)) + 136|0) + ($4<<2)|0);
  $19 = load4($18);
  $20 = (_luaH_getshortstr($$0$i,$19)|0);
  $22 = $20;
 }
 $21 = ((($22)) + 8|0);
 $23 = load4($21);
 $24 = ($23|0)==(0);
 if ($24) {
  $25 = ((($2)) + 8|0);
  $26 = load4($25);
  $trunc$i15 = $26&255;
  $trunc$i15$clear = $trunc$i15 & 15;
  switch ($trunc$i15$clear<<24>>24) {
  case 5:  {
   $27 = load4($2);
   $28 = ((($27)) + 24|0);
   $$0$in$i16 = $28;
   break;
  }
  case 7:  {
   $29 = load4($2);
   $30 = ((($29)) + 8|0);
   $$0$in$i16 = $30;
   break;
  }
  default: {
   $31 = $26 & 15;
   $32 = ((($0)) + 16|0);
   $33 = load4($32);
   $34 = (((($33)) + 232|0) + ($31<<2)|0);
   $$0$in$i16 = $34;
  }
  }
  $$0$i17 = load4($$0$in$i16);
  $35 = ($$0$i17|0)==(0|0);
  if ($35) {
   $$0 = 18336;
  } else {
   $36 = ((($0)) + 16|0);
   $37 = load4($36);
   $38 = (((($37)) + 136|0) + ($4<<2)|0);
   $39 = load4($38);
   $40 = (_luaH_getshortstr($$0$i17,$39)|0);
   $$0 = $40;
  }
 } else {
  $$0 = $22;
 }
 $41 = ((($$0)) + 8|0);
 $42 = load4($41);
 $43 = ($42|0)==(0);
 if ($43) {
  $$014 = 0;
  return ($$014|0);
 }
 $44 = ((($0)) + 32|0);
 $45 = load4($44);
 $46 = $3;
 $47 = (($46) - ($45))|0;
 $48 = ((($0)) + 12|0);
 $49 = load4($48);
 ; store8($49,load8($$0,8),8); store8($49+8 | 0,load8($$0+8 | 0,8),8);
 $50 = ((($49)) + 16|0);
 ; store8($50,load8($1,8),8); store8($50+8 | 0,load8($1+8 | 0,8),8);
 $51 = ((($49)) + 32|0);
 ; store8($51,load8($2,8),8); store8($51+8 | 0,load8($2+8 | 0,8),8);
 $52 = load4($48);
 $53 = ((($52)) + 48|0);
 store4($48,$53);
 $54 = ((($0)) + 20|0);
 $55 = load4($54);
 $56 = ((($55)) + 34|0);
 $57 = load2($56);
 $58 = $57 & 2;
 $59 = ($58<<16>>16)==(0);
 if ($59) {
  _luaD_callnoyield($0,$49,1);
 } else {
  _luaD_call($0,$49,1);
 }
 $60 = load4($44);
 $61 = (($60) + ($47)|0);
 $62 = load4($48);
 $63 = ((($62)) + -16|0);
 store4($48,$63);
 ; store8($61,load8($63,8),8); store8($61+8 | 0,load8($63+8 | 0,8),8);
 $$014 = 1;
 return ($$014|0);
}
function _luaT_trybinTM($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $5 = sp;
 $6 = (_luaT_callbinTM($0,$1,$2,$3,$4)|0);
 $7 = ($6|0)==(0);
 if (!($7)) {
  STACKTOP = sp;return;
 }
 switch ($4|0) {
 case 22:  {
  _luaG_concaterror($0,$1,$2);
  // unreachable;
  break;
 }
 case 19: case 17: case 16: case 15: case 14: case 13:  {
  $8 = ((($1)) + 8|0);
  $9 = load4($8);
  $10 = ($9|0)==(3);
  if ($10) {
   $11 = loadd($1);
   stored($5,$11);
  } else {
   $12 = (_luaV_tonumber_($1,$5)|0);
   $13 = ($12|0)==(0);
   if ($13) {
    _luaG_opinterror($0,$1,$2,9191);
    // unreachable;
   }
  }
  $14 = ((($2)) + 8|0);
  $15 = load4($14);
  $16 = ($15|0)==(3);
  if ($16) {
   $17 = loadd($2);
   stored($5,$17);
   _luaG_tointerror($0,$1,$2);
   // unreachable;
  }
  $18 = (_luaV_tonumber_($2,$5)|0);
  $19 = ($18|0)==(0);
  if ($19) {
   _luaG_opinterror($0,$1,$2,9191);
   // unreachable;
  } else {
   _luaG_tointerror($0,$1,$2);
   // unreachable;
  }
  break;
 }
 default: {
  _luaG_opinterror($0,$1,$2,9220);
  // unreachable;
 }
 }
}
function _luaT_callorderTM($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 12|0);
 $5 = load4($4);
 $6 = (_luaT_callbinTM($0,$1,$2,$5,$3)|0);
 $7 = ($6|0)==(0);
 L1: do {
  if ($7) {
   $$0 = -1;
  } else {
   $8 = load4($4);
   $9 = ((($8)) + 8|0);
   $10 = load4($9);
   switch ($10|0) {
   case 0:  {
    $$0 = $10;
    break L1;
    break;
   }
   case 1:  {
    $11 = load4($8);
    $12 = ($11|0)!=(0);
    $phitmp = $12&1;
    $$0 = $phitmp;
    break L1;
    break;
   }
   default: {
    $$0 = 1;
    break L1;
   }
   }
  }
 } while(0);
 return ($$0|0);
}
function _luaU_undump($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = i64(), $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $vararg_buffer10 = sp + 48|0;
 $vararg_buffer7 = sp + 40|0;
 $vararg_buffer4 = sp + 32|0;
 $vararg_buffer1 = sp + 24|0;
 $vararg_buffer = sp + 16|0;
 $3 = sp;
 $4 = sp + 52|0;
 $5 = load1($2);
 switch ($5<<24>>24) {
 case 61: case 64:  {
  $6 = ((($2)) + 1|0);
  $$sink = $6;
  break;
 }
 case 27:  {
  $$sink = 9242;
  break;
 }
 default: {
  $$sink = $2;
 }
 }
 $7 = ((($4)) + 8|0);
 store4($7,$$sink);
 store4($4,$0);
 $8 = ((($4)) + 4|0);
 store4($8,$1);
 $9 = (_luaZ_read($1,$3,3)|0);
 $10 = ($9|0)==(0);
 if (!($10)) {
  _error($4,9256);
  // unreachable;
 }
 $11 = (_memcmp((9267),$3,3)|0);
 $12 = ($11|0)==(0);
 if (!($12)) {
  _error($4,9271);
  // unreachable;
 }
 $13 = load4($8);
 $14 = (_luaZ_read($13,$3,1)|0);
 $15 = ($14|0)==(0);
 if (!($15)) {
  _error($4,9256);
  // unreachable;
 }
 $16 = load1($3);
 $17 = ($16<<24>>24)==(83);
 if (!($17)) {
  _error($4,9277);
  // unreachable;
 }
 $18 = load4($8);
 $19 = (_luaZ_read($18,$3,1)|0);
 $20 = ($19|0)==(0);
 if (!($20)) {
  _error($4,9256);
  // unreachable;
 }
 $21 = load1($3);
 $22 = ($21<<24>>24)==(0);
 if (!($22)) {
  _error($4,9297);
  // unreachable;
 }
 $23 = load4($8);
 $24 = (_luaZ_read($23,$3,6)|0);
 $25 = ($24|0)==(0);
 if (!($25)) {
  _error($4,9256);
  // unreachable;
 }
 $26 = (_memcmp(9316,$3,6)|0);
 $27 = ($26|0)==(0);
 if (!($27)) {
  _error($4,9323);
  // unreachable;
 }
 $28 = load4($8);
 $29 = (_luaZ_read($28,$3,1)|0);
 $30 = ($29|0)==(0);
 if (!($30)) {
  _error($4,9256);
  // unreachable;
 }
 $31 = load1($3);
 $32 = ($31<<24>>24)==(4);
 if (!($32)) {
  $33 = load4($4);
  store4($vararg_buffer,9353);
  $34 = (_luaO_pushfstring($33,9333,$vararg_buffer)|0);
  _error($4,$34);
  // unreachable;
 }
 $35 = load4($8);
 $36 = (_luaZ_read($35,$3,1)|0);
 $37 = ($36|0)==(0);
 if (!($37)) {
  _error($4,9256);
  // unreachable;
 }
 $38 = load1($3);
 $39 = ($38<<24>>24)==(4);
 if (!($39)) {
  $40 = load4($4);
  store4($vararg_buffer1,9357);
  $41 = (_luaO_pushfstring($40,9333,$vararg_buffer1)|0);
  _error($4,$41);
  // unreachable;
 }
 $42 = load4($8);
 $43 = (_luaZ_read($42,$3,1)|0);
 $44 = ($43|0)==(0);
 if (!($44)) {
  _error($4,9256);
  // unreachable;
 }
 $45 = load1($3);
 $46 = ($45<<24>>24)==(4);
 if (!($46)) {
  $47 = load4($4);
  store4($vararg_buffer4,9364);
  $48 = (_luaO_pushfstring($47,9333,$vararg_buffer4)|0);
  _error($4,$48);
  // unreachable;
 }
 $49 = load4($8);
 $50 = (_luaZ_read($49,$3,1)|0);
 $51 = ($50|0)==(0);
 if (!($51)) {
  _error($4,9256);
  // unreachable;
 }
 $52 = load1($3);
 $53 = ($52<<24>>24)==(8);
 if (!($53)) {
  $54 = load4($4);
  store4($vararg_buffer7,9376);
  $55 = (_luaO_pushfstring($54,9333,$vararg_buffer7)|0);
  _error($4,$55);
  // unreachable;
 }
 $56 = load4($8);
 $57 = (_luaZ_read($56,$3,1)|0);
 $58 = ($57|0)==(0);
 if (!($58)) {
  _error($4,9256);
  // unreachable;
 }
 $59 = load1($3);
 $60 = ($59<<24>>24)==(8);
 if (!($60)) {
  $61 = load4($4);
  store4($vararg_buffer10,9388);
  $62 = (_luaO_pushfstring($61,9333,$vararg_buffer10)|0);
  _error($4,$62);
  // unreachable;
 }
 $63 = load4($8);
 $64 = (_luaZ_read($63,$3,8)|0);
 $65 = ($64|0)==(0);
 if (!($65)) {
  _error($4,9256);
  // unreachable;
 }
 $66 = load8($3);
 $67 = i64_eq($66,i64_const(22136,0));
 if (!($67)) {
  _error($4,9399);
  // unreachable;
 }
 $68 = load4($8);
 $69 = (_luaZ_read($68,$3,8)|0);
 $70 = ($69|0)==(0);
 if (!($70)) {
  _error($4,9256);
  // unreachable;
 }
 $71 = loadd($3);
 $72 = $71 != 370.5;
 if ($72) {
  _error($4,9422);
  // unreachable;
 }
 $73 = load4($8);
 $74 = (_luaZ_read($73,$3,1)|0);
 $75 = ($74|0)==(0);
 if ($75) {
  $76 = load1($3);
  $77 = $76&255;
  $78 = (_luaF_newLclosure($0,$77)|0);
  $79 = ((($0)) + 12|0);
  $80 = load4($79);
  store4($80,$78);
  $81 = ((($80)) + 8|0);
  store4($81,70);
  _luaD_inctop($0);
  $82 = (_luaF_newproto($0)|0);
  $83 = ((($78)) + 12|0);
  store4($83,$82);
  _LoadFunction($4,$82,0);
  STACKTOP = sp;return ($78|0);
 } else {
  _error($4,9256);
  // unreachable;
 }
 return (0)|0;
}
function _error($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = load4($0);
 $3 = ((($0)) + 8|0);
 $4 = load4($3);
 store4($vararg_buffer,$4);
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 store4($vararg_ptr1,$1);
 (_luaO_pushfstring($2,9447,$vararg_buffer)|0);
 $5 = load4($0);
 _luaD_throw($5,3);
 // unreachable;
}
function _LoadFunction($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$025$i = 0, $$051$i = 0, $$057$i = 0, $$1$i43 = 0, $$124$i = 0, $$147$i = 0, $$155$i46 = 0, $$246$i = 0, $$pre = 0, $$pre$i = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0;
 var $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0.0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = i64(), $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond$i36 = 0, $exitcond$i39 = 0, $exitcond48 = 0, $exitcond4850 = 0, $exitcond55$i = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $4 = (_LoadString($0)|0);
 $5 = ((($1)) + 72|0);
 $6 = ($4|0)==(0|0);
 $spec$select = $6 ? $2 : $4;
 store4($5,$spec$select);
 $7 = ((($0)) + 4|0);
 $8 = load4($7);
 $9 = (_luaZ_read($8,$3,4)|0);
 $10 = ($9|0)==(0);
 if (!($10)) {
  _error($0,9256);
  // unreachable;
 }
 $11 = load4($3);
 $12 = ((($1)) + 36|0);
 store4($12,$11);
 $13 = load4($7);
 $14 = (_luaZ_read($13,$3,4)|0);
 $15 = ($14|0)==(0);
 if (!($15)) {
  _error($0,9256);
  // unreachable;
 }
 $16 = load4($3);
 $17 = ((($1)) + 40|0);
 store4($17,$16);
 $18 = load4($7);
 $19 = (_luaZ_read($18,$3,1)|0);
 $20 = ($19|0)==(0);
 if (!($20)) {
  _error($0,9256);
  // unreachable;
 }
 $21 = load1($3);
 $22 = ((($1)) + 6|0);
 store1($22,$21);
 $23 = load4($7);
 $24 = (_luaZ_read($23,$3,1)|0);
 $25 = ($24|0)==(0);
 if (!($25)) {
  _error($0,9256);
  // unreachable;
 }
 $26 = load1($3);
 $27 = ((($1)) + 7|0);
 store1($27,$26);
 $28 = load4($7);
 $29 = (_luaZ_read($28,$3,1)|0);
 $30 = ($29|0)==(0);
 if (!($30)) {
  _error($0,9256);
  // unreachable;
 }
 $31 = load1($3);
 $32 = ((($1)) + 8|0);
 store1($32,$31);
 $33 = load4($7);
 $34 = (_luaZ_read($33,$3,4)|0);
 $35 = ($34|0)==(0);
 if (!($35)) {
  _error($0,9256);
  // unreachable;
 }
 $36 = load4($3);
 $37 = (($36) + 1)|0;
 $38 = ($37>>>0)>(1073741823);
 $39 = load4($0);
 if ($38) {
  _luaM_toobig($39);
  // unreachable;
 }
 $40 = $36 << 2;
 $41 = (_luaM_realloc_($39,0,0,$40)|0);
 $42 = ((($1)) + 48|0);
 store4($42,$41);
 $43 = ((($1)) + 20|0);
 store4($43,$36);
 $44 = load4($7);
 $45 = (_luaZ_read($44,$41,$40)|0);
 $46 = ($45|0)==(0);
 if (!($46)) {
  _error($0,9256);
  // unreachable;
 }
 $47 = load4($7);
 $48 = (_luaZ_read($47,$3,4)|0);
 $49 = ($48|0)==(0);
 if (!($49)) {
  _error($0,9256);
  // unreachable;
 }
 $50 = load4($3);
 $51 = (($50) + 1)|0;
 $52 = ($51>>>0)>(268435455);
 $53 = load4($0);
 if ($52) {
  _luaM_toobig($53);
  // unreachable;
 }
 $54 = $50 << 4;
 $55 = (_luaM_realloc_($53,0,0,$54)|0);
 $56 = ((($1)) + 44|0);
 store4($56,$55);
 $57 = ((($1)) + 16|0);
 store4($57,$50);
 $58 = ($50|0)>(0);
 L31: do {
  if ($58) {
   $$057$i = 0;
   while(1) {
    $59 = (((($55) + ($$057$i<<4)|0)) + 8|0);
    store4($59,0);
    $60 = (($$057$i) + 1)|0;
    $exitcond$i36 = ($60|0)==($50|0);
    if ($exitcond$i36) {
     break;
    } else {
     $$057$i = $60;
    }
   }
   $61 = load4($7);
   $62 = (_luaZ_read($61,$3,1)|0);
   $63 = ($62|0)==(0);
   if (!($63)) {
    _error($0,9256);
    // unreachable;
   }
   $$155$i46 = 0;$70 = $55;$85 = $55;
   L39: while(1) {
    $64 = load1($3);
    switch ($64<<24>>24) {
    case 0:  {
     $$sink = 0;
     label = 38;
     break;
    }
    case 1:  {
     $65 = load4($7);
     $66 = (_luaZ_read($65,$3,1)|0);
     $67 = ($66|0)==(0);
     if (!($67)) {
      label = 29;
      break L39;
     }
     $68 = load1($3);
     $69 = $68&255;
     store4($70,$69);
     $$sink = 1;
     label = 38;
     break;
    }
    case 3:  {
     $71 = load4($7);
     $72 = (_luaZ_read($71,$3,8)|0);
     $73 = ($72|0)==(0);
     if (!($73)) {
      label = 32;
      break L39;
     }
     $74 = loadd($3);
     stored($70,$74);
     $$sink = 3;
     label = 38;
     break;
    }
    case 19:  {
     $75 = load4($7);
     $76 = (_luaZ_read($75,$3,8)|0);
     $77 = ($76|0)==(0);
     if (!($77)) {
      label = 35;
      break L39;
     }
     $78 = load8($3);
     store8($70,$78);
     $$sink = 19;
     label = 38;
     break;
    }
    case 20: case 4:  {
     $79 = (_LoadString($0)|0);
     store4($70,$79);
     $80 = ((($79)) + 4|0);
     $81 = load1($80);
     $82 = $81 | 64;
     $83 = $82&255;
     $$sink = $83;
     label = 38;
     break;
    }
    default: {
    }
    }
    if ((label|0) == 38) {
     label = 0;
     $84 = (((($85) + ($$155$i46<<4)|0)) + 8|0);
     store4($84,$$sink);
    }
    $86 = (($$155$i46) + 1)|0;
    $87 = ($86|0)<($50|0);
    if (!($87)) {
     break L31;
    }
    $$pre$i = load4($56);
    $88 = (($$pre$i) + ($86<<4)|0);
    $89 = load4($7);
    $90 = (_luaZ_read($89,$3,1)|0);
    $91 = ($90|0)==(0);
    if ($91) {
     $$155$i46 = $86;$70 = $88;$85 = $$pre$i;
    } else {
     label = 26;
     break;
    }
   }
   if ((label|0) == 26) {
    _error($0,9256);
    // unreachable;
   }
   else if ((label|0) == 29) {
    _error($0,9256);
    // unreachable;
   }
   else if ((label|0) == 32) {
    _error($0,9256);
    // unreachable;
   }
   else if ((label|0) == 35) {
    _error($0,9256);
    // unreachable;
   }
  }
 } while(0);
 $92 = load4($7);
 $93 = (_luaZ_read($92,$3,4)|0);
 $94 = ($93|0)==(0);
 if (!($94)) {
  _error($0,9256);
  // unreachable;
 }
 $95 = load4($3);
 $96 = (($95) + 1)|0;
 $97 = ($96>>>0)>(536870911);
 $98 = load4($0);
 if ($97) {
  _luaM_toobig($98);
  // unreachable;
 }
 $99 = $95 << 3;
 $100 = (_luaM_realloc_($98,0,0,$99)|0);
 $101 = ((($1)) + 64|0);
 store4($101,$100);
 $102 = ((($1)) + 12|0);
 store4($102,$95);
 $103 = ($95|0)>(0);
 L65: do {
  if ($103) {
   $$025$i = 0;
   while(1) {
    $104 = (($100) + ($$025$i<<3)|0);
    store4($104,0);
    $105 = (($$025$i) + 1)|0;
    $exitcond$i39 = ($105|0)==($95|0);
    if ($exitcond$i39) {
     break;
    } else {
     $$025$i = $105;
    }
   }
   $$124$i = 0;
   while(1) {
    $106 = load4($7);
    $107 = (_luaZ_read($106,$3,1)|0);
    $108 = ($107|0)==(0);
    if (!($108)) {
     label = 50;
     break;
    }
    $109 = load1($3);
    $110 = load4($101);
    $111 = (((($110) + ($$124$i<<3)|0)) + 4|0);
    store1($111,$109);
    $112 = load4($7);
    $113 = (_luaZ_read($112,$3,1)|0);
    $114 = ($113|0)==(0);
    if (!($114)) {
     label = 52;
     break;
    }
    $115 = load1($3);
    $116 = load4($101);
    $117 = (((($116) + ($$124$i<<3)|0)) + 5|0);
    store1($117,$115);
    $118 = (($$124$i) + 1)|0;
    $119 = ($118|0)<($95|0);
    if ($119) {
     $$124$i = $118;
    } else {
     break L65;
    }
   }
   if ((label|0) == 50) {
    _error($0,9256);
    // unreachable;
   }
   else if ((label|0) == 52) {
    _error($0,9256);
    // unreachable;
   }
  }
 } while(0);
 $120 = load4($7);
 $121 = (_luaZ_read($120,$3,4)|0);
 $122 = ($121|0)==(0);
 if (!($122)) {
  _error($0,9256);
  // unreachable;
 }
 $123 = load4($3);
 $124 = (($123) + 1)|0;
 $125 = ($124>>>0)>(1073741823);
 $126 = load4($0);
 if ($125) {
  _luaM_toobig($126);
  // unreachable;
 }
 $127 = $123 << 2;
 $128 = (_luaM_realloc_($126,0,0,$127)|0);
 $129 = ((($1)) + 52|0);
 store4($129,$128);
 $130 = ((($1)) + 28|0);
 store4($130,$123);
 $131 = ($123|0)>(0);
 if ($131) {
  store4($128,0);
  $exitcond4850 = ($123|0)==(1);
  if (!($exitcond4850)) {
   $133 = 1;
   while(1) {
    $$pre = load4($129);
    $132 = (($$pre) + ($133<<2)|0);
    store4($132,0);
    $134 = (($133) + 1)|0;
    $exitcond48 = ($134|0)==($123|0);
    if ($exitcond48) {
     break;
    } else {
     $133 = $134;
    }
   }
  }
  if ($131) {
   $$1$i43 = 0;
   while(1) {
    $135 = load4($0);
    $136 = (_luaF_newproto($135)|0);
    $137 = load4($129);
    $138 = (($137) + ($$1$i43<<2)|0);
    store4($138,$136);
    $139 = load4($129);
    $140 = (($139) + ($$1$i43<<2)|0);
    $141 = load4($140);
    $142 = load4($5);
    _LoadFunction($0,$141,$142);
    $143 = (($$1$i43) + 1)|0;
    $exitcond = ($143|0)==($123|0);
    if ($exitcond) {
     break;
    } else {
     $$1$i43 = $143;
    }
   }
  }
 }
 $144 = load4($7);
 $145 = (_luaZ_read($144,$3,4)|0);
 $146 = ($145|0)==(0);
 if (!($146)) {
  _error($0,9256);
  // unreachable;
 }
 $147 = load4($3);
 $148 = (($147) + 1)|0;
 $149 = ($148>>>0)>(1073741823);
 $150 = load4($0);
 if ($149) {
  _luaM_toobig($150);
  // unreachable;
 }
 $151 = $147 << 2;
 $152 = (_luaM_realloc_($150,0,0,$151)|0);
 $153 = ((($1)) + 56|0);
 store4($153,$152);
 $154 = ((($1)) + 24|0);
 store4($154,$147);
 $155 = load4($7);
 $156 = (_luaZ_read($155,$152,$151)|0);
 $157 = ($156|0)==(0);
 if (!($157)) {
  _error($0,9256);
  // unreachable;
 }
 $158 = load4($7);
 $159 = (_luaZ_read($158,$3,4)|0);
 $160 = ($159|0)==(0);
 if (!($160)) {
  _error($0,9256);
  // unreachable;
 }
 $161 = load4($3);
 $162 = (($161) + 1)|0;
 $163 = ($162>>>0)>(357913941);
 $164 = load4($0);
 if ($163) {
  _luaM_toobig($164);
  // unreachable;
 }
 $165 = ($161*12)|0;
 $166 = (_luaM_realloc_($164,0,0,$165)|0);
 $167 = ((($1)) + 60|0);
 store4($167,$166);
 $168 = ((($1)) + 32|0);
 store4($168,$161);
 $169 = ($161|0)>(0);
 L110: do {
  if ($169) {
   $$051$i = 0;
   while(1) {
    $170 = (($166) + (($$051$i*12)|0)|0);
    store4($170,0);
    $171 = (($$051$i) + 1)|0;
    $exitcond55$i = ($171|0)==($161|0);
    if ($exitcond55$i) {
     break;
    } else {
     $$051$i = $171;
    }
   }
   $$147$i = 0;
   while(1) {
    $172 = (_LoadString($0)|0);
    $173 = load4($167);
    $174 = (($173) + (($$147$i*12)|0)|0);
    store4($174,$172);
    $175 = load4($7);
    $176 = (_luaZ_read($175,$3,4)|0);
    $177 = ($176|0)==(0);
    if (!($177)) {
     label = 80;
     break;
    }
    $178 = load4($3);
    $179 = load4($167);
    $180 = (((($179) + (($$147$i*12)|0)|0)) + 4|0);
    store4($180,$178);
    $181 = load4($7);
    $182 = (_luaZ_read($181,$3,4)|0);
    $183 = ($182|0)==(0);
    if (!($183)) {
     label = 82;
     break;
    }
    $184 = load4($3);
    $185 = load4($167);
    $186 = (((($185) + (($$147$i*12)|0)|0)) + 8|0);
    store4($186,$184);
    $187 = (($$147$i) + 1)|0;
    $188 = ($187|0)<($161|0);
    if ($188) {
     $$147$i = $187;
    } else {
     break L110;
    }
   }
   if ((label|0) == 80) {
    _error($0,9256);
    // unreachable;
   }
   else if ((label|0) == 82) {
    _error($0,9256);
    // unreachable;
   }
  }
 } while(0);
 $189 = load4($7);
 $190 = (_luaZ_read($189,$3,4)|0);
 $191 = ($190|0)==(0);
 if (!($191)) {
  _error($0,9256);
  // unreachable;
 }
 $192 = load4($3);
 $193 = ($192|0)>(0);
 if (!($193)) {
  STACKTOP = sp;return;
 }
 $$246$i = 0;
 while(1) {
  $194 = (_LoadString($0)|0);
  $195 = load4($101);
  $196 = (($195) + ($$246$i<<3)|0);
  store4($196,$194);
  $197 = (($$246$i) + 1)|0;
  $exitcond$i = ($197|0)==($192|0);
  if ($exitcond$i) {
   break;
  } else {
   $$246$i = $197;
  }
 }
 STACKTOP = sp;return;
}
function _LoadString($0) {
 $0 = $0|0;
 var $$0 = 0, $$pr = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $1 = sp;
 $2 = sp + 40|0;
 $3 = ((($0)) + 4|0);
 $4 = load4($3);
 $5 = (_luaZ_read($4,$1,1)|0);
 $6 = ($5|0)==(0);
 if (!($6)) {
  _error($0,9256);
  // unreachable;
 }
 $7 = load1($1);
 $8 = $7&255;
 store4($2,$8);
 $9 = ($7<<24>>24)==(-1);
 do {
  if ($9) {
   $10 = load4($3);
   $11 = (_luaZ_read($10,$2,4)|0);
   $12 = ($11|0)==(0);
   if ($12) {
    $$pr = load4($2);
    $13 = $$pr;
    break;
   } else {
    _error($0,9256);
    // unreachable;
   }
  } else {
   $13 = $8;
  }
 } while(0);
 $14 = ($13|0)==(0);
 if ($14) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $15 = (($13) + -1)|0;
 store4($2,$15);
 $16 = ($15>>>0)<(41);
 if (!($16)) {
  $23 = load4($0);
  $24 = (_luaS_createlngstrobj($23,$15)|0);
  $25 = ((($24)) + 16|0);
  $26 = load4($2);
  $27 = load4($3);
  $28 = (_luaZ_read($27,$25,$26)|0);
  $29 = ($28|0)==(0);
  if ($29) {
   $$0 = $24;
   STACKTOP = sp;return ($$0|0);
  } else {
   _error($0,9256);
   // unreachable;
  }
 }
 $17 = load4($3);
 $18 = (_luaZ_read($17,$1,$15)|0);
 $19 = ($18|0)==(0);
 if (!($19)) {
  _error($0,9256);
  // unreachable;
 }
 $20 = load4($0);
 $21 = load4($2);
 $22 = (_luaS_newlstr($20,$1,$21)|0);
 $$0 = $22;
 STACKTOP = sp;return ($$0|0);
}
function _luaV_tonumber_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$cast = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = i64(), $29 = 0.0, $3 = 0, $30 = 0.0, $4 = 0, $5 = 0, $6 = i64(), $7 = 0.0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = ((($0)) + 8|0);
 $4 = load4($3);
 $5 = ($4|0)==(19);
 if ($5) {
  $6 = load8($0);
  $7 = i64_s2d($6);
  stored($1,$7);
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $8 = $4 & 15;
 $9 = ($8|0)==(4);
 if (!($9)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $10 = load4($0);
 $11 = ((($10)) + 16|0);
 $12 = (_luaO_str2num($11,$2)|0);
 $13 = load4($0);
 $14 = ((($13)) + 4|0);
 $15 = load1($14);
 $16 = ($15<<24>>24)==(4);
 if ($16) {
  $17 = ((($13)) + 7|0);
  $18 = load1($17);
  $19 = $18&255;
  $23 = $19;
 } else {
  $20 = ((($13)) + 12|0);
  $21 = load4($20);
  $23 = $21;
 }
 $22 = (($23) + 1)|0;
 $24 = ($12|0)==($22|0);
 if (!($24)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $25 = ((($2)) + 8|0);
 $26 = load4($25);
 $27 = ($26|0)==(19);
 $28 = load8($2);
 $29 = i64_s2d($28);
 $$cast = i64_bc2d($28);
 $30 = $27 ? $29 : $$cast;
 stored($1,$30);
 $$0 = 1;
 STACKTOP = sp;return ($$0|0);
}
function _luaV_tointeger($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0.0, $$023 = 0, $$1 = 0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = i64(), $15 = i64(), $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, $or$cond = 0, $spec$select = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $$023 = $0;
 L1: while(1) {
  $4 = ((($$023)) + 8|0);
  $5 = load4($4);
  switch ($5|0) {
  case 3:  {
   label = 3;
   break L1;
   break;
  }
  case 19:  {
   label = 8;
   break L1;
   break;
  }
  default: {
  }
  }
  $16 = $5 & 15;
  $17 = ($16|0)==(4);
  if (!($17)) {
   $$1 = 0;
   break;
  }
  $18 = load4($$023);
  $19 = ((($18)) + 16|0);
  $20 = (_luaO_str2num($19,$3)|0);
  $21 = load4($$023);
  $22 = ((($21)) + 4|0);
  $23 = load1($22);
  $24 = ($23<<24>>24)==(4);
  if ($24) {
   $25 = ((($21)) + 7|0);
   $26 = load1($25);
   $27 = $26&255;
   $31 = $27;
  } else {
   $28 = ((($21)) + 12|0);
   $29 = load4($28);
   $31 = $29;
  }
  $30 = (($31) + 1)|0;
  $32 = ($20|0)==($30|0);
  if ($32) {
   $$023 = $3;
  } else {
   $$1 = 0;
   break;
  }
 }
 do {
  if ((label|0) == 3) {
   $6 = loadd($$023);
   $7 = (+Math_floor((+$6)));
   $8 = $6 != $7;
   if ($8) {
    $9 = ($2|0)==(0);
    if ($9) {
     $$1 = 0;
     break;
    }
    $10 = ($2|0)>(1);
    $11 = $7 + 1.0;
    $spec$select = $10 ? $11 : $7;
    $$0 = $spec$select;
   } else {
    $$0 = $7;
   }
   $12 = $$0 >= -9.2233720368547758E+18;
   $13 = $$0 < 9.2233720368547758E+18;
   $or$cond = $12 & $13;
   if ($or$cond) {
    $14 = i64_d2s($$0);
    store8($1,$14);
    $$1 = 1;
   } else {
    $$1 = 0;
   }
  }
  else if ((label|0) == 8) {
   $15 = load8($$023);
   store8($1,$15);
   $$1 = 1;
  }
 } while(0);
 STACKTOP = sp;return ($$1|0);
}
function _luaV_finishget($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$034 = 0, $$03543 = 0, $$03642 = 0, $$044 = 0, $$1 = 0, $$phi$trans$insert = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $5 = ((($0)) + 16|0);
 $$03543 = 0;$$03642 = $4;$$044 = $1;
 while(1) {
  $6 = ($$03642|0)==(0|0);
  if ($6) {
   $7 = (_luaT_gettmbyobj($0,$$044,0)|0);
   $8 = ((($7)) + 8|0);
   $9 = load4($8);
   $10 = ($9|0)==(0);
   if ($10) {
    label = 4;
    break;
   } else {
    $$034 = $7;$26 = $9;
   }
  } else {
   $11 = load4($$044);
   $12 = ((($11)) + 24|0);
   $13 = load4($12);
   $14 = ($13|0)==(0|0);
   if ($14) {
    label = 9;
    break;
   }
   $15 = ((($13)) + 6|0);
   $16 = load1($15);
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if (!($18)) {
    label = 9;
    break;
   }
   $19 = load4($5);
   $20 = ((($19)) + 136|0);
   $21 = load4($20);
   $22 = (_luaT_gettm($13,0,$21)|0);
   $23 = ($22|0)==(0|0);
   if ($23) {
    label = 9;
    break;
   }
   $$phi$trans$insert = ((($22)) + 8|0);
   $$pre = load4($$phi$trans$insert);
   $$034 = $22;$26 = $$pre;
  }
  $25 = $26 & 15;
  $27 = ($25|0)==(6);
  if ($27) {
   label = 11;
   break;
  }
  $28 = ($26|0)==(69);
  if ($28) {
   $29 = load4($$034);
   $30 = (_luaH_get($29,$2)|0);
   $31 = ((($30)) + 8|0);
   $32 = load4($31);
   $33 = ($32|0)==(0);
   if ($33) {
    $$1 = $30;
   } else {
    label = 14;
    break;
   }
  } else {
   $$1 = 0;
  }
  $34 = (($$03543) + 1)|0;
  $35 = ($34>>>0)<(2000);
  if ($35) {
   $$03543 = $34;$$03642 = $$1;$$044 = $$034;
  } else {
   label = 16;
   break;
  }
 }
 if ((label|0) == 4) {
  _luaG_typeerror($0,$$044,9472);
  // unreachable;
 }
 else if ((label|0) == 9) {
  $24 = ((($3)) + 8|0);
  store4($24,0);
  STACKTOP = sp;return;
 }
 else if ((label|0) == 11) {
  _luaT_callTM($0,$$034,$$044,$2,$3,1);
  STACKTOP = sp;return;
 }
 else if ((label|0) == 14) {
  ; store8($3,load8($30,8),8); store8($3+8 | 0,load8($30+8 | 0,8),8);
  STACKTOP = sp;return;
 }
 else if ((label|0) == 16) {
  _luaG_runerror($0,9478,$vararg_buffer);
  // unreachable;
 }
}
function _luaV_finishset($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$05378 = 0, $$055 = 0, $$05677 = 0, $$05776 = 0, $$158 = 0, $$5 = 0, $$phi$trans$insert = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $5 = ((($0)) + 16|0);
 $$05378 = $1;$$05677 = 0;$$05776 = $4;
 while(1) {
  $6 = ($$05776|0)==(0|0);
  if ($6) {
   $36 = (_luaT_gettmbyobj($0,$$05378,1)|0);
   $37 = ((($36)) + 8|0);
   $38 = load4($37);
   $39 = ($38|0)==(0);
   if ($39) {
    label = 14;
    break;
   } else {
    $$055 = $36;$41 = $38;
   }
  } else {
   $7 = load4($$05378);
   $8 = ((($7)) + 24|0);
   $9 = load4($8);
   $10 = ($9|0)==(0|0);
   if ($10) {
    label = 7;
    break;
   }
   $11 = ((($9)) + 6|0);
   $12 = load1($11);
   $13 = $12 & 2;
   $14 = ($13<<24>>24)==(0);
   if (!($14)) {
    label = 7;
    break;
   }
   $15 = load4($5);
   $16 = ((($15)) + 140|0);
   $17 = load4($16);
   $18 = (_luaT_gettm($9,1,$17)|0);
   $19 = ($18|0)==(0|0);
   if ($19) {
    label = 7;
    break;
   }
   $$phi$trans$insert = ((($18)) + 8|0);
   $$pre = load4($$phi$trans$insert);
   $$055 = $18;$41 = $$pre;
  }
  $40 = $41 & 15;
  $42 = ($40|0)==(6);
  if ($42) {
   label = 16;
   break;
  }
  $43 = ($41|0)==(69);
  if ($43) {
   $44 = load4($$055);
   $45 = (_luaH_get($44,$2)|0);
   $46 = ((($45)) + 8|0);
   $47 = load4($46);
   $48 = ($47|0)==(0);
   if ($48) {
    $$5 = $45;
   } else {
    label = 19;
    break;
   }
  } else {
   $$5 = 0;
  }
  $63 = (($$05677) + 1)|0;
  $64 = ($63>>>0)<(2000);
  if ($64) {
   $$05378 = $$055;$$05677 = $63;$$05776 = $$5;
  } else {
   label = 25;
   break;
  }
 }
 if ((label|0) == 7) {
  $20 = ($$05776|0)==(18336|0);
  if ($20) {
   $21 = (_luaH_newkey($0,$7,$2)|0);
   $$158 = $21;
  } else {
   $$158 = $$05776;
  }
  ; store8($$158,load8($3,8),8); store8($$158+8 | 0,load8($3+8 | 0,8),8);
  $22 = ((($7)) + 6|0);
  store1($22,0);
  $23 = ((($3)) + 8|0);
  $24 = load4($23);
  $25 = $24 & 64;
  $26 = ($25|0)==(0);
  if ($26) {
   STACKTOP = sp;return;
  }
  $27 = ((($7)) + 5|0);
  $28 = load1($27);
  $29 = $28 & 4;
  $30 = ($29<<24>>24)==(0);
  if ($30) {
   STACKTOP = sp;return;
  }
  $31 = load4($3);
  $32 = ((($31)) + 5|0);
  $33 = load1($32);
  $34 = $33 & 3;
  $35 = ($34<<24>>24)==(0);
  if ($35) {
   STACKTOP = sp;return;
  }
  _luaC_barrierback_($0,$7);
  STACKTOP = sp;return;
 }
 else if ((label|0) == 14) {
  _luaG_typeerror($0,$$05378,9472);
  // unreachable;
 }
 else if ((label|0) == 16) {
  _luaT_callTM($0,$$055,$$05378,$2,$3,0);
  STACKTOP = sp;return;
 }
 else if ((label|0) == 19) {
  $49 = ((($3)) + 8|0);
  $50 = load4($49);
  $51 = $50 & 64;
  $52 = ($51|0)==(0);
  if (!($52)) {
   $53 = load4($$055);
   $54 = ((($53)) + 5|0);
   $55 = load1($54);
   $56 = $55 & 4;
   $57 = ($56<<24>>24)==(0);
   if (!($57)) {
    $58 = load4($3);
    $59 = ((($58)) + 5|0);
    $60 = load1($59);
    $61 = $60 & 3;
    $62 = ($61<<24>>24)==(0);
    if (!($62)) {
     _luaC_barrierback_($0,$53);
    }
   }
  }
  ; store8($45,load8($3,8),8); store8($45+8 | 0,load8($3+8 | 0,8),8);
  STACKTOP = sp;return;
 }
 else if ((label|0) == 25) {
  _luaG_runerror($0,9518,$vararg_buffer);
  // unreachable;
 }
}
function _luaV_lessthan($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$shrunk$i16$i = 0, $$04060$i = 0, $$04359$i = 0, $$04658$i = 0, $$04957$i = 0, $$2$i = 0, $$2$in$i = 0, $$253$i = 0, $$lobit = 0, $$off$i$i = i64(), $$off$i15$i = i64(), $10 = i64(), $11 = 0, $12 = i64(), $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = i64(), $19 = 0, $20 = 0.0, $21 = 0, $22 = 0.0, $23 = 0, $24 = 0.0, $25 = 0, $26 = 0, $27 = i64(), $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = i64(), $32 = 0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $8 = 0, $9 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = load4($3);
 $trunc = $4&255;
 $trunc$clear = $trunc & 15;
 switch ($trunc$clear<<24>>24) {
 case 3:  {
  $5 = ((($2)) + 8|0);
  $6 = load4($5);
  $7 = $6 & 15;
  $8 = ($7|0)==(3);
  if ($8) {
   $9 = ($4|0)==(19);
   do {
    if ($9) {
     $10 = load8($1);
     $11 = ($6|0)==(19);
     if ($11) {
      $12 = load8($2);
      $13 = i64_slt($10,$12);
      $$2$in$i = $13;
      break;
     }
     $14 = loadd($2);
     $$off$i$i = i64_add($10,i64_const(0,2097152));
     $15 = i64_ult($$off$i$i,i64_const(1,4194304));
     if ($15) {
      $20 = i64_s2d($10);
      $21 = $14 > $20;
      $$2$in$i = $21;
      break;
     }
     $16 = !($14 >= 9.2233720368547758E+18);
     if ($16) {
      $17 = $14 > -9.2233720368547758E+18;
      if ($17) {
       $18 = i64_d2s($14);
       $19 = i64_slt($10,$18);
       $$2$in$i = $19;
      } else {
       $$2$in$i = 0;
      }
     } else {
      $$2$in$i = 1;
     }
    } else {
     $22 = loadd($1);
     $23 = ($6|0)==(3);
     if ($23) {
      $24 = loadd($2);
      $25 = $22 < $24;
      $$2$in$i = $25;
      break;
     }
     $26 = ($22 == $22) & (0.0 == 0.0);
     if ($26) {
      $27 = load8($2);
      $$off$i15$i = i64_add($27,i64_const(0,2097152));
      $28 = i64_ult($$off$i15$i,i64_const(1,4194304));
      if ($28) {
       $33 = i64_s2d($27);
       $34 = $22 >= $33;
       $$0$shrunk$i16$i = $34;
      } else {
       $29 = !($22 >= 9.2233720368547758E+18);
       if ($29) {
        $30 = !($22 >= -9.2233720368547758E+18);
        if ($30) {
         $$0$shrunk$i16$i = 0;
        } else {
         $31 = i64_d2s($22);
         $32 = i64_sle($27,$31);
         $$0$shrunk$i16$i = $32;
        }
       } else {
        $$0$shrunk$i16$i = 1;
       }
      }
      $35 = $$0$shrunk$i16$i ^ 1;
      $$2$in$i = $35;
     } else {
      $$2$in$i = 0;
     }
    }
   } while(0);
   $$2$i = $$2$in$i&1;
   $$0 = $$2$i;
   return ($$0|0);
  }
  break;
 }
 case 4:  {
  $36 = ((($2)) + 8|0);
  $37 = load4($36);
  $38 = $37 & 15;
  $39 = ($38|0)==(4);
  if ($39) {
   $40 = load4($1);
   $41 = load4($2);
   $42 = ((($40)) + 16|0);
   $43 = ((($40)) + 4|0);
   $44 = load1($43);
   $45 = ($44<<24>>24)==(4);
   if ($45) {
    $46 = ((($40)) + 7|0);
    $47 = load1($46);
    $48 = $47&255;
    $74 = $48;
   } else {
    $49 = ((($40)) + 12|0);
    $50 = load4($49);
    $74 = $50;
   }
   $51 = ((($41)) + 16|0);
   $52 = ((($41)) + 4|0);
   $53 = load1($52);
   $54 = ($53<<24>>24)==(4);
   if ($54) {
    $55 = ((($41)) + 7|0);
    $56 = load1($55);
    $57 = $56&255;
    $75 = $57;
   } else {
    $58 = ((($41)) + 12|0);
    $59 = load4($58);
    $75 = $59;
   }
   $60 = (_strcoll($42,$51)|0);
   $61 = ($60|0)==(0);
   L37: do {
    if ($61) {
     $$04060$i = $75;$$04359$i = $51;$$04658$i = $74;$$04957$i = $42;
     while(1) {
      $62 = (_strlen($$04957$i)|0);
      $63 = ($62|0)==($$04060$i|0);
      if ($63) {
       $$253$i = 0;
       break L37;
      }
      $64 = ($62|0)==($$04658$i|0);
      $65 = (($62) + 1)|0;
      if ($64) {
       $$253$i = -1;
       break L37;
      }
      $66 = (($$04060$i) - ($65))|0;
      $67 = (($$04359$i) + ($65)|0);
      $68 = (($$04658$i) - ($65))|0;
      $69 = (($$04957$i) + ($65)|0);
      $70 = (_strcoll($69,$67)|0);
      $71 = ($70|0)==(0);
      if ($71) {
       $$04060$i = $66;$$04359$i = $67;$$04658$i = $68;$$04957$i = $69;
      } else {
       $$253$i = $70;
       break;
      }
     }
    } else {
     $$253$i = $60;
    }
   } while(0);
   $$lobit = $$253$i >>> 31;
   $$0 = $$lobit;
   return ($$0|0);
  }
  break;
 }
 default: {
 }
 }
 $72 = (_luaT_callorderTM($0,$1,$2,20)|0);
 $73 = ($72|0)<(0);
 if ($73) {
  _luaG_ordererror($0,$1,$2);
  // unreachable;
 } else {
  $$0 = $72;
  return ($$0|0);
 }
 return (0)|0;
}
function _luaV_lessequal($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$shrunk$i16$i = 0, $$04060$i = 0, $$04359$i = 0, $$04658$i = 0, $$04957$i = 0, $$2$i = 0, $$2$in$i = 0, $$253$i = 0, $$off$i$i = i64(), $$off$i15$i = i64(), $10 = i64(), $11 = 0, $12 = i64(), $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = i64();
 var $19 = 0, $20 = 0.0, $21 = 0, $22 = 0.0, $23 = 0, $24 = 0.0, $25 = 0, $26 = 0, $27 = i64(), $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = i64(), $32 = 0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $not$$i = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = load4($3);
 $trunc = $4&255;
 $trunc$clear = $trunc & 15;
 switch ($trunc$clear<<24>>24) {
 case 3:  {
  $5 = ((($2)) + 8|0);
  $6 = load4($5);
  $7 = $6 & 15;
  $8 = ($7|0)==(3);
  if ($8) {
   $9 = ($4|0)==(19);
   do {
    if ($9) {
     $10 = load8($1);
     $11 = ($6|0)==(19);
     if ($11) {
      $12 = load8($2);
      $13 = i64_sle($10,$12);
      $$2$in$i = $13;
      break;
     }
     $14 = loadd($2);
     $$off$i$i = i64_add($10,i64_const(0,2097152));
     $15 = i64_ult($$off$i$i,i64_const(1,4194304));
     if ($15) {
      $20 = i64_s2d($10);
      $21 = $14 >= $20;
      $$2$in$i = $21;
      break;
     }
     $16 = !($14 >= 9.2233720368547758E+18);
     if ($16) {
      $17 = !($14 >= -9.2233720368547758E+18);
      if ($17) {
       $$2$in$i = 0;
      } else {
       $18 = i64_d2s($14);
       $19 = i64_sle($10,$18);
       $$2$in$i = $19;
      }
     } else {
      $$2$in$i = 1;
     }
    } else {
     $22 = loadd($1);
     $23 = ($6|0)==(3);
     if ($23) {
      $24 = loadd($2);
      $25 = $22 <= $24;
      $$2$in$i = $25;
      break;
     }
     $26 = ($22 == $22) & (0.0 == 0.0);
     if ($26) {
      $27 = load8($2);
      $$off$i15$i = i64_add($27,i64_const(0,2097152));
      $28 = i64_ult($$off$i15$i,i64_const(1,4194304));
      if ($28) {
       $33 = i64_s2d($27);
       $34 = $22 > $33;
       $$0$shrunk$i16$i = $34;
      } else {
       $29 = !($22 >= 9.2233720368547758E+18);
       if ($29) {
        $30 = $22 > -9.2233720368547758E+18;
        if ($30) {
         $31 = i64_d2s($22);
         $32 = i64_slt($27,$31);
         $$0$shrunk$i16$i = $32;
        } else {
         $$0$shrunk$i16$i = 0;
        }
       } else {
        $$0$shrunk$i16$i = 1;
       }
      }
      $35 = $$0$shrunk$i16$i ^ 1;
      $$2$in$i = $35;
     } else {
      $$2$in$i = 0;
     }
    }
   } while(0);
   $$2$i = $$2$in$i&1;
   $$0 = $$2$i;
   return ($$0|0);
  }
  break;
 }
 case 4:  {
  $36 = ((($2)) + 8|0);
  $37 = load4($36);
  $38 = $37 & 15;
  $39 = ($38|0)==(4);
  if ($39) {
   $40 = load4($1);
   $41 = load4($2);
   $42 = ((($40)) + 16|0);
   $43 = ((($40)) + 4|0);
   $44 = load1($43);
   $45 = ($44<<24>>24)==(4);
   if ($45) {
    $46 = ((($40)) + 7|0);
    $47 = load1($46);
    $48 = $47&255;
    $90 = $48;
   } else {
    $49 = ((($40)) + 12|0);
    $50 = load4($49);
    $90 = $50;
   }
   $51 = ((($41)) + 16|0);
   $52 = ((($41)) + 4|0);
   $53 = load1($52);
   $54 = ($53<<24>>24)==(4);
   if ($54) {
    $55 = ((($41)) + 7|0);
    $56 = load1($55);
    $57 = $56&255;
    $91 = $57;
   } else {
    $58 = ((($41)) + 12|0);
    $59 = load4($58);
    $91 = $59;
   }
   $60 = (_strcoll($42,$51)|0);
   $61 = ($60|0)==(0);
   L37: do {
    if ($61) {
     $$04060$i = $91;$$04359$i = $51;$$04658$i = $90;$$04957$i = $42;
     while(1) {
      $62 = (_strlen($$04957$i)|0);
      $63 = ($62|0)==($$04060$i|0);
      $64 = ($62|0)==($$04658$i|0);
      if ($63) {
       break;
      }
      $66 = (($62) + 1)|0;
      if ($64) {
       $$253$i = -1;
       break L37;
      }
      $67 = (($$04060$i) - ($66))|0;
      $68 = (($$04359$i) + ($66)|0);
      $69 = (($$04658$i) - ($66))|0;
      $70 = (($$04957$i) + ($66)|0);
      $71 = (_strcoll($70,$68)|0);
      $72 = ($71|0)==(0);
      if ($72) {
       $$04060$i = $67;$$04359$i = $68;$$04658$i = $69;$$04957$i = $70;
      } else {
       $$253$i = $71;
       break L37;
      }
     }
     $not$$i = $64 ^ 1;
     $65 = $not$$i&1;
     $$253$i = $65;
    } else {
     $$253$i = $60;
    }
   } while(0);
   $73 = ($$253$i|0)<(1);
   $74 = $73&1;
   $$0 = $74;
   return ($$0|0);
  }
  break;
 }
 default: {
 }
 }
 $75 = (_luaT_callorderTM($0,$1,$2,21)|0);
 $76 = ($75|0)>(-1);
 if ($76) {
  $$0 = $75;
  return ($$0|0);
 }
 $77 = ((($0)) + 20|0);
 $78 = load4($77);
 $79 = ((($78)) + 34|0);
 $80 = load2($79);
 $81 = $80 | 128;
 store2($79,$81);
 $82 = (_luaT_callorderTM($0,$2,$1,20)|0);
 $83 = load4($77);
 $84 = ((($83)) + 34|0);
 $85 = load2($84);
 $86 = $85 ^ 128;
 store2($84,$86);
 $87 = ($82|0)<(0);
 if ($87) {
  _luaG_ordererror($0,$1,$2);
  // unreachable;
 }
 $88 = ($82|0)==(0);
 $89 = $88&1;
 $$0 = $89;
 return ($$0|0);
}
function _luaV_equalobj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$023$i = 0, $$023$i61 = 0, $$059 = 0, $$069 = i64(), $$070 = i64(), $$078 = 0, $$1 = i64(), $$171 = i64(), $$phi$trans$insert = 0, $$phi$trans$insert89 = 0, $$pre = 0, $$pre87 = 0, $$pre90 = 0, $$pre91 = 0, $$pre92 = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = i64(), $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0.0, $19 = 0.0, $20 = 0, $21 = 0, $22 = 0, $23 = i64(), $24 = i64(), $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = i64(), $45 = 0, $46 = 0.0;
 var $47 = 0.0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = i64(), $52 = i64(), $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = i64(), $72 = i64(), $73 = 0, $74 = 0, $75 = 0.0, $76 = 0.0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond$i = 0;
 var $or$cond$i62 = 0, $phitmp = 0, $phitmp60 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $4 = ((($1)) + 8|0);
 $5 = load4($4);
 $6 = ((($2)) + 8|0);
 $7 = load4($6);
 $8 = $7 ^ $5;
 $9 = $8 & 63;
 $10 = ($9|0)==(0);
 L1: do {
  if ($10) {
   $trunc = $5&255;
   $trunc$clear = $trunc & 63;
   L3: do {
    switch ($trunc$clear<<24>>24) {
    case 0:  {
     $$059 = 1;
     break L1;
     break;
    }
    case 19:  {
     $71 = load8($1);
     $72 = load8($2);
     $73 = i64_eq($71,$72);
     $74 = $73&1;
     $$059 = $74;
     break L1;
     break;
    }
    case 3:  {
     $75 = loadd($1);
     $76 = loadd($2);
     $77 = $75 == $76;
     $78 = $77&1;
     $$059 = $78;
     break L1;
     break;
    }
    case 1:  {
     $79 = load4($1);
     $80 = load4($2);
     $81 = ($79|0)==($80|0);
     $82 = $81&1;
     $$059 = $82;
     break L1;
     break;
    }
    case 2:  {
     $83 = load4($1);
     $84 = load4($2);
     $85 = ($83|0)==($84|0);
     $86 = $85&1;
     $$059 = $86;
     break L1;
     break;
    }
    case 22:  {
     $87 = load4($1);
     $88 = load4($2);
     $89 = ($87|0)==($88|0);
     $90 = $89&1;
     $$059 = $90;
     break L1;
     break;
    }
    case 4:  {
     $91 = load4($1);
     $92 = load4($2);
     $93 = ($91|0)==($92|0);
     $94 = $93&1;
     $$059 = $94;
     break L1;
     break;
    }
    case 20:  {
     $95 = load4($1);
     $96 = load4($2);
     $97 = (_luaS_eqlngstr($95,$96)|0);
     $$059 = $97;
     break L1;
     break;
    }
    case 7:  {
     $98 = load4($1);
     $99 = load4($2);
     $100 = ($98|0)==($99|0);
     if ($100) {
      $$059 = 1;
      break L1;
     }
     $101 = ($0|0)==(0|0);
     if ($101) {
      $$059 = 0;
      break L1;
     }
     $102 = ((($98)) + 8|0);
     $103 = load4($102);
     $104 = ($103|0)==(0|0);
     if ($104) {
      $116 = $99;
     } else {
      $105 = ((($103)) + 6|0);
      $106 = load1($105);
      $107 = $106 & 32;
      $108 = ($107<<24>>24)==(0);
      if ($108) {
       $109 = ((($0)) + 16|0);
       $110 = load4($109);
       $111 = ((($110)) + 156|0);
       $112 = load4($111);
       $113 = (_luaT_gettm($103,5,$112)|0);
       $114 = ($113|0)==(0|0);
       if (!($114)) {
        $$078 = $113;
        break L3;
       }
       $$pre92 = load4($2);
       $116 = $$pre92;
      } else {
       $116 = $99;
      }
     }
     $115 = ((($116)) + 8|0);
     $117 = load4($115);
     $118 = ($117|0)==(0|0);
     if ($118) {
      $$059 = 0;
      break L1;
     }
     $119 = ((($117)) + 6|0);
     $120 = load1($119);
     $121 = $120 & 32;
     $122 = ($121<<24>>24)==(0);
     if ($122) {
      $$sink = $117;
      label = 59;
     } else {
      $$059 = 0;
      break L1;
     }
     break;
    }
    case 5:  {
     $123 = load4($1);
     $124 = load4($2);
     $125 = ($123|0)==($124|0);
     if ($125) {
      $$059 = 1;
      break L1;
     }
     $126 = ($0|0)==(0|0);
     if ($126) {
      $$059 = 0;
      break L1;
     }
     $127 = ((($123)) + 24|0);
     $128 = load4($127);
     $129 = ($128|0)==(0|0);
     if ($129) {
      $141 = $124;
     } else {
      $130 = ((($128)) + 6|0);
      $131 = load1($130);
      $132 = $131 & 32;
      $133 = ($132<<24>>24)==(0);
      if ($133) {
       $134 = ((($0)) + 16|0);
       $135 = load4($134);
       $136 = ((($135)) + 156|0);
       $137 = load4($136);
       $138 = (_luaT_gettm($128,5,$137)|0);
       $139 = ($138|0)==(0|0);
       if (!($139)) {
        $$078 = $138;
        break L3;
       }
       $$pre91 = load4($2);
       $141 = $$pre91;
      } else {
       $141 = $124;
      }
     }
     $140 = ((($141)) + 24|0);
     $142 = load4($140);
     $143 = ($142|0)==(0|0);
     if ($143) {
      $$059 = 0;
      break L1;
     }
     $144 = ((($142)) + 6|0);
     $145 = load1($144);
     $146 = $145 & 32;
     $147 = ($146<<24>>24)==(0);
     if ($147) {
      $$sink = $142;
      label = 59;
     } else {
      $$059 = 0;
      break L1;
     }
     break;
    }
    default: {
     $148 = load4($1);
     $149 = load4($2);
     $150 = ($148|0)==($149|0);
     $151 = $150&1;
     $$059 = $151;
     break L1;
    }
    }
   } while(0);
   if ((label|0) == 59) {
    $152 = ((($0)) + 16|0);
    $153 = load4($152);
    $154 = ((($153)) + 156|0);
    $155 = load4($154);
    $156 = (_luaT_gettm($$sink,5,$155)|0);
    $157 = ($156|0)==(0|0);
    if ($157) {
     $$059 = 0;
     break;
    } else {
     $$078 = $156;
    }
   }
   $158 = ((($0)) + 12|0);
   $159 = load4($158);
   _luaT_callTM($0,$$078,$1,$2,$159,1);
   $160 = load4($158);
   $161 = ((($160)) + 8|0);
   $162 = load4($161);
   switch ($162|0) {
   case 0:  {
    $$059 = $162;
    break L1;
    break;
   }
   case 1:  {
    $163 = load4($160);
    $164 = ($163|0)!=(0);
    $phitmp = $164&1;
    $$059 = $phitmp;
    break L1;
    break;
   }
   default: {
    $$059 = 1;
    break L1;
   }
   }
  } else {
   $11 = $5 & 15;
   $12 = $7 & 15;
   $13 = ($11|0)==($12|0);
   $14 = ($11|0)==(3);
   $or$cond = $14 & $13;
   if ($or$cond) {
    $15 = ($5|0)==(19);
    do {
     if ($15) {
      $16 = load8($1);
      $$171 = $16;$42 = $7;
     } else {
      $$phi$trans$insert = ((($3)) + 8|0);
      $$023$i = $1;$17 = $5;
      L41: while(1) {
       switch ($17|0) {
       case 3:  {
        label = 7;
        break L41;
        break;
       }
       case 19:  {
        label = 9;
        break L41;
        break;
       }
       default: {
       }
       }
       $25 = $17 & 15;
       $26 = ($25|0)==(4);
       if (!($26)) {
        label = 16;
        break;
       }
       $27 = load4($$023$i);
       $28 = ((($27)) + 16|0);
       $29 = (_luaO_str2num($28,$3)|0);
       $30 = load4($$023$i);
       $31 = ((($30)) + 4|0);
       $32 = load1($31);
       $33 = ($32<<24>>24)==(4);
       if ($33) {
        $34 = ((($30)) + 7|0);
        $35 = load1($34);
        $36 = $35&255;
        $40 = $36;
       } else {
        $37 = ((($30)) + 12|0);
        $38 = load4($37);
        $40 = $38;
       }
       $39 = (($40) + 1)|0;
       $41 = ($29|0)==($39|0);
       if (!($41)) {
        label = 16;
        break;
       }
       $$pre = load4($$phi$trans$insert);
       $$023$i = $3;$17 = $$pre;
      }
      if ((label|0) == 7) {
       $18 = loadd($$023$i);
       $19 = (+Math_floor((+$18)));
       $20 = $18 != $19;
       if ($20) {
        label = 16;
       } else {
        $21 = $19 >= -9.2233720368547758E+18;
        $22 = $19 < 9.2233720368547758E+18;
        $or$cond$i = $21 & $22;
        $23 = i64_d2s($19);
        if ($or$cond$i) {
         $$070 = $23;
         label = 17;
        } else {
         label = 16;
        }
       }
      }
      else if ((label|0) == 9) {
       $24 = load8($$023$i);
       $$070 = $24;
       label = 17;
      }
      if ((label|0) == 16) {
       $$059 = 0;
       break L1;
      }
      else if ((label|0) == 17) {
       $$pre87 = load4($6);
       $$171 = $$070;$42 = $$pre87;
       break;
      }
     }
    } while(0);
    $43 = ($42|0)==(19);
    do {
     if ($43) {
      $44 = load8($2);
      $$1 = $44;
     } else {
      $$phi$trans$insert89 = ((($3)) + 8|0);
      $$023$i61 = $2;$45 = $42;
      L61: while(1) {
       switch ($45|0) {
       case 3:  {
        label = 22;
        break L61;
        break;
       }
       case 19:  {
        label = 24;
        break L61;
        break;
       }
       default: {
       }
       }
       $53 = $45 & 15;
       $54 = ($53|0)==(4);
       if (!($54)) {
        label = 31;
        break;
       }
       $55 = load4($$023$i61);
       $56 = ((($55)) + 16|0);
       $57 = (_luaO_str2num($56,$3)|0);
       $58 = load4($$023$i61);
       $59 = ((($58)) + 4|0);
       $60 = load1($59);
       $61 = ($60<<24>>24)==(4);
       if ($61) {
        $62 = ((($58)) + 7|0);
        $63 = load1($62);
        $64 = $63&255;
        $68 = $64;
       } else {
        $65 = ((($58)) + 12|0);
        $66 = load4($65);
        $68 = $66;
       }
       $67 = (($68) + 1)|0;
       $69 = ($57|0)==($67|0);
       if (!($69)) {
        label = 31;
        break;
       }
       $$pre90 = load4($$phi$trans$insert89);
       $$023$i61 = $3;$45 = $$pre90;
      }
      if ((label|0) == 22) {
       $46 = loadd($$023$i61);
       $47 = (+Math_floor((+$46)));
       $48 = $46 != $47;
       if ($48) {
        label = 31;
       } else {
        $49 = $47 >= -9.2233720368547758E+18;
        $50 = $47 < 9.2233720368547758E+18;
        $or$cond$i62 = $49 & $50;
        $51 = i64_d2s($47);
        if ($or$cond$i62) {
         $$069 = $51;
         label = 32;
        } else {
         label = 31;
        }
       }
      }
      else if ((label|0) == 24) {
       $52 = load8($$023$i61);
       $$069 = $52;
       label = 32;
      }
      if ((label|0) == 31) {
       $$059 = 0;
       break L1;
      }
      else if ((label|0) == 32) {
       $$1 = $$069;
       break;
      }
     }
    } while(0);
    $70 = i64_eq($$171,$$1);
    $phitmp60 = $70&1;
    $$059 = $phitmp60;
   } else {
    $$059 = 0;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$059|0);
}
function _luaV_concat($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$0$i86 = 0, $$014$i = 0, $$014$i85 = 0, $$082$lcssa = 0, $$08292 = 0, $$083$lcssa = 0, $$08391 = 0, $$084 = 0, $$1 = 0, $$neg = 0, $$off = 0, $$pr = 0, $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $cond = 0, $switch = 0, $trunc = 0, $trunc$clear = 0, $trunc88 = 0, $trunc88$clear = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer = sp + 40|0;
 $2 = sp;
 $3 = ((($0)) + 12|0);
 $$pre = load4($3);
 $$0 = $1;$5 = $$pre;
 L1: while(1) {
  $4 = ((($5)) + -32|0);
  $6 = ((($5)) + -24|0);
  $7 = load4($6);
  $8 = $7 & 15;
  $$off = (($8) + -3)|0;
  $switch = ($$off>>>0)<(2);
  $9 = ((($5)) + -16|0);
  L3: do {
   if ($switch) {
    $10 = ((($5)) + -8|0);
    $11 = load4($10);
    $trunc = $11&255;
    $trunc$clear = $trunc & 15;
    switch ($trunc$clear<<24>>24) {
    case 4:  {
     $12 = $11;
     break;
    }
    case 3:  {
     _luaO_tostring($0,$9);
     $$pr = load4($10);
     $12 = $$pr;
     break;
    }
    default: {
     label = 5;
     break L3;
    }
    }
    $13 = ($12|0)==(68);
    if ($13) {
     $14 = load4($9);
     $15 = ((($14)) + 7|0);
     $16 = load1($15);
     $17 = ($16<<24>>24)==(0);
     if ($17) {
      $18 = load4($6);
      $19 = $18 & 15;
      $cond = ($19|0)==(3);
      if (!($cond)) {
       $$1 = 2;
       break;
      }
      _luaO_tostring($0,$4);
      $$1 = 2;
      break;
     }
    }
    $20 = load4($6);
    $21 = ($20|0)==(68);
    if ($21) {
     $22 = load4($4);
     $23 = ((($22)) + 7|0);
     $24 = load1($23);
     $25 = ($24<<24>>24)==(0);
     if ($25) {
      ; store8($4,load8($9,8),8); store8($4+8 | 0,load8($9+8 | 0,8),8);
      $$1 = 2;
      break;
     }
    }
    $26 = load4($9);
    $27 = ((($26)) + 4|0);
    $28 = load1($27);
    $29 = ($28<<24>>24)==(4);
    if ($29) {
     $30 = ((($26)) + 7|0);
     $31 = load1($30);
     $32 = $31&255;
     $106 = $32;
    } else {
     $33 = ((($26)) + 12|0);
     $34 = load4($33);
     $106 = $34;
    }
    $35 = ($$0|0)>(1);
    L21: do {
     if ($35) {
      $$08292 = 1;$$08391 = $106;
      while(1) {
       $36 = (0 - ($$08292))|0;
       $37 = (($5) + ($36<<4)|0);
       $38 = ((($37)) + -16|0);
       $39 = ((($38)) + 8|0);
       $40 = load4($39);
       $trunc88 = $40&255;
       $trunc88$clear = $trunc88 & 15;
       switch ($trunc88$clear<<24>>24) {
       case 4:  {
        break;
       }
       case 3:  {
        _luaO_tostring($0,$38);
        break;
       }
       default: {
        $$082$lcssa = $$08292;$$083$lcssa = $$08391;
        break L21;
       }
       }
       $41 = load4($38);
       $42 = ((($41)) + 4|0);
       $43 = load1($42);
       $44 = ($43<<24>>24)==(4);
       if ($44) {
        $45 = ((($41)) + 7|0);
        $46 = load1($45);
        $47 = $46&255;
        $51 = $47;
       } else {
        $48 = ((($41)) + 12|0);
        $49 = load4($48);
        $51 = $49;
       }
       $50 = $$08391 ^ -1;
       $52 = ($51>>>0)<($50>>>0);
       if (!($52)) {
        label = 24;
        break L1;
       }
       $53 = (($51) + ($$08391))|0;
       $54 = (($$08292) + 1)|0;
       $55 = ($54|0)<($$0|0);
       if ($55) {
        $$08292 = $54;$$08391 = $53;
       } else {
        $$082$lcssa = $54;$$083$lcssa = $53;
        break L21;
       }
      }
     } else {
      $$082$lcssa = 1;$$083$lcssa = $106;
     }
    } while(0);
    $56 = ($$083$lcssa>>>0)<(41);
    if ($56) {
     $$0$i = $$082$lcssa;$$014$i = 0;
     while(1) {
      $57 = (0 - ($$0$i))|0;
      $58 = (($5) + ($57<<4)|0);
      $59 = load4($58);
      $60 = ((($59)) + 4|0);
      $61 = load1($60);
      $62 = ($61<<24>>24)==(4);
      if ($62) {
       $63 = ((($59)) + 7|0);
       $64 = load1($63);
       $65 = $64&255;
       $70 = $65;
      } else {
       $66 = ((($59)) + 12|0);
       $67 = load4($66);
       $70 = $67;
      }
      $68 = (($2) + ($$014$i)|0);
      $69 = ((($59)) + 16|0);
      _memcpy(($68|0),($69|0),($70|0))|0;
      $71 = (($70) + ($$014$i))|0;
      $72 = (($$0$i) + -1)|0;
      $73 = ($$0$i|0)>(1);
      if ($73) {
       $$0$i = $72;$$014$i = $71;
      } else {
       break;
      }
     }
     $74 = (_luaS_newlstr($0,$2,$$083$lcssa)|0);
     $$084 = $74;
    } else {
     $75 = (_luaS_createlngstrobj($0,$$083$lcssa)|0);
     $76 = ((($75)) + 16|0);
     $$0$i86 = $$082$lcssa;$$014$i85 = 0;
     while(1) {
      $77 = (0 - ($$0$i86))|0;
      $78 = (($5) + ($77<<4)|0);
      $79 = load4($78);
      $80 = ((($79)) + 4|0);
      $81 = load1($80);
      $82 = ($81<<24>>24)==(4);
      if ($82) {
       $83 = ((($79)) + 7|0);
       $84 = load1($83);
       $85 = $84&255;
       $90 = $85;
      } else {
       $86 = ((($79)) + 12|0);
       $87 = load4($86);
       $90 = $87;
      }
      $88 = (($76) + ($$014$i85)|0);
      $89 = ((($79)) + 16|0);
      _memcpy(($88|0),($89|0),($90|0))|0;
      $91 = (($90) + ($$014$i85))|0;
      $92 = (($$0$i86) + -1)|0;
      $93 = ($$0$i86|0)>(1);
      if ($93) {
       $$0$i86 = $92;$$014$i85 = $91;
      } else {
       $$084 = $75;
       break;
      }
     }
    }
    $94 = (0 - ($$082$lcssa))|0;
    $95 = (($5) + ($94<<4)|0);
    store4($95,$$084);
    $96 = ((($$084)) + 4|0);
    $97 = load1($96);
    $98 = $97 | 64;
    $99 = $98&255;
    $100 = (((($5) + ($94<<4)|0)) + 8|0);
    store4($100,$99);
    $$1 = $$082$lcssa;
   } else {
    label = 5;
   }
  } while(0);
  if ((label|0) == 5) {
   label = 0;
   _luaT_trybinTM($0,$4,$9,$4,22);
   $$1 = 2;
  }
  $$neg = (($$0) + 1)|0;
  $101 = (($$neg) - ($$1))|0;
  $102 = load4($3);
  $103 = (1 - ($$1))|0;
  $104 = (($102) + ($103<<4)|0);
  store4($3,$104);
  $105 = ($101|0)>(1);
  if ($105) {
   $$0 = $101;$5 = $104;
  } else {
   label = 40;
   break;
  }
 }
 if ((label|0) == 24) {
  _luaG_runerror($0,9561,$vararg_buffer);
  // unreachable;
 }
 else if ((label|0) == 40) {
  STACKTOP = sp;return;
 }
}
function _luaV_objlen($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = i64(), $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = i64(), $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = i64(), $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 8|0);
 $4 = load4($3);
 $trunc = $4&255;
 $trunc$clear = $trunc & 63;
 L1: do {
  switch ($trunc$clear<<24>>24) {
  case 5:  {
   $5 = load4($2);
   $6 = ((($5)) + 24|0);
   $7 = load4($6);
   $8 = ($7|0)==(0|0);
   if (!($8)) {
    $9 = ((($7)) + 6|0);
    $10 = load1($9);
    $11 = $10 & 16;
    $12 = ($11<<24>>24)==(0);
    if ($12) {
     $13 = ((($0)) + 16|0);
     $14 = load4($13);
     $15 = ((($14)) + 152|0);
     $16 = load4($15);
     $17 = (_luaT_gettm($7,4,$16)|0);
     $18 = ($17|0)==(0|0);
     if (!($18)) {
      $$0 = $17;
      break L1;
     }
    }
   }
   $19 = (i64(_luaH_getn($5)));
   store8($1,$19);
   $20 = ((($1)) + 8|0);
   store4($20,19);
   return;
   break;
  }
  case 4:  {
   $21 = load4($2);
   $22 = ((($21)) + 7|0);
   $23 = load1($22);
   $24 = i64_zext($23&255);
   store8($1,$24);
   $25 = ((($1)) + 8|0);
   store4($25,19);
   return;
   break;
  }
  case 20:  {
   $26 = load4($2);
   $27 = ((($26)) + 12|0);
   $28 = load4($27);
   $29 = i64_zext($28>>>0);
   store8($1,$29);
   $30 = ((($1)) + 8|0);
   store4($30,19);
   return;
   break;
  }
  default: {
   $31 = (_luaT_gettmbyobj($0,$2,4)|0);
   $32 = ((($31)) + 8|0);
   $33 = load4($32);
   $34 = ($33|0)==(0);
   if ($34) {
    _luaG_typeerror($0,$2,9584);
    // unreachable;
   } else {
    $$0 = $31;
   }
  }
  }
 } while(0);
 _luaT_callTM($0,$$0,$2,$2,$1,1);
 return;
}
function _luaV_div($0,$1,$2) {
 $0 = $0|0;
 $1 = i64($1);
 $2 = i64($2);
 var $$013 = i64(), $10 = i64(), $11 = i64(), $12 = 0, $13 = i64(), $3 = i64(), $4 = 0, $5 = 0, $6 = i64(), $7 = i64(), $8 = i64(), $9 = 0, $spec$select = i64(), $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = i64_add($2,i64_const(1,0));
 $4 = i64_ult($3,i64_const(2,0));
 if (!($4)) {
  $7 = i64_sdiv($1,$2);
  $8 = i64_xor($2,$1);
  $9 = i64_slt($8,i64_const(0,0));
  if ($9) {
   $10 = i64_mul($7,$2);
   $11 = i64_sub($1,$10);
   $12 = i64_ne($11,i64_const(0,0));
   $13 = i64_sext($12 << 31 >> 31);
   $spec$select = i64_add($7,$13);
   STACKTOP = sp;return (i64($spec$select));
  } else {
   $$013 = $7;
   STACKTOP = sp;return (i64($$013));
  }
 }
 $5 = i64_eq($2,i64_const(0,0));
 if ($5) {
  _luaG_runerror($0,9598,$vararg_buffer);
  // unreachable;
 }
 $6 = i64_sub(i64_const(0,0),$1);
 $$013 = $6;
 STACKTOP = sp;return (i64($$013));
}
function _luaV_mod($0,$1,$2) {
 $0 = $0|0;
 $1 = i64($1);
 $2 = i64($2);
 var $$0 = i64(), $$012 = i64(), $10 = i64(), $3 = i64(), $4 = 0, $5 = 0, $6 = i64(), $7 = 0, $8 = i64(), $9 = 0, $or$cond = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = i64_add($2,i64_const(1,0));
 $4 = i64_ult($3,i64_const(2,0));
 if (!($4)) {
  $6 = i64_srem($1,$2);
  $7 = i64_ne($6,i64_const(0,0));
  $8 = i64_xor($2,$1);
  $9 = i64_slt($8,i64_const(0,0));
  $or$cond = $9 & $7;
  $10 = $or$cond ? $2 : i64_const(0,0);
  $$0 = i64_add($10,$6);
  $$012 = $$0;
  STACKTOP = sp;return (i64($$012));
 }
 $5 = i64_eq($2,i64_const(0,0));
 if ($5) {
  _luaG_runerror($0,9624,$vararg_buffer);
  // unreachable;
 } else {
  $$012 = i64_const(0,0);
  STACKTOP = sp;return (i64($$012));
 }
 return i64((i64(0)));
}
function _luaV_shiftl($0,$1) {
 $0 = i64($0);
 $1 = i64($1);
 var $$0 = i64(), $2 = 0, $3 = 0, $4 = i64(), $5 = i64(), $6 = 0, $7 = i64(), $spec$select = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $2 = i64_slt($1,i64_const(0,0));
 if ($2) {
  $3 = i64_slt($1,i64_const(4294967233,4294967295));
  $4 = i64_sub(i64_const(0,0),$1);
  $5 = i64_lshr($0,$4);
  $$0 = $3 ? i64_const(0,0) : $5;
  return (i64($$0));
 } else {
  $6 = i64_sgt($1,i64_const(63,0));
  $7 = i64_shl($0,$1);
  $spec$select = $6 ? i64_const(0,0) : $7;
  return (i64($spec$select));
 }
 return i64((i64(0)));
}
function _luaV_finishOp($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$in = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = load4($1);
 $3 = ((($2)) + 16|0);
 $4 = load4($3);
 $5 = ((($2)) + 20|0);
 $6 = load4($5);
 $7 = ((($6)) + -4|0);
 $8 = load4($7);
 $trunc = $8&255;
 $trunc$clear = $trunc & 63;
 switch ($trunc$clear<<24>>24) {
 case 12: case 7: case 6: case 28: case 26: case 25: case 17: case 16: case 24: case 23: case 22: case 21: case 20: case 19: case 18: case 15: case 14: case 13:  {
  $9 = $8 >>> 6;
  $10 = $9 & 255;
  $11 = (($4) + ($10<<4)|0);
  $12 = ((($0)) + 12|0);
  $13 = load4($12);
  $14 = ((($13)) + -16|0);
  store4($12,$14);
  ; store8($11,load8($14,8),8); store8($11+8 | 0,load8($14+8 | 0,8),8);
  return;
  break;
 }
 case 31: case 32: case 33:  {
  $15 = ((($0)) + 12|0);
  $16 = load4($15);
  $17 = ((($16)) + -8|0);
  $18 = load4($17);
  switch ($18|0) {
  case 0:  {
   $23 = 1;
   break;
  }
  case 1:  {
   $19 = ((($16)) + -16|0);
   $20 = load4($19);
   $21 = ($20|0)==(0);
   $23 = $21;
   break;
  }
  default: {
   $23 = 0;
  }
  }
  $22 = $23 ^ 1;
  $24 = ((($16)) + -16|0);
  store4($15,$24);
  $25 = ((($2)) + 34|0);
  $26 = load2($25);
  $27 = $26&65535;
  $28 = $27 & 128;
  $29 = ($28|0)==(0);
  if ($29) {
   $$0$in = $22;
  } else {
   $30 = $27 ^ 128;
   $31 = $30&65535;
   store2($25,$31);
   $$0$in = $23;
  }
  $$0 = $$0$in&1;
  $32 = $8 >>> 6;
  $33 = $32 & 255;
  $34 = ($33|0)==($$0|0);
  if ($34) {
   return;
  }
  $35 = load4($5);
  $36 = ((($35)) + 4|0);
  store4($5,$36);
  return;
  break;
 }
 case 29:  {
  $37 = ((($0)) + 12|0);
  $38 = load4($37);
  $39 = ((($38)) + -16|0);
  $40 = $8 >>> 23;
  $41 = ((($38)) + -32|0);
  $42 = (($4) + ($40<<4)|0);
  $43 = $41;
  $44 = $42;
  $45 = (($43) - ($44))|0;
  $46 = ((($38)) + -48|0);
  ; store8($46,load8($39,8),8); store8($46+8 | 0,load8($39+8 | 0,8),8);
  $47 = ($45|0)>(16);
  if ($47) {
   $48 = $45 >>> 4;
   store4($37,$41);
   _luaV_concat($0,$48);
  }
  $49 = load4($3);
  $50 = $8 >>> 6;
  $51 = $50 & 255;
  $52 = (($49) + ($51<<4)|0);
  $53 = load4($37);
  $54 = ((($53)) + -16|0);
  ; store8($52,load8($54,8),8); store8($52+8 | 0,load8($54+8 | 0,8),8);
  $55 = ((($2)) + 4|0);
  $56 = load4($55);
  store4($37,$56);
  return;
  break;
 }
 case 41:  {
  $57 = ((($2)) + 4|0);
  $58 = load4($57);
  $59 = ((($0)) + 12|0);
  store4($59,$58);
  return;
  break;
 }
 case 36:  {
  $60 = $8 & 8372224;
  $61 = ($60|0)==(0);
  if ($61) {
   return;
  }
  $62 = ((($2)) + 4|0);
  $63 = load4($62);
  $64 = ((($0)) + 12|0);
  store4($64,$63);
  return;
  break;
 }
 default: {
  return;
 }
 }
}
function _luaV_execute($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$be = 0, $$0$i$i = 0.0, $$0$i1393 = i64(), $$0$i1404 = i64(), $$0$i1408 = i64(), $$0$i1436 = 0.0, $$012$i = i64(), $$01299$lcssa = 0, $$012991961 = 0, $$01301 = 0, $$01302 = 0, $$01302$be = 0, $$01309 = 0, $$01310 = 0, $$01313 = 0, $$01314 = 0, $$01315 = 0, $$013161965 = 0, $$01317 = 0;
 var $$01318 = 0, $$01320 = 0, $$01321 = 0, $$01322 = 0, $$01323 = 0.0, $$013281967 = 0, $$023$i = 0, $$023$i$i = 0, $$023$i1358 = 0, $$023$i1363 = 0, $$023$i1368 = 0, $$023$i1373 = 0, $$023$i1378 = 0, $$023$i1383 = 0, $$023$i1388 = 0, $$023$i1394 = 0, $$023$i1399 = 0, $$023$i1431 = 0, $$03335$i = 0, $$042$i = 0;
 var $$113001962 = 0, $$11303 = 0, $$11311 = 0, $$113191964 = 0, $$116$i = 0.0, $$21312 = 0, $$21541 = 0.0, $$21547 = 0.0, $$21554 = 0.0, $$21562$ph$ph = i64(), $$21562$ph1785 = i64(), $$21569 = i64(), $$21583 = 0.0, $$21590 = 0.0, $$21598 = 0.0, $$21606 = 0.0, $$21614 = 0.0, $$21622 = 0.0, $$21630 = i64(), $$21638 = i64();
 var $$21646 = i64(), $$21654 = i64(), $$21662 = i64(), $$21670 = i64(), $$21678 = i64(), $$21686 = i64(), $$21694 = i64(), $$21702 = i64(), $$21710 = 0.0, $$21718 = 0.0, $$21726 = 0.0, $$21734 = 0.0, $$21742 = 0.0, $$21750 = 0.0, $$21758 = 0.0, $$21766 = 0.0, $$22 = 0, $$25 = 0, $$27 = 0, $$31542 = 0.0;
 var $$31548 = 0.0, $$31555 = 0.0, $$31570 = i64(), $$31577 = 0.0, $$31584 = 0.0, $$31591 = 0.0, $$31599 = 0.0, $$31607 = 0.0, $$31615 = 0.0, $$31623 = 0.0, $$31631 = i64(), $$31639 = i64(), $$31647 = i64(), $$31655 = i64(), $$31663 = i64(), $$31671 = i64(), $$31679 = i64(), $$31687 = i64(), $$31695 = i64(), $$31703 = i64();
 var $$31711 = 0.0, $$31719 = 0.0, $$31727 = 0.0, $$31735 = 0.0, $$31743 = 0.0, $$31751 = 0.0, $$31759 = 0.0, $$31767 = 0.0, $$cast$i = 0.0, $$cast$i$i = 0.0, $$cast$i1336 = 0.0, $$cast$i1339 = 0.0, $$cast$i1342 = 0.0, $$cast$i1345 = 0.0, $$cast$i1348 = 0.0, $$cast$i1351 = 0.0, $$cast$i1354 = 0.0, $$cast$i1409 = 0.0, $$cast$i1412 = 0.0, $$cast$i1416 = 0.0;
 var $$cast$i1419 = 0.0, $$cast$i1422 = 0.0, $$cast$i1425 = 0.0, $$cast$i1428 = 0.0, $$cast$i1438 = 0.0, $$cast$i1441 = 0.0, $$cast$i1444 = 0.0, $$phi$trans$insert = 0, $$phi$trans$insert2105 = 0, $$phi$trans$insert2113 = 0, $$phi$trans$insert2117 = 0, $$phi$trans$insert2120 = 0, $$phi$trans$insert2123 = 0, $$phi$trans$insert2126 = 0, $$phi$trans$insert2129 = 0, $$phi$trans$insert2132 = 0, $$phi$trans$insert2135 = 0, $$phi$trans$insert2138 = 0, $$phi$trans$insert2141 = 0, $$phi$trans$insert2144 = 0;
 var $$pre = 0, $$pre$phi2148Z2D = 0, $$pre$phi2151Z2D = 0, $$pre$phi2153Z2D = 0, $$pre$phi2155Z2D = 0, $$pre2106 = 0, $$pre2107 = 0, $$pre2108 = 0, $$pre2109 = 0, $$pre2110 = 0, $$pre2111 = 0, $$pre2115 = 0, $$pre2118 = 0, $$pre2121 = 0, $$pre2124 = 0, $$pre2127 = 0, $$pre2130 = 0, $$pre2133 = 0, $$pre2136 = 0, $$pre2139 = 0;
 var $$pre2142 = 0, $$pre2145 = 0, $$pre2147$pre$phiZZ2D = 0, $$pre2149 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0.0, $1001 = 0.0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0.0, $1006 = 0, $1007 = i64(), $1008 = 0.0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0;
 var $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = i64(), $1029 = 0.0, $103 = 0;
 var $1030 = 0.0, $1031 = 0.0, $1032 = 0.0, $1033 = 0, $1034 = 0.0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0;
 var $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = i64(), $1057 = i64(), $1058 = i64(), $1059 = 0, $106 = 0, $1060 = 0, $1061 = i64(), $1062 = i64(), $1063 = i64(), $1064 = 0, $1065 = i64(), $1066 = i64();
 var $1067 = 0, $1068 = i64(), $1069 = i64(), $107 = 0, $1070 = 0, $1071 = 0.0, $1072 = i64(), $1073 = 0.0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0;
 var $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = i64(), $1094 = 0.0, $1095 = 0.0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0.0, $11 = 0, $110 = 0, $1100 = 0, $1101 = i64();
 var $1102 = 0.0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0;
 var $1120 = 0, $1121 = 0, $1122 = i64(), $1123 = 0.0, $1124 = 0.0, $1125 = 0.0, $1126 = 0.0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0;
 var $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0.0, $1147 = 0, $1148 = i64(), $1149 = 0.0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0;
 var $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = i64(), $117 = 0, $1170 = 0.0, $1171 = 0.0, $1172 = 0, $1173 = 0, $1174 = 0;
 var $1175 = 0.0, $1176 = 0, $1177 = i64(), $1178 = 0.0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0;
 var $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = i64(), $1199 = 0.0, $12 = 0, $120 = 0, $1200 = 0.0, $1201 = 0.0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = i64(), $1209 = i64(), $121 = 0;
 var $1210 = 0, $1211 = 0.0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0;
 var $1229 = 0, $123 = 0, $1230 = 0, $1231 = i64(), $1232 = 0.0, $1233 = 0.0, $1234 = 0.0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = i64(), $1243 = 0, $1244 = 0, $1245 = 0.0, $1246 = 0.0;
 var $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = i64(), $1251 = i64(), $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0;
 var $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = i64(), $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0;
 var $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0;
 var $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0;
 var $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0;
 var $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0;
 var $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0;
 var $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0;
 var $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0;
 var $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0, $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0;
 var $1427 = 0, $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0, $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0;
 var $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0, $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0;
 var $1463 = 0, $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0, $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0, $1473 = 0, $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0;
 var $1481 = 0, $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0, $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0;
 var $15 = 0, $150 = 0, $1500 = 0, $1501 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0, $1508 = 0, $1509 = 0, $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0;
 var $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0, $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1526 = 0, $1527 = 0, $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1533 = 0, $1534 = 0;
 var $1535 = 0, $1536 = 0, $1537 = 0, $1538 = 0, $1539 = 0, $154 = 0, $1540 = i64(), $1541 = i64(), $1542 = i64(), $1543 = 0, $1544 = i64(), $1545 = 0, $1546 = 0, $1547 = 0, $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0, $1552 = 0;
 var $1553 = 0, $1554 = 0.0, $1555 = 0.0, $1556 = 0.0, $1557 = 0, $1558 = 0.0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0, $1562 = 0, $1563 = 0, $1564 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0;
 var $1571 = 0, $1572 = 0, $1573 = 0, $1574 = 0, $1575 = 0, $1576 = i64(), $1577 = 0, $1578 = i64(), $1579 = 0, $158 = 0, $1580 = 0, $1581 = 0, $1582 = 0.0, $1583 = 0.0, $1584 = 0, $1585 = 0, $1586 = 0.0, $1587 = 0, $1588 = 0, $1589 = 0;
 var $159 = 0, $1590 = i64(), $1591 = i64(), $1592 = 0, $1593 = 0, $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0, $1599 = 0, $16 = 0, $160 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0;
 var $1607 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1610 = 0, $1611 = 0, $1612 = 0.0, $1613 = 0, $1614 = i64(), $1615 = 0.0, $1616 = 0, $1617 = 0, $1618 = 0, $1619 = 0, $162 = 0, $1620 = 0, $1621 = 0, $1622 = 0, $1623 = 0, $1624 = 0;
 var $1625 = 0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0, $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0, $1634 = 0, $1635 = i64(), $1636 = 0.0, $1637 = 0.0, $1638 = 0, $1639 = 0, $164 = 0, $1640 = i64(), $1641 = i64(), $1642 = i64();
 var $1643 = i64(), $1644 = 0, $1645 = 0, $1646 = 0, $1647 = 0.0, $1648 = 0, $1649 = i64(), $165 = 0, $1650 = 0.0, $1651 = 0, $1652 = 0, $1653 = 0, $1654 = 0, $1655 = 0, $1656 = 0, $1657 = 0, $1658 = 0, $1659 = 0, $166 = 0, $1660 = 0;
 var $1661 = 0, $1662 = 0, $1663 = 0, $1664 = 0, $1665 = 0, $1666 = 0, $1667 = 0, $1668 = 0, $1669 = 0, $167 = 0, $1670 = i64(), $1671 = 0.0, $1672 = 0.0, $1673 = 0, $1674 = 0, $1675 = 0, $1676 = 0.0, $1677 = 0, $1678 = i64(), $1679 = 0.0;
 var $168 = 0, $1680 = 0, $1681 = 0, $1682 = 0, $1683 = 0, $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1688 = 0, $1689 = 0, $169 = 0, $1690 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $1694 = 0, $1695 = 0, $1696 = 0, $1697 = 0;
 var $1698 = 0, $1699 = i64(), $17 = 0, $170 = 0, $1700 = 0.0, $1701 = 0.0, $1702 = 0, $1703 = 0, $1704 = 0.0, $1705 = 0, $1706 = i64(), $1707 = 0.0, $1708 = 0, $1709 = 0, $171 = 0, $1710 = 0, $1711 = 0, $1712 = 0, $1713 = 0, $1714 = 0;
 var $1715 = 0, $1716 = 0, $1717 = 0, $1718 = 0, $1719 = 0, $172 = 0, $1720 = 0, $1721 = 0, $1722 = 0, $1723 = 0, $1724 = 0, $1725 = 0, $1726 = 0, $1727 = i64(), $1728 = 0.0, $1729 = 0.0, $173 = 0, $1730 = 0.0, $1731 = 0, $1732 = 0;
 var $1733 = 0, $1734 = 0, $1735 = 0, $1736 = 0, $1737 = 0, $1738 = 0, $1739 = 0, $174 = 0, $1740 = 0, $1741 = 0, $1742 = 0, $1743 = 0, $1744 = 0, $1745 = 0, $1746 = 0, $1747 = 0, $1748 = 0, $1749 = 0, $175 = 0, $1750 = 0;
 var $1751 = 0, $1752 = 0, $1753 = 0, $1754 = 0, $1755 = 0, $1756 = 0, $1757 = 0, $1758 = 0, $1759 = 0, $176 = 0, $1760 = 0, $1761 = 0, $1762 = 0, $1763 = 0, $1764 = 0, $1765 = 0, $1766 = 0, $1767 = 0, $1768 = 0, $1769 = 0;
 var $177 = 0, $1770 = 0, $1771 = 0, $1772 = 0, $1773 = 0, $1774 = 0, $1775 = 0, $1776 = 0, $1777 = 0, $1778 = 0, $1779 = 0, $178 = 0, $1780 = 0, $1781 = 0, $1782 = 0, $1783 = 0, $1784 = i64(), $1785 = 0, $1786 = 0, $1787 = 0;
 var $1788 = 0, $1789 = 0, $179 = 0, $1790 = 0, $1791 = 0, $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1797 = 0, $1798 = 0, $1799 = 0, $18 = 0, $180 = 0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0;
 var $1805 = 0, $1806 = 0, $1807 = 0, $1808 = 0, $1809 = 0, $181 = 0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0, $1814 = 0, $1815 = 0, $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1820 = 0, $1821 = 0, $1822 = 0;
 var $1823 = 0, $1824 = 0, $1825 = 0, $1826 = 0, $1827 = 0, $1828 = 0, $1829 = 0, $183 = 0, $1830 = 0, $1831 = 0, $1832 = 0, $1833 = 0, $1834 = 0, $1835 = 0, $1836 = 0, $1837 = 0, $1838 = 0, $1839 = 0, $184 = 0, $1840 = 0;
 var $1841 = 0, $1842 = 0, $1843 = 0, $1844 = 0, $1845 = 0, $1846 = 0, $1847 = 0, $1848 = 0, $1849 = 0, $185 = 0, $1850 = 0, $1851 = 0, $1852 = 0, $1853 = 0, $1854 = 0, $1855 = 0, $1856 = 0, $1857 = 0, $1858 = 0, $1859 = 0;
 var $186 = 0, $1860 = 0, $1861 = 0, $1862 = 0, $1863 = 0, $1864 = 0, $1865 = 0, $1866 = 0, $1867 = 0, $1868 = 0, $1869 = 0, $187 = 0, $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0;
 var $1878 = 0, $1879 = 0, $188 = 0, $1880 = 0, $1881 = 0, $1882 = 0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0, $1887 = 0, $1888 = 0, $1889 = 0, $189 = 0, $1890 = 0, $1891 = 0, $1892 = 0, $1893 = 0, $19 = 0, $190 = 0;
 var $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = i64(), $265 = i64(), $266 = i64(), $267 = 0, $268 = 0.0, $269 = i64(), $27 = 0, $270 = 0.0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = i64(), $291 = 0.0, $292 = 0.0, $293 = 0, $294 = 0, $295 = 0, $296 = 0.0, $297 = 0, $298 = i64(), $299 = 0.0;
 var $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0;
 var $317 = 0, $318 = 0, $319 = i64(), $32 = 0, $320 = 0.0, $321 = 0.0, $322 = 0.0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0;
 var $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = i64(), $345 = i64(), $346 = i64(), $347 = 0, $348 = 0.0, $349 = i64(), $35 = 0, $350 = 0.0, $351 = 0, $352 = 0;
 var $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = i64();
 var $371 = 0.0, $372 = 0.0, $373 = 0, $374 = 0, $375 = 0, $376 = 0.0, $377 = 0, $378 = i64(), $379 = 0.0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0;
 var $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = i64(), $4 = 0, $40 = 0, $400 = 0.0, $401 = 0.0, $402 = 0.0, $403 = 0, $404 = 0, $405 = 0, $406 = 0;
 var $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = i64();
 var $425 = i64(), $426 = i64(), $427 = 0, $428 = 0.0, $429 = i64(), $43 = 0, $430 = 0.0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0;
 var $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = i64(), $451 = 0.0, $452 = 0.0, $453 = 0, $454 = 0, $455 = 0, $456 = 0.0, $457 = 0, $458 = i64(), $459 = 0.0, $46 = 0, $460 = 0;
 var $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = i64();
 var $48 = 0, $480 = 0.0, $481 = 0.0, $482 = 0.0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0;
 var $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0.0, $503 = 0, $504 = i64(), $505 = 0.0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0;
 var $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = i64(), $526 = 0.0, $527 = 0.0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0.0, $532 = 0;
 var $533 = i64(), $534 = 0.0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0;
 var $551 = 0, $552 = 0, $553 = 0, $554 = i64(), $555 = 0.0, $556 = 0.0, $557 = 0.0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0;
 var $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = i64(), $578 = 0, $579 = 0.0, $58 = 0, $580 = 0.0, $581 = 0, $582 = 0, $583 = 0, $584 = i64(), $585 = i64(), $586 = 0, $587 = 0;
 var $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0;
 var $605 = 0, $606 = i64(), $607 = 0, $608 = 0.0, $609 = 0.0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = i64(), $614 = i64(), $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0;
 var $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = i64(), $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0;
 var $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = i64(), $653 = 0, $654 = 0.0, $655 = 0.0, $656 = 0, $657 = 0, $658 = 0, $659 = i64();
 var $66 = 0, $660 = i64(), $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0;
 var $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = i64(), $682 = 0, $683 = 0.0, $684 = 0.0, $685 = 0, $686 = 0, $687 = 0, $688 = i64(), $689 = i64(), $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0;
 var $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = i64(), $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0;
 var $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = i64(), $728 = 0, $729 = 0.0, $73 = 0, $730 = 0.0;
 var $731 = 0, $732 = 0, $733 = 0, $734 = i64(), $735 = i64(), $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0;
 var $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = i64(), $757 = 0, $758 = 0.0, $759 = 0.0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = i64(), $764 = i64(), $765 = 0, $766 = 0, $767 = 0;
 var $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = i64(), $783 = 0, $784 = 0, $785 = 0;
 var $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = i64();
 var $803 = 0, $804 = 0.0, $805 = 0.0, $806 = 0, $807 = 0, $808 = 0, $809 = i64(), $81 = 0, $810 = i64(), $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0;
 var $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = i64(), $832 = 0, $833 = 0.0, $834 = 0.0, $835 = 0, $836 = 0, $837 = 0, $838 = i64(), $839 = i64();
 var $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0;
 var $858 = 0, $859 = i64(), $86 = 0, $860 = i64(), $861 = 0, $862 = i64(), $863 = i64(), $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0;
 var $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = i64(), $884 = 0, $885 = 0.0, $886 = 0.0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = i64(), $891 = i64(), $892 = 0, $893 = 0;
 var $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0;
 var $911 = 0, $912 = i64(), $913 = 0, $914 = 0.0, $915 = 0.0, $916 = 0, $917 = 0, $918 = 0, $919 = i64(), $92 = 0, $920 = i64(), $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0;
 var $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = i64(), $941 = i64(), $942 = 0, $943 = i64(), $944 = i64(), $945 = 0, $946 = 0, $947 = 0;
 var $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0;
 var $966 = i64(), $967 = i64(), $968 = i64(), $969 = 0, $97 = 0, $970 = 0, $971 = i64(), $972 = 0, $973 = i64(), $974 = 0, $975 = i64(), $976 = 0, $977 = 0.0, $978 = i64(), $979 = 0.0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0;
 var $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = i64(), $exitcond = 0, $exitcond$i = 0, $or$cond = 0;
 var $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i1360 = 0, $or$cond$i1365 = 0, $or$cond$i1370 = 0, $or$cond$i1375 = 0, $or$cond$i1380 = 0, $or$cond$i1385 = 0, $or$cond$i1390 = 0, $or$cond$i1396 = 0, $or$cond$i1401 = 0, $or$cond$i1407 = 0, $or$cond$i1433 = 0, $or$cond1335 = 0, $or$cond13351960 = 0, $spec$select$i = i64(), $spec$select$i1405 = i64(), $spec$select$i1415 = i64(), $spec$store$select = 0, $storemerge = 0;
 var $storemerge$i = i64(), $storemerge1329 = 0, $storemerge1330 = 0, $storemerge1331 = 0, $storemerge1820 = 0, $trunc = 0, $trunc$clear = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $vararg_buffer7 = sp + 48|0;
 $vararg_buffer5 = sp + 40|0;
 $vararg_buffer3 = sp + 32|0;
 $vararg_buffer1 = sp + 24|0;
 $vararg_buffer = sp + 16|0;
 $1 = sp;
 $2 = ((($0)) + 20|0);
 $3 = load4($2);
 $4 = ((($3)) + 34|0);
 $5 = load2($4);
 $6 = $5 | 8;
 store2($4,$6);
 $7 = ((($0)) + 112|0);
 $8 = ((($0)) + 12|0);
 $9 = ((($0)) + 16|0);
 $10 = ((($0)) + 28|0);
 $11 = ((($1)) + 8|0);
 $12 = ((($1)) + 8|0);
 $13 = ((($1)) + 8|0);
 $14 = ((($1)) + 8|0);
 $15 = ((($1)) + 8|0);
 $16 = ((($1)) + 8|0);
 $17 = ((($1)) + 8|0);
 $18 = ((($1)) + 8|0);
 $19 = ((($1)) + 8|0);
 $20 = ((($1)) + 8|0);
 $21 = ((($1)) + 8|0);
 $22 = ((($1)) + 8|0);
 $23 = ((($1)) + 8|0);
 $24 = ((($1)) + 8|0);
 $25 = ((($1)) + 8|0);
 $26 = ((($1)) + 8|0);
 $27 = ((($1)) + 8|0);
 $28 = ((($1)) + 8|0);
 $29 = ((($1)) + 8|0);
 $$phi$trans$insert2141 = ((($1)) + 8|0);
 $$phi$trans$insert2135 = ((($1)) + 8|0);
 $$phi$trans$insert2129 = ((($1)) + 8|0);
 $$phi$trans$insert2123 = ((($1)) + 8|0);
 $$phi$trans$insert2117 = ((($1)) + 8|0);
 $$phi$trans$insert2144 = ((($1)) + 8|0);
 $$phi$trans$insert2138 = ((($1)) + 8|0);
 $$phi$trans$insert2132 = ((($1)) + 8|0);
 $$phi$trans$insert2126 = ((($1)) + 8|0);
 $$phi$trans$insert2120 = ((($1)) + 8|0);
 $$0 = $3;
 L1: while(1) {
  $30 = load4($$0);
  $31 = load4($30);
  $32 = ((($31)) + 12|0);
  $33 = load4($32);
  $34 = ((($33)) + 44|0);
  $35 = load4($34);
  $36 = ((($$0)) + 16|0);
  $37 = load4($36);
  $38 = ((($$0)) + 16|0);
  $39 = ((($$0)) + 20|0);
  $40 = ((($$0)) + 4|0);
  $41 = ((($$0)) + 4|0);
  $$phi$trans$insert2113 = ((($$0)) + 4|0);
  $42 = ((($$0)) + 4|0);
  $43 = ((($$0)) + 4|0);
  $44 = ((($$0)) + 4|0);
  $45 = ((($$0)) + 4|0);
  $$01302 = $37;
  L3: while(1) {
   $46 = load4($39);
   $47 = ((($46)) + 4|0);
   store4($39,$47);
   $48 = load4($46);
   $49 = load4($7);
   $50 = $49 & 12;
   $51 = ($50|0)==(0);
   if ($51) {
    $$11303 = $$01302;
   } else {
    _luaG_traceexec($0);
    $52 = load4($38);
    $$11303 = $52;
   }
   $53 = $48 >>> 6;
   $54 = $53 & 255;
   $55 = (($$11303) + ($54<<4)|0);
   $trunc = $48&255;
   $trunc$clear = $trunc & 63;
   L8: do {
    switch ($trunc$clear<<24>>24) {
    case 38:  {
     label = 508;
     break L3;
     break;
    }
    case 0:  {
     $56 = $48 >>> 23;
     $57 = (($$11303) + ($56<<4)|0);
     ; store8($55,load8($57,8),8); store8($55+8 | 0,load8($57+8 | 0,8),8);
     $$01302$be = $$11303;
     break;
    }
    case 1:  {
     $58 = $48 >>> 14;
     $59 = (($35) + ($58<<4)|0);
     ; store8($55,load8($59,8),8); store8($55+8 | 0,load8($59+8 | 0,8),8);
     $$01302$be = $$11303;
     break;
    }
    case 2:  {
     $60 = load4($39);
     $61 = ((($60)) + 4|0);
     store4($39,$61);
     $62 = load4($60);
     $63 = $62 >>> 6;
     $64 = (($35) + ($63<<4)|0);
     ; store8($55,load8($64,8),8); store8($55+8 | 0,load8($64+8 | 0,8),8);
     $$01302$be = $$11303;
     break;
    }
    case 3:  {
     $65 = $48 >>> 23;
     store4($55,$65);
     $66 = (((($$11303) + ($54<<4)|0)) + 8|0);
     store4($66,1);
     $67 = $48 & 8372224;
     $68 = ($67|0)==(0);
     if ($68) {
      $$01302$be = $$11303;
     } else {
      $69 = load4($39);
      $70 = ((($69)) + 4|0);
      store4($39,$70);
      $$01302$be = $$11303;
     }
     break;
    }
    case 4:  {
     $71 = $48 >>> 23;
     $$01310 = $55;$$01313 = $71;
     while(1) {
      $72 = ((($$01310)) + 16|0);
      $73 = ((($$01310)) + 8|0);
      store4($73,0);
      $74 = (($$01313) + -1)|0;
      $75 = ($$01313|0)==(0);
      if ($75) {
       $$01302$be = $$11303;
       break;
      } else {
       $$01310 = $72;$$01313 = $74;
      }
     }
     break;
    }
    case 5:  {
     $76 = $48 >>> 23;
     $77 = (((($31)) + 16|0) + ($76<<2)|0);
     $78 = load4($77);
     $79 = load4($78);
     ; store8($55,load8($79,8),8); store8($55+8 | 0,load8($79+8 | 0,8),8);
     $$01302$be = $$11303;
     break;
    }
    case 6:  {
     $80 = $48 >>> 23;
     $81 = (((($31)) + 16|0) + ($80<<2)|0);
     $82 = load4($81);
     $83 = load4($82);
     $84 = $48 >>> 14;
     $85 = $48 & 4194304;
     $86 = ($85|0)==(0);
     $87 = $84 & 255;
     $88 = (($35) + ($87<<4)|0);
     $89 = $84 & 511;
     $90 = (($$11303) + ($89<<4)|0);
     $91 = $86 ? $90 : $88;
     $92 = ((($83)) + 8|0);
     $93 = load4($92);
     $94 = ($93|0)==(69);
     if ($94) {
      $95 = load4($83);
      $96 = (_luaH_get($95,$91)|0);
      $97 = ((($96)) + 8|0);
      $98 = load4($97);
      $99 = ($98|0)==(0);
      if ($99) {
       $$01314 = $96;
      } else {
       ; store8($55,load8($96,8),8); store8($55+8 | 0,load8($96+8 | 0,8),8);
       $$01302$be = $$11303;
       break L8;
      }
     } else {
      $$01314 = 0;
     }
     _luaV_finishget($0,$83,$91,$55,$$01314);
     $100 = load4($38);
     $$01302$be = $100;
     break;
    }
    case 7:  {
     $101 = $48 >>> 23;
     $102 = (($$11303) + ($101<<4)|0);
     $103 = $48 >>> 14;
     $104 = $48 & 4194304;
     $105 = ($104|0)==(0);
     $106 = $103 & 255;
     $107 = (($35) + ($106<<4)|0);
     $108 = $103 & 511;
     $109 = (($$11303) + ($108<<4)|0);
     $110 = $105 ? $109 : $107;
     $111 = (((($$11303) + ($101<<4)|0)) + 8|0);
     $112 = load4($111);
     $113 = ($112|0)==(69);
     if ($113) {
      $114 = load4($102);
      $115 = (_luaH_get($114,$110)|0);
      $116 = ((($115)) + 8|0);
      $117 = load4($116);
      $118 = ($117|0)==(0);
      if ($118) {
       $$01315 = $115;
      } else {
       ; store8($55,load8($115,8),8); store8($55+8 | 0,load8($115+8 | 0,8),8);
       $$01302$be = $$11303;
       break L8;
      }
     } else {
      $$01315 = 0;
     }
     _luaV_finishget($0,$102,$110,$55,$$01315);
     $119 = load4($38);
     $$01302$be = $119;
     break;
    }
    case 8:  {
     $120 = (((($31)) + 16|0) + ($54<<2)|0);
     $121 = load4($120);
     $122 = load4($121);
     $123 = $48 >>> 23;
     $124 = ($48|0)<(0);
     $125 = $123 & 255;
     $126 = (($35) + ($125<<4)|0);
     $127 = (($$11303) + ($123<<4)|0);
     $128 = $124 ? $126 : $127;
     $129 = $48 >>> 14;
     $130 = $48 & 4194304;
     $131 = ($130|0)==(0);
     $132 = $129 & 255;
     $133 = (($35) + ($132<<4)|0);
     $134 = $129 & 511;
     $135 = (($$11303) + ($134<<4)|0);
     $136 = $131 ? $135 : $133;
     $137 = ((($122)) + 8|0);
     $138 = load4($137);
     $139 = ($138|0)==(69);
     if ($139) {
      $140 = load4($122);
      $141 = (_luaH_get($140,$128)|0);
      $142 = ((($141)) + 8|0);
      $143 = load4($142);
      $144 = ($143|0)==(0);
      if ($144) {
       $$01320 = $141;
      } else {
       $145 = ((($136)) + 8|0);
       $146 = load4($145);
       $147 = $146 & 64;
       $148 = ($147|0)==(0);
       if (!($148)) {
        $149 = load4($122);
        $150 = ((($149)) + 5|0);
        $151 = load1($150);
        $152 = $151 & 4;
        $153 = ($152<<24>>24)==(0);
        if (!($153)) {
         $154 = load4($136);
         $155 = ((($154)) + 5|0);
         $156 = load1($155);
         $157 = $156 & 3;
         $158 = ($157<<24>>24)==(0);
         if (!($158)) {
          _luaC_barrierback_($0,$149);
         }
        }
       }
       ; store8($141,load8($136,8),8); store8($141+8 | 0,load8($136+8 | 0,8),8);
       $$01302$be = $$11303;
       break L8;
      }
     } else {
      $$01320 = 0;
     }
     _luaV_finishset($0,$122,$128,$136,$$01320);
     $159 = load4($38);
     $$01302$be = $159;
     break;
    }
    case 9:  {
     $160 = $48 >>> 23;
     $161 = (((($31)) + 16|0) + ($160<<2)|0);
     $162 = load4($161);
     $163 = load4($162);
     ; store8($163,load8($55,8),8); store8($163+8 | 0,load8($55+8 | 0,8),8);
     $164 = load4($162);
     $165 = ((($164)) + 8|0);
     $166 = load4($165);
     $167 = $166 & 64;
     $168 = ($167|0)!=(0);
     $169 = ((($162)) + 8|0);
     $170 = ($164|0)==($169|0);
     $or$cond = $170 & $168;
     if ($or$cond) {
      _luaC_upvalbarrier_($0,$162);
      $$01302$be = $$11303;
     } else {
      $$01302$be = $$11303;
     }
     break;
    }
    case 10:  {
     $171 = $48 >>> 23;
     $172 = ($48|0)<(0);
     $173 = $171 & 255;
     $174 = (($35) + ($173<<4)|0);
     $175 = (($$11303) + ($171<<4)|0);
     $176 = $172 ? $174 : $175;
     $177 = $48 >>> 14;
     $178 = $48 & 4194304;
     $179 = ($178|0)==(0);
     $180 = $177 & 255;
     $181 = (($35) + ($180<<4)|0);
     $182 = $177 & 511;
     $183 = (($$11303) + ($182<<4)|0);
     $184 = $179 ? $183 : $181;
     $185 = (((($$11303) + ($54<<4)|0)) + 8|0);
     $186 = load4($185);
     $187 = ($186|0)==(69);
     if ($187) {
      $188 = load4($55);
      $189 = (_luaH_get($188,$176)|0);
      $190 = ((($189)) + 8|0);
      $191 = load4($190);
      $192 = ($191|0)==(0);
      if ($192) {
       $$01321 = $189;
      } else {
       $193 = ((($184)) + 8|0);
       $194 = load4($193);
       $195 = $194 & 64;
       $196 = ($195|0)==(0);
       if (!($196)) {
        $197 = load4($55);
        $198 = ((($197)) + 5|0);
        $199 = load1($198);
        $200 = $199 & 4;
        $201 = ($200<<24>>24)==(0);
        if (!($201)) {
         $202 = load4($184);
         $203 = ((($202)) + 5|0);
         $204 = load1($203);
         $205 = $204 & 3;
         $206 = ($205<<24>>24)==(0);
         if (!($206)) {
          _luaC_barrierback_($0,$197);
         }
        }
       }
       ; store8($189,load8($184,8),8); store8($189+8 | 0,load8($184+8 | 0,8),8);
       $$01302$be = $$11303;
       break L8;
      }
     } else {
      $$01321 = 0;
     }
     _luaV_finishset($0,$55,$176,$184,$$01321);
     $207 = load4($38);
     $$01302$be = $207;
     break;
    }
    case 11:  {
     $208 = $48 >>> 23;
     $209 = $48 >>> 14;
     $210 = $209 & 511;
     $211 = (_luaH_new($0)|0);
     store4($55,$211);
     $212 = (((($$11303) + ($54<<4)|0)) + 8|0);
     store4($212,69);
     $213 = $210 | $208;
     $214 = ($213|0)==(0);
     if (!($214)) {
      $215 = (_luaO_fb2int($208)|0);
      $216 = (_luaO_fb2int($210)|0);
      _luaH_resize($0,$211,$215,$216);
     }
     $217 = load4($9);
     $218 = ((($217)) + 12|0);
     $219 = load4($218);
     $220 = ($219|0)>(0);
     if ($220) {
      $221 = ((($55)) + 16|0);
      store4($8,$221);
      _luaC_step($0);
      $222 = load4($42);
      store4($8,$222);
      $223 = load4($38);
      $$01302$be = $223;
     } else {
      $$01302$be = $$11303;
     }
     break;
    }
    case 12:  {
     $224 = $48 >>> 23;
     $225 = (($$11303) + ($224<<4)|0);
     $226 = $48 >>> 14;
     $227 = $48 & 4194304;
     $228 = ($227|0)==(0);
     $229 = $226 & 255;
     $230 = (($35) + ($229<<4)|0);
     $231 = $226 & 511;
     $232 = (($$11303) + ($231<<4)|0);
     $233 = $228 ? $232 : $230;
     $234 = load4($233);
     $235 = ((($55)) + 16|0);
     ; store8($235,load8($225,8),8); store8($235+8 | 0,load8($225+8 | 0,8),8);
     $236 = (((($$11303) + ($224<<4)|0)) + 8|0);
     $237 = load4($236);
     $238 = ($237|0)==(69);
     if ($238) {
      $239 = load4($225);
      $240 = (_luaH_getstr($239,$234)|0);
      $241 = ((($240)) + 8|0);
      $242 = load4($241);
      $243 = ($242|0)==(0);
      if ($243) {
       $$01322 = $240;
      } else {
       ; store8($55,load8($240,8),8); store8($55+8 | 0,load8($240+8 | 0,8),8);
       $$01302$be = $$11303;
       break L8;
      }
     } else {
      $$01322 = 0;
     }
     _luaV_finishget($0,$225,$233,$55,$$01322);
     $244 = load4($38);
     $$01302$be = $244;
     break;
    }
    case 13:  {
     $245 = $48 >>> 23;
     $246 = ($48|0)<(0);
     $247 = $245 & 255;
     $248 = (($35) + ($247<<4)|0);
     $249 = (($$11303) + ($245<<4)|0);
     $250 = $246 ? $248 : $249;
     $251 = $48 >>> 14;
     $252 = $48 & 4194304;
     $253 = ($252|0)==(0);
     $254 = $251 & 255;
     $255 = (($35) + ($254<<4)|0);
     $256 = $251 & 511;
     $257 = (($$11303) + ($256<<4)|0);
     $258 = $253 ? $257 : $255;
     $259 = ((($250)) + 8|0);
     $260 = load4($259);
     L61: do {
      switch ($260|0) {
      case 19:  {
       $261 = ((($258)) + 8|0);
       $262 = load4($261);
       $263 = ($262|0)==(19);
       if ($263) {
        $264 = load8($250);
        $265 = load8($258);
        $266 = i64_add($265,$264);
        store8($55,$266);
        $267 = (((($$11303) + ($54<<4)|0)) + 8|0);
        store4($267,19);
        $$01302$be = $$11303;
        break L8;
       } else {
        $269 = load8($250);
        $270 = i64_s2d($269);
        $$21766 = $270;
        label = 60;
        break L61;
       }
       break;
      }
      case 3:  {
       $268 = loadd($250);
       $$31767 = $268;
       label = 61;
       break;
      }
      default: {
       $271 = $260 & 15;
       $272 = ($271|0)==(4);
       if ($272) {
        $273 = load4($250);
        $274 = ((($273)) + 16|0);
        $275 = (_luaO_str2num($274,$1)|0);
        $276 = load4($250);
        $277 = ((($276)) + 4|0);
        $278 = load1($277);
        $279 = ($278<<24>>24)==(4);
        if ($279) {
         $280 = ((($276)) + 7|0);
         $281 = load1($280);
         $282 = $281&255;
         $286 = $282;
        } else {
         $283 = ((($276)) + 12|0);
         $284 = load4($283);
         $286 = $284;
        }
        $285 = (($286) + 1)|0;
        $287 = ($275|0)==($285|0);
        if ($287) {
         $288 = load4($11);
         $289 = ($288|0)==(19);
         $290 = load8($1);
         $291 = i64_s2d($290);
         $$cast$i = i64_bc2d($290);
         $292 = $289 ? $291 : $$cast$i;
         $$21766 = $292;
         label = 60;
         break L61;
        }
       }
      }
      }
     } while(0);
     if ((label|0) == 60) {
      label = 0;
      $$31767 = $$21766;
      label = 61;
     }
     L78: do {
      if ((label|0) == 61) {
       label = 0;
       $293 = ((($258)) + 8|0);
       $294 = load4($293);
       $295 = ($294|0)==(3);
       if ($295) {
        $296 = loadd($258);
        $$31759 = $296;
       } else {
        $297 = ($294|0)==(19);
        do {
         if ($297) {
          $298 = load8($258);
          $299 = i64_s2d($298);
          $$21758 = $299;
         } else {
          $300 = $294 & 15;
          $301 = ($300|0)==(4);
          if ($301) {
           $302 = load4($258);
           $303 = ((($302)) + 16|0);
           $304 = (_luaO_str2num($303,$1)|0);
           $305 = load4($258);
           $306 = ((($305)) + 4|0);
           $307 = load1($306);
           $308 = ($307<<24>>24)==(4);
           if ($308) {
            $309 = ((($305)) + 7|0);
            $310 = load1($309);
            $311 = $310&255;
            $315 = $311;
           } else {
            $312 = ((($305)) + 12|0);
            $313 = load4($312);
            $315 = $313;
           }
           $314 = (($315) + 1)|0;
           $316 = ($304|0)==($314|0);
           if ($316) {
            $317 = load4($19);
            $318 = ($317|0)==(19);
            $319 = load8($1);
            $320 = i64_s2d($319);
            $$cast$i1336 = i64_bc2d($319);
            $321 = $318 ? $320 : $$cast$i1336;
            $$21758 = $321;
            break;
           }
          }
          break L78;
         }
        } while(0);
        $$31759 = $$21758;
       }
       $322 = $$31767 + $$31759;
       stored($55,$322);
       $323 = (((($$11303) + ($54<<4)|0)) + 8|0);
       store4($323,3);
       $$01302$be = $$11303;
       break L8;
      }
     } while(0);
     _luaT_trybinTM($0,$250,$258,$55,6);
     $324 = load4($38);
     $$01302$be = $324;
     break;
    }
    case 14:  {
     $325 = $48 >>> 23;
     $326 = ($48|0)<(0);
     $327 = $325 & 255;
     $328 = (($35) + ($327<<4)|0);
     $329 = (($$11303) + ($325<<4)|0);
     $330 = $326 ? $328 : $329;
     $331 = $48 >>> 14;
     $332 = $48 & 4194304;
     $333 = ($332|0)==(0);
     $334 = $331 & 255;
     $335 = (($35) + ($334<<4)|0);
     $336 = $331 & 511;
     $337 = (($$11303) + ($336<<4)|0);
     $338 = $333 ? $337 : $335;
     $339 = ((($330)) + 8|0);
     $340 = load4($339);
     L98: do {
      switch ($340|0) {
      case 19:  {
       $341 = ((($338)) + 8|0);
       $342 = load4($341);
       $343 = ($342|0)==(19);
       if ($343) {
        $344 = load8($330);
        $345 = load8($338);
        $346 = i64_sub($344,$345);
        store8($55,$346);
        $347 = (((($$11303) + ($54<<4)|0)) + 8|0);
        store4($347,19);
        $$01302$be = $$11303;
        break L8;
       } else {
        $349 = load8($330);
        $350 = i64_s2d($349);
        $$21750 = $350;
        label = 87;
        break L98;
       }
       break;
      }
      case 3:  {
       $348 = loadd($330);
       $$31751 = $348;
       label = 88;
       break;
      }
      default: {
       $351 = $340 & 15;
       $352 = ($351|0)==(4);
       if ($352) {
        $353 = load4($330);
        $354 = ((($353)) + 16|0);
        $355 = (_luaO_str2num($354,$1)|0);
        $356 = load4($330);
        $357 = ((($356)) + 4|0);
        $358 = load1($357);
        $359 = ($358<<24>>24)==(4);
        if ($359) {
         $360 = ((($356)) + 7|0);
         $361 = load1($360);
         $362 = $361&255;
         $366 = $362;
        } else {
         $363 = ((($356)) + 12|0);
         $364 = load4($363);
         $366 = $364;
        }
        $365 = (($366) + 1)|0;
        $367 = ($355|0)==($365|0);
        if ($367) {
         $368 = load4($12);
         $369 = ($368|0)==(19);
         $370 = load8($1);
         $371 = i64_s2d($370);
         $$cast$i1339 = i64_bc2d($370);
         $372 = $369 ? $371 : $$cast$i1339;
         $$21750 = $372;
         label = 87;
         break L98;
        }
       }
      }
      }
     } while(0);
     if ((label|0) == 87) {
      label = 0;
      $$31751 = $$21750;
      label = 88;
     }
     L115: do {
      if ((label|0) == 88) {
       label = 0;
       $373 = ((($338)) + 8|0);
       $374 = load4($373);
       $375 = ($374|0)==(3);
       if ($375) {
        $376 = loadd($338);
        $$31743 = $376;
       } else {
        $377 = ($374|0)==(19);
        do {
         if ($377) {
          $378 = load8($338);
          $379 = i64_s2d($378);
          $$21742 = $379;
         } else {
          $380 = $374 & 15;
          $381 = ($380|0)==(4);
          if ($381) {
           $382 = load4($338);
           $383 = ((($382)) + 16|0);
           $384 = (_luaO_str2num($383,$1)|0);
           $385 = load4($338);
           $386 = ((($385)) + 4|0);
           $387 = load1($386);
           $388 = ($387<<24>>24)==(4);
           if ($388) {
            $389 = ((($385)) + 7|0);
            $390 = load1($389);
            $391 = $390&255;
            $395 = $391;
           } else {
            $392 = ((($385)) + 12|0);
            $393 = load4($392);
            $395 = $393;
           }
           $394 = (($395) + 1)|0;
           $396 = ($384|0)==($394|0);
           if ($396) {
            $397 = load4($20);
            $398 = ($397|0)==(19);
            $399 = load8($1);
            $400 = i64_s2d($399);
            $$cast$i1342 = i64_bc2d($399);
            $401 = $398 ? $400 : $$cast$i1342;
            $$21742 = $401;
            break;
           }
          }
          break L115;
         }
        } while(0);
        $$31743 = $$21742;
       }
       $402 = $$31751 - $$31743;
       stored($55,$402);
       $403 = (((($$11303) + ($54<<4)|0)) + 8|0);
       store4($403,3);
       $$01302$be = $$11303;
       break L8;
      }
     } while(0);
     _luaT_trybinTM($0,$330,$338,$55,7);
     $404 = load4($38);
     $$01302$be = $404;
     break;
    }
    case 15:  {
     $405 = $48 >>> 23;
     $406 = ($48|0)<(0);
     $407 = $405 & 255;
     $408 = (($35) + ($407<<4)|0);
     $409 = (($$11303) + ($405<<4)|0);
     $410 = $406 ? $408 : $409;
     $411 = $48 >>> 14;
     $412 = $48 & 4194304;
     $413 = ($412|0)==(0);
     $414 = $411 & 255;
     $415 = (($35) + ($414<<4)|0);
     $416 = $411 & 511;
     $417 = (($$11303) + ($416<<4)|0);
     $418 = $413 ? $417 : $415;
     $419 = ((($410)) + 8|0);
     $420 = load4($419);
     L135: do {
      switch ($420|0) {
      case 19:  {
       $421 = ((($418)) + 8|0);
       $422 = load4($421);
       $423 = ($422|0)==(19);
       if ($423) {
        $424 = load8($410);
        $425 = load8($418);
        $426 = i64_mul($425,$424);
        store8($55,$426);
        $427 = (((($$11303) + ($54<<4)|0)) + 8|0);
        store4($427,19);
        $$01302$be = $$11303;
        break L8;
       } else {
        $429 = load8($410);
        $430 = i64_s2d($429);
        $$21734 = $430;
        label = 114;
        break L135;
       }
       break;
      }
      case 3:  {
       $428 = loadd($410);
       $$31735 = $428;
       label = 115;
       break;
      }
      default: {
       $431 = $420 & 15;
       $432 = ($431|0)==(4);
       if ($432) {
        $433 = load4($410);
        $434 = ((($433)) + 16|0);
        $435 = (_luaO_str2num($434,$1)|0);
        $436 = load4($410);
        $437 = ((($436)) + 4|0);
        $438 = load1($437);
        $439 = ($438<<24>>24)==(4);
        if ($439) {
         $440 = ((($436)) + 7|0);
         $441 = load1($440);
         $442 = $441&255;
         $446 = $442;
        } else {
         $443 = ((($436)) + 12|0);
         $444 = load4($443);
         $446 = $444;
        }
        $445 = (($446) + 1)|0;
        $447 = ($435|0)==($445|0);
        if ($447) {
         $448 = load4($13);
         $449 = ($448|0)==(19);
         $450 = load8($1);
         $451 = i64_s2d($450);
         $$cast$i1345 = i64_bc2d($450);
         $452 = $449 ? $451 : $$cast$i1345;
         $$21734 = $452;
         label = 114;
         break L135;
        }
       }
      }
      }
     } while(0);
     if ((label|0) == 114) {
      label = 0;
      $$31735 = $$21734;
      label = 115;
     }
     L152: do {
      if ((label|0) == 115) {
       label = 0;
       $453 = ((($418)) + 8|0);
       $454 = load4($453);
       $455 = ($454|0)==(3);
       if ($455) {
        $456 = loadd($418);
        $$31727 = $456;
       } else {
        $457 = ($454|0)==(19);
        do {
         if ($457) {
          $458 = load8($418);
          $459 = i64_s2d($458);
          $$21726 = $459;
         } else {
          $460 = $454 & 15;
          $461 = ($460|0)==(4);
          if ($461) {
           $462 = load4($418);
           $463 = ((($462)) + 16|0);
           $464 = (_luaO_str2num($463,$1)|0);
           $465 = load4($418);
           $466 = ((($465)) + 4|0);
           $467 = load1($466);
           $468 = ($467<<24>>24)==(4);
           if ($468) {
            $469 = ((($465)) + 7|0);
            $470 = load1($469);
            $471 = $470&255;
            $475 = $471;
           } else {
            $472 = ((($465)) + 12|0);
            $473 = load4($472);
            $475 = $473;
           }
           $474 = (($475) + 1)|0;
           $476 = ($464|0)==($474|0);
           if ($476) {
            $477 = load4($21);
            $478 = ($477|0)==(19);
            $479 = load8($1);
            $480 = i64_s2d($479);
            $$cast$i1348 = i64_bc2d($479);
            $481 = $478 ? $480 : $$cast$i1348;
            $$21726 = $481;
            break;
           }
          }
          break L152;
         }
        } while(0);
        $$31727 = $$21726;
       }
       $482 = $$31735 * $$31727;
       stored($55,$482);
       $483 = (((($$11303) + ($54<<4)|0)) + 8|0);
       store4($483,3);
       $$01302$be = $$11303;
       break L8;
      }
     } while(0);
     _luaT_trybinTM($0,$410,$418,$55,8);
     $484 = load4($38);
     $$01302$be = $484;
     break;
    }
    case 18:  {
     $485 = $48 >>> 23;
     $486 = ($48|0)<(0);
     $487 = $485 & 255;
     $488 = (($35) + ($487<<4)|0);
     $489 = (($$11303) + ($485<<4)|0);
     $490 = $486 ? $488 : $489;
     $491 = $48 >>> 14;
     $492 = $48 & 4194304;
     $493 = ($492|0)==(0);
     $494 = $491 & 255;
     $495 = (($35) + ($494<<4)|0);
     $496 = $491 & 511;
     $497 = (($$11303) + ($496<<4)|0);
     $498 = $493 ? $497 : $495;
     $499 = ((($490)) + 8|0);
     $500 = load4($499);
     $501 = ($500|0)==(3);
     L172: do {
      if ($501) {
       $502 = loadd($490);
       $$31719 = $502;
       label = 141;
      } else {
       $503 = ($500|0)==(19);
       do {
        if ($503) {
         $504 = load8($490);
         $505 = i64_s2d($504);
         $$21718 = $505;
        } else {
         $506 = $500 & 15;
         $507 = ($506|0)==(4);
         if ($507) {
          $508 = load4($490);
          $509 = ((($508)) + 16|0);
          $510 = (_luaO_str2num($509,$1)|0);
          $511 = load4($490);
          $512 = ((($511)) + 4|0);
          $513 = load1($512);
          $514 = ($513<<24>>24)==(4);
          if ($514) {
           $515 = ((($511)) + 7|0);
           $516 = load1($515);
           $517 = $516&255;
           $521 = $517;
          } else {
           $518 = ((($511)) + 12|0);
           $519 = load4($518);
           $521 = $519;
          }
          $520 = (($521) + 1)|0;
          $522 = ($510|0)==($520|0);
          if ($522) {
           $523 = load4($16);
           $524 = ($523|0)==(19);
           $525 = load8($1);
           $526 = i64_s2d($525);
           $$cast$i1351 = i64_bc2d($525);
           $527 = $524 ? $526 : $$cast$i1351;
           $$21718 = $527;
           break;
          }
         }
         break L172;
        }
       } while(0);
       $$31719 = $$21718;
       label = 141;
      }
     } while(0);
     L187: do {
      if ((label|0) == 141) {
       label = 0;
       $528 = ((($498)) + 8|0);
       $529 = load4($528);
       $530 = ($529|0)==(3);
       if ($530) {
        $531 = loadd($498);
        $$31711 = $531;
       } else {
        $532 = ($529|0)==(19);
        do {
         if ($532) {
          $533 = load8($498);
          $534 = i64_s2d($533);
          $$21710 = $534;
         } else {
          $535 = $529 & 15;
          $536 = ($535|0)==(4);
          if ($536) {
           $537 = load4($498);
           $538 = ((($537)) + 16|0);
           $539 = (_luaO_str2num($538,$1)|0);
           $540 = load4($498);
           $541 = ((($540)) + 4|0);
           $542 = load1($541);
           $543 = ($542<<24>>24)==(4);
           if ($543) {
            $544 = ((($540)) + 7|0);
            $545 = load1($544);
            $546 = $545&255;
            $550 = $546;
           } else {
            $547 = ((($540)) + 12|0);
            $548 = load4($547);
            $550 = $548;
           }
           $549 = (($550) + 1)|0;
           $551 = ($539|0)==($549|0);
           if ($551) {
            $552 = load4($22);
            $553 = ($552|0)==(19);
            $554 = load8($1);
            $555 = i64_s2d($554);
            $$cast$i1354 = i64_bc2d($554);
            $556 = $553 ? $555 : $$cast$i1354;
            $$21710 = $556;
            break;
           }
          }
          break L187;
         }
        } while(0);
        $$31711 = $$21710;
       }
       $557 = $$31719 / $$31711;
       stored($55,$557);
       $558 = (((($$11303) + ($54<<4)|0)) + 8|0);
       store4($558,3);
       $$01302$be = $$11303;
       break L8;
      }
     } while(0);
     _luaT_trybinTM($0,$490,$498,$55,11);
     $559 = load4($38);
     $$01302$be = $559;
     break;
    }
    case 20:  {
     $560 = $48 >>> 23;
     $561 = ($48|0)<(0);
     $562 = $560 & 255;
     $563 = (($35) + ($562<<4)|0);
     $564 = (($$11303) + ($560<<4)|0);
     $565 = $561 ? $563 : $564;
     $566 = $48 >>> 14;
     $567 = $48 & 4194304;
     $568 = ($567|0)==(0);
     $569 = $566 & 255;
     $570 = (($35) + ($569<<4)|0);
     $571 = $566 & 511;
     $572 = (($$11303) + ($571<<4)|0);
     $573 = $568 ? $572 : $570;
     $574 = ((($565)) + 8|0);
     $575 = load4($574);
     $576 = ($575|0)==(19);
     do {
      if ($576) {
       $577 = load8($565);
       $$31703 = $577;
       label = 170;
      } else {
       $$023$i = $565;$578 = $575;
       L210: while(1) {
        switch ($578|0) {
        case 3:  {
         label = 159;
         break L210;
         break;
        }
        case 19:  {
         label = 161;
         break L210;
         break;
        }
        default: {
        }
        }
        $586 = $578 & 15;
        $587 = ($586|0)==(4);
        if (!($587)) {
         label = 168;
         break;
        }
        $588 = load4($$023$i);
        $589 = ((($588)) + 16|0);
        $590 = (_luaO_str2num($589,$1)|0);
        $591 = load4($$023$i);
        $592 = ((($591)) + 4|0);
        $593 = load1($592);
        $594 = ($593<<24>>24)==(4);
        if ($594) {
         $595 = ((($591)) + 7|0);
         $596 = load1($595);
         $597 = $596&255;
         $601 = $597;
        } else {
         $598 = ((($591)) + 12|0);
         $599 = load4($598);
         $601 = $599;
        }
        $600 = (($601) + 1)|0;
        $602 = ($590|0)==($600|0);
        if (!($602)) {
         label = 168;
         break;
        }
        $$pre2142 = load4($$phi$trans$insert2141);
        $$023$i = $1;$578 = $$pre2142;
       }
       if ((label|0) == 159) {
        label = 0;
        $579 = loadd($$023$i);
        $580 = (+Math_floor((+$579)));
        $581 = $579 != $580;
        if ($581) {
         label = 168;
        } else {
         $582 = $580 >= -9.2233720368547758E+18;
         $583 = $580 < 9.2233720368547758E+18;
         $or$cond$i = $582 & $583;
         $584 = i64_d2s($580);
         if ($or$cond$i) {
          $$21702 = $584;
          label = 169;
         } else {
          label = 168;
         }
        }
       }
       else if ((label|0) == 161) {
        label = 0;
        $585 = load8($$023$i);
        $$21702 = $585;
        label = 169;
       }
       if ((label|0) == 168) {
        label = 0;
        break;
       }
       else if ((label|0) == 169) {
        label = 0;
        $$31703 = $$21702;
        label = 170;
        break;
       }
      }
     } while(0);
     L226: do {
      if ((label|0) == 170) {
       label = 0;
       $603 = ((($573)) + 8|0);
       $604 = load4($603);
       $605 = ($604|0)==(19);
       do {
        if ($605) {
         $606 = load8($573);
         $$31695 = $606;
        } else {
         $$023$i1358 = $573;$607 = $604;
         L231: while(1) {
          switch ($607|0) {
          case 3:  {
           label = 174;
           break L231;
           break;
          }
          case 19:  {
           label = 176;
           break L231;
           break;
          }
          default: {
          }
          }
          $615 = $607 & 15;
          $616 = ($615|0)==(4);
          if (!($616)) {
           label = 183;
           break;
          }
          $617 = load4($$023$i1358);
          $618 = ((($617)) + 16|0);
          $619 = (_luaO_str2num($618,$1)|0);
          $620 = load4($$023$i1358);
          $621 = ((($620)) + 4|0);
          $622 = load1($621);
          $623 = ($622<<24>>24)==(4);
          if ($623) {
           $624 = ((($620)) + 7|0);
           $625 = load1($624);
           $626 = $625&255;
           $630 = $626;
          } else {
           $627 = ((($620)) + 12|0);
           $628 = load4($627);
           $630 = $628;
          }
          $629 = (($630) + 1)|0;
          $631 = ($619|0)==($629|0);
          if (!($631)) {
           label = 183;
           break;
          }
          $$pre2145 = load4($$phi$trans$insert2144);
          $$023$i1358 = $1;$607 = $$pre2145;
         }
         if ((label|0) == 174) {
          label = 0;
          $608 = loadd($$023$i1358);
          $609 = (+Math_floor((+$608)));
          $610 = $608 != $609;
          if ($610) {
           label = 183;
          } else {
           $611 = $609 >= -9.2233720368547758E+18;
           $612 = $609 < 9.2233720368547758E+18;
           $or$cond$i1360 = $611 & $612;
           $613 = i64_d2s($609);
           if ($or$cond$i1360) {
            $$21694 = $613;
            label = 184;
           } else {
            label = 183;
           }
          }
         }
         else if ((label|0) == 176) {
          label = 0;
          $614 = load8($$023$i1358);
          $$21694 = $614;
          label = 184;
         }
         if ((label|0) == 183) {
          label = 0;
          break L226;
         }
         else if ((label|0) == 184) {
          label = 0;
          $$31695 = $$21694;
          break;
         }
        }
       } while(0);
       $632 = i64_and($$31695,$$31703);
       store8($55,$632);
       $633 = (((($$11303) + ($54<<4)|0)) + 8|0);
       store4($633,19);
       $$01302$be = $$11303;
       break L8;
      }
     } while(0);
     _luaT_trybinTM($0,$565,$573,$55,13);
     $634 = load4($38);
     $$01302$be = $634;
     break;
    }
    case 21:  {
     $635 = $48 >>> 23;
     $636 = ($48|0)<(0);
     $637 = $635 & 255;
     $638 = (($35) + ($637<<4)|0);
     $639 = (($$11303) + ($635<<4)|0);
     $640 = $636 ? $638 : $639;
     $641 = $48 >>> 14;
     $642 = $48 & 4194304;
     $643 = ($642|0)==(0);
     $644 = $641 & 255;
     $645 = (($35) + ($644<<4)|0);
     $646 = $641 & 511;
     $647 = (($$11303) + ($646<<4)|0);
     $648 = $643 ? $647 : $645;
     $649 = ((($640)) + 8|0);
     $650 = load4($649);
     $651 = ($650|0)==(19);
     do {
      if ($651) {
       $652 = load8($640);
       $$31687 = $652;
       label = 202;
      } else {
       $$023$i1363 = $640;$653 = $650;
       L253: while(1) {
        switch ($653|0) {
        case 3:  {
         label = 191;
         break L253;
         break;
        }
        case 19:  {
         label = 193;
         break L253;
         break;
        }
        default: {
        }
        }
        $661 = $653 & 15;
        $662 = ($661|0)==(4);
        if (!($662)) {
         label = 200;
         break;
        }
        $663 = load4($$023$i1363);
        $664 = ((($663)) + 16|0);
        $665 = (_luaO_str2num($664,$1)|0);
        $666 = load4($$023$i1363);
        $667 = ((($666)) + 4|0);
        $668 = load1($667);
        $669 = ($668<<24>>24)==(4);
        if ($669) {
         $670 = ((($666)) + 7|0);
         $671 = load1($670);
         $672 = $671&255;
         $676 = $672;
        } else {
         $673 = ((($666)) + 12|0);
         $674 = load4($673);
         $676 = $674;
        }
        $675 = (($676) + 1)|0;
        $677 = ($665|0)==($675|0);
        if (!($677)) {
         label = 200;
         break;
        }
        $$pre2136 = load4($$phi$trans$insert2135);
        $$023$i1363 = $1;$653 = $$pre2136;
       }
       if ((label|0) == 191) {
        label = 0;
        $654 = loadd($$023$i1363);
        $655 = (+Math_floor((+$654)));
        $656 = $654 != $655;
        if ($656) {
         label = 200;
        } else {
         $657 = $655 >= -9.2233720368547758E+18;
         $658 = $655 < 9.2233720368547758E+18;
         $or$cond$i1365 = $657 & $658;
         $659 = i64_d2s($655);
         if ($or$cond$i1365) {
          $$21686 = $659;
          label = 201;
         } else {
          label = 200;
         }
        }
       }
       else if ((label|0) == 193) {
        label = 0;
        $660 = load8($$023$i1363);
        $$21686 = $660;
        label = 201;
       }
       if ((label|0) == 200) {
        label = 0;
        break;
       }
       else if ((label|0) == 201) {
        label = 0;
        $$31687 = $$21686;
        label = 202;
        break;
       }
      }
     } while(0);
     L269: do {
      if ((label|0) == 202) {
       label = 0;
       $678 = ((($648)) + 8|0);
       $679 = load4($678);
       $680 = ($679|0)==(19);
       do {
        if ($680) {
         $681 = load8($648);
         $$31679 = $681;
        } else {
         $$023$i1368 = $648;$682 = $679;
         L274: while(1) {
          switch ($682|0) {
          case 3:  {
           label = 206;
           break L274;
           break;
          }
          case 19:  {
           label = 208;
           break L274;
           break;
          }
          default: {
          }
          }
          $690 = $682 & 15;
          $691 = ($690|0)==(4);
          if (!($691)) {
           label = 215;
           break;
          }
          $692 = load4($$023$i1368);
          $693 = ((($692)) + 16|0);
          $694 = (_luaO_str2num($693,$1)|0);
          $695 = load4($$023$i1368);
          $696 = ((($695)) + 4|0);
          $697 = load1($696);
          $698 = ($697<<24>>24)==(4);
          if ($698) {
           $699 = ((($695)) + 7|0);
           $700 = load1($699);
           $701 = $700&255;
           $705 = $701;
          } else {
           $702 = ((($695)) + 12|0);
           $703 = load4($702);
           $705 = $703;
          }
          $704 = (($705) + 1)|0;
          $706 = ($694|0)==($704|0);
          if (!($706)) {
           label = 215;
           break;
          }
          $$pre2139 = load4($$phi$trans$insert2138);
          $$023$i1368 = $1;$682 = $$pre2139;
         }
         if ((label|0) == 206) {
          label = 0;
          $683 = loadd($$023$i1368);
          $684 = (+Math_floor((+$683)));
          $685 = $683 != $684;
          if ($685) {
           label = 215;
          } else {
           $686 = $684 >= -9.2233720368547758E+18;
           $687 = $684 < 9.2233720368547758E+18;
           $or$cond$i1370 = $686 & $687;
           $688 = i64_d2s($684);
           if ($or$cond$i1370) {
            $$21678 = $688;
            label = 216;
           } else {
            label = 215;
           }
          }
         }
         else if ((label|0) == 208) {
          label = 0;
          $689 = load8($$023$i1368);
          $$21678 = $689;
          label = 216;
         }
         if ((label|0) == 215) {
          label = 0;
          break L269;
         }
         else if ((label|0) == 216) {
          label = 0;
          $$31679 = $$21678;
          break;
         }
        }
       } while(0);
       $707 = i64_or($$31679,$$31687);
       store8($55,$707);
       $708 = (((($$11303) + ($54<<4)|0)) + 8|0);
       store4($708,19);
       $$01302$be = $$11303;
       break L8;
      }
     } while(0);
     _luaT_trybinTM($0,$640,$648,$55,14);
     $709 = load4($38);
     $$01302$be = $709;
     break;
    }
    case 22:  {
     $710 = $48 >>> 23;
     $711 = ($48|0)<(0);
     $712 = $710 & 255;
     $713 = (($35) + ($712<<4)|0);
     $714 = (($$11303) + ($710<<4)|0);
     $715 = $711 ? $713 : $714;
     $716 = $48 >>> 14;
     $717 = $48 & 4194304;
     $718 = ($717|0)==(0);
     $719 = $716 & 255;
     $720 = (($35) + ($719<<4)|0);
     $721 = $716 & 511;
     $722 = (($$11303) + ($721<<4)|0);
     $723 = $718 ? $722 : $720;
     $724 = ((($715)) + 8|0);
     $725 = load4($724);
     $726 = ($725|0)==(19);
     do {
      if ($726) {
       $727 = load8($715);
       $$31671 = $727;
       label = 234;
      } else {
       $$023$i1373 = $715;$728 = $725;
       L296: while(1) {
        switch ($728|0) {
        case 3:  {
         label = 223;
         break L296;
         break;
        }
        case 19:  {
         label = 225;
         break L296;
         break;
        }
        default: {
        }
        }
        $736 = $728 & 15;
        $737 = ($736|0)==(4);
        if (!($737)) {
         label = 232;
         break;
        }
        $738 = load4($$023$i1373);
        $739 = ((($738)) + 16|0);
        $740 = (_luaO_str2num($739,$1)|0);
        $741 = load4($$023$i1373);
        $742 = ((($741)) + 4|0);
        $743 = load1($742);
        $744 = ($743<<24>>24)==(4);
        if ($744) {
         $745 = ((($741)) + 7|0);
         $746 = load1($745);
         $747 = $746&255;
         $751 = $747;
        } else {
         $748 = ((($741)) + 12|0);
         $749 = load4($748);
         $751 = $749;
        }
        $750 = (($751) + 1)|0;
        $752 = ($740|0)==($750|0);
        if (!($752)) {
         label = 232;
         break;
        }
        $$pre2130 = load4($$phi$trans$insert2129);
        $$023$i1373 = $1;$728 = $$pre2130;
       }
       if ((label|0) == 223) {
        label = 0;
        $729 = loadd($$023$i1373);
        $730 = (+Math_floor((+$729)));
        $731 = $729 != $730;
        if ($731) {
         label = 232;
        } else {
         $732 = $730 >= -9.2233720368547758E+18;
         $733 = $730 < 9.2233720368547758E+18;
         $or$cond$i1375 = $732 & $733;
         $734 = i64_d2s($730);
         if ($or$cond$i1375) {
          $$21670 = $734;
          label = 233;
         } else {
          label = 232;
         }
        }
       }
       else if ((label|0) == 225) {
        label = 0;
        $735 = load8($$023$i1373);
        $$21670 = $735;
        label = 233;
       }
       if ((label|0) == 232) {
        label = 0;
        break;
       }
       else if ((label|0) == 233) {
        label = 0;
        $$31671 = $$21670;
        label = 234;
        break;
       }
      }
     } while(0);
     L312: do {
      if ((label|0) == 234) {
       label = 0;
       $753 = ((($723)) + 8|0);
       $754 = load4($753);
       $755 = ($754|0)==(19);
       do {
        if ($755) {
         $756 = load8($723);
         $$31663 = $756;
        } else {
         $$023$i1378 = $723;$757 = $754;
         L317: while(1) {
          switch ($757|0) {
          case 3:  {
           label = 238;
           break L317;
           break;
          }
          case 19:  {
           label = 240;
           break L317;
           break;
          }
          default: {
          }
          }
          $765 = $757 & 15;
          $766 = ($765|0)==(4);
          if (!($766)) {
           label = 247;
           break;
          }
          $767 = load4($$023$i1378);
          $768 = ((($767)) + 16|0);
          $769 = (_luaO_str2num($768,$1)|0);
          $770 = load4($$023$i1378);
          $771 = ((($770)) + 4|0);
          $772 = load1($771);
          $773 = ($772<<24>>24)==(4);
          if ($773) {
           $774 = ((($770)) + 7|0);
           $775 = load1($774);
           $776 = $775&255;
           $780 = $776;
          } else {
           $777 = ((($770)) + 12|0);
           $778 = load4($777);
           $780 = $778;
          }
          $779 = (($780) + 1)|0;
          $781 = ($769|0)==($779|0);
          if (!($781)) {
           label = 247;
           break;
          }
          $$pre2133 = load4($$phi$trans$insert2132);
          $$023$i1378 = $1;$757 = $$pre2133;
         }
         if ((label|0) == 238) {
          label = 0;
          $758 = loadd($$023$i1378);
          $759 = (+Math_floor((+$758)));
          $760 = $758 != $759;
          if ($760) {
           label = 247;
          } else {
           $761 = $759 >= -9.2233720368547758E+18;
           $762 = $759 < 9.2233720368547758E+18;
           $or$cond$i1380 = $761 & $762;
           $763 = i64_d2s($759);
           if ($or$cond$i1380) {
            $$21662 = $763;
            label = 248;
           } else {
            label = 247;
           }
          }
         }
         else if ((label|0) == 240) {
          label = 0;
          $764 = load8($$023$i1378);
          $$21662 = $764;
          label = 248;
         }
         if ((label|0) == 247) {
          label = 0;
          break L312;
         }
         else if ((label|0) == 248) {
          label = 0;
          $$31663 = $$21662;
          break;
         }
        }
       } while(0);
       $782 = i64_xor($$31663,$$31671);
       store8($55,$782);
       $783 = (((($$11303) + ($54<<4)|0)) + 8|0);
       store4($783,19);
       $$01302$be = $$11303;
       break L8;
      }
     } while(0);
     _luaT_trybinTM($0,$715,$723,$55,15);
     $784 = load4($38);
     $$01302$be = $784;
     break;
    }
    case 23:  {
     $785 = $48 >>> 23;
     $786 = ($48|0)<(0);
     $787 = $785 & 255;
     $788 = (($35) + ($787<<4)|0);
     $789 = (($$11303) + ($785<<4)|0);
     $790 = $786 ? $788 : $789;
     $791 = $48 >>> 14;
     $792 = $48 & 4194304;
     $793 = ($792|0)==(0);
     $794 = $791 & 255;
     $795 = (($35) + ($794<<4)|0);
     $796 = $791 & 511;
     $797 = (($$11303) + ($796<<4)|0);
     $798 = $793 ? $797 : $795;
     $799 = ((($790)) + 8|0);
     $800 = load4($799);
     $801 = ($800|0)==(19);
     do {
      if ($801) {
       $802 = load8($790);
       $$31655 = $802;
       label = 266;
      } else {
       $$023$i1383 = $790;$803 = $800;
       L339: while(1) {
        switch ($803|0) {
        case 3:  {
         label = 255;
         break L339;
         break;
        }
        case 19:  {
         label = 257;
         break L339;
         break;
        }
        default: {
        }
        }
        $811 = $803 & 15;
        $812 = ($811|0)==(4);
        if (!($812)) {
         label = 264;
         break;
        }
        $813 = load4($$023$i1383);
        $814 = ((($813)) + 16|0);
        $815 = (_luaO_str2num($814,$1)|0);
        $816 = load4($$023$i1383);
        $817 = ((($816)) + 4|0);
        $818 = load1($817);
        $819 = ($818<<24>>24)==(4);
        if ($819) {
         $820 = ((($816)) + 7|0);
         $821 = load1($820);
         $822 = $821&255;
         $826 = $822;
        } else {
         $823 = ((($816)) + 12|0);
         $824 = load4($823);
         $826 = $824;
        }
        $825 = (($826) + 1)|0;
        $827 = ($815|0)==($825|0);
        if (!($827)) {
         label = 264;
         break;
        }
        $$pre2124 = load4($$phi$trans$insert2123);
        $$023$i1383 = $1;$803 = $$pre2124;
       }
       if ((label|0) == 255) {
        label = 0;
        $804 = loadd($$023$i1383);
        $805 = (+Math_floor((+$804)));
        $806 = $804 != $805;
        if ($806) {
         label = 264;
        } else {
         $807 = $805 >= -9.2233720368547758E+18;
         $808 = $805 < 9.2233720368547758E+18;
         $or$cond$i1385 = $807 & $808;
         $809 = i64_d2s($805);
         if ($or$cond$i1385) {
          $$21654 = $809;
          label = 265;
         } else {
          label = 264;
         }
        }
       }
       else if ((label|0) == 257) {
        label = 0;
        $810 = load8($$023$i1383);
        $$21654 = $810;
        label = 265;
       }
       if ((label|0) == 264) {
        label = 0;
        break;
       }
       else if ((label|0) == 265) {
        label = 0;
        $$31655 = $$21654;
        label = 266;
        break;
       }
      }
     } while(0);
     L355: do {
      if ((label|0) == 266) {
       label = 0;
       $828 = ((($798)) + 8|0);
       $829 = load4($828);
       $830 = ($829|0)==(19);
       do {
        if ($830) {
         $831 = load8($798);
         $$31647 = $831;
        } else {
         $$023$i1388 = $798;$832 = $829;
         L360: while(1) {
          switch ($832|0) {
          case 3:  {
           label = 270;
           break L360;
           break;
          }
          case 19:  {
           label = 272;
           break L360;
           break;
          }
          default: {
          }
          }
          $840 = $832 & 15;
          $841 = ($840|0)==(4);
          if (!($841)) {
           label = 279;
           break;
          }
          $842 = load4($$023$i1388);
          $843 = ((($842)) + 16|0);
          $844 = (_luaO_str2num($843,$1)|0);
          $845 = load4($$023$i1388);
          $846 = ((($845)) + 4|0);
          $847 = load1($846);
          $848 = ($847<<24>>24)==(4);
          if ($848) {
           $849 = ((($845)) + 7|0);
           $850 = load1($849);
           $851 = $850&255;
           $855 = $851;
          } else {
           $852 = ((($845)) + 12|0);
           $853 = load4($852);
           $855 = $853;
          }
          $854 = (($855) + 1)|0;
          $856 = ($844|0)==($854|0);
          if (!($856)) {
           label = 279;
           break;
          }
          $$pre2127 = load4($$phi$trans$insert2126);
          $$023$i1388 = $1;$832 = $$pre2127;
         }
         if ((label|0) == 270) {
          label = 0;
          $833 = loadd($$023$i1388);
          $834 = (+Math_floor((+$833)));
          $835 = $833 != $834;
          if ($835) {
           label = 279;
          } else {
           $836 = $834 >= -9.2233720368547758E+18;
           $837 = $834 < 9.2233720368547758E+18;
           $or$cond$i1390 = $836 & $837;
           $838 = i64_d2s($834);
           if ($or$cond$i1390) {
            $$21646 = $838;
            label = 280;
           } else {
            label = 279;
           }
          }
         }
         else if ((label|0) == 272) {
          label = 0;
          $839 = load8($$023$i1388);
          $$21646 = $839;
          label = 280;
         }
         if ((label|0) == 279) {
          label = 0;
          break L355;
         }
         else if ((label|0) == 280) {
          label = 0;
          $$31647 = $$21646;
          break;
         }
        }
       } while(0);
       $857 = i64_slt($$31647,i64_const(0,0));
       if ($857) {
        $858 = i64_slt($$31647,i64_const(4294967233,4294967295));
        $859 = i64_sub(i64_const(0,0),$$31647);
        $860 = i64_lshr($$31655,$859);
        $$0$i1393 = $858 ? i64_const(0,0) : $860;
        $863 = $$0$i1393;
       } else {
        $861 = i64_sgt($$31647,i64_const(63,0));
        $862 = i64_shl($$31655,$$31647);
        $spec$select$i = $861 ? i64_const(0,0) : $862;
        $863 = $spec$select$i;
       }
       store8($55,$863);
       $864 = (((($$11303) + ($54<<4)|0)) + 8|0);
       store4($864,19);
       $$01302$be = $$11303;
       break L8;
      }
     } while(0);
     _luaT_trybinTM($0,$790,$798,$55,16);
     $865 = load4($38);
     $$01302$be = $865;
     break;
    }
    case 24:  {
     $866 = $48 >>> 23;
     $867 = ($48|0)<(0);
     $868 = $866 & 255;
     $869 = (($35) + ($868<<4)|0);
     $870 = (($$11303) + ($866<<4)|0);
     $871 = $867 ? $869 : $870;
     $872 = $48 >>> 14;
     $873 = $48 & 4194304;
     $874 = ($873|0)==(0);
     $875 = $872 & 255;
     $876 = (($35) + ($875<<4)|0);
     $877 = $872 & 511;
     $878 = (($$11303) + ($877<<4)|0);
     $879 = $874 ? $878 : $876;
     $880 = ((($871)) + 8|0);
     $881 = load4($880);
     $882 = ($881|0)==(19);
     do {
      if ($882) {
       $883 = load8($871);
       $$31639 = $883;
       label = 301;
      } else {
       $$023$i1394 = $871;$884 = $881;
       L386: while(1) {
        switch ($884|0) {
        case 3:  {
         label = 290;
         break L386;
         break;
        }
        case 19:  {
         label = 292;
         break L386;
         break;
        }
        default: {
        }
        }
        $892 = $884 & 15;
        $893 = ($892|0)==(4);
        if (!($893)) {
         label = 299;
         break;
        }
        $894 = load4($$023$i1394);
        $895 = ((($894)) + 16|0);
        $896 = (_luaO_str2num($895,$1)|0);
        $897 = load4($$023$i1394);
        $898 = ((($897)) + 4|0);
        $899 = load1($898);
        $900 = ($899<<24>>24)==(4);
        if ($900) {
         $901 = ((($897)) + 7|0);
         $902 = load1($901);
         $903 = $902&255;
         $907 = $903;
        } else {
         $904 = ((($897)) + 12|0);
         $905 = load4($904);
         $907 = $905;
        }
        $906 = (($907) + 1)|0;
        $908 = ($896|0)==($906|0);
        if (!($908)) {
         label = 299;
         break;
        }
        $$pre2118 = load4($$phi$trans$insert2117);
        $$023$i1394 = $1;$884 = $$pre2118;
       }
       if ((label|0) == 290) {
        label = 0;
        $885 = loadd($$023$i1394);
        $886 = (+Math_floor((+$885)));
        $887 = $885 != $886;
        if ($887) {
         label = 299;
        } else {
         $888 = $886 >= -9.2233720368547758E+18;
         $889 = $886 < 9.2233720368547758E+18;
         $or$cond$i1396 = $888 & $889;
         $890 = i64_d2s($886);
         if ($or$cond$i1396) {
          $$21638 = $890;
          label = 300;
         } else {
          label = 299;
         }
        }
       }
       else if ((label|0) == 292) {
        label = 0;
        $891 = load8($$023$i1394);
        $$21638 = $891;
        label = 300;
       }
       if ((label|0) == 299) {
        label = 0;
        break;
       }
       else if ((label|0) == 300) {
        label = 0;
        $$31639 = $$21638;
        label = 301;
        break;
       }
      }
     } while(0);
     L402: do {
      if ((label|0) == 301) {
       label = 0;
       $909 = ((($879)) + 8|0);
       $910 = load4($909);
       $911 = ($910|0)==(19);
       do {
        if ($911) {
         $912 = load8($879);
         $$31631 = $912;
        } else {
         $$023$i1399 = $879;$913 = $910;
         L407: while(1) {
          switch ($913|0) {
          case 3:  {
           label = 305;
           break L407;
           break;
          }
          case 19:  {
           label = 307;
           break L407;
           break;
          }
          default: {
          }
          }
          $921 = $913 & 15;
          $922 = ($921|0)==(4);
          if (!($922)) {
           label = 314;
           break;
          }
          $923 = load4($$023$i1399);
          $924 = ((($923)) + 16|0);
          $925 = (_luaO_str2num($924,$1)|0);
          $926 = load4($$023$i1399);
          $927 = ((($926)) + 4|0);
          $928 = load1($927);
          $929 = ($928<<24>>24)==(4);
          if ($929) {
           $930 = ((($926)) + 7|0);
           $931 = load1($930);
           $932 = $931&255;
           $936 = $932;
          } else {
           $933 = ((($926)) + 12|0);
           $934 = load4($933);
           $936 = $934;
          }
          $935 = (($936) + 1)|0;
          $937 = ($925|0)==($935|0);
          if (!($937)) {
           label = 314;
           break;
          }
          $$pre2121 = load4($$phi$trans$insert2120);
          $$023$i1399 = $1;$913 = $$pre2121;
         }
         if ((label|0) == 305) {
          label = 0;
          $914 = loadd($$023$i1399);
          $915 = (+Math_floor((+$914)));
          $916 = $914 != $915;
          if ($916) {
           label = 314;
          } else {
           $917 = $915 >= -9.2233720368547758E+18;
           $918 = $915 < 9.2233720368547758E+18;
           $or$cond$i1401 = $917 & $918;
           $919 = i64_d2s($915);
           if ($or$cond$i1401) {
            $$21630 = $919;
            label = 315;
           } else {
            label = 314;
           }
          }
         }
         else if ((label|0) == 307) {
          label = 0;
          $920 = load8($$023$i1399);
          $$21630 = $920;
          label = 315;
         }
         if ((label|0) == 314) {
          label = 0;
          break L402;
         }
         else if ((label|0) == 315) {
          label = 0;
          $$31631 = $$21630;
          break;
         }
        }
       } while(0);
       $938 = i64_sgt($$31631,i64_const(0,0));
       if ($938) {
        $939 = i64_sgt($$31631,i64_const(63,0));
        $940 = i64_lshr($$31639,$$31631);
        $$0$i1404 = $939 ? i64_const(0,0) : $940;
        $944 = $$0$i1404;
       } else {
        $941 = i64_sub(i64_const(0,0),$$31631);
        $942 = i64_slt($$31631,i64_const(4294967233,4294967295));
        $943 = i64_shl($$31639,$941);
        $spec$select$i1405 = $942 ? i64_const(0,0) : $943;
        $944 = $spec$select$i1405;
       }
       store8($55,$944);
       $945 = (((($$11303) + ($54<<4)|0)) + 8|0);
       store4($945,19);
       $$01302$be = $$11303;
       break L8;
      }
     } while(0);
     _luaT_trybinTM($0,$871,$879,$55,17);
     $946 = load4($38);
     $$01302$be = $946;
     break;
    }
    case 16:  {
     $947 = $48 >>> 23;
     $948 = ($48|0)<(0);
     $949 = $947 & 255;
     $950 = (($35) + ($949<<4)|0);
     $951 = (($$11303) + ($947<<4)|0);
     $952 = $948 ? $950 : $951;
     $953 = $48 >>> 14;
     $954 = $48 & 4194304;
     $955 = ($954|0)==(0);
     $956 = $953 & 255;
     $957 = (($35) + ($956<<4)|0);
     $958 = $953 & 511;
     $959 = (($$11303) + ($958<<4)|0);
     $960 = $955 ? $959 : $957;
     $961 = ((($952)) + 8|0);
     $962 = load4($961);
     L430: do {
      switch ($962|0) {
      case 19:  {
       $963 = ((($960)) + 8|0);
       $964 = load4($963);
       $965 = ($964|0)==(19);
       if (!($965)) {
        $978 = load8($952);
        $979 = i64_s2d($978);
        $$21622 = $979;
        label = 337;
        break L430;
       }
       $966 = load8($952);
       $967 = load8($960);
       $968 = i64_add($967,i64_const(1,0));
       $969 = i64_ult($968,i64_const(2,0));
       if ($969) {
        $970 = i64_eq($967,i64_const(0,0));
        if ($970) {
         label = 325;
         break L1;
        } else {
         $$012$i = i64_const(0,0);
        }
       } else {
        $971 = i64_srem($966,$967);
        $972 = i64_ne($971,i64_const(0,0));
        $973 = i64_xor($967,$966);
        $974 = i64_slt($973,i64_const(0,0));
        $or$cond$i1407 = $974 & $972;
        $975 = $or$cond$i1407 ? $967 : i64_const(0,0);
        $$0$i1408 = i64_add($975,$971);
        $$012$i = $$0$i1408;
       }
       store8($55,$$012$i);
       $976 = (((($$11303) + ($54<<4)|0)) + 8|0);
       store4($976,19);
       $$01302$be = $$11303;
       break L8;
       break;
      }
      case 3:  {
       $977 = loadd($952);
       $$31623 = $977;
       label = 338;
       break;
      }
      default: {
       $980 = $962 & 15;
       $981 = ($980|0)==(4);
       if ($981) {
        $982 = load4($952);
        $983 = ((($982)) + 16|0);
        $984 = (_luaO_str2num($983,$1)|0);
        $985 = load4($952);
        $986 = ((($985)) + 4|0);
        $987 = load1($986);
        $988 = ($987<<24>>24)==(4);
        if ($988) {
         $989 = ((($985)) + 7|0);
         $990 = load1($989);
         $991 = $990&255;
         $995 = $991;
        } else {
         $992 = ((($985)) + 12|0);
         $993 = load4($992);
         $995 = $993;
        }
        $994 = (($995) + 1)|0;
        $996 = ($984|0)==($994|0);
        if ($996) {
         $997 = load4($14);
         $998 = ($997|0)==(19);
         $999 = load8($1);
         $1000 = i64_s2d($999);
         $$cast$i1409 = i64_bc2d($999);
         $1001 = $998 ? $1000 : $$cast$i1409;
         $$21622 = $1001;
         label = 337;
         break L430;
        }
       }
      }
      }
     } while(0);
     if ((label|0) == 337) {
      label = 0;
      $$31623 = $$21622;
      label = 338;
     }
     L451: do {
      if ((label|0) == 338) {
       label = 0;
       $1002 = ((($960)) + 8|0);
       $1003 = load4($1002);
       $1004 = ($1003|0)==(3);
       if ($1004) {
        $1005 = loadd($960);
        $$31615 = $1005;
       } else {
        $1006 = ($1003|0)==(19);
        do {
         if ($1006) {
          $1007 = load8($960);
          $1008 = i64_s2d($1007);
          $$21614 = $1008;
         } else {
          $1009 = $1003 & 15;
          $1010 = ($1009|0)==(4);
          if ($1010) {
           $1011 = load4($960);
           $1012 = ((($1011)) + 16|0);
           $1013 = (_luaO_str2num($1012,$1)|0);
           $1014 = load4($960);
           $1015 = ((($1014)) + 4|0);
           $1016 = load1($1015);
           $1017 = ($1016<<24>>24)==(4);
           if ($1017) {
            $1018 = ((($1014)) + 7|0);
            $1019 = load1($1018);
            $1020 = $1019&255;
            $1024 = $1020;
           } else {
            $1021 = ((($1014)) + 12|0);
            $1022 = load4($1021);
            $1024 = $1022;
           }
           $1023 = (($1024) + 1)|0;
           $1025 = ($1013|0)==($1023|0);
           if ($1025) {
            $1026 = load4($23);
            $1027 = ($1026|0)==(19);
            $1028 = load8($1);
            $1029 = i64_s2d($1028);
            $$cast$i1412 = i64_bc2d($1028);
            $1030 = $1027 ? $1029 : $$cast$i1412;
            $$21614 = $1030;
            break;
           }
          }
          break L451;
         }
        } while(0);
        $$31615 = $$21614;
       }
       $1031 = $$31623 % $$31615;
       $1032 = $$31615 * $1031;
       $1033 = $1032 < 0.0;
       $1034 = $$31615 + $1031;
       $$01323 = $1033 ? $1034 : $1031;
       stored($55,$$01323);
       $1035 = (((($$11303) + ($54<<4)|0)) + 8|0);
       store4($1035,3);
       $$01302$be = $$11303;
       break L8;
      }
     } while(0);
     _luaT_trybinTM($0,$952,$960,$55,9);
     $1036 = load4($38);
     $$01302$be = $1036;
     break;
    }
    case 19:  {
     $1037 = $48 >>> 23;
     $1038 = ($48|0)<(0);
     $1039 = $1037 & 255;
     $1040 = (($35) + ($1039<<4)|0);
     $1041 = (($$11303) + ($1037<<4)|0);
     $1042 = $1038 ? $1040 : $1041;
     $1043 = $48 >>> 14;
     $1044 = $48 & 4194304;
     $1045 = ($1044|0)==(0);
     $1046 = $1043 & 255;
     $1047 = (($35) + ($1046<<4)|0);
     $1048 = $1043 & 511;
     $1049 = (($$11303) + ($1048<<4)|0);
     $1050 = $1045 ? $1049 : $1047;
     $1051 = ((($1042)) + 8|0);
     $1052 = load4($1051);
     L471: do {
      switch ($1052|0) {
      case 19:  {
       $1053 = ((($1050)) + 8|0);
       $1054 = load4($1053);
       $1055 = ($1054|0)==(19);
       if (!($1055)) {
        $1072 = load8($1042);
        $1073 = i64_s2d($1072);
        $$21606 = $1073;
        label = 370;
        break L471;
       }
       $1056 = load8($1042);
       $1057 = load8($1050);
       $1058 = i64_add($1057,i64_const(1,0));
       $1059 = i64_ult($1058,i64_const(2,0));
       if ($1059) {
        $1060 = i64_eq($1057,i64_const(0,0));
        if ($1060) {
         label = 356;
         break L1;
        }
        $1061 = i64_sub(i64_const(0,0),$1056);
        $1069 = $1061;
       } else {
        $1062 = i64_sdiv($1056,$1057);
        $1063 = i64_xor($1057,$1056);
        $1064 = i64_slt($1063,i64_const(0,0));
        if ($1064) {
         $1065 = i64_mul($1062,$1057);
         $1066 = i64_sub($1056,$1065);
         $1067 = i64_ne($1066,i64_const(0,0));
         $1068 = i64_sext($1067 << 31 >> 31);
         $spec$select$i1415 = i64_add($1062,$1068);
         $1069 = $spec$select$i1415;
        } else {
         $1069 = $1062;
        }
       }
       store8($55,$1069);
       $1070 = (((($$11303) + ($54<<4)|0)) + 8|0);
       store4($1070,19);
       $$01302$be = $$11303;
       break L8;
       break;
      }
      case 3:  {
       $1071 = loadd($1042);
       $$31607 = $1071;
       label = 371;
       break;
      }
      default: {
       $1074 = $1052 & 15;
       $1075 = ($1074|0)==(4);
       if ($1075) {
        $1076 = load4($1042);
        $1077 = ((($1076)) + 16|0);
        $1078 = (_luaO_str2num($1077,$1)|0);
        $1079 = load4($1042);
        $1080 = ((($1079)) + 4|0);
        $1081 = load1($1080);
        $1082 = ($1081<<24>>24)==(4);
        if ($1082) {
         $1083 = ((($1079)) + 7|0);
         $1084 = load1($1083);
         $1085 = $1084&255;
         $1089 = $1085;
        } else {
         $1086 = ((($1079)) + 12|0);
         $1087 = load4($1086);
         $1089 = $1087;
        }
        $1088 = (($1089) + 1)|0;
        $1090 = ($1078|0)==($1088|0);
        if ($1090) {
         $1091 = load4($15);
         $1092 = ($1091|0)==(19);
         $1093 = load8($1);
         $1094 = i64_s2d($1093);
         $$cast$i1416 = i64_bc2d($1093);
         $1095 = $1092 ? $1094 : $$cast$i1416;
         $$21606 = $1095;
         label = 370;
         break L471;
        }
       }
      }
      }
     } while(0);
     if ((label|0) == 370) {
      label = 0;
      $$31607 = $$21606;
      label = 371;
     }
     L494: do {
      if ((label|0) == 371) {
       label = 0;
       $1096 = ((($1050)) + 8|0);
       $1097 = load4($1096);
       $1098 = ($1097|0)==(3);
       if ($1098) {
        $1099 = loadd($1050);
        $$31599 = $1099;
       } else {
        $1100 = ($1097|0)==(19);
        do {
         if ($1100) {
          $1101 = load8($1050);
          $1102 = i64_s2d($1101);
          $$21598 = $1102;
         } else {
          $1103 = $1097 & 15;
          $1104 = ($1103|0)==(4);
          if ($1104) {
           $1105 = load4($1050);
           $1106 = ((($1105)) + 16|0);
           $1107 = (_luaO_str2num($1106,$1)|0);
           $1108 = load4($1050);
           $1109 = ((($1108)) + 4|0);
           $1110 = load1($1109);
           $1111 = ($1110<<24>>24)==(4);
           if ($1111) {
            $1112 = ((($1108)) + 7|0);
            $1113 = load1($1112);
            $1114 = $1113&255;
            $1118 = $1114;
           } else {
            $1115 = ((($1108)) + 12|0);
            $1116 = load4($1115);
            $1118 = $1116;
           }
           $1117 = (($1118) + 1)|0;
           $1119 = ($1107|0)==($1117|0);
           if ($1119) {
            $1120 = load4($24);
            $1121 = ($1120|0)==(19);
            $1122 = load8($1);
            $1123 = i64_s2d($1122);
            $$cast$i1419 = i64_bc2d($1122);
            $1124 = $1121 ? $1123 : $$cast$i1419;
            $$21598 = $1124;
            break;
           }
          }
          break L494;
         }
        } while(0);
        $$31599 = $$21598;
       }
       $1125 = $$31607 / $$31599;
       $1126 = (+Math_floor((+$1125)));
       stored($55,$1126);
       $1127 = (((($$11303) + ($54<<4)|0)) + 8|0);
       store4($1127,3);
       $$01302$be = $$11303;
       break L8;
      }
     } while(0);
     _luaT_trybinTM($0,$1042,$1050,$55,12);
     $1128 = load4($38);
     $$01302$be = $1128;
     break;
    }
    case 17:  {
     $1129 = $48 >>> 23;
     $1130 = ($48|0)<(0);
     $1131 = $1129 & 255;
     $1132 = (($35) + ($1131<<4)|0);
     $1133 = (($$11303) + ($1129<<4)|0);
     $1134 = $1130 ? $1132 : $1133;
     $1135 = $48 >>> 14;
     $1136 = $48 & 4194304;
     $1137 = ($1136|0)==(0);
     $1138 = $1135 & 255;
     $1139 = (($35) + ($1138<<4)|0);
     $1140 = $1135 & 511;
     $1141 = (($$11303) + ($1140<<4)|0);
     $1142 = $1137 ? $1141 : $1139;
     $1143 = ((($1134)) + 8|0);
     $1144 = load4($1143);
     $1145 = ($1144|0)==(3);
     L514: do {
      if ($1145) {
       $1146 = loadd($1134);
       $$31591 = $1146;
       label = 397;
      } else {
       $1147 = ($1144|0)==(19);
       do {
        if ($1147) {
         $1148 = load8($1134);
         $1149 = i64_s2d($1148);
         $$21590 = $1149;
        } else {
         $1150 = $1144 & 15;
         $1151 = ($1150|0)==(4);
         if ($1151) {
          $1152 = load4($1134);
          $1153 = ((($1152)) + 16|0);
          $1154 = (_luaO_str2num($1153,$1)|0);
          $1155 = load4($1134);
          $1156 = ((($1155)) + 4|0);
          $1157 = load1($1156);
          $1158 = ($1157<<24>>24)==(4);
          if ($1158) {
           $1159 = ((($1155)) + 7|0);
           $1160 = load1($1159);
           $1161 = $1160&255;
           $1165 = $1161;
          } else {
           $1162 = ((($1155)) + 12|0);
           $1163 = load4($1162);
           $1165 = $1163;
          }
          $1164 = (($1165) + 1)|0;
          $1166 = ($1154|0)==($1164|0);
          if ($1166) {
           $1167 = load4($17);
           $1168 = ($1167|0)==(19);
           $1169 = load8($1);
           $1170 = i64_s2d($1169);
           $$cast$i1422 = i64_bc2d($1169);
           $1171 = $1168 ? $1170 : $$cast$i1422;
           $$21590 = $1171;
           break;
          }
         }
         break L514;
        }
       } while(0);
       $$31591 = $$21590;
       label = 397;
      }
     } while(0);
     L529: do {
      if ((label|0) == 397) {
       label = 0;
       $1172 = ((($1142)) + 8|0);
       $1173 = load4($1172);
       $1174 = ($1173|0)==(3);
       if ($1174) {
        $1175 = loadd($1142);
        $$31584 = $1175;
       } else {
        $1176 = ($1173|0)==(19);
        do {
         if ($1176) {
          $1177 = load8($1142);
          $1178 = i64_s2d($1177);
          $$21583 = $1178;
         } else {
          $1179 = $1173 & 15;
          $1180 = ($1179|0)==(4);
          if ($1180) {
           $1181 = load4($1142);
           $1182 = ((($1181)) + 16|0);
           $1183 = (_luaO_str2num($1182,$1)|0);
           $1184 = load4($1142);
           $1185 = ((($1184)) + 4|0);
           $1186 = load1($1185);
           $1187 = ($1186<<24>>24)==(4);
           if ($1187) {
            $1188 = ((($1184)) + 7|0);
            $1189 = load1($1188);
            $1190 = $1189&255;
            $1194 = $1190;
           } else {
            $1191 = ((($1184)) + 12|0);
            $1192 = load4($1191);
            $1194 = $1192;
           }
           $1193 = (($1194) + 1)|0;
           $1195 = ($1183|0)==($1193|0);
           if ($1195) {
            $1196 = load4($25);
            $1197 = ($1196|0)==(19);
            $1198 = load8($1);
            $1199 = i64_s2d($1198);
            $$cast$i1425 = i64_bc2d($1198);
            $1200 = $1197 ? $1199 : $$cast$i1425;
            $$21583 = $1200;
            break;
           }
          }
          break L529;
         }
        } while(0);
        $$31584 = $$21583;
       }
       $1201 = (+_pow($$31591,$$31584));
       stored($55,$1201);
       $1202 = (((($$11303) + ($54<<4)|0)) + 8|0);
       store4($1202,3);
       $$01302$be = $$11303;
       break L8;
      }
     } while(0);
     _luaT_trybinTM($0,$1134,$1142,$55,10);
     $1203 = load4($38);
     $$01302$be = $1203;
     break;
    }
    case 25:  {
     $1204 = $48 >>> 23;
     $1205 = (($$11303) + ($1204<<4)|0);
     $1206 = (((($$11303) + ($1204<<4)|0)) + 8|0);
     $1207 = load4($1206);
     L549: do {
      switch ($1207|0) {
      case 19:  {
       $1208 = load8($1205);
       $1209 = i64_sub(i64_const(0,0),$1208);
       store8($55,$1209);
       $1210 = (((($$11303) + ($54<<4)|0)) + 8|0);
       store4($1210,19);
       $$01302$be = $$11303;
       break L8;
       break;
      }
      case 3:  {
       $1211 = loadd($1205);
       $$31577 = $1211;
       break;
      }
      default: {
       $1212 = $1207 & 15;
       $1213 = ($1212|0)==(4);
       if ($1213) {
        $1214 = load4($1205);
        $1215 = ((($1214)) + 16|0);
        $1216 = (_luaO_str2num($1215,$1)|0);
        $1217 = load4($1205);
        $1218 = ((($1217)) + 4|0);
        $1219 = load1($1218);
        $1220 = ($1219<<24>>24)==(4);
        if ($1220) {
         $1221 = ((($1217)) + 7|0);
         $1222 = load1($1221);
         $1223 = $1222&255;
         $1227 = $1223;
        } else {
         $1224 = ((($1217)) + 12|0);
         $1225 = load4($1224);
         $1227 = $1225;
        }
        $1226 = (($1227) + 1)|0;
        $1228 = ($1216|0)==($1226|0);
        if ($1228) {
         $1229 = load4($18);
         $1230 = ($1229|0)==(19);
         $1231 = load8($1);
         $1232 = i64_s2d($1231);
         $$cast$i1428 = i64_bc2d($1231);
         $1233 = $1230 ? $1232 : $$cast$i1428;
         $$31577 = $1233;
         break L549;
        }
       }
       _luaT_trybinTM($0,$1205,$1205,$55,18);
       $1236 = load4($38);
       $$01302$be = $1236;
       break L8;
      }
      }
     } while(0);
     $1234 = - $$31577;
     stored($55,$1234);
     $1235 = (((($$11303) + ($54<<4)|0)) + 8|0);
     store4($1235,3);
     $$01302$be = $$11303;
     break;
    }
    case 26:  {
     $1237 = $48 >>> 23;
     $1238 = (($$11303) + ($1237<<4)|0);
     $1239 = (((($$11303) + ($1237<<4)|0)) + 8|0);
     $1240 = load4($1239);
     $1241 = ($1240|0)==(19);
     do {
      if ($1241) {
       $1242 = load8($1238);
       $$31570 = $1242;
      } else {
       $$023$i1431 = $1238;
       L566: while(1) {
        $1243 = ((($$023$i1431)) + 8|0);
        $1244 = load4($1243);
        switch ($1244|0) {
        case 3:  {
         label = 426;
         break L566;
         break;
        }
        case 19:  {
         label = 428;
         break L566;
         break;
        }
        default: {
        }
        }
        $1252 = $1244 & 15;
        $1253 = ($1252|0)==(4);
        if (!($1253)) {
         label = 436;
         break;
        }
        $1254 = load4($$023$i1431);
        $1255 = ((($1254)) + 16|0);
        $1256 = (_luaO_str2num($1255,$1)|0);
        $1257 = load4($$023$i1431);
        $1258 = ((($1257)) + 4|0);
        $1259 = load1($1258);
        $1260 = ($1259<<24>>24)==(4);
        if ($1260) {
         $1261 = ((($1257)) + 7|0);
         $1262 = load1($1261);
         $1263 = $1262&255;
         $1267 = $1263;
        } else {
         $1264 = ((($1257)) + 12|0);
         $1265 = load4($1264);
         $1267 = $1265;
        }
        $1266 = (($1267) + 1)|0;
        $1268 = ($1256|0)==($1266|0);
        if ($1268) {
         $$023$i1431 = $1;
        } else {
         label = 436;
         break;
        }
       }
       if ((label|0) == 426) {
        label = 0;
        $1245 = loadd($$023$i1431);
        $1246 = (+Math_floor((+$1245)));
        $1247 = $1245 != $1246;
        if ($1247) {
         label = 436;
        } else {
         $1248 = $1246 >= -9.2233720368547758E+18;
         $1249 = $1246 < 9.2233720368547758E+18;
         $or$cond$i1433 = $1248 & $1249;
         $1250 = i64_d2s($1246);
         if ($or$cond$i1433) {
          $$21569 = $1250;
          label = 434;
         } else {
          label = 436;
         }
        }
       }
       else if ((label|0) == 428) {
        label = 0;
        $1251 = load8($$023$i1431);
        $$21569 = $1251;
        label = 434;
       }
       if ((label|0) == 434) {
        label = 0;
        $$31570 = $$21569;
        break;
       }
       else if ((label|0) == 436) {
        label = 0;
        _luaT_trybinTM($0,$1238,$1238,$55,19);
        $1271 = load4($38);
        $$01302$be = $1271;
        break L8;
       }
      }
     } while(0);
     $1269 = i64_xor($$31570,i64_const(4294967295,4294967295));
     store8($55,$1269);
     $1270 = (((($$11303) + ($54<<4)|0)) + 8|0);
     store4($1270,19);
     $$01302$be = $$11303;
     break;
    }
    case 27:  {
     $1272 = $48 >>> 23;
     $1273 = (((($$11303) + ($1272<<4)|0)) + 8|0);
     $1274 = load4($1273);
     switch ($1274|0) {
     case 0:  {
      $1279 = 1;
      break;
     }
     case 1:  {
      $1275 = (($$11303) + ($1272<<4)|0);
      $1276 = load4($1275);
      $1277 = ($1276|0)==(0);
      $1279 = $1277;
      break;
     }
     default: {
      $1279 = 0;
     }
     }
     $1278 = $1279&1;
     store4($55,$1278);
     $1280 = (((($$11303) + ($54<<4)|0)) + 8|0);
     store4($1280,1);
     $$01302$be = $$11303;
     break;
    }
    case 28:  {
     $1281 = $48 >>> 23;
     $1282 = (($$11303) + ($1281<<4)|0);
     _luaV_objlen($0,$55,$1282);
     $1283 = load4($38);
     $$01302$be = $1283;
     break;
    }
    case 29:  {
     $1284 = $48 >>> 23;
     $1285 = $48 >>> 14;
     $1286 = $1285 & 511;
     $1287 = (($$11303) + ($1286<<4)|0);
     $1288 = ((($1287)) + 16|0);
     store4($8,$1288);
     $1289 = (1 - ($1284))|0;
     $1290 = (($1289) + ($1286))|0;
     _luaV_concat($0,$1290);
     $1291 = load4($38);
     $1292 = (($1291) + ($54<<4)|0);
     $1293 = (($1291) + ($1284<<4)|0);
     ; store8($1292,load8($1293,8),8); store8($1292+8 | 0,load8($1293+8 | 0,8),8);
     $1294 = load4($9);
     $1295 = ((($1294)) + 12|0);
     $1296 = load4($1295);
     $1297 = ($1296|0)>(0);
     if ($1297) {
      $1298 = ($54>>>0)<($1284>>>0);
      $1299 = ((($1292)) + 16|0);
      $1300 = $1298 ? $1293 : $1299;
      store4($8,$1300);
      _luaC_step($0);
      $1301 = load4($41);
      store4($8,$1301);
      $1302 = load4($38);
      $$22 = $1302;$1303 = $1301;
     } else {
      $$pre2115 = load4($$phi$trans$insert2113);
      $$22 = $1291;$1303 = $$pre2115;
     }
     store4($8,$1303);
     $$01302$be = $$22;
     break;
    }
    case 30:  {
     $1304 = ($54|0)==(0);
     if (!($1304)) {
      $1305 = load4($38);
      $1306 = (($1305) + ($54<<4)|0);
      $1307 = ((($1306)) + -16|0);
      _luaF_close($0,$1307);
     }
     $1308 = $48 >>> 14;
     $1309 = (($1308) + -131071)|0;
     $1310 = load4($39);
     $1311 = (($1310) + ($1309<<2)|0);
     store4($39,$1311);
     $$01302$be = $$11303;
     break;
    }
    case 31:  {
     $1312 = $48 >>> 23;
     $1313 = ($48|0)<(0);
     $1314 = $1312 & 255;
     $1315 = (($35) + ($1314<<4)|0);
     $1316 = (($$11303) + ($1312<<4)|0);
     $1317 = $1313 ? $1315 : $1316;
     $1318 = $48 >>> 14;
     $1319 = $48 & 4194304;
     $1320 = ($1319|0)==(0);
     $1321 = $1318 & 255;
     $1322 = (($35) + ($1321<<4)|0);
     $1323 = $1318 & 511;
     $1324 = (($$11303) + ($1323<<4)|0);
     $1325 = $1320 ? $1324 : $1322;
     $1326 = (_luaV_equalobj($0,$1317,$1325)|0);
     $1327 = ($1326|0)==($54|0);
     $1328 = load4($39);
     if ($1327) {
      $1330 = load4($1328);
      $1331 = $1330 >>> 6;
      $1332 = $1331 & 255;
      $1333 = ($1332|0)==(0);
      if ($1333) {
       $1340 = $1328;
      } else {
       $1334 = load4($38);
       $1335 = (($1334) + ($1332<<4)|0);
       $1336 = ((($1335)) + -16|0);
       _luaF_close($0,$1336);
       $$pre2111 = load4($39);
       $1340 = $$pre2111;
      }
      $1337 = $1330 >>> 14;
      $1338 = (($1337) + -131070)|0;
      $1339 = (($1340) + ($1338<<2)|0);
      $storemerge1331 = $1339;
     } else {
      $1329 = ((($1328)) + 4|0);
      $storemerge1331 = $1329;
     }
     store4($39,$storemerge1331);
     $1341 = load4($38);
     $$01302$be = $1341;
     break;
    }
    case 32:  {
     $1342 = $48 >>> 23;
     $1343 = ($48|0)<(0);
     $1344 = $1342 & 255;
     $1345 = (($35) + ($1344<<4)|0);
     $1346 = (($$11303) + ($1342<<4)|0);
     $1347 = $1343 ? $1345 : $1346;
     $1348 = $48 >>> 14;
     $1349 = $48 & 4194304;
     $1350 = ($1349|0)==(0);
     $1351 = $1348 & 255;
     $1352 = (($35) + ($1351<<4)|0);
     $1353 = $1348 & 511;
     $1354 = (($$11303) + ($1353<<4)|0);
     $1355 = $1350 ? $1354 : $1352;
     $1356 = (_luaV_lessthan($0,$1347,$1355)|0);
     $1357 = ($1356|0)==($54|0);
     $1358 = load4($39);
     if ($1357) {
      $1360 = load4($1358);
      $1361 = $1360 >>> 6;
      $1362 = $1361 & 255;
      $1363 = ($1362|0)==(0);
      if ($1363) {
       $1370 = $1358;
      } else {
       $1364 = load4($38);
       $1365 = (($1364) + ($1362<<4)|0);
       $1366 = ((($1365)) + -16|0);
       _luaF_close($0,$1366);
       $$pre2110 = load4($39);
       $1370 = $$pre2110;
      }
      $1367 = $1360 >>> 14;
      $1368 = (($1367) + -131070)|0;
      $1369 = (($1370) + ($1368<<2)|0);
      $storemerge1330 = $1369;
     } else {
      $1359 = ((($1358)) + 4|0);
      $storemerge1330 = $1359;
     }
     store4($39,$storemerge1330);
     $1371 = load4($38);
     $$01302$be = $1371;
     break;
    }
    case 33:  {
     $1372 = $48 >>> 23;
     $1373 = ($48|0)<(0);
     $1374 = $1372 & 255;
     $1375 = (($35) + ($1374<<4)|0);
     $1376 = (($$11303) + ($1372<<4)|0);
     $1377 = $1373 ? $1375 : $1376;
     $1378 = $48 >>> 14;
     $1379 = $48 & 4194304;
     $1380 = ($1379|0)==(0);
     $1381 = $1378 & 255;
     $1382 = (($35) + ($1381<<4)|0);
     $1383 = $1378 & 511;
     $1384 = (($$11303) + ($1383<<4)|0);
     $1385 = $1380 ? $1384 : $1382;
     $1386 = (_luaV_lessequal($0,$1377,$1385)|0);
     $1387 = ($1386|0)==($54|0);
     $1388 = load4($39);
     if ($1387) {
      $1390 = load4($1388);
      $1391 = $1390 >>> 6;
      $1392 = $1391 & 255;
      $1393 = ($1392|0)==(0);
      if ($1393) {
       $1400 = $1388;
      } else {
       $1394 = load4($38);
       $1395 = (($1394) + ($1392<<4)|0);
       $1396 = ((($1395)) + -16|0);
       _luaF_close($0,$1396);
       $$pre2109 = load4($39);
       $1400 = $$pre2109;
      }
      $1397 = $1390 >>> 14;
      $1398 = (($1397) + -131070)|0;
      $1399 = (($1400) + ($1398<<2)|0);
      $storemerge1329 = $1399;
     } else {
      $1389 = ((($1388)) + 4|0);
      $storemerge1329 = $1389;
     }
     store4($39,$storemerge1329);
     $1401 = load4($38);
     $$01302$be = $1401;
     break;
    }
    case 34:  {
     $1402 = $48 & 8372224;
     $1403 = ($1402|0)==(0);
     $1404 = (((($$11303) + ($54<<4)|0)) + 8|0);
     $1405 = load4($1404);
     $1406 = ($1405|0)==(0);
     if ($1403) {
      if (!($1406)) {
       $1410 = ($1405|0)==(1);
       if ($1410) {
        $1411 = load4($55);
        $1412 = ($1411|0)==(0);
        if (!($1412)) {
         label = 474;
        }
       } else {
        label = 474;
       }
      }
     } else {
      if ($1406) {
       label = 474;
      } else {
       $1407 = ($1405|0)==(1);
       if ($1407) {
        $1408 = load4($55);
        $1409 = ($1408|0)==(0);
        if ($1409) {
         label = 474;
        }
       }
      }
     }
     if ((label|0) == 474) {
      label = 0;
      $1413 = load4($39);
      $1414 = ((($1413)) + 4|0);
      store4($39,$1414);
      $$01302$be = $$11303;
      break L8;
     }
     $1415 = load4($39);
     $1416 = load4($1415);
     $1417 = $1416 >>> 6;
     $1418 = $1417 & 255;
     $1419 = ($1418|0)==(0);
     if ($1419) {
      $1426 = $1415;
     } else {
      $1420 = load4($38);
      $1421 = (($1420) + ($1418<<4)|0);
      $1422 = ((($1421)) + -16|0);
      _luaF_close($0,$1422);
      $$pre2108 = load4($39);
      $1426 = $$pre2108;
     }
     $1423 = $1416 >>> 14;
     $1424 = (($1423) + -131070)|0;
     $1425 = (($1426) + ($1424<<2)|0);
     store4($39,$1425);
     $$01302$be = $$11303;
     break;
    }
    case 35:  {
     $1427 = $48 >>> 23;
     $1428 = (($$11303) + ($1427<<4)|0);
     $1429 = $48 & 8372224;
     $1430 = ($1429|0)==(0);
     $1431 = (((($$11303) + ($1427<<4)|0)) + 8|0);
     $1432 = load4($1431);
     $1433 = ($1432|0)==(0);
     if ($1430) {
      if ($1433) {
       label = 486;
      } else {
       $1437 = ($1432|0)==(1);
       if ($1437) {
        $1438 = load4($1428);
        $1439 = ($1438|0)==(0);
        if ($1439) {
         label = 486;
        } else {
         label = 485;
        }
       } else {
        label = 485;
       }
      }
     } else {
      if ($1433) {
       label = 485;
      } else {
       $1434 = ($1432|0)==(1);
       if ($1434) {
        $1435 = load4($1428);
        $1436 = ($1435|0)==(0);
        if ($1436) {
         label = 485;
        } else {
         label = 486;
        }
       } else {
        label = 486;
       }
      }
     }
     if ((label|0) == 485) {
      label = 0;
      $1440 = load4($39);
      $1441 = ((($1440)) + 4|0);
      $storemerge = $1441;
     }
     else if ((label|0) == 486) {
      label = 0;
      ; store8($55,load8($1428,8),8); store8($55+8 | 0,load8($1428+8 | 0,8),8);
      $1442 = load4($39);
      $1443 = load4($1442);
      $1444 = $1443 >>> 6;
      $1445 = $1444 & 255;
      $1446 = ($1445|0)==(0);
      if ($1446) {
       $1453 = $1442;
      } else {
       $1447 = load4($38);
       $1448 = (($1447) + ($1445<<4)|0);
       $1449 = ((($1448)) + -16|0);
       _luaF_close($0,$1449);
       $$pre2107 = load4($39);
       $1453 = $$pre2107;
      }
      $1450 = $1443 >>> 14;
      $1451 = (($1450) + -131070)|0;
      $1452 = (($1453) + ($1451<<2)|0);
      $storemerge = $1452;
     }
     store4($39,$storemerge);
     $$01302$be = $$11303;
     break;
    }
    case 36:  {
     $1454 = $48 >>> 23;
     $1455 = $48 >>> 14;
     $1456 = $1455 & 511;
     $1457 = (($1456) + -1)|0;
     $1458 = ($1454|0)==(0);
     if (!($1458)) {
      $1459 = (($55) + ($1454<<4)|0);
      store4($8,$1459);
     }
     $1460 = (_luaD_precall($0,$55,$1457)|0);
     $1461 = ($1460|0)==(0);
     if ($1461) {
      label = 496;
      break L3;
     }
     $1462 = ($1456|0)==(0);
     if (!($1462)) {
      $1463 = load4($44);
      store4($8,$1463);
     }
     $1464 = load4($38);
     $$01302$be = $1464;
     break;
    }
    case 37:  {
     $1466 = $48 >>> 23;
     $1467 = ($1466|0)==(0);
     if (!($1467)) {
      $1468 = (($55) + ($1466<<4)|0);
      store4($8,$1468);
     }
     $1469 = (_luaD_precall($0,$55,-1)|0);
     $1470 = ($1469|0)==(0);
     if ($1470) {
      label = 501;
      break L3;
     }
     $1471 = load4($38);
     $$01302$be = $1471;
     break;
    }
    case 39:  {
     $1536 = (((($$11303) + ($54<<4)|0)) + 8|0);
     $1537 = load4($1536);
     $1538 = ($1537|0)==(19);
     $1539 = ((($55)) + 32|0);
     if ($1538) {
      $1540 = load8($1539);
      $1541 = load8($55);
      $1542 = i64_add($1541,$1540);
      $1543 = ((($55)) + 16|0);
      $1544 = load8($1543);
      $1545 = i64_sgt($1540,i64_const(0,0));
      if ($1545) {
       $1546 = i64_sgt($1542,$1544);
       if ($1546) {
        $$01302$be = $$11303;
        break L8;
       }
      } else {
       $1547 = i64_sgt($1544,$1542);
       if ($1547) {
        $$01302$be = $$11303;
        break L8;
       }
      }
      $1548 = $48 >>> 14;
      $1549 = (($1548) + -131071)|0;
      $1550 = load4($39);
      $1551 = (($1550) + ($1549<<2)|0);
      store4($39,$1551);
      store8($55,$1542);
      $1552 = ((($55)) + 48|0);
      store8($1552,$1542);
      $1553 = ((($1552)) + 8|0);
      store4($1553,19);
      $$01302$be = $$11303;
      break L8;
     } else {
      $1554 = loadd($1539);
      $1555 = loadd($55);
      $1556 = $1554 + $1555;
      $1557 = ((($55)) + 16|0);
      $1558 = loadd($1557);
      $1559 = $1554 > 0.0;
      if ($1559) {
       $1560 = !($1556 <= $1558);
       if ($1560) {
        $$01302$be = $$11303;
        break L8;
       }
      } else {
       $1561 = !($1558 <= $1556);
       if ($1561) {
        $$01302$be = $$11303;
        break L8;
       }
      }
      $1562 = $48 >>> 14;
      $1563 = (($1562) + -131071)|0;
      $1564 = load4($39);
      $1565 = (($1564) + ($1563<<2)|0);
      store4($39,$1565);
      stored($55,$1556);
      $1566 = ((($55)) + 48|0);
      stored($1566,$1556);
      $1567 = ((($1566)) + 8|0);
      store4($1567,3);
      $$01302$be = $$11303;
      break L8;
     }
     break;
    }
    case 40:  {
     $1568 = ((($55)) + 16|0);
     $1569 = ((($55)) + 32|0);
     $1570 = (((($$11303) + ($54<<4)|0)) + 8|0);
     $1571 = load4($1570);
     $1572 = ($1571|0)==(19);
     L676: do {
      if ($1572) {
       $1573 = ((($1569)) + 8|0);
       $1574 = load4($1573);
       $1575 = ($1574|0)==(19);
       if ($1575) {
        $1576 = load8($1569);
        $1577 = i64_slt($1576,i64_const(0,0));
        $1578 = i64_lshr($1576,i64_const(63,0));
        $1579 = i64_trunc($1578);
        $$023$i$i = $1568;
        L679: while(1) {
         $1580 = ((($$023$i$i)) + 8|0);
         $1581 = load4($1580);
         switch ($1581|0) {
         case 3:  {
          label = 529;
          break L679;
          break;
         }
         case 19:  {
          label = 531;
          break L679;
          break;
         }
         default: {
         }
         }
         $1592 = $1581 & 15;
         $1593 = ($1592|0)==(4);
         if (!($1593)) {
          label = 538;
          break;
         }
         $1594 = load4($$023$i$i);
         $1595 = ((($1594)) + 16|0);
         $1596 = (_luaO_str2num($1595,$1)|0);
         $1597 = load4($$023$i$i);
         $1598 = ((($1597)) + 4|0);
         $1599 = load1($1598);
         $1600 = ($1599<<24>>24)==(4);
         if ($1600) {
          $1601 = ((($1597)) + 7|0);
          $1602 = load1($1601);
          $1603 = $1602&255;
          $1607 = $1603;
         } else {
          $1604 = ((($1597)) + 12|0);
          $1605 = load4($1604);
          $1607 = $1605;
         }
         $1606 = (($1607) + 1)|0;
         $1608 = ($1596|0)==($1606|0);
         if ($1608) {
          $$023$i$i = $1;
         } else {
          label = 538;
          break;
         }
        }
        if ((label|0) == 529) {
         label = 0;
         $1582 = loadd($$023$i$i);
         $1583 = (+Math_floor((+$1582)));
         $1584 = $1582 != $1583;
         $1585 = ($1579|0)>(0);
         $1586 = $1583 + 1.0;
         $1587 = $1585 & $1584;
         $$0$i$i = $1587 ? $1586 : $1583;
         $1588 = $$0$i$i >= -9.2233720368547758E+18;
         $1589 = $$0$i$i < 9.2233720368547758E+18;
         $or$cond$i$i = $1588 & $1589;
         if ($or$cond$i$i) {
          $1590 = i64_d2s($$0$i$i);
          $storemerge$i = $1590;
          label = 537;
         } else {
          label = 538;
         }
        }
        else if ((label|0) == 531) {
         label = 0;
         $1591 = load8($$023$i$i);
         $storemerge$i = $1591;
         label = 537;
        }
        do {
         if ((label|0) == 537) {
          label = 0;
          $$pre2149 = ((($1568)) + 8|0);
          $$21562$ph$ph = $storemerge$i;$$pre2147$pre$phiZZ2D = $$pre2149;
          label = 553;
         }
         else if ((label|0) == 538) {
          label = 0;
          $1609 = ((($1568)) + 8|0);
          $1610 = load4($1609);
          $1611 = ($1610|0)==(3);
          if ($1611) {
           $1612 = loadd($1568);
           $$116$i = $1612;
          } else {
           $1613 = ($1610|0)==(19);
           do {
            if ($1613) {
             $1614 = load8($1568);
             $1615 = i64_s2d($1614);
             $$0$i1436 = $1615;
            } else {
             $1616 = $1610 & 15;
             $1617 = ($1616|0)==(4);
             if ($1617) {
              $1618 = load4($1568);
              $1619 = ((($1618)) + 16|0);
              $1620 = (_luaO_str2num($1619,$1)|0);
              $1621 = load4($1568);
              $1622 = ((($1621)) + 4|0);
              $1623 = load1($1622);
              $1624 = ($1623<<24>>24)==(4);
              if ($1624) {
               $1625 = ((($1621)) + 7|0);
               $1626 = load1($1625);
               $1627 = $1626&255;
               $1631 = $1627;
              } else {
               $1628 = ((($1621)) + 12|0);
               $1629 = load4($1628);
               $1631 = $1629;
              }
              $1630 = (($1631) + 1)|0;
              $1632 = ($1620|0)==($1630|0);
              if ($1632) {
               $1633 = load4($29);
               $1634 = ($1633|0)==(19);
               $1635 = load8($1);
               $1636 = i64_s2d($1635);
               $$cast$i$i = i64_bc2d($1635);
               $1637 = $1634 ? $1636 : $$cast$i$i;
               $$0$i1436 = $1637;
               break;
              }
             }
             label = 555;
             break L676;
            }
           } while(0);
           $$116$i = $$0$i1436;
          }
          $1638 = $$116$i > 0.0;
          if ($1638) {
           if ($1577) {
            $$21562$ph1785 = i64_const(4294967295,2147483647);$$pre$phi2148Z2D = $1609;$1643 = i64_const(0,0);
            break;
           } else {
            $$21562$ph$ph = i64_const(4294967295,2147483647);$$pre2147$pre$phiZZ2D = $1609;
            label = 553;
            break;
           }
          } else {
           $1639 = i64_sgt($1576,i64_const(4294967295,4294967295));
           if ($1639) {
            $$21562$ph1785 = i64_const(0,2147483648);$$pre$phi2148Z2D = $1609;$1643 = i64_const(0,0);
            break;
           } else {
            $$21562$ph$ph = i64_const(0,2147483648);$$pre2147$pre$phiZZ2D = $1609;
            label = 553;
            break;
           }
          }
         }
        } while(0);
        if ((label|0) == 553) {
         label = 0;
         $1640 = load8($55);
         $$21562$ph1785 = $$21562$ph$ph;$$pre$phi2148Z2D = $$pre2147$pre$phiZZ2D;$1643 = $1640;
        }
        store8($1568,$$21562$ph1785);
        store4($$pre$phi2148Z2D,19);
        $1641 = load8($1569);
        $1642 = i64_sub($1643,$1641);
        store8($55,$1642);
        $storemerge1820 = 19;
       } else {
        label = 555;
       }
      } else {
       label = 555;
      }
     } while(0);
     if ((label|0) == 555) {
      label = 0;
      $1644 = ((($1568)) + 8|0);
      $1645 = load4($1644);
      $1646 = ($1645|0)==(3);
      if ($1646) {
       $1647 = loadd($1568);
       $$31548 = $1647;$$pre$phi2151Z2D = $1568;
      } else {
       $1648 = ($1645|0)==(19);
       if ($1648) {
        $1649 = load8($1568);
        $1650 = i64_s2d($1649);
        $$21547 = $1650;
       } else {
        $1651 = $1645 & 15;
        $1652 = ($1651|0)==(4);
        if (!($1652)) {
         label = 566;
         break L1;
        }
        $1653 = load4($1568);
        $1654 = ((($1653)) + 16|0);
        $1655 = (_luaO_str2num($1654,$1)|0);
        $1656 = load4($1568);
        $1657 = ((($1656)) + 4|0);
        $1658 = load1($1657);
        $1659 = ($1658<<24>>24)==(4);
        if ($1659) {
         $1660 = ((($1656)) + 7|0);
         $1661 = load1($1660);
         $1662 = $1661&255;
         $1666 = $1662;
        } else {
         $1663 = ((($1656)) + 12|0);
         $1664 = load4($1663);
         $1666 = $1664;
        }
        $1665 = (($1666) + 1)|0;
        $1667 = ($1655|0)==($1665|0);
        if (!($1667)) {
         label = 566;
         break L1;
        }
        $1668 = load4($26);
        $1669 = ($1668|0)==(19);
        $1670 = load8($1);
        $1671 = i64_s2d($1670);
        $$cast$i1438 = i64_bc2d($1670);
        $1672 = $1669 ? $1671 : $$cast$i1438;
        $$21547 = $1672;
       }
       $$31548 = $$21547;$$pre$phi2151Z2D = $1568;
      }
      stored($$pre$phi2151Z2D,$$31548);
      store4($1644,3);
      $1673 = ((($1569)) + 8|0);
      $1674 = load4($1673);
      $1675 = ($1674|0)==(3);
      if ($1675) {
       $1676 = loadd($1569);
       $$31542 = $1676;$$pre$phi2153Z2D = $1569;
      } else {
       $1677 = ($1674|0)==(19);
       if ($1677) {
        $1678 = load8($1569);
        $1679 = i64_s2d($1678);
        $$21541 = $1679;
       } else {
        $1680 = $1674 & 15;
        $1681 = ($1680|0)==(4);
        if (!($1681)) {
         label = 578;
         break L1;
        }
        $1682 = load4($1569);
        $1683 = ((($1682)) + 16|0);
        $1684 = (_luaO_str2num($1683,$1)|0);
        $1685 = load4($1569);
        $1686 = ((($1685)) + 4|0);
        $1687 = load1($1686);
        $1688 = ($1687<<24>>24)==(4);
        if ($1688) {
         $1689 = ((($1685)) + 7|0);
         $1690 = load1($1689);
         $1691 = $1690&255;
         $1695 = $1691;
        } else {
         $1692 = ((($1685)) + 12|0);
         $1693 = load4($1692);
         $1695 = $1693;
        }
        $1694 = (($1695) + 1)|0;
        $1696 = ($1684|0)==($1694|0);
        if (!($1696)) {
         label = 578;
         break L1;
        }
        $1697 = load4($27);
        $1698 = ($1697|0)==(19);
        $1699 = load8($1);
        $1700 = i64_s2d($1699);
        $$cast$i1441 = i64_bc2d($1699);
        $1701 = $1698 ? $1700 : $$cast$i1441;
        $$21541 = $1701;
       }
       $$31542 = $$21541;$$pre$phi2153Z2D = $1569;
      }
      stored($$pre$phi2153Z2D,$$31542);
      store4($1673,3);
      $1702 = load4($1570);
      $1703 = ($1702|0)==(3);
      if ($1703) {
       $1704 = loadd($55);
       $$31555 = $1704;$$pre$phi2155Z2D = $55;
      } else {
       $1705 = ($1702|0)==(19);
       if ($1705) {
        $1706 = load8($55);
        $1707 = i64_s2d($1706);
        $$21554 = $1707;
       } else {
        $1708 = $1702 & 15;
        $1709 = ($1708|0)==(4);
        if (!($1709)) {
         label = 590;
         break L1;
        }
        $1710 = load4($55);
        $1711 = ((($1710)) + 16|0);
        $1712 = (_luaO_str2num($1711,$1)|0);
        $1713 = load4($55);
        $1714 = ((($1713)) + 4|0);
        $1715 = load1($1714);
        $1716 = ($1715<<24>>24)==(4);
        if ($1716) {
         $1717 = ((($1713)) + 7|0);
         $1718 = load1($1717);
         $1719 = $1718&255;
         $1723 = $1719;
        } else {
         $1720 = ((($1713)) + 12|0);
         $1721 = load4($1720);
         $1723 = $1721;
        }
        $1722 = (($1723) + 1)|0;
        $1724 = ($1712|0)==($1722|0);
        if (!($1724)) {
         label = 590;
         break L1;
        }
        $1725 = load4($28);
        $1726 = ($1725|0)==(19);
        $1727 = load8($1);
        $1728 = i64_s2d($1727);
        $$cast$i1444 = i64_bc2d($1727);
        $1729 = $1726 ? $1728 : $$cast$i1444;
        $$21554 = $1729;
       }
       $$31555 = $$21554;$$pre$phi2155Z2D = $55;
      }
      $1730 = $$31555 - $$31542;
      stored($$pre$phi2155Z2D,$1730);
      $storemerge1820 = 3;
     }
     store4($1570,$storemerge1820);
     $1731 = $48 >>> 14;
     $1732 = (($1731) + -131071)|0;
     $1733 = load4($39);
     $1734 = (($1733) + ($1732<<2)|0);
     store4($39,$1734);
     $$01302$be = $$11303;
     break;
    }
    case 41:  {
     $1735 = ((($55)) + 48|0);
     $1736 = ((($1735)) + 32|0);
     $1737 = ((($55)) + 32|0);
     ; store8($1736,load8($1737,8),8); store8($1736+8 | 0,load8($1737+8 | 0,8),8);
     $1738 = ((($1735)) + 16|0);
     $1739 = ((($55)) + 16|0);
     ; store8($1738,load8($1739,8),8); store8($1738+8 | 0,load8($1739+8 | 0,8),8);
     ; store8($1735,load8($55,8),8); store8($1735+8 | 0,load8($55+8 | 0,8),8);
     $1740 = ((($1735)) + 48|0);
     store4($8,$1740);
     $1741 = $48 >>> 14;
     $1742 = $1741 & 511;
     _luaD_call($0,$1735,$1742);
     $1743 = load4($38);
     $1744 = load4($40);
     store4($8,$1744);
     $1745 = load4($39);
     $1746 = ((($1745)) + 4|0);
     store4($39,$1746);
     $1747 = load4($1745);
     $1748 = $1747 >>> 6;
     $1749 = $1748 & 255;
     $1750 = (($1743) + ($1749<<4)|0);
     $$01309 = $1747;$$11311 = $1750;$$25 = $1743;
     label = 594;
     break;
    }
    case 42:  {
     $$01309 = $48;$$11311 = $55;$$25 = $$11303;
     label = 594;
     break;
    }
    case 43:  {
     $1759 = $48 >>> 23;
     $1760 = $48 >>> 14;
     $1761 = $1760 & 511;
     $1762 = ($1759|0)==(0);
     if ($1762) {
      $1763 = load4($8);
      $1764 = $55;
      $1765 = (($1763) - ($1764))|0;
      $1766 = $1765 >> 4;
      $1767 = (($1766) + -1)|0;
      $$01318 = $1767;
     } else {
      $$01318 = $1759;
     }
     $1768 = ($1761|0)==(0);
     if ($1768) {
      $1769 = load4($39);
      $1770 = ((($1769)) + 4|0);
      store4($39,$1770);
      $1771 = load4($1769);
      $1772 = $1771 >>> 6;
      $$01317 = $1772;
     } else {
      $$01317 = $1761;
     }
     $1773 = load4($55);
     $1774 = ($$01317*50)|0;
     $1775 = (($$01318) + -50)|0;
     $1776 = (($1775) + ($1774))|0;
     $1777 = ((($1773)) + 8|0);
     $1778 = load4($1777);
     $1779 = ($1776>>>0)>($1778>>>0);
     if ($1779) {
      _luaH_resizearray($0,$1773,$1776);
     }
     $1780 = ($$01318|0)>(0);
     if ($1780) {
      $1781 = ((($1773)) + 5|0);
      $$013161965 = $1776;$$113191964 = $$01318;
      while(1) {
       $1782 = (($55) + ($$113191964<<4)|0);
       $1783 = (($$013161965) + -1)|0;
       $1784 = i64_zext($$013161965>>>0);
       _luaH_setint($0,$1773,$1784,$1782);
       $1785 = ((($1782)) + 8|0);
       $1786 = load4($1785);
       $1787 = $1786 & 64;
       $1788 = ($1787|0)==(0);
       if (!($1788)) {
        $1789 = load1($1781);
        $1790 = $1789 & 4;
        $1791 = ($1790<<24>>24)==(0);
        if (!($1791)) {
         $1792 = load4($1782);
         $1793 = ((($1792)) + 5|0);
         $1794 = load1($1793);
         $1795 = $1794 & 3;
         $1796 = ($1795<<24>>24)==(0);
         if (!($1796)) {
          _luaC_barrierback_($0,$1773);
         }
        }
       }
       $1797 = (($$113191964) + -1)|0;
       $1798 = ($$113191964|0)>(1);
       if ($1798) {
        $$013161965 = $1783;$$113191964 = $1797;
       } else {
        break;
       }
      }
     }
     $1799 = load4($45);
     store4($8,$1799);
     $$01302$be = $$11303;
     break;
    }
    case 44:  {
     $1800 = load4($32);
     $1801 = ((($1800)) + 52|0);
     $1802 = load4($1801);
     $1803 = $48 >>> 14;
     $1804 = (($1802) + ($1803<<2)|0);
     $1805 = load4($1804);
     $1806 = ((($1805)) + 68|0);
     $1807 = load4($1806);
     $1808 = ($1807|0)==(0|0);
     $$phi$trans$insert = ((($1805)) + 12|0);
     $$pre = load4($$phi$trans$insert);
     $$phi$trans$insert2105 = ((($1805)) + 64|0);
     $$pre2106 = load4($$phi$trans$insert2105);
     L783: do {
      if ($1808) {
       label = 618;
      } else {
       $1809 = ($$pre|0)>(0);
       if ($1809) {
        $$03335$i = 0;
        while(1) {
         $1812 = (((($$pre2106) + ($$03335$i<<3)|0)) + 4|0);
         $1813 = load1($1812);
         $1814 = ($1813<<24>>24)==(0);
         $1815 = (((($$pre2106) + ($$03335$i<<3)|0)) + 5|0);
         $1816 = load1($1815);
         $1817 = $1816&255;
         if ($1814) {
          $1819 = (((($31)) + 16|0) + ($1817<<2)|0);
          $1820 = load4($1819);
          $1821 = load4($1820);
          $1826 = $1821;
         } else {
          $1818 = (($$11303) + ($1817<<4)|0);
          $1826 = $1818;
         }
         $1822 = (((($1807)) + 16|0) + ($$03335$i<<2)|0);
         $1823 = load4($1822);
         $1824 = load4($1823);
         $1825 = ($1824|0)==($1826|0);
         $1810 = (($$03335$i) + 1)|0;
         if (!($1825)) {
          label = 618;
          break L783;
         }
         $1811 = ($1810|0)<($$pre|0);
         if ($1811) {
          $$03335$i = $1810;
         } else {
          break;
         }
        }
       }
       store4($55,$1807);
       $1853 = (((($$11303) + ($54<<4)|0)) + 8|0);
       store4($1853,70);
      }
     } while(0);
     if ((label|0) == 618) {
      label = 0;
      $1827 = (_luaF_newLclosure($0,$$pre)|0);
      $1828 = ((($1827)) + 12|0);
      store4($1828,$1805);
      store4($55,$1827);
      $1829 = (((($$11303) + ($54<<4)|0)) + 8|0);
      store4($1829,70);
      $1830 = ($$pre|0)>(0);
      if ($1830) {
       $$042$i = 0;
       while(1) {
        $1831 = (((($$pre2106) + ($$042$i<<3)|0)) + 4|0);
        $1832 = load1($1831);
        $1833 = ($1832<<24>>24)==(0);
        $1834 = (((($$pre2106) + ($$042$i<<3)|0)) + 5|0);
        $1835 = load1($1834);
        $1836 = $1835&255;
        if ($1833) {
         $1840 = (((($31)) + 16|0) + ($1836<<2)|0);
         $1841 = load4($1840);
         $1842 = (((($1827)) + 16|0) + ($$042$i<<2)|0);
         store4($1842,$1841);
         $1843 = $1841;
         $1845 = $1843;
        } else {
         $1837 = (($$11303) + ($1836<<4)|0);
         $1838 = (_luaF_findupval($0,$1837)|0);
         $1839 = (((($1827)) + 16|0) + ($$042$i<<2)|0);
         store4($1839,$1838);
         $1845 = $1838;
        }
        $1844 = ((($1845)) + 4|0);
        $1846 = load4($1844);
        $1847 = (($1846) + 1)|0;
        store4($1844,$1847);
        $1848 = (($$042$i) + 1)|0;
        $exitcond$i = ($1848|0)==($$pre|0);
        if ($exitcond$i) {
         break;
        } else {
         $$042$i = $1848;
        }
       }
      }
      $1849 = ((($1805)) + 5|0);
      $1850 = load1($1849);
      $1851 = $1850 & 4;
      $1852 = ($1851<<24>>24)==(0);
      if ($1852) {
       store4($1806,$1827);
      }
     }
     $1854 = load4($9);
     $1855 = ((($1854)) + 12|0);
     $1856 = load4($1855);
     $1857 = ($1856|0)>(0);
     if ($1857) {
      $1858 = ((($55)) + 16|0);
      store4($8,$1858);
      _luaC_step($0);
      $1859 = load4($43);
      store4($8,$1859);
      $1860 = load4($38);
      $$01302$be = $1860;
     } else {
      $$01302$be = $$11303;
     }
     break;
    }
    case 45:  {
     $1861 = $48 >>> 23;
     $1862 = (($1861) + -1)|0;
     $1863 = load4($$0);
     $1864 = $$11303;
     $1865 = (($1864) - ($1863))|0;
     $1866 = $1865 >> 4;
     $1867 = load4($32);
     $1868 = ((($1867)) + 6|0);
     $1869 = load1($1868);
     $1870 = $1869&255;
     $1871 = (($1866) - ($1870))|0;
     $1872 = (($1871) + -1)|0;
     $1873 = ($1871|0)>(1);
     $spec$store$select = $1873 ? $1872 : 0;
     $1874 = ($1861|0)==(0);
     if ($1874) {
      $1875 = load4($10);
      $1876 = load4($8);
      $1877 = (($1875) - ($1876))|0;
      $1878 = $1877 >> 4;
      $1879 = ($1878|0)>($spec$store$select|0);
      if (!($1879)) {
       _luaD_growstack($0,$spec$store$select);
      }
      $1880 = load4($38);
      $1881 = (($1880) + ($54<<4)|0);
      $1882 = (($1881) + ($spec$store$select<<4)|0);
      store4($8,$1882);
      $$01301 = $spec$store$select;$$21312 = $1881;$$27 = $1880;
     } else {
      $$01301 = $1862;$$21312 = $55;$$27 = $$11303;
     }
     $1883 = ($$01301|0)>(0);
     $or$cond13351960 = $1883 & $1873;
     if ($or$cond13351960) {
      $1884 = (0 - ($spec$store$select))|0;
      $1885 = (($$27) + ($1884<<4)|0);
      $$012991961 = 0;
      while(1) {
       $1886 = (($$21312) + ($$012991961<<4)|0);
       $1887 = (($1885) + ($$012991961<<4)|0);
       ; store8($1886,load8($1887,8),8); store8($1886+8 | 0,load8($1887+8 | 0,8),8);
       $1888 = (($$012991961) + 1)|0;
       $1889 = ($1888|0)<($$01301|0);
       $1890 = ($1888>>>0)<($spec$store$select>>>0);
       $or$cond1335 = $1889 & $1890;
       if ($or$cond1335) {
        $$012991961 = $1888;
       } else {
        $$01299$lcssa = $1888;
        break;
       }
      }
     } else {
      $$01299$lcssa = 0;
     }
     $1891 = ($$01299$lcssa|0)<($$01301|0);
     if ($1891) {
      $$113001962 = $$01299$lcssa;
      while(1) {
       $1892 = (((($$21312) + ($$113001962<<4)|0)) + 8|0);
       store4($1892,0);
       $1893 = (($$113001962) + 1)|0;
       $exitcond = ($1893|0)==($$01301|0);
       if ($exitcond) {
        $$01302$be = $$27;
        break;
       } else {
        $$113001962 = $1893;
       }
      }
     } else {
      $$01302$be = $$27;
     }
     break;
    }
    default: {
     $$01302$be = $$11303;
    }
    }
   } while(0);
   if ((label|0) == 594) {
    label = 0;
    $1751 = ((($$11311)) + 24|0);
    $1752 = load4($1751);
    $1753 = ($1752|0)==(0);
    if ($1753) {
     $$01302$be = $$25;
    } else {
     $1754 = $$01309 >>> 14;
     $1755 = (($1754) + -131071)|0;
     $1756 = ((($$11311)) + 16|0);
     ; store8($$11311,load8($1756,8),8); store8($$11311+8 | 0,load8($1756+8 | 0,8),8);
     $1757 = load4($39);
     $1758 = (($1757) + ($1755<<2)|0);
     store4($39,$1758);
     $$01302$be = $$25;
    }
   }
   $$01302 = $$01302$be;
  }
  if ((label|0) == 496) {
   label = 0;
   $1465 = load4($2);
   $$0$be = $1465;
  }
  else if ((label|0) == 501) {
   label = 0;
   $1472 = load4($2);
   $1473 = ((($1472)) + 8|0);
   $1474 = load4($1473);
   $1475 = load4($1472);
   $1476 = load4($1474);
   $1477 = ((($1472)) + 16|0);
   $1478 = load4($1477);
   $1479 = load4($1475);
   $1480 = ((($1479)) + 12|0);
   $1481 = load4($1480);
   $1482 = ((($1481)) + 6|0);
   $1483 = load1($1482);
   $1484 = $1483&255;
   $1485 = (($1478) + ($1484<<4)|0);
   $1486 = load4($32);
   $1487 = ((($1486)) + 28|0);
   $1488 = load4($1487);
   $1489 = ($1488|0)>(0);
   if ($1489) {
    $1490 = ((($1474)) + 16|0);
    $1491 = load4($1490);
    _luaF_close($0,$1491);
   }
   $1492 = ($1475>>>0)<($1485>>>0);
   if ($1492) {
    $$013281967 = 0;$1494 = $1475;
    while(1) {
     $1493 = (($1476) + ($$013281967<<4)|0);
     ; store8($1493,load8($1494,8),8); store8($1493+8 | 0,load8($1494+8 | 0,8),8);
     $1495 = (($$013281967) + 1)|0;
     $1496 = (($1475) + ($1495<<4)|0);
     $1497 = ($1496>>>0)<($1485>>>0);
     if ($1497) {
      $$013281967 = $1495;$1494 = $1496;
     } else {
      break;
     }
    }
   }
   $1498 = load4($1477);
   $1499 = $1475;
   $1500 = (($1498) - ($1499))|0;
   $1501 = $1500 >> 4;
   $1502 = (($1476) + ($1501<<4)|0);
   $1503 = ((($1474)) + 16|0);
   store4($1503,$1502);
   $1504 = load4($8);
   $1505 = (($1504) - ($1499))|0;
   $1506 = $1505 >> 4;
   $1507 = (($1476) + ($1506<<4)|0);
   store4($8,$1507);
   $1508 = ((($1474)) + 4|0);
   store4($1508,$1507);
   $1509 = ((($1472)) + 20|0);
   $1510 = load4($1509);
   $1511 = ((($1474)) + 20|0);
   store4($1511,$1510);
   $1512 = ((($1474)) + 34|0);
   $1513 = load2($1512);
   $1514 = $1513 | 32;
   store2($1512,$1514);
   store4($2,$1474);
   $$0$be = $1474;
  }
  else if ((label|0) == 508) {
   label = 0;
   $1515 = $48 >>> 23;
   $1516 = load4($32);
   $1517 = ((($1516)) + 28|0);
   $1518 = load4($1517);
   $1519 = ($1518|0)>(0);
   if ($1519) {
    _luaF_close($0,$$11303);
   }
   $1520 = ($1515|0)==(0);
   if ($1520) {
    $1522 = load4($8);
    $1523 = $55;
    $1524 = (($1522) - ($1523))|0;
    $1525 = $1524 >> 4;
    $1526 = $1525;
   } else {
    $1521 = (($1515) + -1)|0;
    $1526 = $1521;
   }
   $1527 = (_luaD_poscall($0,$$0,$55,$1526)|0);
   $1528 = ((($$0)) + 34|0);
   $1529 = load2($1528);
   $1530 = $1529 & 8;
   $1531 = ($1530<<16>>16)==(0);
   if (!($1531)) {
    label = 640;
    break;
   }
   $1532 = load4($2);
   $1533 = ($1527|0)==(0);
   if ($1533) {
    $$0$be = $1532;
   } else {
    $1534 = ((($1532)) + 4|0);
    $1535 = load4($1534);
    store4($8,$1535);
    $$0$be = $1532;
   }
  }
  $$0 = $$0$be;
 }
 if ((label|0) == 325) {
  _luaG_runerror($0,9624,$vararg_buffer);
  // unreachable;
 }
 else if ((label|0) == 356) {
  _luaG_runerror($0,9598,$vararg_buffer1);
  // unreachable;
 }
 else if ((label|0) == 566) {
  _luaG_runerror($0,9650,$vararg_buffer3);
  // unreachable;
 }
 else if ((label|0) == 578) {
  _luaG_runerror($0,9679,$vararg_buffer5);
  // unreachable;
 }
 else if ((label|0) == 590) {
  _luaG_runerror($0,9707,$vararg_buffer7);
  // unreachable;
 }
 else if ((label|0) == 640) {
  STACKTOP = sp;return;
 }
}
function _luaZ_fill($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = ((($0)) + 16|0);
 $3 = load4($2);
 $4 = ((($0)) + 8|0);
 $5 = load4($4);
 $6 = ((($0)) + 12|0);
 $7 = load4($6);
 $8 = (FUNCTION_TABLE_iiii[$5 & 15]($3,$7,$1)|0);
 $9 = ($8|0)==(0|0);
 $10 = load4($1);
 $11 = ($10|0)==(0);
 $or$cond = $9 | $11;
 if ($or$cond) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $12 = ((($8)) + 1|0);
 $13 = ((($0)) + 4|0);
 $14 = (($10) + -1)|0;
 store4($0,$14);
 store4($13,$12);
 $15 = load1($8);
 $16 = $15&255;
 $$0 = $16;
 STACKTOP = sp;return ($$0|0);
}
function _luaZ_init($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 16|0);
 store4($4,$0);
 $5 = ((($1)) + 8|0);
 store4($5,$2);
 $6 = ((($1)) + 12|0);
 store4($6,$3);
 store4($1,0);
 $7 = ((($1)) + 4|0);
 store4($7,0);
 return;
}
function _luaZ_read($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$$024 = 0, $$02430 = 0, $$02629 = 0, $$2 = 0, $$pre = 0, $$pre32 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $4 = ($2|0)==(0);
 if ($4) {
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 $5 = ((($0)) + 16|0);
 $6 = ((($0)) + 8|0);
 $7 = ((($0)) + 12|0);
 $8 = ((($0)) + 4|0);
 $$pre = load4($0);
 $$02430 = $2;$$02629 = $1;$9 = $$pre;
 while(1) {
  $10 = ($9|0)==(0);
  if ($10) {
   $11 = load4($5);
   $12 = load4($6);
   $13 = load4($7);
   $14 = (FUNCTION_TABLE_iiii[$12 & 15]($11,$13,$3)|0);
   $15 = ($14|0)==(0|0);
   $16 = load4($3);
   $17 = ($16|0)==(0);
   $or$cond$i = $15 | $17;
   if ($or$cond$i) {
    $$2 = $$02430;
    label = 8;
    break;
   }
   store4($0,$16);
   store4($8,$14);
   $19 = $16;$20 = $14;
  } else {
   $$pre32 = load4($8);
   $19 = $9;$20 = $$pre32;
  }
  $18 = ($$02430>>>0)>($19>>>0);
  $$$024 = $18 ? $19 : $$02430;
  _memcpy(($$02629|0),($20|0),($$$024|0))|0;
  $21 = load4($0);
  $22 = (($21) - ($$$024))|0;
  store4($0,$22);
  $23 = load4($8);
  $24 = (($23) + ($$$024)|0);
  store4($8,$24);
  $25 = (($$02629) + ($$$024)|0);
  $26 = (($$02430) - ($$$024))|0;
  $27 = ($26|0)==(0);
  if ($27) {
   $$2 = 0;
   label = 8;
   break;
  } else {
   $$02430 = $26;$$02629 = $25;$9 = $22;
  }
 }
 if ((label|0) == 8) {
  STACKTOP = sp;return ($$2|0);
 }
 return (0)|0;
}
function _luaL_traceback($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$i = 0, $$0$i$phi = 0, $$016$i = 0, $$03031 = 0, $$032 = 0, $$1 = 0, $$1$in = 0, $$117$lcssa$i = 0, $$11719$i = 0, $$120$i = 0, $$2$i = 0, $$218$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer12 = 0, $vararg_buffer16 = 0, $vararg_buffer3 = 0, $vararg_buffer6 = 0, $vararg_buffer9 = 0, $vararg_ptr15 = 0, $vararg_ptr19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0;
 $vararg_buffer16 = sp + 48|0;
 $vararg_buffer12 = sp + 40|0;
 $vararg_buffer9 = sp + 32|0;
 $vararg_buffer6 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $4 = sp + 156|0;
 $5 = sp + 56|0;
 $6 = (_lua_gettop($0)|0);
 $$0$i = 1;$$016$i = 1;
 while(1) {
  $7 = (_lua_getstack($1,$$016$i,$4)|0);
  $8 = ($7|0)==(0);
  $9 = $$016$i << 1;
  if ($8) {
   break;
  } else {
   $$0$i$phi = $$016$i;$$016$i = $9;$$0$i = $$0$i$phi;
  }
 }
 $10 = ($$0$i|0)<($$016$i|0);
 if ($10) {
  $$11719$i = $$016$i;$$120$i = $$0$i;
  while(1) {
   $11 = (($$11719$i) + ($$120$i))|0;
   $12 = (($11|0) / 2)&-1;
   $13 = (_lua_getstack($1,$12,$4)|0);
   $14 = ($13|0)==(0);
   $15 = (($12) + 1)|0;
   $$218$i = $14 ? $12 : $$11719$i;
   $$2$i = $14 ? $$120$i : $15;
   $16 = ($$2$i|0)<($$218$i|0);
   if ($16) {
    $$11719$i = $$218$i;$$120$i = $$2$i;
   } else {
    $$117$lcssa$i = $$218$i;
    break;
   }
  }
 } else {
  $$117$lcssa$i = $$016$i;
 }
 $17 = $3 ^ -1;
 $18 = (($$117$lcssa$i) + ($17))|0;
 $19 = ($18|0)>(21);
 $20 = $19 ? 10 : -1;
 $21 = ($2|0)==(0|0);
 if (!($21)) {
  store4($vararg_buffer,$2);
  (_lua_pushfstring($0,12432,$vararg_buffer)|0);
 }
 $22 = (_lua_checkstack($0,10)|0);
 $23 = ($22|0)==(0);
 if ($23) {
  (_luaL_error($0,12135,$vararg_buffer1)|0);
 }
 (_lua_pushstring($0,9744)|0);
 $24 = (_lua_getstack($1,$3,$5)|0);
 $25 = ($24|0)==(0);
 if ($25) {
  $54 = (_lua_gettop($0)|0);
  $55 = (($54) - ($6))|0;
  _lua_concat($0,$55);
  STACKTOP = sp;return;
 }
 $26 = (($$117$lcssa$i) + -12)|0;
 $27 = ((($5)) + 36|0);
 $28 = ((($5)) + 20|0);
 $29 = ((($5)) + 8|0);
 $30 = ((($5)) + 35|0);
 $31 = ((($5)) + 12|0);
 $32 = ((($5)) + 4|0);
 $33 = ((($5)) + 24|0);
 $$03031 = $3;$$032 = $20;
 while(1) {
  $34 = (($$032) + -1)|0;
  $35 = ($$032|0)==(0);
  if ($35) {
   (_lua_pushstring($0,9761)|0);
   $$1$in = $26;
  } else {
   (_lua_getinfo($1,9767,$5)|0);
   store4($vararg_buffer3,$27);
   (_lua_pushfstring($0,9772,$vararg_buffer3)|0);
   $36 = load4($28);
   $37 = ($36|0)>(0);
   if ($37) {
    store4($vararg_buffer6,$36);
    (_lua_pushfstring($0,9778,$vararg_buffer6)|0);
   }
   (_lua_pushstring($0,9782)|0);
   $38 = (_pushglobalfuncname($0,$5)|0);
   $39 = ($38|0)==(0);
   L26: do {
    if ($39) {
     $41 = load4($29);
     $42 = load1($41);
     $43 = ($42<<24>>24)==(0);
     if (!($43)) {
      $44 = load4($32);
      store4($vararg_buffer12,$41);
      $vararg_ptr15 = ((($vararg_buffer12)) + 4|0);
      store4($vararg_ptr15,$44);
      (_lua_pushfstring($0,9801,$vararg_buffer12)|0);
      break;
     }
     $45 = load4($31);
     $46 = load1($45);
     switch ($46<<24>>24) {
     case 109:  {
      (_lua_pushstring($0,9809)|0);
      break L26;
      break;
     }
     case 67:  {
      (_lua_pushstring($0,15925)|0);
      break L26;
      break;
     }
     default: {
      $47 = load4($33);
      store4($vararg_buffer16,$27);
      $vararg_ptr19 = ((($vararg_buffer16)) + 4|0);
      store4($vararg_ptr19,$47);
      (_lua_pushfstring($0,9820,$vararg_buffer16)|0);
      break L26;
     }
     }
    } else {
     $40 = (_lua_tolstring($0,-1,0)|0);
     store4($vararg_buffer9,$40);
     (_lua_pushfstring($0,9787,$vararg_buffer9)|0);
     _lua_rotate($0,-2,-1);
     _lua_settop($0,-2);
    }
   } while(0);
   $48 = load1($30);
   $49 = ($48<<24>>24)==(0);
   if (!($49)) {
    (_lua_pushstring($0,9837)|0);
   }
   $50 = (_lua_gettop($0)|0);
   $51 = (($50) - ($6))|0;
   _lua_concat($0,$51);
   $$1$in = $$03031;
  }
  $$1 = (($$1$in) + 1)|0;
  $52 = (_lua_getstack($1,$$1,$5)|0);
  $53 = ($52|0)==(0);
  if ($53) {
   break;
  } else {
   $$03031 = $$1;$$032 = $34;
  }
 }
 $54 = (_lua_gettop($0)|0);
 $55 = (($54) - ($6))|0;
 _lua_concat($0,$55);
 STACKTOP = sp;return;
}
function _luaL_error($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 16|0;
 $2 = sp + 28|0;
 $3 = sp;
 store4($3,$varargs);
 $4 = (_lua_getstack($0,1,$2)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  (_lua_getinfo($0,9864,$2)|0);
  $6 = ((($2)) + 20|0);
  $7 = load4($6);
  $8 = ($7|0)>(0);
  if ($8) {
   $9 = ((($2)) + 36|0);
   store4($vararg_buffer,$9);
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   store4($vararg_ptr1,$7);
   (_lua_pushfstring($0,9867,$vararg_buffer)|0);
   (_lua_pushvfstring($0,$1,$3)|0);
   _lua_concat($0,2);
   (_lua_error($0)|0);
   // unreachable;
  }
 }
 (_lua_pushfstring($0,19032,$vararg_buffer2)|0);
 (_lua_pushvfstring($0,$1,$3)|0);
 _lua_concat($0,2);
 (_lua_error($0)|0);
 // unreachable;
 return (0)|0;
}
function _pushglobalfuncname($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_lua_gettop($0)|0);
 (_lua_getinfo($0,9858,$1)|0);
 (_lua_getfield($0,-1001000,15615)|0);
 $3 = (($2) + 1)|0;
 $4 = (_findfield($0,$3,2)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  _lua_settop($0,$2);
  $$0 = 0;
  return ($$0|0);
 }
 $6 = (_lua_tolstring($0,-1,0)|0);
 $7 = (_strncmp($6,9860,3)|0);
 $8 = ($7|0)==(0);
 if ($8) {
  $9 = ((($6)) + 3|0);
  (_lua_pushstring($0,$9)|0);
  _lua_rotate($0,-2,-1);
  _lua_settop($0,-2);
 }
 _lua_copy($0,-1,$3);
 _lua_settop($0,-3);
 $$0 = 1;
 return ($$0|0);
}
function _findfield($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if ($3) {
  $$0 = 0;
  return ($$0|0);
 }
 $4 = (_lua_type($0,-1)|0);
 $5 = ($4|0)==(5);
 if (!($5)) {
  $$0 = 0;
  return ($$0|0);
 }
 _lua_pushnil($0);
 $6 = (_lua_next($0,-2)|0);
 $7 = ($6|0)==(0);
 if ($7) {
  $$0 = 0;
  return ($$0|0);
 }
 $8 = (($2) + -1)|0;
 while(1) {
  $9 = (_lua_type($0,-2)|0);
  $10 = ($9|0)==(4);
  if ($10) {
   $11 = (_lua_rawequal($0,$1,-1)|0);
   $12 = ($11|0)==(0);
   if (!($12)) {
    label = 7;
    break;
   }
   $13 = (_findfield($0,$1,$8)|0);
   $14 = ($13|0)==(0);
   if (!($14)) {
    label = 9;
    break;
   }
  }
  _lua_settop($0,-2);
  $15 = (_lua_next($0,-2)|0);
  $16 = ($15|0)==(0);
  if ($16) {
   $$0 = 0;
   label = 11;
   break;
  }
 }
 if ((label|0) == 7) {
  _lua_settop($0,-2);
  $$0 = 1;
  return ($$0|0);
 }
 else if ((label|0) == 9) {
  _lua_rotate($0,-2,-1);
  _lua_settop($0,-2);
  (_lua_pushstring($0,16069)|0);
  _lua_rotate($0,-2,1);
  _lua_concat($0,3);
  $$0 = 1;
  return ($$0|0);
 }
 else if ((label|0) == 11) {
  return ($$0|0);
 }
 return (0)|0;
}
function _luaL_checkstack($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = (_lua_checkstack($0,$1)|0);
 $4 = ($3|0)==(0);
 if (!($4)) {
  STACKTOP = sp;return;
 }
 $5 = ($2|0)==(0|0);
 if ($5) {
  (_luaL_error($0,12135,$vararg_buffer1)|0);
  STACKTOP = sp;return;
 } else {
  store4($vararg_buffer,$2);
  (_luaL_error($0,9875,$vararg_buffer)|0);
  STACKTOP = sp;return;
 }
}
function _luaL_argerror($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$013 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer6 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr5 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $vararg_buffer6 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = sp + 28|0;
 $4 = (_lua_getstack($0,0,$3)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  store4($vararg_buffer,$1);
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  store4($vararg_ptr1,$2);
  $6 = (_luaL_error($0,9895,$vararg_buffer)|0);
  $$0 = $6;
  STACKTOP = sp;return ($$0|0);
 }
 (_lua_getinfo($0,14982,$3)|0);
 $7 = ((($3)) + 8|0);
 $8 = load4($7);
 $9 = (_strcmp($8,9917)|0);
 $10 = ($9|0)==(0);
 if ($10) {
  $11 = (($1) + -1)|0;
  $12 = ($11|0)==(0);
  if ($12) {
   $13 = ((($3)) + 4|0);
   $14 = load4($13);
   store4($vararg_buffer2,$14);
   $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
   store4($vararg_ptr5,$2);
   $15 = (_luaL_error($0,9924,$vararg_buffer2)|0);
   $$0 = $15;
   STACKTOP = sp;return ($$0|0);
  } else {
   $$013 = $11;
  }
 } else {
  $$013 = $1;
 }
 $16 = ((($3)) + 4|0);
 $17 = load4($16);
 $18 = ($17|0)==(0|0);
 if ($18) {
  $19 = (_pushglobalfuncname($0,$3)|0);
  $20 = ($19|0)==(0);
  if ($20) {
   $22 = 15925;
  } else {
   $21 = (_lua_tolstring($0,-1,0)|0);
   $22 = $21;
  }
  store4($16,$22);
  $23 = $22;
 } else {
  $23 = $17;
 }
 store4($vararg_buffer6,$$013);
 $vararg_ptr9 = ((($vararg_buffer6)) + 4|0);
 store4($vararg_ptr9,$23);
 $vararg_ptr10 = ((($vararg_buffer6)) + 8|0);
 store4($vararg_ptr10,$2);
 $24 = (_luaL_error($0,9954,$vararg_buffer6)|0);
 $$0 = $24;
 STACKTOP = sp;return ($$0|0);
}
function _luaL_where($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = sp + 12|0;
 $3 = (_lua_getstack($0,$1,$2)|0);
 $4 = ($3|0)==(0);
 if (!($4)) {
  (_lua_getinfo($0,9864,$2)|0);
  $5 = ((($2)) + 20|0);
  $6 = load4($5);
  $7 = ($6|0)>(0);
  if ($7) {
   $8 = ((($2)) + 36|0);
   store4($vararg_buffer,$8);
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   store4($vararg_ptr1,$6);
   (_lua_pushfstring($0,9867,$vararg_buffer)|0);
   STACKTOP = sp;return;
  }
 }
 (_lua_pushfstring($0,19032,$vararg_buffer2)|0);
 STACKTOP = sp;return;
}
function _luaL_fileresult($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = i64(), $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = (___errno_location()|0);
 $4 = load4($3);
 $5 = ($1|0)==(0);
 if (!($5)) {
  _lua_pushboolean($0,1);
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 _lua_pushnil($0);
 $6 = ($2|0)==(0|0);
 $7 = (_strerror($4)|0);
 if ($6) {
  (_lua_pushstring($0,$7)|0);
 } else {
  store4($vararg_buffer,$2);
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  store4($vararg_ptr1,$7);
  (_lua_pushfstring($0,9984,$vararg_buffer)|0);
 }
 $8 = i64_sext($4);
 _lua_pushinteger($0,$8);
 $$0 = 3;
 STACKTOP = sp;return ($$0|0);
}
function _luaL_execresult($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = i64(), $6 = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 switch ($1|0) {
 case -1:  {
  $2 = (___errno_location()|0);
  $3 = load4($2);
  _lua_pushnil($0);
  $4 = (_strerror($3)|0);
  (_lua_pushstring($0,$4)|0);
  $5 = i64_sext($3);
  _lua_pushinteger($0,$5);
  return 3;
  break;
 }
 case 0:  {
  _lua_pushboolean($0,1);
  break;
 }
 default: {
  _lua_pushnil($0);
 }
 }
 (_lua_pushstring($0,13198)|0);
 $6 = i64_sext($1);
 _lua_pushinteger($0,$6);
 return 3;
}
function _luaL_newmetatable($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_lua_getfield($0,-1001000,$1)|0);
 $3 = ($2|0)==(0);
 if (!($3)) {
  $$0 = 0;
  return ($$0|0);
 }
 _lua_settop($0,-2);
 _lua_createtable($0,0,2);
 (_lua_pushstring($0,$1)|0);
 _lua_setfield($0,-2,9991);
 _lua_pushvalue($0,-1);
 _lua_setfield($0,-1001000,$1);
 $$0 = 1;
 return ($$0|0);
}
function _luaL_setmetatable($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (_lua_getfield($0,-1001000,$1)|0);
 (_lua_setmetatable($0,-2)|0);
 return;
}
function _luaL_testudata($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$011 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_lua_touserdata($0,$1)|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$011 = 0;
  return ($$011|0);
 }
 $5 = (_lua_getmetatable($0,$1)|0);
 $6 = ($5|0)==(0);
 if ($6) {
  $$011 = 0;
  return ($$011|0);
 }
 (_lua_getfield($0,-1001000,$2)|0);
 $7 = (_lua_rawequal($0,-1,-2)|0);
 $8 = ($7|0)==(0);
 $spec$select = $8 ? 0 : $3;
 _lua_settop($0,-3);
 $$011 = $spec$select;
 return ($$011|0);
}
function _luaL_checkudata($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$011$i8 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_lua_touserdata($0,$1)|0);
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  $5 = (_lua_getmetatable($0,$1)|0);
  $6 = ($5|0)==(0);
  if (!($6)) {
   (_lua_getfield($0,-1001000,$2)|0);
   $7 = (_lua_rawequal($0,-1,-2)|0);
   $8 = ($7|0)==(0);
   _lua_settop($0,-3);
   if (!($8)) {
    $$011$i8 = $3;
    return ($$011$i8|0);
   }
  }
 }
 _typeerror($0,$1,$2);
 $$011$i8 = 0;
 return ($$011$i8|0);
}
function _typeerror($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = (_lua_getmetatable($0,$1)|0);
 $4 = ($3|0)==(0);
 do {
  if ($4) {
   label = 6;
  } else {
   (_lua_pushstring($0,9991)|0);
   $5 = (_lua_rawget($0,-2)|0);
   $6 = ($5|0)==(0);
   if ($6) {
    _lua_settop($0,-3);
    label = 6;
    break;
   }
   _lua_rotate($0,-2,-1);
   _lua_settop($0,-2);
   $7 = ($5|0)==(4);
   if ($7) {
    $8 = (_lua_tolstring($0,-1,0)|0);
    $$0 = $8;
   } else {
    label = 6;
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $9 = (_lua_type($0,$1)|0);
  $10 = ($9|0)==(2);
  if ($10) {
   $$0 = 9998;
  } else {
   $11 = (_lua_type($0,$1)|0);
   $12 = (_lua_typename($0,$11)|0);
   $$0 = $12;
  }
 }
 store4($vararg_buffer,$2);
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 store4($vararg_ptr1,$$0);
 $13 = (_lua_pushfstring($0,10013,$vararg_buffer)|0);
 (_luaL_argerror($0,$1,$13)|0);
 STACKTOP = sp;return;
}
function _luaL_checkoption($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$017 = 0, $$019 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = ($2|0)==(0|0);
 if ($4) {
  $10 = (_lua_tolstring($0,$1,0)|0);
  $11 = ($10|0)==(0|0);
  if ($11) {
   $12 = (_lua_typename($0,4)|0);
   _typeerror($0,$1,$12);
   $16 = 0;
  } else {
   $16 = $10;
  }
 } else {
  $5 = (_lua_type($0,$1)|0);
  $6 = ($5|0)<(1);
  if ($6) {
   $16 = $2;
  } else {
   $7 = (_lua_tolstring($0,$1,0)|0);
   $8 = ($7|0)==(0|0);
   if ($8) {
    $9 = (_lua_typename($0,4)|0);
    _typeerror($0,$1,$9);
    $16 = 0;
   } else {
    $16 = $7;
   }
  }
 }
 $13 = load4($3);
 $14 = ($13|0)==(0|0);
 L8: do {
  if (!($14)) {
   $$019 = 0;$15 = $13;
   while(1) {
    $17 = (_strcmp($15,$16)|0);
    $18 = ($17|0)==(0);
    if ($18) {
     $$017 = $$019;
     break;
    }
    $19 = (($$019) + 1)|0;
    $20 = (($3) + ($19<<2)|0);
    $21 = load4($20);
    $22 = ($21|0)==(0|0);
    if ($22) {
     break L8;
    } else {
     $$019 = $19;$15 = $21;
    }
   }
   STACKTOP = sp;return ($$017|0);
  }
 } while(0);
 store4($vararg_buffer,$16);
 $23 = (_lua_pushfstring($0,10033,$vararg_buffer)|0);
 $24 = (_luaL_argerror($0,$1,$23)|0);
 $$017 = $24;
 STACKTOP = sp;return ($$017|0);
}
function _luaL_optlstring($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_lua_type($0,$1)|0);
 $5 = ($4|0)<(1);
 if (!($5)) {
  $10 = (_lua_tolstring($0,$1,$3)|0);
  $11 = ($10|0)==(0|0);
  if (!($11)) {
   $$0 = $10;
   return ($$0|0);
  }
  $12 = (_lua_typename($0,4)|0);
  _typeerror($0,$1,$12);
  $$0 = 0;
  return ($$0|0);
 }
 $6 = ($3|0)==(0|0);
 if ($6) {
  $$0 = $2;
  return ($$0|0);
 }
 $7 = ($2|0)==(0|0);
 if ($7) {
  $9 = 0;
 } else {
  $8 = (_strlen($2)|0);
  $9 = $8;
 }
 store4($3,$9);
 $$0 = $2;
 return ($$0|0);
}
function _luaL_checklstring($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_lua_tolstring($0,$1,$2)|0);
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  return ($3|0);
 }
 $5 = (_lua_typename($0,4)|0);
 _typeerror($0,$1,$5);
 return ($3|0);
}
function _luaL_checktype($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_lua_type($0,$1)|0);
 $4 = ($3|0)==($2|0);
 if ($4) {
  return;
 }
 $5 = (_lua_typename($0,$2)|0);
 _typeerror($0,$1,$5);
 return;
}
function _luaL_checkany($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_lua_type($0,$1)|0);
 $3 = ($2|0)==(-1);
 if (!($3)) {
  return;
 }
 (_luaL_argerror($0,$1,13150)|0);
 return;
}
function _luaL_checknumber($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = (+_lua_tonumberx($0,$1,$2));
 $4 = load4($2);
 $5 = ($4|0)==(0);
 if (!($5)) {
  STACKTOP = sp;return (+$3);
 }
 $6 = (_lua_typename($0,3)|0);
 _typeerror($0,$1,$6);
 STACKTOP = sp;return (+$3);
}
function _luaL_optnumber($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = +$2;
 var $10 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $4 = (_lua_type($0,$1)|0);
 $5 = ($4|0)<(1);
 if ($5) {
  $10 = $2;
  STACKTOP = sp;return (+$10);
 }
 $6 = (+_lua_tonumberx($0,$1,$3));
 $7 = load4($3);
 $8 = ($7|0)==(0);
 if ($8) {
  $9 = (_lua_typename($0,3)|0);
  _typeerror($0,$1,$9);
 }
 $10 = $6;
 STACKTOP = sp;return (+$10);
}
function _luaL_checkinteger($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = i64(), $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = (i64(_lua_tointegerx($0,$1,$2)));
 $4 = load4($2);
 $5 = ($4|0)==(0);
 do {
  if ($5) {
   $6 = (_lua_isnumber($0,$1)|0);
   $7 = ($6|0)==(0);
   if ($7) {
    $8 = (_lua_typename($0,3)|0);
    _typeerror($0,$1,$8);
    break;
   } else {
    (_luaL_argerror($0,$1,10053)|0);
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return (i64($3));
}
function _luaL_optinteger($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = i64($2);
 var $10 = 0, $11 = 0, $12 = i64(), $3 = 0, $4 = 0, $5 = 0, $6 = i64(), $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $4 = (_lua_type($0,$1)|0);
 $5 = ($4|0)<(1);
 if ($5) {
  $12 = $2;
  STACKTOP = sp;return (i64($12));
 }
 $6 = (i64(_lua_tointegerx($0,$1,$3)));
 $7 = load4($3);
 $8 = ($7|0)==(0);
 do {
  if ($8) {
   $9 = (_lua_isnumber($0,$1)|0);
   $10 = ($9|0)==(0);
   if ($10) {
    $11 = (_lua_typename($0,3)|0);
    _typeerror($0,$1,$11);
    break;
   } else {
    (_luaL_argerror($0,$1,10053)|0);
    break;
   }
  }
 } while(0);
 $12 = $6;
 STACKTOP = sp;return (i64($12));
}
function _luaL_prepbuffsize($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$033 = 0, $$pre = 0, $$pre35 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $spec$select = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = ((($0)) + 12|0);
 $3 = load4($2);
 $4 = ((($0)) + 4|0);
 $5 = load4($4);
 $6 = ((($0)) + 8|0);
 $7 = load4($6);
 $8 = (($5) - ($7))|0;
 $9 = ($8>>>0)<($1>>>0);
 if (!($9)) {
  $$pre = load4($0);
  $29 = $$pre;$30 = $7;
  $28 = (($29) + ($30)|0);
  STACKTOP = sp;return ($28|0);
 }
 $10 = $5 << 1;
 $11 = (($10) - ($7))|0;
 $12 = ($11>>>0)<($1>>>0);
 $13 = (($7) + ($1))|0;
 $spec$select = $12 ? $13 : $10;
 $14 = ($spec$select>>>0)<($7>>>0);
 $15 = (($spec$select) - ($7))|0;
 $16 = ($15>>>0)<($1>>>0);
 $or$cond = $14 | $16;
 if ($or$cond) {
  (_luaL_error($3,10090,$vararg_buffer)|0);
 }
 $17 = load4($0);
 $18 = ((($0)) + 16|0);
 $19 = ($17|0)==($18|0);
 if ($19) {
  $21 = (_lua_newuserdata($3,8)|0);
  store4($21,0);
  $22 = ((($21)) + 4|0);
  store4($22,0);
  $23 = (_luaL_newmetatable($3,10107)|0);
  $24 = ($23|0)==(0);
  if (!($24)) {
   _lua_pushcclosure($3,152,0);
   _lua_setfield($3,-2,15332);
  }
  (_lua_setmetatable($3,-2)|0);
  $25 = (_resizebox($3,-1,$spec$select)|0);
  $26 = load4($0);
  $27 = load4($6);
  _memcpy(($25|0),($26|0),($27|0))|0;
  $$033 = $25;
 } else {
  $20 = (_resizebox($3,-1,$spec$select)|0);
  $$033 = $20;
 }
 store4($0,$$033);
 store4($4,$spec$select);
 $$pre35 = load4($6);
 $29 = $$033;$30 = $$pre35;
 $28 = (($29) + ($30)|0);
 STACKTOP = sp;return ($28|0);
}
function _resizebox($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $vararg_buffer = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = sp + 8|0;
 $4 = sp + 4|0;
 $5 = (_lua_getallocf($0,$4)|0);
 $6 = (_lua_touserdata($0,$1)|0);
 $7 = load4($4);
 $8 = load4($6);
 $9 = ((($6)) + 4|0);
 $10 = load4($9);
 $11 = (FUNCTION_TABLE_iiiii[$5 & 3]($7,$8,$10,$2)|0);
 $12 = ($11|0)==(0|0);
 $13 = ($2|0)!=(0);
 $or$cond = $13 & $12;
 if (!($or$cond)) {
  store4($6,$11);
  store4($9,$2);
  STACKTOP = sp;return ($11|0);
 }
 $14 = (_lua_getallocf($0,$3)|0);
 $15 = (_lua_touserdata($0,$1)|0);
 $16 = load4($3);
 $17 = load4($15);
 $18 = ((($15)) + 4|0);
 $19 = load4($18);
 $20 = (FUNCTION_TABLE_iiiii[$14 & 3]($16,$17,$19,0)|0);
 store4($15,$20);
 store4($18,0);
 (_luaL_error($0,10114,$vararg_buffer)|0);
 store4($6,$11);
 store4($9,$2);
 STACKTOP = sp;return ($11|0);
}
function _boxgc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = (_lua_getallocf($0,$1)|0);
 $3 = (_lua_touserdata($0,1)|0);
 $4 = load4($1);
 $5 = load4($3);
 $6 = ((($3)) + 4|0);
 $7 = load4($6);
 $8 = (FUNCTION_TABLE_iiiii[$2 & 3]($4,$5,$7,0)|0);
 store4($3,$8);
 store4($6,0);
 STACKTOP = sp;return 0;
}
function _luaL_addlstring($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if ($3) {
  return;
 }
 $4 = (_luaL_prepbuffsize($0,$2)|0);
 _memcpy(($4|0),($1|0),($2|0))|0;
 $5 = ((($0)) + 8|0);
 $6 = load4($5);
 $7 = (($6) + ($2))|0;
 store4($5,$7);
 return;
}
function _luaL_addstring($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strlen($1)|0);
 $3 = ($2|0)==(0);
 if ($3) {
  return;
 }
 $4 = (_luaL_prepbuffsize($0,$2)|0);
 _memcpy(($4|0),($1|0),($2|0))|0;
 $5 = ((($0)) + 8|0);
 $6 = load4($5);
 $7 = (($6) + ($2))|0;
 store4($5,$7);
 return;
}
function _luaL_pushresult($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = ((($0)) + 12|0);
 $3 = load4($2);
 $4 = load4($0);
 $5 = ((($0)) + 8|0);
 $6 = load4($5);
 (_lua_pushlstring($3,$4,$6)|0);
 $7 = load4($0);
 $8 = ((($0)) + 16|0);
 $9 = ($7|0)==($8|0);
 if ($9) {
  STACKTOP = sp;return;
 }
 $10 = (_lua_getallocf($3,$1)|0);
 $11 = (_lua_touserdata($3,-2)|0);
 $12 = load4($1);
 $13 = load4($11);
 $14 = ((($11)) + 4|0);
 $15 = load4($14);
 $16 = (FUNCTION_TABLE_iiiii[$10 & 3]($12,$13,$15,0)|0);
 store4($11,$16);
 store4($14,0);
 _lua_rotate($3,-2,-1);
 _lua_settop($3,-2);
 STACKTOP = sp;return;
}
function _luaL_pushresultsize($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = load4($2);
 $4 = (($3) + ($1))|0;
 store4($2,$4);
 _luaL_pushresult($0);
 return;
}
function _luaL_addvalue($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = ((($0)) + 12|0);
 $3 = load4($2);
 $4 = (_lua_tolstring($3,-1,$1)|0);
 $5 = load4($0);
 $6 = ((($0)) + 16|0);
 $7 = ($5|0)==($6|0);
 if (!($7)) {
  _lua_rotate($3,-2,1);
 }
 $8 = load4($1);
 $9 = ($8|0)==(0);
 if (!($9)) {
  $10 = (_luaL_prepbuffsize($0,$8)|0);
  _memcpy(($10|0),($4|0),($8|0))|0;
  $11 = ((($0)) + 8|0);
  $12 = load4($11);
  $13 = (($12) + ($8))|0;
  store4($11,$13);
 }
 $14 = load4($0);
 $15 = ($14|0)==($6|0);
 $16 = $15 ? -1 : -2;
 _lua_rotate($3,$16,-1);
 _lua_settop($3,-2);
 STACKTOP = sp;return;
}
function _luaL_buffinit($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 12|0);
 store4($2,$0);
 $3 = ((($1)) + 16|0);
 store4($1,$3);
 $4 = ((($1)) + 8|0);
 store4($4,0);
 $5 = ((($1)) + 4|0);
 store4($5,4096);
 return;
}
function _luaL_buffinitsize($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 12|0);
 store4($3,$0);
 $4 = ((($1)) + 16|0);
 store4($1,$4);
 $5 = ((($1)) + 8|0);
 store4($5,0);
 $6 = ((($1)) + 4|0);
 store4($6,4096);
 $7 = (_luaL_prepbuffsize($1,$2)|0);
 return ($7|0);
}
function _luaL_loadfilex($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$pr = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer6 = 0, $vararg_ptr10 = 0, $vararg_ptr14 = 0, $vararg_ptr15 = 0, $vararg_ptr4 = 0;
 var $vararg_ptr5 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1088|0;
 $vararg_buffer11 = sp + 40|0;
 $vararg_buffer6 = sp + 24|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = sp + 56|0;
 $4 = sp + 52|0;
 $5 = (_lua_gettop($0)|0);
 $6 = (($5) + 1)|0;
 $7 = ($1|0)==(0|0);
 if ($7) {
  (_lua_pushstring($0,10154)|0);
  $8 = load4(7368);
  $9 = ((($3)) + 4|0);
  store4($9,$8);
 } else {
  store4($vararg_buffer,$1);
  (_lua_pushfstring($0,10161,$vararg_buffer)|0);
  $10 = (_fopen($1,15927)|0);
  $11 = ((($3)) + 4|0);
  store4($11,$10);
  $12 = ($10|0)==(0|0);
  if ($12) {
   $13 = (___errno_location()|0);
   $14 = load4($13);
   $15 = (_strerror($14)|0);
   $16 = (_lua_tolstring($0,$6,0)|0);
   $17 = ((($16)) + 1|0);
   store4($vararg_buffer1,12750);
   $vararg_ptr4 = ((($vararg_buffer1)) + 4|0);
   store4($vararg_ptr4,$17);
   $vararg_ptr5 = ((($vararg_buffer1)) + 8|0);
   store4($vararg_ptr5,$15);
   (_lua_pushfstring($0,10165,$vararg_buffer1)|0);
   _lua_rotate($0,$6,-1);
   _lua_settop($0,-2);
   $$0 = 7;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $18 = (_skipcomment($3,$4)|0);
 $19 = ($18|0)==(0);
 if (!($19)) {
  $20 = load4($3);
  $21 = (($20) + 1)|0;
  store4($3,$21);
  $22 = (((($3)) + 8|0) + ($20)|0);
  store1($22,10);
 }
 $23 = load4($4);
 $24 = ($23|0)==(27);
 $25 = ($1|0)!=(0|0);
 $or$cond = $25 & $24;
 do {
  if ($or$cond) {
   $26 = ((($3)) + 4|0);
   $27 = load4($26);
   $28 = (_freopen($1,10182,$27)|0);
   store4($26,$28);
   $29 = ($28|0)==(0|0);
   if (!($29)) {
    (_skipcomment($3,$4)|0);
    $$pr = load4($4);
    $35 = $$pr;
    break;
   }
   $30 = (___errno_location()|0);
   $31 = load4($30);
   $32 = (_strerror($31)|0);
   $33 = (_lua_tolstring($0,$6,0)|0);
   $34 = ((($33)) + 1|0);
   store4($vararg_buffer6,10185);
   $vararg_ptr9 = ((($vararg_buffer6)) + 4|0);
   store4($vararg_ptr9,$34);
   $vararg_ptr10 = ((($vararg_buffer6)) + 8|0);
   store4($vararg_ptr10,$32);
   (_lua_pushfstring($0,10165,$vararg_buffer6)|0);
   _lua_rotate($0,$6,-1);
   _lua_settop($0,-2);
   $$0 = 7;
   STACKTOP = sp;return ($$0|0);
  } else {
   $35 = $23;
  }
 } while(0);
 $36 = ($35|0)==(-1);
 if (!($36)) {
  $37 = $35&255;
  $38 = load4($3);
  $39 = (($38) + 1)|0;
  store4($3,$39);
  $40 = (((($3)) + 8|0) + ($38)|0);
  store1($40,$37);
 }
 $41 = (_lua_tolstring($0,-1,0)|0);
 $42 = (_lua_load($0,5,$3,$41,$2)|0);
 $43 = ((($3)) + 4|0);
 $44 = load4($43);
 $45 = (_ferror($44)|0);
 if ($25) {
  (_fclose($44)|0);
 }
 $46 = ($45|0)==(0);
 if ($46) {
  _lua_rotate($0,$6,-1);
  _lua_settop($0,-2);
  $$0 = $42;
  STACKTOP = sp;return ($$0|0);
 } else {
  _lua_settop($0,$6);
  $47 = (___errno_location()|0);
  $48 = load4($47);
  $49 = (_strerror($48)|0);
  $50 = (_lua_tolstring($0,$6,0)|0);
  $51 = ((($50)) + 1|0);
  store4($vararg_buffer11,12528);
  $vararg_ptr14 = ((($vararg_buffer11)) + 4|0);
  store4($vararg_ptr14,$51);
  $vararg_ptr15 = ((($vararg_buffer11)) + 8|0);
  store4($vararg_ptr15,$49);
  (_lua_pushfstring($0,10165,$vararg_buffer11)|0);
  _lua_rotate($0,$6,-1);
  _lua_settop($0,-2);
  $$0 = 7;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _skipcomment($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$0$ph = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 store4($0,0);
 $2 = ((($0)) + 4|0);
 $3 = load4($2);
 $4 = (_getc($3)|0);
 L1: do {
  switch ($4|0) {
  case -1:  {
   $$0$ph = 0;$$sink = $4;
   break;
  }
  case 239:  {
   $5 = load4($0);
   $6 = (($5) + 1)|0;
   store4($0,$6);
   $7 = (((($0)) + 8|0) + ($5)|0);
   store1($7,-17);
   $8 = load4($2);
   $9 = (_getc($8)|0);
   switch ($9|0) {
   case -1:  {
    $$0$ph = 0;$$sink = $9;
    break L1;
    break;
   }
   case 187:  {
    break;
   }
   default: {
    $$0$i = $9;
    label = 5;
    break L1;
   }
   }
   $10 = load4($0);
   $11 = (($10) + 1)|0;
   store4($0,$11);
   $12 = (((($0)) + 8|0) + ($10)|0);
   store1($12,-69);
   $13 = load4($2);
   $14 = (_getc($13)|0);
   switch ($14|0) {
   case -1:  {
    $$0$ph = 0;$$sink = $14;
    break L1;
    break;
   }
   case 191:  {
    break;
   }
   default: {
    $$0$i = $14;
    label = 5;
    break L1;
   }
   }
   $15 = load4($0);
   $16 = (((($0)) + 8|0) + ($15)|0);
   store1($16,-65);
   store4($0,0);
   $17 = load4($2);
   $18 = (_getc($17)|0);
   $$0$i = $18;
   label = 5;
   break;
  }
  default: {
   $$0$i = $4;
   label = 5;
  }
  }
 } while(0);
 if ((label|0) == 5) {
  store4($1,$$0$i);
  $19 = ($$0$i|0)==(35);
  if (!($19)) {
   $$0 = 0;
   return ($$0|0);
  }
  L10: while(1) {
   $20 = load4($2);
   $21 = (_getc($20)|0);
   switch ($21|0) {
   case 10: case -1:  {
    break L10;
    break;
   }
   default: {
   }
   }
  }
  $22 = load4($2);
  $23 = (_getc($22)|0);
  $$0$ph = 1;$$sink = $23;
 }
 store4($1,$$sink);
 $$0 = $$0$ph;
 return ($$0|0);
}
function _getF($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$pre = 0, $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = load4($1);
 $4 = ($3|0)>(0);
 if ($4) {
  store4($2,$3);
  store4($1,0);
  $$pre = ((($1)) + 8|0);
  $$0 = $$pre;
  return ($$0|0);
 }
 $5 = ((($1)) + 4|0);
 $6 = load4($5);
 $7 = (_feof($6)|0);
 $8 = ($7|0)==(0);
 if (!($8)) {
  $$0 = 0;
  return ($$0|0);
 }
 $9 = ((($1)) + 8|0);
 $10 = load4($5);
 $11 = (_fread($9,1,1024,$10)|0);
 store4($2,$11);
 $$0 = $9;
 return ($$0|0);
}
function _luaL_loadbufferx($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $5 = sp;
 store4($5,$1);
 $6 = ((($5)) + 4|0);
 store4($6,$2);
 $7 = (_lua_load($0,6,$5,$3,$4)|0);
 STACKTOP = sp;return ($7|0);
}
function _getS($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 4|0);
 $4 = load4($3);
 $5 = ($4|0)==(0);
 if ($5) {
  $$0 = 0;
  return ($$0|0);
 }
 store4($2,$4);
 store4($3,0);
 $6 = load4($1);
 $$0 = $6;
 return ($$0|0);
}
function _luaL_loadstring($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = (_strlen($1)|0);
 store4($2,$1);
 $4 = ((($2)) + 4|0);
 store4($4,$3);
 $5 = (_lua_load($0,6,$2,$1,0)|0);
 STACKTOP = sp;return ($5|0);
}
function _luaL_getmetafield($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_lua_getmetatable($0,$1)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  $$0 = 0;
  return ($$0|0);
 }
 (_lua_pushstring($0,$2)|0);
 $5 = (_lua_rawget($0,-2)|0);
 $6 = ($5|0)==(0);
 if ($6) {
  _lua_settop($0,-3);
  $$0 = 0;
  return ($$0|0);
 } else {
  _lua_rotate($0,-2,-1);
  _lua_settop($0,-2);
  $$0 = $5;
  return ($$0|0);
 }
 return (0)|0;
}
function _luaL_callmeta($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_lua_absindex($0,$1)|0);
 $4 = (_lua_getmetatable($0,$3)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  $$0 = 0;
  return ($$0|0);
 }
 (_lua_pushstring($0,$2)|0);
 $6 = (_lua_rawget($0,-2)|0);
 $7 = ($6|0)==(0);
 if ($7) {
  _lua_settop($0,-3);
  $$0 = 0;
  return ($$0|0);
 } else {
  _lua_rotate($0,-2,-1);
  _lua_settop($0,-2);
  _lua_pushvalue($0,$3);
  _lua_callk($0,1,1,0,0);
  $$0 = 1;
  return ($$0|0);
 }
 return (0)|0;
}
function _luaL_len($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = i64(), $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = sp + 4|0;
 _lua_len($0,$1);
 $3 = (i64(_lua_tointegerx($0,-1,$2)));
 $4 = load4($2);
 $5 = ($4|0)==(0);
 if ($5) {
  (_luaL_error($0,10192,$vararg_buffer)|0);
 }
 _lua_settop($0,-2);
 STACKTOP = sp;return (i64($3));
}
function _luaL_tolstring($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i33 = 0, $$0$i34 = 0, $10 = i64(), $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer6 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer6 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = (_luaL_callmeta($0,$1,12552)|0);
 $4 = ($3|0)==(0);
 L1: do {
  if ($4) {
   $7 = (_lua_type($0,$1)|0);
   switch ($7|0) {
   case 3:  {
    $8 = (_lua_isinteger($0,$1)|0);
    $9 = ($8|0)==(0);
    if ($9) {
     $11 = (+_lua_tonumberx($0,$1,0));
     stored($vararg_buffer3,$11);
     (_lua_pushfstring($0,10261,$vararg_buffer3)|0);
     break L1;
    } else {
     $10 = (i64(_lua_tointegerx($0,$1,0)));
     store8($vararg_buffer1,$10);
     (_lua_pushfstring($0,10258,$vararg_buffer1)|0);
     break L1;
    }
    break;
   }
   case 4:  {
    _lua_pushvalue($0,$1);
    break L1;
    break;
   }
   case 1:  {
    $12 = (_lua_toboolean($0,$1)|0);
    $13 = ($12|0)==(0);
    $14 = $13 ? 10637 : 10696;
    (_lua_pushstring($0,$14)|0);
    break L1;
    break;
   }
   case 0:  {
    (_lua_pushstring($0,10673)|0);
    break L1;
    break;
   }
   default: {
    $15 = (_lua_getmetatable($0,$1)|0);
    $16 = ($15|0)==(0);
    do {
     if ($16) {
      $$0$i34 = 0;
      label = 16;
     } else {
      (_lua_pushstring($0,9991)|0);
      $17 = (_lua_rawget($0,-2)|0);
      $18 = ($17|0)==(0);
      if ($18) {
       _lua_settop($0,-3);
       $$0$i34 = 0;
       label = 16;
       break;
      }
      _lua_rotate($0,-2,-1);
      _lua_settop($0,-2);
      $19 = ($17|0)==(4);
      if ($19) {
       $20 = (_lua_tolstring($0,-1,0)|0);
       $$0$i33 = 4;$24 = $20;
      } else {
       $$0$i34 = $17;
       label = 16;
      }
     }
    } while(0);
    if ((label|0) == 16) {
     $21 = (_lua_type($0,$1)|0);
     $22 = (_lua_typename($0,$21)|0);
     $$0$i33 = $$0$i34;$24 = $22;
    }
    $23 = (_lua_topointer($0,$1)|0);
    store4($vararg_buffer6,$24);
    $vararg_ptr9 = ((($vararg_buffer6)) + 4|0);
    store4($vararg_ptr9,$23);
    (_lua_pushfstring($0,10264,$vararg_buffer6)|0);
    $25 = ($$0$i33|0)==(0);
    if ($25) {
     break L1;
    }
    _lua_rotate($0,-2,-1);
    _lua_settop($0,-2);
    break L1;
   }
   }
  } else {
   $5 = (_lua_isstring($0,-1)|0);
   $6 = ($5|0)==(0);
   if ($6) {
    (_luaL_error($0,10224,$vararg_buffer)|0);
   }
  }
 } while(0);
 $26 = (_lua_tolstring($0,-1,$2)|0);
 STACKTOP = sp;return ($26|0);
}
function _luaL_setfuncs($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$017$us = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = (_lua_checkstack($0,$2)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  store4($vararg_buffer,10271);
  (_luaL_error($0,9875,$vararg_buffer)|0);
 }
 $5 = load4($1);
 $6 = ($5|0)==(0|0);
 if ($6) {
  $25 = $2 ^ -1;
  _lua_settop($0,$25);
  STACKTOP = sp;return;
 }
 $7 = ($2|0)>(0);
 $8 = (-2 - ($2))|0;
 $9 = (0 - ($2))|0;
 if (!($7)) {
  $19 = $1;
  while(1) {
   $18 = ((($19)) + 4|0);
   $20 = load4($18);
   _lua_pushcclosure($0,$20,$2);
   $21 = load4($19);
   _lua_setfield($0,$8,$21);
   $22 = ((($19)) + 8|0);
   $23 = load4($22);
   $24 = ($23|0)==(0|0);
   if ($24) {
    break;
   } else {
    $19 = $22;
   }
  }
  $25 = $2 ^ -1;
  _lua_settop($0,$25);
  STACKTOP = sp;return;
 }
 $12 = $1;
 while(1) {
  $$017$us = 0;
  while(1) {
   _lua_pushvalue($0,$9);
   $10 = (($$017$us) + 1)|0;
   $exitcond = ($10|0)==($2|0);
   if ($exitcond) {
    break;
   } else {
    $$017$us = $10;
   }
  }
  $11 = ((($12)) + 4|0);
  $13 = load4($11);
  _lua_pushcclosure($0,$13,$2);
  $14 = load4($12);
  _lua_setfield($0,$8,$14);
  $15 = ((($12)) + 8|0);
  $16 = load4($15);
  $17 = ($16|0)==(0|0);
  if ($17) {
   break;
  } else {
   $12 = $15;
  }
 }
 $25 = $2 ^ -1;
 _lua_settop($0,$25);
 STACKTOP = sp;return;
}
function _luaL_getsubtable($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_lua_getfield($0,$1,$2)|0);
 $4 = ($3|0)==(5);
 if ($4) {
  $$0 = 1;
  return ($$0|0);
 }
 _lua_settop($0,-2);
 $5 = (_lua_absindex($0,$1)|0);
 _lua_createtable($0,0,0);
 _lua_pushvalue($0,-1);
 _lua_setfield($0,$5,$2);
 $$0 = 0;
 return ($$0|0);
}
function _luaL_requiref($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_lua_getfield($0,-1001000,15615)|0);
 $5 = ($4|0)==(5);
 if (!($5)) {
  _lua_settop($0,-2);
  $6 = (_lua_absindex($0,-1001000)|0);
  _lua_createtable($0,0,0);
  _lua_pushvalue($0,-1);
  _lua_setfield($0,$6,15615);
 }
 (_lua_getfield($0,-1,$1)|0);
 $7 = (_lua_toboolean($0,-1)|0);
 $8 = ($7|0)==(0);
 if ($8) {
  _lua_settop($0,-2);
  _lua_pushcclosure($0,$2,0);
  (_lua_pushstring($0,$1)|0);
  _lua_callk($0,1,1,0,0);
  _lua_pushvalue($0,-1);
  _lua_setfield($0,-3,$1);
 }
 _lua_rotate($0,-2,-1);
 _lua_settop($0,-2);
 $9 = ($3|0)==(0);
 if ($9) {
  return;
 }
 _lua_pushvalue($0,-1);
 _lua_setglobal($0,$1);
 return;
}
function _luaL_gsub($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$lcssa = 0, $$014 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4128|0;
 $4 = sp + 4112|0;
 $5 = sp;
 $6 = (_strlen($2)|0);
 $7 = ((($5)) + 12|0);
 store4($7,$0);
 $8 = ((($5)) + 16|0);
 store4($5,$8);
 $9 = ((($5)) + 8|0);
 store4($9,0);
 $10 = ((($5)) + 4|0);
 store4($10,4096);
 $11 = (_strstr($1,$2)|0);
 $12 = ($11|0)==(0|0);
 if ($12) {
  $$0$lcssa = $1;$47 = 0;
 } else {
  $$014 = $1;$13 = $11;$48 = 0;
  while(1) {
   $14 = $13;
   $15 = $$014;
   $16 = (($14) - ($15))|0;
   $17 = ($16|0)==(0);
   if ($17) {
    $49 = $48;
   } else {
    $18 = (_luaL_prepbuffsize($5,$16)|0);
    _memcpy(($18|0),($$014|0),($16|0))|0;
    $19 = load4($9);
    $20 = (($19) + ($16))|0;
    store4($9,$20);
    $49 = $20;
   }
   $21 = (_strlen($3)|0);
   $22 = ($21|0)==(0);
   if ($22) {
    $50 = $49;
   } else {
    $23 = (_luaL_prepbuffsize($5,$21)|0);
    _memcpy(($23|0),($3|0),($21|0))|0;
    $24 = load4($9);
    $25 = (($24) + ($21))|0;
    store4($9,$25);
    $50 = $25;
   }
   $26 = (($13) + ($6)|0);
   $27 = (_strstr($26,$2)|0);
   $28 = ($27|0)==(0|0);
   if ($28) {
    $$0$lcssa = $26;$47 = $50;
    break;
   } else {
    $$014 = $26;$13 = $27;$48 = $50;
   }
  }
 }
 $29 = (_strlen($$0$lcssa)|0);
 $30 = ($29|0)==(0);
 if ($30) {
  $36 = $47;
 } else {
  $31 = (_luaL_prepbuffsize($5,$29)|0);
  _memcpy(($31|0),($$0$lcssa|0),($29|0))|0;
  $32 = load4($9);
  $33 = (($32) + ($29))|0;
  store4($9,$33);
  $36 = $33;
 }
 $34 = load4($7);
 $35 = load4($5);
 (_lua_pushlstring($34,$35,$36)|0);
 $37 = load4($5);
 $38 = ($37|0)==($8|0);
 if ($38) {
  $46 = (_lua_tolstring($0,-1,0)|0);
  STACKTOP = sp;return ($46|0);
 }
 $39 = (_lua_getallocf($34,$4)|0);
 $40 = (_lua_touserdata($34,-2)|0);
 $41 = load4($4);
 $42 = load4($40);
 $43 = ((($40)) + 4|0);
 $44 = load4($43);
 $45 = (FUNCTION_TABLE_iiiii[$39 & 3]($41,$42,$44,0)|0);
 store4($40,$45);
 store4($43,0);
 _lua_rotate($34,-2,-1);
 _lua_settop($34,-2);
 $46 = (_lua_tolstring($0,-1,0)|0);
 STACKTOP = sp;return ($46|0);
}
function _luaL_newstate() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_lua_newstate(2,0)|0);
 $1 = ($0|0)==(0|0);
 if ($1) {
  return ($0|0);
 }
 (_lua_atpanic($0,153)|0);
 return ($0|0);
}
function _l_alloc($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($3|0)==(0);
 if ($4) {
  _free($1);
  $$0 = 0;
 } else {
  $5 = (_realloc($1,$3)|0);
  $$0 = $5;
 }
 return ($$0|0);
}
function _panic($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = load4(7364);
 $2 = (_lua_tolstring($0,-1,0)|0);
 store4($vararg_buffer,$2);
 (_fprintf($1,10289,$vararg_buffer)|0);
 (_fflush($1)|0);
 STACKTOP = sp;return 0;
}
function _luaL_checkversion_($0,$1,$2) {
 $0 = $0|0;
 $1 = +$1;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_ptr5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = (_lua_version($0)|0);
 $4 = ($2|0)==(136);
 if (!($4)) {
  (_luaL_error($0,10339,$vararg_buffer)|0);
 }
 $5 = (_lua_version(0)|0);
 $6 = ($3|0)==($5|0);
 if (!($6)) {
  (_luaL_error($0,10388,$vararg_buffer1)|0);
  STACKTOP = sp;return;
 }
 $7 = loadd($3);
 $8 = $7 != $1;
 if (!($8)) {
  STACKTOP = sp;return;
 }
 stored($vararg_buffer3,$1);
 $vararg_ptr5 = ((($vararg_buffer3)) + 8|0);
 stored($vararg_ptr5,$7);
 (_luaL_error($0,10414,$vararg_buffer3)|0);
 STACKTOP = sp;return;
}
function _luaL_openlibs($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_requiref($0,11105,154,1);
 _lua_settop($0,-2);
 _luaL_requiref($0,10468,155,1);
 _lua_settop($0,-2);
 _luaL_requiref($0,10476,156,1);
 _lua_settop($0,-2);
 _luaL_requiref($0,10486,157,1);
 _lua_settop($0,-2);
 _luaL_requiref($0,10492,158,1);
 _lua_settop($0,-2);
 _luaL_requiref($0,10495,159,1);
 _lua_settop($0,-2);
 _luaL_requiref($0,11057,160,1);
 _lua_settop($0,-2);
 _luaL_requiref($0,10498,161,1);
 _lua_settop($0,-2);
 _luaL_requiref($0,10503,162,1);
 _lua_settop($0,-2);
 _luaL_requiref($0,11928,163,1);
 _lua_settop($0,-2);
 _luaL_requiref($0,10508,164,1);
 _lua_settop($0,-2);
 return;
}
function _luaK_nil($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$042 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var $or$cond44 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (($2) + ($1))|0;
 $4 = (($3) + 511)|0;
 $5 = ((($0)) + 16|0);
 $6 = load4($5);
 $7 = ((($0)) + 20|0);
 $8 = load4($7);
 $9 = ($6|0)>($8|0);
 do {
  if ($9) {
   $10 = load4($0);
   $11 = ((($10)) + 48|0);
   $12 = load4($11);
   $13 = (($6) + -1)|0;
   $14 = (($12) + ($13<<2)|0);
   $15 = load4($14);
   $16 = $15 & 63;
   $17 = ($16|0)==(4);
   if ($17) {
    $18 = $15 >>> 6;
    $19 = $18 & 255;
    $20 = $15 >>> 23;
    $21 = (($19) + ($20))|0;
    $22 = ($19|0)>($1|0);
    $23 = (($21) + 1)|0;
    $24 = ($23|0)<($1|0);
    $or$cond = $22 | $24;
    if ($or$cond) {
     $25 = ($19|0)<($1|0);
     $26 = ($19|0)>($3|0);
     $or$cond44 = $25 | $26;
     if ($or$cond44) {
      break;
     }
    }
    $27 = ($19|0)<($1|0);
    $spec$select = $27 ? $19 : $1;
    $28 = ($21|0)<($3|0);
    $$042 = $28 ? $4 : $21;
    $29 = $15 & 8372287;
    $30 = $spec$select << 6;
    $31 = $30 & 16320;
    $32 = $31 | $29;
    $33 = (($$042) - ($spec$select))|0;
    $34 = $33 << 23;
    $35 = $32 | $34;
    store4($14,$35);
    return;
   }
  }
 } while(0);
 $36 = $1 << 6;
 $37 = $2 << 23;
 $38 = (($37) + -8388608)|0;
 $39 = $36 | $38;
 $40 = $39 | 4;
 (_luaK_code($0,$40)|0);
 return;
}
function _luaK_code($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i$i = 0, $$0$i$i5$i = 0, $$012$i$i = 0, $$idx$val$idx$i$phi$trans$insert$i = 0, $$idx$val$idx$val$i$pre$i = 0, $$neg11$i$i = 0, $$neg11$i$i$i = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$phi27Z2D = 0, $$pre21 = 0, $$pre22 = 0, $$pre23 = 0, $$pre24 = 0, $$pre26 = 0, $$sink = 0, $$sink28 = 0, $10 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, $ispos$i$i = 0, $ispos$i$i$i = 0, $neg$i$i = 0, $neg$i$i$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = load4($0);
 $3 = ((($0)) + 24|0);
 $4 = load4($3);
 $5 = ((($0)) + 16|0);
 $6 = load4($5);
 $7 = ($4|0)==(-1);
 do {
  if ($7) {
   $51 = $6;
  } else {
   $$idx$val$idx$i$phi$trans$insert$i = ((($2)) + 48|0);
   $$idx$val$idx$val$i$pre$i = load4($$idx$val$idx$i$phi$trans$insert$i);
   $$012$i$i = $4;
   while(1) {
    $8 = (($$idx$val$idx$val$i$pre$i) + ($$012$i$i<<2)|0);
    $9 = load4($8);
    $10 = $9 >>> 14;
    $11 = (($10) + -131071)|0;
    $12 = ($11|0)==(-1);
    $13 = (($$012$i$i) + 1)|0;
    $14 = (($13) + ($11))|0;
    $$0$i$i$i = $12 ? -1 : $14;
    $15 = ($$012$i$i|0)>(0);
    if ($15) {
     $16 = ((($8)) + -4|0);
     $17 = load4($16);
     $18 = $17 & 63;
     $19 = (1280 + ($18)|0);
     $20 = load1($19);
     $21 = ($20<<24>>24)<(0);
     if ($21) {
      $$0$i$i5$i = $16;$23 = $17;
     } else {
      label = 5;
     }
    } else {
     label = 5;
    }
    if ((label|0) == 5) {
     label = 0;
     $$0$i$i5$i = $8;$23 = $9;
    }
    $22 = $23 & 63;
    $24 = ($22|0)==(35);
    if ($24) {
     $25 = $23 & 8372224;
     $26 = $23 >>> 23;
     $27 = $26 << 6;
     $28 = $25 | $27;
     $29 = $28 | 34;
     store4($$0$i$i5$i,$29);
     $$neg11$i$i = $$012$i$i ^ -1;
     $30 = (($6) + ($$neg11$i$i))|0;
     $ispos$i$i = ($30|0)>(-1);
     $neg$i$i = (0 - ($30))|0;
     $31 = $ispos$i$i ? $30 : $neg$i$i;
     $32 = ($31|0)>(131071);
     if ($32) {
      label = 8;
      break;
     }
     $35 = load4($8);
     $36 = $35 & 16383;
     $37 = $30 << 14;
     $38 = (($37) + 2147467264)|0;
     $$sink = $36;$$sink28 = $38;
    } else {
     $$neg11$i$i$i = $$012$i$i ^ -1;
     $39 = (($6) + ($$neg11$i$i$i))|0;
     $ispos$i$i$i = ($39|0)>(-1);
     $neg$i$i$i = (0 - ($39))|0;
     $40 = $ispos$i$i$i ? $39 : $neg$i$i$i;
     $41 = ($40|0)>(131071);
     if ($41) {
      label = 11;
      break;
     }
     $44 = $9 & 16383;
     $45 = $39 << 14;
     $46 = (($45) + 2147467264)|0;
     $$sink = $46;$$sink28 = $44;
    }
    $47 = $$sink | $$sink28;
    store4($8,$47);
    $48 = ($$0$i$i$i|0)==(-1);
    if ($48) {
     label = 14;
     break;
    } else {
     $$012$i$i = $$0$i$i$i;
    }
   }
   if ((label|0) == 8) {
    $33 = ((($0)) + 8|0);
    $34 = load4($33);
    _luaX_syntaxerror($34,10514);
    // unreachable;
   }
   else if ((label|0) == 11) {
    $42 = ((($0)) + 8|0);
    $43 = load4($42);
    _luaX_syntaxerror($43,10514);
    // unreachable;
   }
   else if ((label|0) == 14) {
    $$pre = load4($5);
    $51 = $$pre;
    break;
   }
  }
 } while(0);
 store4($3,-1);
 $49 = ((($2)) + 20|0);
 $50 = load4($49);
 $52 = ($51|0)<($50|0);
 if ($52) {
  $$phi$trans$insert = ((($2)) + 48|0);
  $$pre21 = load4($$phi$trans$insert);
  $61 = $$pre21;$62 = $51;
 } else {
  $53 = ((($0)) + 8|0);
  $54 = load4($53);
  $55 = ((($54)) + 52|0);
  $56 = load4($55);
  $57 = ((($2)) + 48|0);
  $58 = load4($57);
  $59 = (_luaM_growaux_($56,$58,$49,4,2147483647,10541)|0);
  store4($57,$59);
  $$pre22 = load4($5);
  $61 = $59;$62 = $$pre22;
 }
 $60 = (($61) + ($62<<2)|0);
 store4($60,$1);
 $63 = load4($5);
 $64 = ((($2)) + 24|0);
 $65 = load4($64);
 $66 = ($63|0)<($65|0);
 $$pre24 = ((($0)) + 8|0);
 if ($66) {
  $$pre26 = ((($2)) + 56|0);
  $$pre$phi27Z2D = $$pre26;$78 = $63;
  $73 = load4($$pre24);
  $74 = ((($73)) + 8|0);
  $75 = load4($74);
  $76 = load4($$pre$phi27Z2D);
  $77 = (($76) + ($78<<2)|0);
  store4($77,$75);
  $79 = load4($5);
  $80 = (($79) + 1)|0;
  store4($5,$80);
  return ($79|0);
 } else {
  $67 = load4($$pre24);
  $68 = ((($67)) + 52|0);
  $69 = load4($68);
  $70 = ((($2)) + 56|0);
  $71 = load4($70);
  $72 = (_luaM_growaux_($69,$71,$64,4,2147483647,10541)|0);
  store4($70,$72);
  $$pre23 = load4($5);
  $$pre$phi27Z2D = $70;$78 = $$pre23;
  $73 = load4($$pre24);
  $74 = ((($73)) + 8|0);
  $75 = load4($74);
  $76 = load4($$pre$phi27Z2D);
  $77 = (($76) + ($78<<2)|0);
  store4($77,$75);
  $79 = load4($5);
  $80 = (($79) + 1)|0;
  store4($5,$80);
  return ($79|0);
 }
 return (0)|0;
}
function _luaK_codeABC($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = $2 << 6;
 $6 = $5 | $1;
 $7 = $3 << 23;
 $8 = $6 | $7;
 $9 = $4 << 14;
 $10 = $8 | $9;
 $11 = (_luaK_code($0,$10)|0);
 return ($11|0);
}
function _luaK_concat($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$i = 0, $$idx$val = 0, $$idx$val$idx = 0, $$idx$val$idx$val = 0, $$neg11$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ispos$i = 0, $neg$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(-1);
 if ($3) {
  return;
 }
 $4 = load4($1);
 $5 = ($4|0)==(-1);
 if ($5) {
  store4($1,$2);
  return;
 }
 $$idx$val = load4($0);
 $$idx$val$idx = ((($$idx$val)) + 48|0);
 $$idx$val$idx$val = load4($$idx$val$idx);
 $$0 = $4;
 while(1) {
  $6 = (($$idx$val$idx$val) + ($$0<<2)|0);
  $7 = load4($6);
  $8 = $7 >>> 14;
  $9 = (($8) + -131071)|0;
  $10 = ($9|0)==(-1);
  $11 = (($$0) + 1)|0;
  $12 = (($11) + ($9))|0;
  $$0$i = $10 ? -1 : $12;
  $13 = ($$0$i|0)==(-1);
  if ($13) {
   break;
  } else {
   $$0 = $$0$i;
  }
 }
 $$neg11$i = $$0 ^ -1;
 $14 = (($$neg11$i) + ($2))|0;
 $ispos$i = ($14|0)>(-1);
 $neg$i = (0 - ($14))|0;
 $15 = $ispos$i ? $14 : $neg$i;
 $16 = ($15|0)>(131071);
 if ($16) {
  $17 = ((($0)) + 8|0);
  $18 = load4($17);
  _luaX_syntaxerror($18,10514);
  // unreachable;
 }
 $19 = $7 & 16383;
 $20 = $14 << 14;
 $21 = (($20) + 2147467264)|0;
 $22 = $19 | $21;
 store4($6,$22);
 return;
}
function _luaK_jump($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$idx$val$i = 0, $$idx$val$idx$i = 0, $$idx$val$idx$val$i = 0, $$neg11$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ispos$i$i = 0, $neg$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 24|0);
 $2 = load4($1);
 store4($1,-1);
 $3 = (_luaK_code($0,2147450910)|0);
 $4 = ($2|0)==(-1);
 if ($4) {
  $$0 = $3;
  return ($$0|0);
 }
 $5 = ($3|0)==(-1);
 if ($5) {
  $$0 = $2;
  return ($$0|0);
 }
 $$idx$val$i = load4($0);
 $$idx$val$idx$i = ((($$idx$val$i)) + 48|0);
 $$idx$val$idx$val$i = load4($$idx$val$idx$i);
 $$0$i = $3;
 while(1) {
  $6 = (($$idx$val$idx$val$i) + ($$0$i<<2)|0);
  $7 = load4($6);
  $8 = $7 >>> 14;
  $9 = (($8) + -131071)|0;
  $10 = ($9|0)==(-1);
  $11 = (($$0$i) + 1)|0;
  $12 = (($11) + ($9))|0;
  $$0$i$i = $10 ? -1 : $12;
  $13 = ($$0$i$i|0)==(-1);
  if ($13) {
   break;
  } else {
   $$0$i = $$0$i$i;
  }
 }
 $$neg11$i$i = $$0$i ^ -1;
 $14 = (($2) + ($$neg11$i$i))|0;
 $ispos$i$i = ($14|0)>(-1);
 $neg$i$i = (0 - ($14))|0;
 $15 = $ispos$i$i ? $14 : $neg$i$i;
 $16 = ($15|0)>(131071);
 if ($16) {
  $17 = ((($0)) + 8|0);
  $18 = load4($17);
  _luaX_syntaxerror($18,10514);
  // unreachable;
 }
 $19 = $7 & 16383;
 $20 = $14 << 14;
 $21 = (($20) + 2147467264)|0;
 $22 = $21 | $19;
 store4($6,$22);
 $$0 = $3;
 return ($$0|0);
}
function _luaK_codeABx($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $2 << 6;
 $5 = $4 | $1;
 $6 = $3 << 14;
 $7 = $5 | $6;
 $8 = (_luaK_code($0,$7)|0);
 return ($8|0);
}
function _luaK_ret($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1 << 6;
 $4 = $2 << 23;
 $5 = (($4) + 8388608)|0;
 $6 = $3 | $5;
 $7 = $6 | 38;
 (_luaK_code($0,$7)|0);
 return;
}
function _luaK_getlabel($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = load4($1);
 $3 = ((($0)) + 20|0);
 store4($3,$2);
 return ($2|0);
}
function _luaK_patchtohere($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i$i = 0, $$idx$val$i = 0, $$idx$val$idx$i = 0, $$idx$val$idx$val$i = 0, $$neg11$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ispos$i$i = 0, $neg$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = load4($2);
 $4 = ((($0)) + 20|0);
 store4($4,$3);
 $5 = ((($0)) + 24|0);
 $6 = ($1|0)==(-1);
 if ($6) {
  return;
 }
 $7 = load4($5);
 $8 = ($7|0)==(-1);
 if ($8) {
  store4($5,$1);
  return;
 }
 $$idx$val$i = load4($0);
 $$idx$val$idx$i = ((($$idx$val$i)) + 48|0);
 $$idx$val$idx$val$i = load4($$idx$val$idx$i);
 $$0$i = $7;
 while(1) {
  $9 = (($$idx$val$idx$val$i) + ($$0$i<<2)|0);
  $10 = load4($9);
  $11 = $10 >>> 14;
  $12 = (($11) + -131071)|0;
  $13 = ($12|0)==(-1);
  $14 = (($$0$i) + 1)|0;
  $15 = (($14) + ($12))|0;
  $$0$i$i = $13 ? -1 : $15;
  $16 = ($$0$i$i|0)==(-1);
  if ($16) {
   break;
  } else {
   $$0$i = $$0$i$i;
  }
 }
 $$neg11$i$i = $$0$i ^ -1;
 $17 = (($$neg11$i$i) + ($1))|0;
 $ispos$i$i = ($17|0)>(-1);
 $neg$i$i = (0 - ($17))|0;
 $18 = $ispos$i$i ? $17 : $neg$i$i;
 $19 = ($18|0)>(131071);
 if ($19) {
  $20 = ((($0)) + 8|0);
  $21 = load4($20);
  _luaX_syntaxerror($21,10514);
  // unreachable;
 }
 $22 = $10 & 16383;
 $23 = $17 << 14;
 $24 = (($23) + 2147467264)|0;
 $25 = $24 | $22;
 store4($9,$25);
 return;
}
function _luaK_patchlist($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i5 = 0, $$0$i$i6 = 0, $$012$i = 0, $$idx$val$i$i = 0, $$idx$val$i$pre = 0, $$idx$val$idx$i$i = 0, $$idx$val$idx$i$phi$trans$insert = 0, $$idx$val$idx$val$i$i = 0, $$idx$val$idx$val$i$pre = 0, $$neg11$i = 0, $$neg11$i$i = 0, $$neg11$i$i$i = 0, $$sink15 = 0, $$sink16 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $ispos$i = 0, $ispos$i$i = 0, $ispos$i$i$i = 0, $neg$i = 0, $neg$i$i = 0, $neg$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 16|0);
 $4 = load4($3);
 $5 = ($4|0)==($2|0);
 if ($5) {
  $6 = ((($0)) + 20|0);
  store4($6,$2);
  $7 = ((($0)) + 24|0);
  $8 = ($1|0)==(-1);
  if ($8) {
   return;
  }
  $9 = load4($7);
  $10 = ($9|0)==(-1);
  if ($10) {
   store4($7,$1);
   return;
  }
  $$idx$val$i$i = load4($0);
  $$idx$val$idx$i$i = ((($$idx$val$i$i)) + 48|0);
  $$idx$val$idx$val$i$i = load4($$idx$val$idx$i$i);
  $$0$i$i = $9;
  while(1) {
   $11 = (($$idx$val$idx$val$i$i) + ($$0$i$i<<2)|0);
   $12 = load4($11);
   $13 = $12 >>> 14;
   $14 = (($13) + -131071)|0;
   $15 = ($14|0)==(-1);
   $16 = (($$0$i$i) + 1)|0;
   $17 = (($16) + ($14))|0;
   $$0$i$i$i = $15 ? -1 : $17;
   $18 = ($$0$i$i$i|0)==(-1);
   if ($18) {
    break;
   } else {
    $$0$i$i = $$0$i$i$i;
   }
  }
  $$neg11$i$i$i = $$0$i$i ^ -1;
  $19 = (($$neg11$i$i$i) + ($1))|0;
  $ispos$i$i$i = ($19|0)>(-1);
  $neg$i$i$i = (0 - ($19))|0;
  $20 = $ispos$i$i$i ? $19 : $neg$i$i$i;
  $21 = ($20|0)>(131071);
  if ($21) {
   $22 = ((($0)) + 8|0);
   $23 = load4($22);
   _luaX_syntaxerror($23,10514);
   // unreachable;
  }
  $24 = $12 & 16383;
  $25 = $19 << 14;
  $26 = (($25) + 2147467264)|0;
  $27 = $26 | $24;
  store4($11,$27);
  return;
 }
 $28 = ($1|0)==(-1);
 if ($28) {
  return;
 }
 $$idx$val$i$pre = load4($0);
 $$idx$val$idx$i$phi$trans$insert = ((($$idx$val$i$pre)) + 48|0);
 $$idx$val$idx$val$i$pre = load4($$idx$val$idx$i$phi$trans$insert);
 $$012$i = $1;
 while(1) {
  $29 = (($$idx$val$idx$val$i$pre) + ($$012$i<<2)|0);
  $30 = load4($29);
  $31 = $30 >>> 14;
  $32 = (($31) + -131071)|0;
  $33 = ($32|0)==(-1);
  $34 = (($$012$i) + 1)|0;
  $35 = (($34) + ($32))|0;
  $$0$i$i5 = $33 ? -1 : $35;
  $36 = ($$012$i|0)>(0);
  if ($36) {
   $37 = ((($29)) + -4|0);
   $38 = load4($37);
   $39 = $38 & 63;
   $40 = (1280 + ($39)|0);
   $41 = load1($40);
   $42 = ($41<<24>>24)<(0);
   if ($42) {
    $$0$i$i6 = $37;$44 = $38;
   } else {
    label = 14;
   }
  } else {
   label = 14;
  }
  if ((label|0) == 14) {
   label = 0;
   $$0$i$i6 = $29;$44 = $30;
  }
  $43 = $44 & 63;
  $45 = ($43|0)==(35);
  if ($45) {
   $46 = $44 & 8372224;
   $47 = $44 >>> 23;
   $48 = $47 << 6;
   $49 = $46 | $48;
   $50 = $49 | 34;
   store4($$0$i$i6,$50);
   $$neg11$i = $$012$i ^ -1;
   $51 = (($$neg11$i) + ($2))|0;
   $ispos$i = ($51|0)>(-1);
   $neg$i = (0 - ($51))|0;
   $52 = $ispos$i ? $51 : $neg$i;
   $53 = ($52|0)>(131071);
   if ($53) {
    label = 17;
    break;
   }
   $56 = load4($29);
   $$sink15 = $51;$$sink16 = $56;
  } else {
   $$neg11$i$i = $$012$i ^ -1;
   $57 = (($$neg11$i$i) + ($2))|0;
   $ispos$i$i = ($57|0)>(-1);
   $neg$i$i = (0 - ($57))|0;
   $58 = $ispos$i$i ? $57 : $neg$i$i;
   $59 = ($58|0)>(131071);
   if ($59) {
    label = 20;
    break;
   } else {
    $$sink15 = $57;$$sink16 = $30;
   }
  }
  $62 = $$sink16 & 16383;
  $63 = $$sink15 << 14;
  $64 = (($63) + 2147467264)|0;
  $65 = $62 | $64;
  store4($29,$65);
  $66 = ($$0$i$i5|0)==(-1);
  if ($66) {
   label = 22;
   break;
  } else {
   $$012$i = $$0$i$i5;
  }
 }
 if ((label|0) == 17) {
  $54 = ((($0)) + 8|0);
  $55 = load4($54);
  _luaX_syntaxerror($55,10514);
  // unreachable;
 }
 else if ((label|0) == 20) {
  $60 = ((($0)) + 8|0);
  $61 = load4($60);
  _luaX_syntaxerror($61,10514);
  // unreachable;
 }
 else if ((label|0) == 22) {
  return;
 }
}
function _luaK_patchclose($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$08 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $3 = ($1|0)==(-1);
 if ($3) {
  return;
 }
 $4 = load4($0);
 $5 = ((($4)) + 48|0);
 $6 = load4($5);
 $7 = $2 << 6;
 $8 = (($7) + 64)|0;
 $9 = $8 & 16320;
 $$08 = $1;
 while(1) {
  $10 = (($6) + ($$08<<2)|0);
  $11 = load4($10);
  $12 = $11 & -16321;
  $13 = $12 | $9;
  store4($10,$13);
  $14 = $11 >>> 14;
  $15 = (($14) + -131071)|0;
  $16 = ($15|0)==(-1);
  $17 = (($$08) + 1)|0;
  $18 = (($17) + ($15))|0;
  $spec$select = $16 ? -1 : $18;
  $19 = ($spec$select|0)==(-1);
  if ($19) {
   break;
  } else {
   $$08 = $spec$select;
  }
 }
 return;
}
function _luaK_codek($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)<(262144);
 $4 = $1 << 6;
 if ($3) {
  $5 = $2 << 14;
  $6 = $4 | $5;
  $7 = $6 | 1;
  $8 = (_luaK_code($0,$7)|0);
  $$0 = $8;
  return ($$0|0);
 } else {
  $9 = $4 | 2;
  $10 = (_luaK_code($0,$9)|0);
  $11 = $2 << 6;
  $12 = $11 | 46;
  (_luaK_code($0,$12)|0);
  $$0 = $10;
  return ($$0|0);
 }
 return (0)|0;
}
function _luaK_checkstack($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 44|0);
 $3 = load1($2);
 $4 = $3&255;
 $5 = (($4) + ($1))|0;
 $6 = load4($0);
 $7 = ((($6)) + 8|0);
 $8 = load1($7);
 $9 = $8&255;
 $10 = ($5|0)>($9|0);
 if (!($10)) {
  return;
 }
 $11 = ($5|0)>(254);
 if ($11) {
  $12 = ((($0)) + 8|0);
  $13 = load4($12);
  _luaX_syntaxerror($13,10549);
  // unreachable;
 }
 $14 = $5&255;
 store1($7,$14);
 return;
}
function _luaK_reserveregs($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 44|0);
 $3 = load1($2);
 $4 = $3&255;
 $5 = (($4) + ($1))|0;
 $6 = load4($0);
 $7 = ((($6)) + 8|0);
 $8 = load1($7);
 $9 = $8&255;
 $10 = ($5|0)>($9|0);
 if (!($10)) {
  $$pre = $5&255;
  $$pre$phiZ2D = $$pre;
  store1($2,$$pre$phiZ2D);
  return;
 }
 $11 = ($5|0)>(254);
 if ($11) {
  $12 = ((($0)) + 8|0);
  $13 = load4($12);
  _luaX_syntaxerror($13,10549);
  // unreachable;
 }
 $14 = $5&255;
 store1($7,$14);
 $$pre$phiZ2D = $14;
 store1($2,$$pre$phiZ2D);
 return;
}
function _luaK_stringK($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 store4($2,$1);
 $3 = ((($1)) + 4|0);
 $4 = load1($3);
 $5 = $4 | 64;
 $6 = $5&255;
 $7 = ((($2)) + 8|0);
 store4($7,$6);
 $8 = (_addk($0,$2,$2)|0);
 STACKTOP = sp;return ($8|0);
}
function _addk($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$05859 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$phi65Z2D = 0, $$pre$phi67Z2D = 0, $$pre62 = 0, $$pre64 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = i64(), $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = i64(), $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 8|0);
 $4 = load4($3);
 $5 = ((($4)) + 52|0);
 $6 = load4($5);
 $7 = load4($0);
 $8 = ((($4)) + 64|0);
 $9 = load4($8);
 $10 = (_luaH_set($6,$9,$1)|0);
 $11 = ((($10)) + 8|0);
 $12 = load4($11);
 $13 = ($12|0)==(19);
 if ($13) {
  $14 = load8($10);
  $15 = i64_trunc($14);
  $16 = ((($0)) + 28|0);
  $17 = load4($16);
  $18 = ($17|0)>($15|0);
  if ($18) {
   $19 = ((($7)) + 44|0);
   $20 = load4($19);
   $21 = (((($20) + ($15<<4)|0)) + 8|0);
   $22 = load4($21);
   $23 = ((($2)) + 8|0);
   $24 = load4($23);
   $25 = $24 ^ $22;
   $26 = $25 & 63;
   $27 = ($26|0)==(0);
   if ($27) {
    $28 = (($20) + ($15<<4)|0);
    $29 = (_luaV_equalobj(0,$28,$2)|0);
    $30 = ($29|0)==(0);
    if ($30) {
     $$pre$phi65Z2D = $16;$$pre$phi67Z2D = $10;
    } else {
     $$0 = $15;
     return ($$0|0);
    }
   } else {
    $$pre$phi65Z2D = $16;$$pre$phi67Z2D = $10;
   }
  } else {
   $$pre$phi65Z2D = $16;$$pre$phi67Z2D = $10;
  }
 } else {
  $$pre64 = ((($0)) + 28|0);
  $$pre$phi65Z2D = $$pre64;$$pre$phi67Z2D = $10;
 }
 $31 = ((($7)) + 16|0);
 $32 = load4($31);
 $33 = load4($$pre$phi65Z2D);
 $34 = i64_sext($33);
 store8($$pre$phi67Z2D,$34);
 store4($11,19);
 $35 = load4($31);
 $36 = ($33|0)<($35|0);
 $$phi$trans$insert = ((($7)) + 44|0);
 if ($36) {
  $$pre62 = load4($$phi$trans$insert);
  $40 = $35;$43 = $$pre62;
 } else {
  $37 = load4($$phi$trans$insert);
  $38 = (_luaM_growaux_($6,$37,$31,16,67108863,10597)|0);
  store4($$phi$trans$insert,$38);
  $$pre = load4($31);
  $40 = $$pre;$43 = $38;
 }
 $39 = ($32|0)<($40|0);
 if ($39) {
  $41 = (($32) + 1)|0;
  $42 = (((($43) + ($32<<4)|0)) + 8|0);
  store4($42,0);
  $44 = ($41|0)<($40|0);
  if ($44) {
   $$05859 = $41;
   while(1) {
    $45 = (($$05859) + 1)|0;
    $46 = (((($43) + ($$05859<<4)|0)) + 8|0);
    store4($46,0);
    $47 = ($45|0)<($40|0);
    if ($47) {
     $$05859 = $45;
    } else {
     break;
    }
   }
  }
 }
 $48 = (($43) + ($33<<4)|0);
 ; store8($48,load8($2,8),8); store8($48+8 | 0,load8($2+8 | 0,8),8);
 $49 = load4($$pre$phi65Z2D);
 $50 = (($49) + 1)|0;
 store4($$pre$phi65Z2D,$50);
 $51 = ((($2)) + 8|0);
 $52 = load4($51);
 $53 = $52 & 64;
 $54 = ($53|0)==(0);
 if ($54) {
  $$0 = $33;
  return ($$0|0);
 }
 $55 = ((($7)) + 5|0);
 $56 = load1($55);
 $57 = $56 & 4;
 $58 = ($57<<24>>24)==(0);
 if ($58) {
  $$0 = $33;
  return ($$0|0);
 }
 $59 = load4($2);
 $60 = ((($59)) + 5|0);
 $61 = load1($60);
 $62 = $61 & 3;
 $63 = ($62<<24>>24)==(0);
 if ($63) {
  $$0 = $33;
  return ($$0|0);
 }
 _luaC_barrier_($6,$7,$59);
 $$0 = $33;
 return ($$0|0);
}
function _luaK_intK($0,$1) {
 $0 = $0|0;
 $1 = i64($1);
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $2 = sp + 16|0;
 $3 = sp;
 $4 = i64_trunc($1);
 $5 = $4;
 store4($2,$5);
 $6 = ((($2)) + 8|0);
 store4($6,2);
 store8($3,$1);
 $7 = ((($3)) + 8|0);
 store4($7,19);
 $8 = (_addk($0,$2,$3)|0);
 STACKTOP = sp;return ($8|0);
}
function _luaK_setreturns($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre$i = 0, $$pre$phi$iZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $3 = load4($1);
 switch ($3|0) {
 case 13:  {
  $4 = load4($0);
  $5 = ((($4)) + 48|0);
  $6 = load4($5);
  $7 = ((($1)) + 8|0);
  $8 = load4($7);
  $9 = (($6) + ($8<<2)|0);
  $10 = load4($9);
  $11 = $10 & -8372225;
  $12 = $2 << 14;
  $13 = (($12) + 16384)|0;
  $14 = $13 & 8372224;
  $15 = $11 | $14;
  store4($9,$15);
  return;
  break;
 }
 case 14:  {
  $16 = load4($0);
  $17 = ((($16)) + 48|0);
  $18 = load4($17);
  $19 = ((($1)) + 8|0);
  $20 = load4($19);
  $21 = (($18) + ($20<<2)|0);
  $22 = load4($21);
  $23 = $22 & 8372287;
  $24 = $2 << 23;
  $25 = (($24) + 8388608)|0;
  $26 = $23 | $25;
  $27 = ((($0)) + 44|0);
  $28 = load1($27);
  $29 = $28&255;
  $30 = $29 << 6;
  $31 = $30 | $26;
  store4($21,$31);
  $32 = (($29) + 1)|0;
  $33 = ((($16)) + 8|0);
  $34 = load1($33);
  $35 = ($28&255)<($34&255);
  do {
   if ($35) {
    $$pre$i = $32&255;
    $$pre$phi$iZ2D = $$pre$i;
   } else {
    $36 = ($28&255)>(253);
    if ($36) {
     $37 = ((($0)) + 8|0);
     $38 = load4($37);
     _luaX_syntaxerror($38,10549);
     // unreachable;
    } else {
     $39 = $32&255;
     store1($33,$39);
     $$pre$phi$iZ2D = $39;
     break;
    }
   }
  } while(0);
  store1($27,$$pre$phi$iZ2D);
  return;
  break;
 }
 default: {
  return;
 }
 }
}
function _luaK_setoneret($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = load4($1);
 switch ($2|0) {
 case 13:  {
  store4($1,7);
  $3 = load4($0);
  $4 = ((($3)) + 48|0);
  $5 = load4($4);
  $6 = ((($1)) + 8|0);
  $7 = load4($6);
  $8 = (($5) + ($7<<2)|0);
  $9 = load4($8);
  $10 = $9 >>> 6;
  $11 = $10 & 255;
  store4($6,$11);
  return;
  break;
 }
 case 14:  {
  $12 = load4($0);
  $13 = ((($12)) + 48|0);
  $14 = load4($13);
  $15 = ((($1)) + 8|0);
  $16 = load4($15);
  $17 = (($14) + ($16<<2)|0);
  $18 = load4($17);
  $19 = $18 & 8388607;
  $20 = $19 | 16777216;
  store4($17,$20);
  store4($1,12);
  return;
  break;
 }
 default: {
  return;
 }
 }
}
function _luaK_dischargevars($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = load4($1);
 switch ($2|0) {
 case 8:  {
  store4($1,7);
  return;
  break;
 }
 case 9:  {
  $3 = ((($1)) + 8|0);
  $4 = load4($3);
  $5 = $4 << 23;
  $6 = $5 | 5;
  $7 = (_luaK_code($0,$6)|0);
  store4($3,$7);
  store4($1,12);
  return;
  break;
 }
 case 10:  {
  $8 = ((($1)) + 8|0);
  $9 = load2($8);
  $10 = $9 << 16 >> 16;
  $11 = $10 & 256;
  $12 = ($11|0)==(0);
  if ($12) {
   $13 = ((($0)) + 42|0);
   $14 = load1($13);
   $15 = $14&255;
   $16 = ($15|0)>($10|0);
   if (!($16)) {
    $17 = ((($0)) + 44|0);
    $18 = load1($17);
    $19 = (($18) + -1)<<24>>24;
    store1($17,$19);
   }
  }
  $20 = ((($8)) + 3|0);
  $21 = load1($20);
  $22 = ($21<<24>>24)==(8);
  $23 = ((($8)) + 2|0);
  if ($22) {
   $24 = load1($23);
   $25 = ((($0)) + 42|0);
   $26 = load1($25);
   $27 = ($26&255)>($24&255);
   if ($27) {
    $$0 = 7;
   } else {
    $28 = ((($0)) + 44|0);
    $29 = load1($28);
    $30 = (($29) + -1)<<24>>24;
    store1($28,$30);
    $$0 = 7;
   }
  } else {
   $$0 = 6;
  }
  $31 = load1($23);
  $32 = $31&255;
  $33 = load2($8);
  $34 = $33 << 16 >> 16;
  $35 = $32 << 23;
  $36 = $35 | $$0;
  $37 = $34 << 14;
  $38 = $36 | $37;
  $39 = (_luaK_code($0,$38)|0);
  store4($8,$39);
  store4($1,12);
  return;
  break;
 }
 case 13:  {
  store4($1,7);
  $40 = load4($0);
  $41 = ((($40)) + 48|0);
  $42 = load4($41);
  $43 = ((($1)) + 8|0);
  $44 = load4($43);
  $45 = (($42) + ($44<<2)|0);
  $46 = load4($45);
  $47 = $46 >>> 6;
  $48 = $47 & 255;
  store4($43,$48);
  return;
  break;
 }
 case 14:  {
  $49 = load4($0);
  $50 = ((($49)) + 48|0);
  $51 = load4($50);
  $52 = ((($1)) + 8|0);
  $53 = load4($52);
  $54 = (($51) + ($53<<2)|0);
  $55 = load4($54);
  $56 = $55 & 8388607;
  $57 = $56 | 16777216;
  store4($54,$57);
  store4($1,12);
  return;
  break;
 }
 default: {
  return;
 }
 }
}
function _luaK_exp2nextreg($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre$i = 0, $$pre$phi$iZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _luaK_dischargevars($0,$1);
 $2 = load4($1);
 $3 = ($2|0)==(7);
 if ($3) {
  $4 = ((($1)) + 8|0);
  $5 = load4($4);
  $6 = $5 & 256;
  $7 = ($6|0)==(0);
  if ($7) {
   $8 = ((($0)) + 42|0);
   $9 = load1($8);
   $10 = $9&255;
   $11 = ($5|0)<($10|0);
   if (!($11)) {
    $12 = ((($0)) + 44|0);
    $13 = load1($12);
    $14 = (($13) + -1)<<24>>24;
    store1($12,$14);
   }
  }
 }
 $15 = ((($0)) + 44|0);
 $16 = load1($15);
 $17 = $16&255;
 $18 = (($17) + 1)|0;
 $19 = load4($0);
 $20 = ((($19)) + 8|0);
 $21 = load1($20);
 $22 = ($16&255)<($21&255);
 if ($22) {
  $$pre$i = $18&255;
  $$pre$phi$iZ2D = $$pre$i;
  store1($15,$$pre$phi$iZ2D);
  $27 = $$pre$phi$iZ2D&255;
  $28 = (($27) + -1)|0;
  _exp2reg($0,$1,$28);
  return;
 }
 $23 = ($16&255)>(253);
 if ($23) {
  $24 = ((($0)) + 8|0);
  $25 = load4($24);
  _luaX_syntaxerror($25,10549);
  // unreachable;
 }
 $26 = $18&255;
 store1($20,$26);
 $$pre$phi$iZ2D = $26;
 store1($15,$$pre$phi$iZ2D);
 $27 = $$pre$phi$iZ2D&255;
 $28 = (($27) + -1)|0;
 _exp2reg($0,$1,$28);
 return;
}
function _exp2reg($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i77 = 0, $$0$i$i49 = 0, $$0$i$i49$us = 0, $$0$i$i67 = 0, $$0$i$i67$us = 0, $$0$i$i70 = 0, $$0$i$i76 = 0, $$0$i$i88 = 0, $$0$i$i88$us = 0, $$0$i$i99 = 0, $$0$i$i99$us = 0, $$012$i = 0, $$012$i$us = 0, $$012$i84 = 0, $$012$i84$us = 0, $$043 = 0;
 var $$0912$i = 0, $$0912$i59 = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i$i73 = 0, $$idx$val$i46$us$pre = 0, $$idx$val$i85$us$pre = 0, $$idx$val$idx$i = 0, $$idx$val$idx$i$i = 0, $$idx$val$idx$i$i74 = 0, $$idx$val$idx$i47$us$phi$trans$insert = 0, $$idx$val$idx$i86$us$phi$trans$insert = 0, $$idx$val$idx$val$i = 0, $$idx$val$idx$val$i$i = 0, $$idx$val$idx$val$i$i75 = 0, $$idx$val$idx$val$i48$us$pre = 0, $$idx$val$idx$val$i87$us$pre = 0, $$idx10$val$i = 0, $$idx10$val$i55 = 0, $$idx10$val$idx$i = 0;
 var $$idx10$val$idx$i56 = 0, $$idx10$val$idx$val$i = 0, $$idx10$val$idx$val$i57 = 0, $$neg11$i = 0, $$neg11$i$i = 0, $$neg11$i$i$i = 0, $$neg11$i$i$i78 = 0, $$neg11$i$i50 = 0, $$neg11$i$i50$us = 0, $$neg11$i$i89 = 0, $$neg11$i$i89$us = 0, $$neg11$i$us = 0, $$neg11$i94 = 0, $$neg11$i94$us = 0, $$pr = 0, $$pre$i = 0, $$pre$i60 = 0, $$pre135 = 0, $$sink163 = 0, $$sink164 = 0;
 var $$sink167 = 0, $$sink168 = 0, $$sink171 = 0, $$sink172 = 0, $$sink175 = 0, $$sink176 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;
 var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0;
 var $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ispos$i = 0, $ispos$i$i = 0, $ispos$i$i$i = 0, $ispos$i$i$i79 = 0, $ispos$i$i51 = 0, $ispos$i$i51$us = 0, $ispos$i$i90 = 0, $ispos$i$i90$us = 0, $ispos$i$us = 0, $ispos$i95 = 0, $ispos$i95$us = 0, $neg$i = 0, $neg$i$i = 0;
 var $neg$i$i$i = 0, $neg$i$i$i80 = 0, $neg$i$i52 = 0, $neg$i$i52$us = 0, $neg$i$i91 = 0, $neg$i$i91$us = 0, $neg$i$us = 0, $neg$i96 = 0, $neg$i96$us = 0, $spec$select$i = 0, $spec$select$i62 = 0, $storemerge$i = 0, $storemerge$i102 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _discharge2reg($0,$1,$2);
 $3 = load4($1);
 $4 = ($3|0)==(11);
 $5 = ((($1)) + 16|0);
 do {
  if ($4) {
   $6 = ((($1)) + 8|0);
   $7 = load4($6);
   $8 = ($7|0)==(-1);
   if ($8) {
    label = 10;
   } else {
    $9 = load4($5);
    $10 = ($9|0)==(-1);
    if ($10) {
     store4($5,$7);
     $30 = $7;
     break;
    }
    $$idx$val$i = load4($0);
    $$idx$val$idx$i = ((($$idx$val$i)) + 48|0);
    $$idx$val$idx$val$i = load4($$idx$val$idx$i);
    $$0$i = $9;
    while(1) {
     $11 = (($$idx$val$idx$val$i) + ($$0$i<<2)|0);
     $12 = load4($11);
     $13 = $12 >>> 14;
     $14 = (($13) + -131071)|0;
     $15 = ($14|0)==(-1);
     $16 = (($$0$i) + 1)|0;
     $17 = (($16) + ($14))|0;
     $$0$i$i = $15 ? -1 : $17;
     $18 = ($$0$i$i|0)==(-1);
     if ($18) {
      break;
     } else {
      $$0$i = $$0$i$i;
     }
    }
    $$neg11$i$i = $$0$i ^ -1;
    $19 = (($7) + ($$neg11$i$i))|0;
    $ispos$i$i = ($19|0)>(-1);
    $neg$i$i = (0 - ($19))|0;
    $20 = $ispos$i$i ? $19 : $neg$i$i;
    $21 = ($20|0)>(131071);
    if ($21) {
     $22 = ((($0)) + 8|0);
     $23 = load4($22);
     _luaX_syntaxerror($23,10514);
     // unreachable;
    } else {
     $24 = $12 & 16383;
     $25 = $19 << 14;
     $26 = (($25) + 2147467264)|0;
     $27 = $26 | $24;
     store4($11,$27);
     label = 10;
     break;
    }
   }
  } else {
   label = 10;
  }
 } while(0);
 if ((label|0) == 10) {
  $$pr = load4($5);
  $30 = $$pr;
 }
 $28 = ((($1)) + 20|0);
 $29 = load4($28);
 $31 = ($30|0)==($29|0);
 if ($31) {
  store4($5,-1);
  store4($28,-1);
  $283 = ((($1)) + 8|0);
  store4($283,$2);
  store4($1,7);
  return;
 }
 $32 = ($30|0)==(-1);
 L19: do {
  if ($32) {
   label = 19;
  } else {
   $$idx10$val$i = load4($0);
   $$idx10$val$idx$i = ((($$idx10$val$i)) + 48|0);
   $$idx10$val$idx$val$i = load4($$idx10$val$idx$i);
   $$0912$i = $30;
   while(1) {
    $33 = (($$idx10$val$idx$val$i) + ($$0912$i<<2)|0);
    $34 = ($$0912$i|0)>(0);
    if ($34) {
     $35 = ((($33)) + -4|0);
     $36 = load4($35);
     $37 = $36 & 63;
     $38 = (1280 + ($37)|0);
     $39 = load1($38);
     $40 = ($39<<24>>24)<(0);
     if ($40) {
      $42 = $36;
     } else {
      label = 16;
     }
    } else {
     label = 16;
    }
    if ((label|0) == 16) {
     label = 0;
     $$pre$i = load4($33);
     $42 = $$pre$i;
    }
    $41 = $42 & 63;
    $43 = ($41|0)==(35);
    if (!($43)) {
     label = 26;
     break L19;
    }
    $44 = load4($33);
    $45 = $44 >>> 14;
    $46 = (($45) + -131071)|0;
    $47 = ($46|0)==(-1);
    $48 = (($$0912$i) + 1)|0;
    $49 = (($48) + ($46))|0;
    $spec$select$i = $47 ? -1 : $49;
    $50 = ($spec$select$i|0)==(-1);
    if ($50) {
     label = 19;
     break;
    } else {
     $$0912$i = $spec$select$i;
    }
   }
  }
 } while(0);
 L29: do {
  if ((label|0) == 19) {
   $51 = ($29|0)==(-1);
   if ($51) {
    $$0 = -1;$$043 = -1;
   } else {
    $$idx10$val$i55 = load4($0);
    $$idx10$val$idx$i56 = ((($$idx10$val$i55)) + 48|0);
    $$idx10$val$idx$val$i57 = load4($$idx10$val$idx$i56);
    $$0912$i59 = $29;
    while(1) {
     $52 = (($$idx10$val$idx$val$i57) + ($$0912$i59<<2)|0);
     $53 = ($$0912$i59|0)>(0);
     if ($53) {
      $54 = ((($52)) + -4|0);
      $55 = load4($54);
      $56 = $55 & 63;
      $57 = (1280 + ($56)|0);
      $58 = load1($57);
      $59 = ($58<<24>>24)<(0);
      if ($59) {
       $61 = $55;
      } else {
       label = 23;
      }
     } else {
      label = 23;
     }
     if ((label|0) == 23) {
      label = 0;
      $$pre$i60 = load4($52);
      $61 = $$pre$i60;
     }
     $60 = $61 & 63;
     $62 = ($60|0)==(35);
     if (!($62)) {
      label = 26;
      break L29;
     }
     $63 = load4($52);
     $64 = $63 >>> 14;
     $65 = (($64) + -131071)|0;
     $66 = ($65|0)==(-1);
     $67 = (($$0912$i59) + 1)|0;
     $68 = (($67) + ($65))|0;
     $spec$select$i62 = $66 ? -1 : $68;
     $69 = ($spec$select$i62|0)==(-1);
     if ($69) {
      $$0 = -1;$$043 = -1;
      break;
     } else {
      $$0912$i59 = $spec$select$i62;
     }
    }
   }
  }
 } while(0);
 do {
  if ((label|0) == 26) {
   $$pre135 = ((($0)) + 24|0);
   do {
    if ($4) {
     $101 = -1;
    } else {
     $70 = load4($$pre135);
     store4($$pre135,-1);
     $71 = (_luaK_code($0,2147450910)|0);
     $72 = ($70|0)==(-1);
     if ($72) {
      $101 = $71;
     } else {
      $73 = ($71|0)==(-1);
      if ($73) {
       $101 = $70;
      } else {
       $$idx$val$i$i = load4($0);
       $$idx$val$idx$i$i = ((($$idx$val$i$i)) + 48|0);
       $$idx$val$idx$val$i$i = load4($$idx$val$idx$i$i);
       $$0$i$i70 = $71;
       while(1) {
        $74 = (($$idx$val$idx$val$i$i) + ($$0$i$i70<<2)|0);
        $75 = load4($74);
        $76 = $75 >>> 14;
        $77 = (($76) + -131071)|0;
        $78 = ($77|0)==(-1);
        $79 = (($$0$i$i70) + 1)|0;
        $80 = (($79) + ($77))|0;
        $$0$i$i$i = $78 ? -1 : $80;
        $81 = ($$0$i$i$i|0)==(-1);
        if ($81) {
         break;
        } else {
         $$0$i$i70 = $$0$i$i$i;
        }
       }
       $$neg11$i$i$i = $$0$i$i70 ^ -1;
       $82 = (($70) + ($$neg11$i$i$i))|0;
       $ispos$i$i$i = ($82|0)>(-1);
       $neg$i$i$i = (0 - ($82))|0;
       $83 = $ispos$i$i$i ? $82 : $neg$i$i$i;
       $84 = ($83|0)>(131071);
       if ($84) {
        $85 = ((($0)) + 8|0);
        $86 = load4($85);
        _luaX_syntaxerror($86,10514);
        // unreachable;
       } else {
        $87 = $75 & 16383;
        $88 = $82 << 14;
        $89 = (($88) + 2147467264)|0;
        $90 = $89 | $87;
        store4($74,$90);
        $101 = $71;
        break;
       }
      }
     }
    }
   } while(0);
   $91 = ((($0)) + 16|0);
   $92 = load4($91);
   $93 = ((($0)) + 20|0);
   store4($93,$92);
   $94 = $2 << 6;
   $95 = $94 | 16387;
   $96 = (_luaK_code($0,$95)|0);
   $97 = load4($91);
   store4($93,$97);
   $98 = $94 | 8388611;
   $99 = (_luaK_code($0,$98)|0);
   $100 = load4($91);
   store4($93,$100);
   $102 = ($101|0)==(-1);
   if ($102) {
    $$0 = $96;$$043 = $99;
   } else {
    $103 = load4($$pre135);
    $104 = ($103|0)==(-1);
    if ($104) {
     store4($$pre135,$101);
     $$0 = $96;$$043 = $99;
     break;
    }
    $$idx$val$i$i73 = load4($0);
    $$idx$val$idx$i$i74 = ((($$idx$val$i$i73)) + 48|0);
    $$idx$val$idx$val$i$i75 = load4($$idx$val$idx$i$i74);
    $$0$i$i76 = $103;
    while(1) {
     $105 = (($$idx$val$idx$val$i$i75) + ($$0$i$i76<<2)|0);
     $106 = load4($105);
     $107 = $106 >>> 14;
     $108 = (($107) + -131071)|0;
     $109 = ($108|0)==(-1);
     $110 = (($$0$i$i76) + 1)|0;
     $111 = (($110) + ($108))|0;
     $$0$i$i$i77 = $109 ? -1 : $111;
     $112 = ($$0$i$i$i77|0)==(-1);
     if ($112) {
      break;
     } else {
      $$0$i$i76 = $$0$i$i$i77;
     }
    }
    $$neg11$i$i$i78 = $$0$i$i76 ^ -1;
    $113 = (($101) + ($$neg11$i$i$i78))|0;
    $ispos$i$i$i79 = ($113|0)>(-1);
    $neg$i$i$i80 = (0 - ($113))|0;
    $114 = $ispos$i$i$i79 ? $113 : $neg$i$i$i80;
    $115 = ($114|0)>(131071);
    if ($115) {
     $116 = ((($0)) + 8|0);
     $117 = load4($116);
     _luaX_syntaxerror($117,10514);
     // unreachable;
    } else {
     $118 = $106 & 16383;
     $119 = $113 << 14;
     $120 = (($119) + 2147467264)|0;
     $121 = $120 | $118;
     store4($105,$121);
     $$0 = $96;$$043 = $99;
     break;
    }
   }
  }
 } while(0);
 $122 = ((($0)) + 16|0);
 $123 = load4($122);
 $124 = ((($0)) + 20|0);
 store4($124,$123);
 $125 = load4($28);
 $126 = ($125|0)==(-1);
 L64: do {
  if (!($126)) {
   $127 = ($2|0)==(255);
   $128 = $2 << 6;
   $129 = $128 & 16320;
   $$idx$val$i85$us$pre = load4($0);
   $$idx$val$idx$i86$us$phi$trans$insert = ((($$idx$val$i85$us$pre)) + 48|0);
   $$idx$val$idx$val$i87$us$pre = load4($$idx$val$idx$i86$us$phi$trans$insert);
   if ($127) {
    $$012$i84$us = $125;
    while(1) {
     $130 = (($$idx$val$idx$val$i87$us$pre) + ($$012$i84$us<<2)|0);
     $131 = load4($130);
     $132 = $131 >>> 14;
     $133 = (($132) + -131071)|0;
     $134 = ($133|0)==(-1);
     $135 = (($$012$i84$us) + 1)|0;
     $136 = (($135) + ($133))|0;
     $$0$i$i88$us = $134 ? -1 : $136;
     $137 = ($$012$i84$us|0)>(0);
     if ($137) {
      $138 = ((($130)) + -4|0);
      $139 = load4($138);
      $140 = $139 & 63;
      $141 = (1280 + ($140)|0);
      $142 = load1($141);
      $143 = ($142<<24>>24)<(0);
      if ($143) {
       $$0$i$i99$us = $138;$145 = $139;
      } else {
       label = 48;
      }
     } else {
      label = 48;
     }
     if ((label|0) == 48) {
      label = 0;
      $$0$i$i99$us = $130;$145 = $131;
     }
     $144 = $145 & 63;
     $146 = ($144|0)==(35);
     if ($146) {
      $150 = $145 >>> 23;
      $151 = $150 << 6;
      $152 = $145 & 8372224;
      $153 = $152 | $151;
      $154 = $153 | 34;
      store4($$0$i$i99$us,$154);
      $$neg11$i94$us = $$012$i84$us ^ -1;
      $155 = (($123) + ($$neg11$i94$us))|0;
      $ispos$i95$us = ($155|0)>(-1);
      $neg$i96$us = (0 - ($155))|0;
      $156 = $ispos$i95$us ? $155 : $neg$i96$us;
      $157 = ($156|0)>(131071);
      if ($157) {
       label = 62;
       break;
      }
      $158 = load4($130);
      $$sink163 = $155;$$sink164 = $158;
     } else {
      $$neg11$i$i89$us = $$012$i84$us ^ -1;
      $147 = (($$0) + ($$neg11$i$i89$us))|0;
      $ispos$i$i90$us = ($147|0)>(-1);
      $neg$i$i91$us = (0 - ($147))|0;
      $148 = $ispos$i$i90$us ? $147 : $neg$i$i91$us;
      $149 = ($148|0)>(131071);
      if ($149) {
       label = 65;
       break;
      } else {
       $$sink163 = $147;$$sink164 = $131;
      }
     }
     $159 = $$sink164 & 16383;
     $160 = $$sink163 << 14;
     $161 = (($160) + 2147467264)|0;
     $162 = $159 | $161;
     store4($130,$162);
     $163 = ($$0$i$i88$us|0)==(-1);
     if ($163) {
      break L64;
     } else {
      $$012$i84$us = $$0$i$i88$us;
     }
    }
    if ((label|0) == 62) {
     $191 = ((($0)) + 8|0);
     $192 = load4($191);
     _luaX_syntaxerror($192,10514);
     // unreachable;
    }
    else if ((label|0) == 65) {
     $197 = ((($0)) + 8|0);
     $198 = load4($197);
     _luaX_syntaxerror($198,10514);
     // unreachable;
    }
   }
   $$012$i84 = $125;
   while(1) {
    $164 = (($$idx$val$idx$val$i87$us$pre) + ($$012$i84<<2)|0);
    $165 = load4($164);
    $166 = $165 >>> 14;
    $167 = (($166) + -131071)|0;
    $168 = ($167|0)==(-1);
    $169 = (($$012$i84) + 1)|0;
    $170 = (($169) + ($167))|0;
    $$0$i$i88 = $168 ? -1 : $170;
    $171 = ($$012$i84|0)>(0);
    if ($171) {
     $172 = ((($164)) + -4|0);
     $173 = load4($172);
     $174 = $173 & 63;
     $175 = (1280 + ($174)|0);
     $176 = load1($175);
     $177 = ($176<<24>>24)<(0);
     if ($177) {
      $$0$i$i99 = $172;$179 = $173;
     } else {
      label = 56;
     }
    } else {
     label = 56;
    }
    if ((label|0) == 56) {
     label = 0;
     $$0$i$i99 = $164;$179 = $165;
    }
    $178 = $179 & 63;
    $180 = ($178|0)==(35);
    if ($180) {
     $181 = $179 >>> 23;
     $182 = ($181|0)==($2|0);
     if ($182) {
      $185 = $179 & 8372224;
      $186 = $185 | $128;
      $187 = $186 | 34;
      $storemerge$i102 = $187;
     } else {
      $183 = $179 & -16321;
      $184 = $183 | $129;
      $storemerge$i102 = $184;
     }
     store4($$0$i$i99,$storemerge$i102);
     $$neg11$i94 = $$012$i84 ^ -1;
     $188 = (($123) + ($$neg11$i94))|0;
     $ispos$i95 = ($188|0)>(-1);
     $neg$i96 = (0 - ($188))|0;
     $189 = $ispos$i95 ? $188 : $neg$i96;
     $190 = ($189|0)>(131071);
     if ($190) {
      label = 62;
      break;
     }
     $193 = load4($164);
     $$sink167 = $188;$$sink168 = $193;
    } else {
     $$neg11$i$i89 = $$012$i84 ^ -1;
     $194 = (($$0) + ($$neg11$i$i89))|0;
     $ispos$i$i90 = ($194|0)>(-1);
     $neg$i$i91 = (0 - ($194))|0;
     $195 = $ispos$i$i90 ? $194 : $neg$i$i91;
     $196 = ($195|0)>(131071);
     if ($196) {
      label = 65;
      break;
     } else {
      $$sink167 = $194;$$sink168 = $165;
     }
    }
    $199 = $$sink168 & 16383;
    $200 = $$sink167 << 14;
    $201 = (($200) + 2147467264)|0;
    $202 = $199 | $201;
    store4($164,$202);
    $203 = ($$0$i$i88|0)==(-1);
    if ($203) {
     break L64;
    } else {
     $$012$i84 = $$0$i$i88;
    }
   }
   if ((label|0) == 62) {
    $191 = ((($0)) + 8|0);
    $192 = load4($191);
    _luaX_syntaxerror($192,10514);
    // unreachable;
   }
   else if ((label|0) == 65) {
    $197 = ((($0)) + 8|0);
    $198 = load4($197);
    _luaX_syntaxerror($198,10514);
    // unreachable;
   }
  }
 } while(0);
 $204 = load4($5);
 $205 = ($204|0)==(-1);
 if ($205) {
  store4($5,-1);
  store4($28,-1);
  $283 = ((($1)) + 8|0);
  store4($283,$2);
  store4($1,7);
  return;
 }
 $206 = ($2|0)==(255);
 $207 = $2 << 6;
 $208 = $207 & 16320;
 $$idx$val$i46$us$pre = load4($0);
 $$idx$val$idx$i47$us$phi$trans$insert = ((($$idx$val$i46$us$pre)) + 48|0);
 $$idx$val$idx$val$i48$us$pre = load4($$idx$val$idx$i47$us$phi$trans$insert);
 if ($206) {
  $$012$i$us = $204;
  while(1) {
   $209 = (($$idx$val$idx$val$i48$us$pre) + ($$012$i$us<<2)|0);
   $210 = load4($209);
   $211 = $210 >>> 14;
   $212 = (($211) + -131071)|0;
   $213 = ($212|0)==(-1);
   $214 = (($$012$i$us) + 1)|0;
   $215 = (($214) + ($212))|0;
   $$0$i$i49$us = $213 ? -1 : $215;
   $216 = ($$012$i$us|0)>(0);
   if ($216) {
    $217 = ((($209)) + -4|0);
    $218 = load4($217);
    $219 = $218 & 63;
    $220 = (1280 + ($219)|0);
    $221 = load1($220);
    $222 = ($221<<24>>24)<(0);
    if ($222) {
     $$0$i$i67$us = $217;$224 = $218;
    } else {
     label = 73;
    }
   } else {
    label = 73;
   }
   if ((label|0) == 73) {
    label = 0;
    $$0$i$i67$us = $209;$224 = $210;
   }
   $223 = $224 & 63;
   $225 = ($223|0)==(35);
   if ($225) {
    $229 = $224 >>> 23;
    $230 = $229 << 6;
    $231 = $224 & 8372224;
    $232 = $231 | $230;
    $233 = $232 | 34;
    store4($$0$i$i67$us,$233);
    $$neg11$i$us = $$012$i$us ^ -1;
    $234 = (($123) + ($$neg11$i$us))|0;
    $ispos$i$us = ($234|0)>(-1);
    $neg$i$us = (0 - ($234))|0;
    $235 = $ispos$i$us ? $234 : $neg$i$us;
    $236 = ($235|0)>(131071);
    if ($236) {
     label = 87;
     break;
    }
    $237 = load4($209);
    $$sink171 = $234;$$sink172 = $237;
   } else {
    $$neg11$i$i50$us = $$012$i$us ^ -1;
    $226 = (($$043) + ($$neg11$i$i50$us))|0;
    $ispos$i$i51$us = ($226|0)>(-1);
    $neg$i$i52$us = (0 - ($226))|0;
    $227 = $ispos$i$i51$us ? $226 : $neg$i$i52$us;
    $228 = ($227|0)>(131071);
    if ($228) {
     label = 90;
     break;
    } else {
     $$sink171 = $226;$$sink172 = $210;
    }
   }
   $238 = $$sink172 & 16383;
   $239 = $$sink171 << 14;
   $240 = (($239) + 2147467264)|0;
   $241 = $238 | $240;
   store4($209,$241);
   $242 = ($$0$i$i49$us|0)==(-1);
   if ($242) {
    label = 92;
    break;
   } else {
    $$012$i$us = $$0$i$i49$us;
   }
  }
  if ((label|0) == 87) {
   $270 = ((($0)) + 8|0);
   $271 = load4($270);
   _luaX_syntaxerror($271,10514);
   // unreachable;
  }
  else if ((label|0) == 90) {
   $276 = ((($0)) + 8|0);
   $277 = load4($276);
   _luaX_syntaxerror($277,10514);
   // unreachable;
  }
  else if ((label|0) == 92) {
   store4($5,-1);
   store4($28,-1);
   $283 = ((($1)) + 8|0);
   store4($283,$2);
   store4($1,7);
   return;
  }
 }
 $$012$i = $204;
 while(1) {
  $243 = (($$idx$val$idx$val$i48$us$pre) + ($$012$i<<2)|0);
  $244 = load4($243);
  $245 = $244 >>> 14;
  $246 = (($245) + -131071)|0;
  $247 = ($246|0)==(-1);
  $248 = (($$012$i) + 1)|0;
  $249 = (($248) + ($246))|0;
  $$0$i$i49 = $247 ? -1 : $249;
  $250 = ($$012$i|0)>(0);
  if ($250) {
   $251 = ((($243)) + -4|0);
   $252 = load4($251);
   $253 = $252 & 63;
   $254 = (1280 + ($253)|0);
   $255 = load1($254);
   $256 = ($255<<24>>24)<(0);
   if ($256) {
    $$0$i$i67 = $251;$258 = $252;
   } else {
    label = 81;
   }
  } else {
   label = 81;
  }
  if ((label|0) == 81) {
   label = 0;
   $$0$i$i67 = $243;$258 = $244;
  }
  $257 = $258 & 63;
  $259 = ($257|0)==(35);
  if ($259) {
   $260 = $258 >>> 23;
   $261 = ($260|0)==($2|0);
   if ($261) {
    $264 = $258 & 8372224;
    $265 = $264 | $207;
    $266 = $265 | 34;
    $storemerge$i = $266;
   } else {
    $262 = $258 & -16321;
    $263 = $262 | $208;
    $storemerge$i = $263;
   }
   store4($$0$i$i67,$storemerge$i);
   $$neg11$i = $$012$i ^ -1;
   $267 = (($123) + ($$neg11$i))|0;
   $ispos$i = ($267|0)>(-1);
   $neg$i = (0 - ($267))|0;
   $268 = $ispos$i ? $267 : $neg$i;
   $269 = ($268|0)>(131071);
   if ($269) {
    label = 87;
    break;
   }
   $272 = load4($243);
   $$sink175 = $267;$$sink176 = $272;
  } else {
   $$neg11$i$i50 = $$012$i ^ -1;
   $273 = (($$043) + ($$neg11$i$i50))|0;
   $ispos$i$i51 = ($273|0)>(-1);
   $neg$i$i52 = (0 - ($273))|0;
   $274 = $ispos$i$i51 ? $273 : $neg$i$i52;
   $275 = ($274|0)>(131071);
   if ($275) {
    label = 90;
    break;
   } else {
    $$sink175 = $273;$$sink176 = $244;
   }
  }
  $278 = $$sink176 & 16383;
  $279 = $$sink175 << 14;
  $280 = (($279) + 2147467264)|0;
  $281 = $278 | $280;
  store4($243,$281);
  $282 = ($$0$i$i49|0)==(-1);
  if ($282) {
   label = 92;
   break;
  } else {
   $$012$i = $$0$i$i49;
  }
 }
 if ((label|0) == 87) {
  $270 = ((($0)) + 8|0);
  $271 = load4($270);
  _luaX_syntaxerror($271,10514);
  // unreachable;
 }
 else if ((label|0) == 90) {
  $276 = ((($0)) + 8|0);
  $277 = load4($276);
  _luaX_syntaxerror($277,10514);
  // unreachable;
 }
 else if ((label|0) == 92) {
  store4($5,-1);
  store4($28,-1);
  $283 = ((($1)) + 8|0);
  store4($283,$2);
  store4($1,7);
  return;
 }
}
function _discharge2reg($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$042$i = 0, $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0.0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = i64(), $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond$i = 0;
 var $or$cond44$i = 0, $spec$select$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $3 = sp + 16|0;
 $4 = sp;
 _luaK_dischargevars($0,$1);
 $5 = load4($1);
 L1: do {
  switch ($5|0) {
  case 1:  {
   $6 = (($2) + 1)|0;
   $7 = ((($0)) + 16|0);
   $8 = load4($7);
   $9 = ((($0)) + 20|0);
   $10 = load4($9);
   $11 = ($8|0)>($10|0);
   do {
    if ($11) {
     $12 = load4($0);
     $13 = ((($12)) + 48|0);
     $14 = load4($13);
     $15 = (($8) + -1)|0;
     $16 = (($14) + ($15<<2)|0);
     $17 = load4($16);
     $18 = $17 & 63;
     $19 = ($18|0)==(4);
     if ($19) {
      $20 = $17 >>> 6;
      $21 = $20 & 255;
      $22 = $17 >>> 23;
      $23 = (($21) + ($22))|0;
      $24 = ($21|0)>($2|0);
      $25 = (($23) + 1)|0;
      $26 = ($25|0)<($2|0);
      $or$cond$i = $24 | $26;
      if ($or$cond$i) {
       $27 = ($21|0)<($2|0);
       $28 = ($21|0)>($6|0);
       $or$cond44$i = $27 | $28;
       if ($or$cond44$i) {
        break;
       }
      }
      $29 = ($21|0)<($2|0);
      $spec$select$i = $29 ? $21 : $2;
      $30 = ($23|0)>($2|0);
      $$042$i = $30 ? $23 : $2;
      $31 = $17 & 8372287;
      $32 = $spec$select$i << 6;
      $33 = $32 & 16320;
      $34 = $33 | $31;
      $35 = (($$042$i) - ($spec$select$i))|0;
      $36 = $35 << 23;
      $37 = $34 | $36;
      store4($16,$37);
      break L1;
     }
    }
   } while(0);
   $38 = $2 << 6;
   $39 = $38 | 4;
   (_luaK_code($0,$39)|0);
   break;
  }
  case 2: case 3:  {
   $40 = ($5|0)==(2);
   $41 = $40&1;
   $42 = $2 << 6;
   $43 = $41 << 23;
   $44 = $42 | $43;
   $45 = $44 | 3;
   (_luaK_code($0,$45)|0);
   break;
  }
  case 4:  {
   $46 = ((($1)) + 8|0);
   $47 = load4($46);
   $48 = ($47|0)<(262144);
   $49 = $2 << 6;
   if ($48) {
    $50 = $47 << 14;
    $51 = $49 | $50;
    $52 = $51 | 1;
    (_luaK_code($0,$52)|0);
    break L1;
   } else {
    $53 = $49 | 2;
    (_luaK_code($0,$53)|0);
    $54 = $47 << 6;
    $55 = $54 | 46;
    (_luaK_code($0,$55)|0);
    break L1;
   }
   break;
  }
  case 5:  {
   $56 = ((($1)) + 8|0);
   $57 = loadd($56);
   stored($3,$57);
   $58 = ((($3)) + 8|0);
   store4($58,3);
   $59 = (_addk($0,$3,$3)|0);
   $60 = ($59|0)<(262144);
   $61 = $2 << 6;
   if ($60) {
    $62 = $59 << 14;
    $63 = $61 | $62;
    $64 = $63 | 1;
    (_luaK_code($0,$64)|0);
    break L1;
   } else {
    $65 = $61 | 2;
    (_luaK_code($0,$65)|0);
    $66 = $59 << 6;
    $67 = $66 | 46;
    (_luaK_code($0,$67)|0);
    break L1;
   }
   break;
  }
  case 6:  {
   $68 = ((($1)) + 8|0);
   $69 = load8($68);
   $70 = i64_trunc($69);
   $71 = $70;
   store4($3,$71);
   $72 = ((($3)) + 8|0);
   store4($72,2);
   store8($4,$69);
   $73 = ((($4)) + 8|0);
   store4($73,19);
   $74 = (_addk($0,$3,$4)|0);
   $75 = ($74|0)<(262144);
   $76 = $2 << 6;
   if ($75) {
    $77 = $74 << 14;
    $78 = $76 | $77;
    $79 = $78 | 1;
    (_luaK_code($0,$79)|0);
    break L1;
   } else {
    $80 = $76 | 2;
    (_luaK_code($0,$80)|0);
    $81 = $74 << 6;
    $82 = $81 | 46;
    (_luaK_code($0,$82)|0);
    break L1;
   }
   break;
  }
  case 12:  {
   $83 = load4($0);
   $84 = ((($83)) + 48|0);
   $85 = load4($84);
   $86 = ((($1)) + 8|0);
   $87 = load4($86);
   $88 = (($85) + ($87<<2)|0);
   $89 = load4($88);
   $90 = $89 & -16321;
   $91 = $2 << 6;
   $92 = $91 & 16320;
   $93 = $90 | $92;
   store4($88,$93);
   break;
  }
  case 7:  {
   $94 = ((($1)) + 8|0);
   $95 = load4($94);
   $96 = ($95|0)==($2|0);
   if (!($96)) {
    $97 = $2 << 6;
    $98 = $95 << 23;
    $99 = $98 | $97;
    (_luaK_code($0,$99)|0);
   }
   break;
  }
  default: {
   STACKTOP = sp;return;
  }
  }
 } while(0);
 $100 = ((($1)) + 8|0);
 store4($100,$2);
 store4($1,7);
 STACKTOP = sp;return;
}
function _luaK_exp2anyreg($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre$i$i = 0, $$pre$phi$i$iZ2D = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _luaK_dischargevars($0,$1);
 $2 = load4($1);
 $3 = ($2|0)==(7);
 if ($3) {
  $4 = ((($1)) + 16|0);
  $5 = load4($4);
  $6 = ((($1)) + 20|0);
  $7 = load4($6);
  $8 = ($5|0)==($7|0);
  $9 = ((($1)) + 8|0);
  $10 = load4($9);
  if ($8) {
   $$0 = $10;
   return ($$0|0);
  }
  $11 = ((($0)) + 42|0);
  $12 = load1($11);
  $13 = $12&255;
  $14 = ($10|0)<($13|0);
  if ($14) {
   label = 5;
  } else {
   _exp2reg($0,$1,$10);
   $$sink = $9;
  }
 } else {
  label = 5;
 }
 if ((label|0) == 5) {
  _luaK_dischargevars($0,$1);
  $15 = load4($1);
  $16 = ($15|0)==(7);
  if ($16) {
   $17 = ((($1)) + 8|0);
   $18 = load4($17);
   $19 = $18 & 256;
   $20 = ($19|0)==(0);
   if ($20) {
    $21 = ((($0)) + 42|0);
    $22 = load1($21);
    $23 = $22&255;
    $24 = ($18|0)<($23|0);
    if (!($24)) {
     $25 = ((($0)) + 44|0);
     $26 = load1($25);
     $27 = (($26) + -1)<<24>>24;
     store1($25,$27);
    }
   }
  }
  $28 = ((($0)) + 44|0);
  $29 = load1($28);
  $30 = $29&255;
  $31 = (($30) + 1)|0;
  $32 = load4($0);
  $33 = ((($32)) + 8|0);
  $34 = load1($33);
  $35 = ($29&255)<($34&255);
  do {
   if ($35) {
    $$pre$i$i = $31&255;
    $$pre$phi$i$iZ2D = $$pre$i$i;
   } else {
    $36 = ($29&255)>(253);
    if ($36) {
     $37 = ((($0)) + 8|0);
     $38 = load4($37);
     _luaX_syntaxerror($38,10549);
     // unreachable;
    } else {
     $39 = $31&255;
     store1($33,$39);
     $$pre$phi$i$iZ2D = $39;
     break;
    }
   }
  } while(0);
  store1($28,$$pre$phi$i$iZ2D);
  $40 = $$pre$phi$i$iZ2D&255;
  $41 = (($40) + -1)|0;
  _exp2reg($0,$1,$41);
  $42 = ((($1)) + 8|0);
  $$sink = $42;
 }
 $43 = load4($$sink);
 $$0 = $43;
 return ($$0|0);
}
function _luaK_exp2anyregup($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = load4($1);
 $3 = ($2|0)==(9);
 if ($3) {
  $4 = ((($1)) + 16|0);
  $5 = load4($4);
  $6 = ((($1)) + 20|0);
  $7 = load4($6);
  $8 = ($5|0)==($7|0);
  if ($8) {
   return;
  }
 }
 (_luaK_exp2anyreg($0,$1)|0);
 return;
}
function _luaK_exp2val($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 16|0);
 $3 = load4($2);
 $4 = ((($1)) + 20|0);
 $5 = load4($4);
 $6 = ($3|0)==($5|0);
 if ($6) {
  _luaK_dischargevars($0,$1);
  return;
 } else {
  (_luaK_exp2anyreg($0,$1)|0);
  return;
 }
}
function _luaK_exp2RK($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = i64();
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $2 = sp + 16|0;
 $3 = sp;
 $4 = ((($1)) + 16|0);
 $5 = load4($4);
 $6 = ((($1)) + 20|0);
 $7 = load4($6);
 $8 = ($5|0)==($7|0);
 if ($8) {
  _luaK_dischargevars($0,$1);
 } else {
  (_luaK_exp2anyreg($0,$1)|0);
 }
 $9 = load4($1);
 switch ($9|0) {
 case 2:  {
  store4($2,1);
  $10 = ((($2)) + 8|0);
  store4($10,1);
  $11 = (_addk($0,$2,$2)|0);
  $12 = ((($1)) + 8|0);
  store4($12,$11);
  $35 = $11;
  label = 11;
  break;
 }
 case 3:  {
  store4($2,0);
  $13 = ((($2)) + 8|0);
  store4($13,1);
  $14 = (_addk($0,$2,$2)|0);
  $15 = ((($1)) + 8|0);
  store4($15,$14);
  $35 = $14;
  label = 11;
  break;
 }
 case 1:  {
  $16 = ((($3)) + 8|0);
  store4($16,0);
  $17 = ((($0)) + 8|0);
  $18 = load4($17);
  $19 = ((($18)) + 64|0);
  $20 = load4($19);
  store4($2,$20);
  $21 = ((($2)) + 8|0);
  store4($21,69);
  $22 = (_addk($0,$2,$3)|0);
  $23 = ((($1)) + 8|0);
  store4($23,$22);
  $35 = $22;
  label = 11;
  break;
 }
 case 6:  {
  $24 = ((($1)) + 8|0);
  $25 = load8($24);
  $26 = i64_trunc($25);
  $27 = $26;
  store4($2,$27);
  $28 = ((($2)) + 8|0);
  store4($28,2);
  store8($3,$25);
  $29 = ((($3)) + 8|0);
  store4($29,19);
  $30 = (_addk($0,$2,$3)|0);
  store4($24,$30);
  $35 = $30;
  label = 11;
  break;
 }
 case 5:  {
  $31 = ((($1)) + 8|0);
  $32 = loadd($31);
  stored($2,$32);
  $33 = ((($2)) + 8|0);
  store4($33,3);
  $34 = (_addk($0,$2,$2)|0);
  store4($31,$34);
  $35 = $34;
  label = 11;
  break;
 }
 case 4:  {
  $$phi$trans$insert = ((($1)) + 8|0);
  $$pre = load4($$phi$trans$insert);
  $35 = $$pre;
  label = 11;
  break;
 }
 default: {
 }
 }
 if ((label|0) == 11) {
  store4($1,4);
  $36 = ($35|0)<(256);
  if ($36) {
   $37 = $35 | 256;
   $$0 = $37;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $38 = (_luaK_exp2anyreg($0,$1)|0);
 $$0 = $38;
 STACKTOP = sp;return ($$0|0);
}
function _luaK_storevar($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = load4($1);
 switch ($3|0) {
 case 8:  {
  $4 = load4($2);
  $5 = ($4|0)==(7);
  if ($5) {
   $6 = ((($2)) + 8|0);
   $7 = load4($6);
   $8 = $7 & 256;
   $9 = ($8|0)==(0);
   if ($9) {
    $10 = ((($0)) + 42|0);
    $11 = load1($10);
    $12 = $11&255;
    $13 = ($7|0)<($12|0);
    if (!($13)) {
     $14 = ((($0)) + 44|0);
     $15 = load1($14);
     $16 = (($15) + -1)<<24>>24;
     store1($14,$16);
    }
   }
  }
  $17 = ((($1)) + 8|0);
  $18 = load4($17);
  _exp2reg($0,$2,$18);
  return;
  break;
 }
 case 9:  {
  $19 = (_luaK_exp2anyreg($0,$2)|0);
  $20 = ((($1)) + 8|0);
  $21 = load4($20);
  $22 = $19 << 6;
  $23 = $21 << 23;
  $24 = $22 | $23;
  $25 = $24 | 9;
  (_luaK_code($0,$25)|0);
  break;
 }
 case 10:  {
  $26 = ((($1)) + 8|0);
  $27 = ((($26)) + 3|0);
  $28 = load1($27);
  $29 = ($28<<24>>24)==(8);
  $30 = $29 ? 10 : 8;
  $31 = (_luaK_exp2RK($0,$2)|0);
  $32 = ((($26)) + 2|0);
  $33 = load1($32);
  $34 = $33&255;
  $35 = load2($26);
  $36 = $35&65535;
  $37 = $34 << 6;
  $38 = $36 << 23;
  $39 = $31 << 14;
  $40 = $39 | $30;
  $41 = $40 | $37;
  $42 = $41 | $38;
  (_luaK_code($0,$42)|0);
  break;
 }
 default: {
 }
 }
 $43 = load4($2);
 $44 = ($43|0)==(7);
 if (!($44)) {
  return;
 }
 $45 = ((($2)) + 8|0);
 $46 = load4($45);
 $47 = $46 & 256;
 $48 = ($47|0)==(0);
 if (!($48)) {
  return;
 }
 $49 = ((($0)) + 42|0);
 $50 = load1($49);
 $51 = $50&255;
 $52 = ($46|0)<($51|0);
 if ($52) {
  return;
 }
 $53 = ((($0)) + 44|0);
 $54 = load1($53);
 $55 = (($54) + -1)<<24>>24;
 store1($53,$55);
 return;
}
function _luaK_self($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre$i = 0, $$pre$phi$iZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (_luaK_exp2anyreg($0,$1)|0);
 $3 = ((($1)) + 8|0);
 $4 = load4($3);
 $5 = load4($1);
 $6 = ($5|0)==(7);
 $7 = $4 & 256;
 $8 = ($7|0)==(0);
 $or$cond = $6 & $8;
 if ($or$cond) {
  $9 = ((($0)) + 42|0);
  $10 = load1($9);
  $11 = $10&255;
  $12 = ($4|0)<($11|0);
  if (!($12)) {
   $13 = ((($0)) + 44|0);
   $14 = load1($13);
   $15 = (($14) + -1)<<24>>24;
   store1($13,$15);
  }
 }
 $16 = ((($0)) + 44|0);
 $17 = load1($16);
 $18 = $17&255;
 store4($3,$18);
 store4($1,7);
 $19 = load1($16);
 $20 = $19&255;
 $21 = (($20) + 2)|0;
 $22 = load4($0);
 $23 = ((($22)) + 8|0);
 $24 = load1($23);
 $25 = $24&255;
 $26 = ($21>>>0)>($25>>>0);
 do {
  if ($26) {
   $27 = ($21>>>0)>(254);
   if ($27) {
    $28 = ((($0)) + 8|0);
    $29 = load4($28);
    _luaX_syntaxerror($29,10549);
    // unreachable;
   } else {
    $30 = $21&255;
    store1($23,$30);
    $$pre$phi$iZ2D = $30;
    break;
   }
  } else {
   $$pre$i = $21&255;
   $$pre$phi$iZ2D = $$pre$i;
  }
 } while(0);
 store1($16,$$pre$phi$iZ2D);
 $31 = load4($3);
 $32 = (_luaK_exp2RK($0,$2)|0);
 $33 = $31 << 6;
 $34 = $4 << 23;
 $35 = $32 << 14;
 $36 = $34 | $33;
 $37 = $36 | $35;
 $38 = $37 | 12;
 (_luaK_code($0,$38)|0);
 $39 = load4($2);
 $40 = ($39|0)==(7);
 if (!($40)) {
  return;
 }
 $41 = ((($2)) + 8|0);
 $42 = load4($41);
 $43 = $42 & 256;
 $44 = ($43|0)==(0);
 if (!($44)) {
  return;
 }
 $45 = ((($0)) + 42|0);
 $46 = load1($45);
 $47 = $46&255;
 $48 = ($42|0)<($47|0);
 if ($48) {
  return;
 }
 $49 = load1($16);
 $50 = (($49) + -1)<<24>>24;
 store1($16,$50);
 return;
}
function _luaK_goiftrue($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i24 = 0, $$0$i$i$i16 = 0, $$0$i$i$i23 = 0, $$0$i$i14 = 0, $$0$i$i18 = 0, $$033 = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i = 0, $$idx$val$i$i$i20 = 0, $$idx$val$idx = 0, $$idx$val$idx$i = 0, $$idx$val$idx$i$i = 0, $$idx$val$idx$i$i$i = 0;
 var $$idx$val$idx$i$i$i21 = 0, $$idx$val$idx$val = 0, $$idx$val$idx$val$i = 0, $$idx$val$idx$val$i$i = 0, $$idx$val$idx$val$i$i$i = 0, $$idx$val$idx$val$i$i$i22 = 0, $$neg11$i$i = 0, $$neg11$i$i$i = 0, $$neg11$i$i$i$i = 0, $$neg11$i$i$i$i25 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i15 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi19$i31Z2D = 0, $$pre$phi19$i3251Z2D = 0, $$pre$phi19$i3252Z2D = 0, $$pre50 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;
 var $155 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ispos$i$i = 0, $ispos$i$i$i = 0, $ispos$i$i$i$i = 0, $ispos$i$i$i$i26 = 0, $neg$i$i = 0, $neg$i$i$i = 0, $neg$i$i$i$i = 0;
 var $neg$i$i$i$i27 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _luaK_dischargevars($0,$1);
 $2 = load4($1);
 L1: do {
  switch ($2|0) {
  case 11:  {
   $$idx$val = load4($0);
   $$idx$val$idx = ((($$idx$val)) + 48|0);
   $$idx$val$idx$val = load4($$idx$val$idx);
   $3 = ((($1)) + 8|0);
   $4 = load4($3);
   $5 = (($$idx$val$idx$val) + ($4<<2)|0);
   $6 = ($4|0)>(0);
   if ($6) {
    $7 = ((($5)) + -4|0);
    $8 = load4($7);
    $9 = $8 & 63;
    $10 = (1280 + ($9)|0);
    $11 = load1($10);
    $12 = ($11<<24>>24)<(0);
    if ($12) {
     $$0$i$i = $7;$14 = $8;
    } else {
     label = 4;
    }
   } else {
    label = 4;
   }
   if ((label|0) == 4) {
    $$pre$i = load4($5);
    $$0$i$i = $5;$14 = $$pre$i;
   }
   $13 = $14 & -16321;
   $15 = $14 & 16320;
   $16 = ($15|0)==(0);
   $17 = $16&1;
   $18 = $17 << 6;
   $19 = $18 | $13;
   store4($$0$i$i,$19);
   $20 = load4($3);
   $$0 = $20;
   label = 32;
   break;
  }
  case 2: case 6: case 5: case 4:  {
   break;
  }
  case 12:  {
   $21 = load4($0);
   $22 = ((($21)) + 48|0);
   $23 = load4($22);
   $24 = ((($1)) + 8|0);
   $25 = load4($24);
   $26 = (($23) + ($25<<2)|0);
   $27 = load4($26);
   $28 = $27 & 63;
   $29 = ($28|0)==(27);
   $30 = ((($0)) + 16|0);
   if ($29) {
    $31 = $27 >>> 23;
    $32 = load4($30);
    $33 = (($32) + -1)|0;
    store4($30,$33);
    $34 = $31 << 6;
    $35 = $34 | 16418;
    (_luaK_code($0,$35)|0);
    $36 = ((($0)) + 24|0);
    $37 = load4($36);
    store4($36,-1);
    $38 = (_luaK_code($0,2147450910)|0);
    $39 = ($37|0)==(-1);
    if ($39) {
     $$0 = $38;
     label = 32;
    } else {
     $40 = ($38|0)==(-1);
     if ($40) {
      $$033 = $37;
      label = 33;
     } else {
      $$idx$val$i$i$i20 = load4($0);
      $$idx$val$idx$i$i$i21 = ((($$idx$val$i$i$i20)) + 48|0);
      $$idx$val$idx$val$i$i$i22 = load4($$idx$val$idx$i$i$i21);
      $$0$i$i$i23 = $38;
      while(1) {
       $41 = (($$idx$val$idx$val$i$i$i22) + ($$0$i$i$i23<<2)|0);
       $42 = load4($41);
       $43 = $42 >>> 14;
       $44 = (($43) + -131071)|0;
       $45 = ($44|0)==(-1);
       $46 = (($$0$i$i$i23) + 1)|0;
       $47 = (($46) + ($44))|0;
       $$0$i$i$i$i24 = $45 ? -1 : $47;
       $48 = ($$0$i$i$i$i24|0)==(-1);
       if ($48) {
        break;
       } else {
        $$0$i$i$i23 = $$0$i$i$i$i24;
       }
      }
      $$neg11$i$i$i$i25 = $$0$i$i$i23 ^ -1;
      $49 = (($37) + ($$neg11$i$i$i$i25))|0;
      $ispos$i$i$i$i26 = ($49|0)>(-1);
      $neg$i$i$i$i27 = (0 - ($49))|0;
      $50 = $ispos$i$i$i$i26 ? $49 : $neg$i$i$i$i27;
      $51 = ($50|0)>(131071);
      if ($51) {
       $52 = ((($0)) + 8|0);
       $53 = load4($52);
       _luaX_syntaxerror($53,10514);
       // unreachable;
      } else {
       $54 = $42 & 16383;
       $55 = $49 << 14;
       $56 = (($55) + 2147467264)|0;
       $57 = $56 | $54;
       store4($41,$57);
       $$0 = $38;
       label = 32;
       break L1;
      }
     }
    }
   } else {
    $$pre$phi19$i31Z2D = $24;$64 = $21;
    label = 16;
   }
   break;
  }
  default: {
   $$pre$i15 = ((($1)) + 8|0);
   $58 = ($2|0)==(7);
   if ($58) {
    $$pre$phi19$i3252Z2D = $$pre$i15;
    label = 22;
   } else {
    $$pre = load4($0);
    $$pre$phi19$i31Z2D = $$pre$i15;$64 = $$pre;
    label = 16;
   }
  }
  }
 } while(0);
 if ((label|0) == 16) {
  $59 = ((($0)) + 44|0);
  $60 = load1($59);
  $61 = $60&255;
  $62 = (($61) + 1)|0;
  $63 = ((($64)) + 8|0);
  $65 = load1($63);
  $66 = ($60&255)<($65&255);
  do {
   if ($66) {
    $$pre$i$i = $62&255;
    $$pre$phi$i$iZ2D = $$pre$i$i;
   } else {
    $67 = ($60&255)>(253);
    if ($67) {
     $68 = ((($0)) + 8|0);
     $69 = load4($68);
     _luaX_syntaxerror($69,10549);
     // unreachable;
    } else {
     $70 = $62&255;
     store1($63,$70);
     $$pre$phi$i$iZ2D = $70;
     break;
    }
   }
  } while(0);
  store1($59,$$pre$phi$i$iZ2D);
  $71 = $$pre$phi$i$iZ2D&255;
  $72 = (($71) + -1)|0;
  _discharge2reg($0,$1,$72);
  $$pre50 = load4($1);
  $phitmp = ($$pre50|0)==(7);
  if ($phitmp) {
   $$pre$phi19$i3252Z2D = $$pre$phi19$i31Z2D;
   label = 22;
  } else {
   $$pre$phi19$i3251Z2D = $$pre$phi19$i31Z2D;
   label = 25;
  }
 }
 if ((label|0) == 22) {
  $73 = ((($1)) + 8|0);
  $74 = load4($73);
  $75 = $74 & 256;
  $76 = ($75|0)==(0);
  if ($76) {
   $77 = ((($0)) + 42|0);
   $78 = load1($77);
   $79 = $78&255;
   $80 = ($74|0)<($79|0);
   if ($80) {
    $$pre$phi19$i3251Z2D = $$pre$phi19$i3252Z2D;
    label = 25;
   } else {
    $81 = ((($0)) + 44|0);
    $82 = load1($81);
    $83 = (($82) + -1)<<24>>24;
    store1($81,$83);
    $$pre$phi19$i3251Z2D = $$pre$phi19$i3252Z2D;
    label = 25;
   }
  } else {
   $$pre$phi19$i3251Z2D = $$pre$phi19$i3252Z2D;
   label = 25;
  }
 }
 do {
  if ((label|0) == 25) {
   $84 = load4($$pre$phi19$i3251Z2D);
   $85 = $84 << 23;
   $86 = $85 | 16355;
   (_luaK_code($0,$86)|0);
   $87 = ((($0)) + 24|0);
   $88 = load4($87);
   store4($87,-1);
   $89 = (_luaK_code($0,2147450910)|0);
   $90 = ($88|0)==(-1);
   if ($90) {
    $$0 = $89;
    label = 32;
   } else {
    $91 = ($89|0)==(-1);
    if ($91) {
     $$033 = $88;
     label = 33;
    } else {
     $$idx$val$i$i$i = load4($0);
     $$idx$val$idx$i$i$i = ((($$idx$val$i$i$i)) + 48|0);
     $$idx$val$idx$val$i$i$i = load4($$idx$val$idx$i$i$i);
     $$0$i$i$i16 = $89;
     while(1) {
      $92 = (($$idx$val$idx$val$i$i$i) + ($$0$i$i$i16<<2)|0);
      $93 = load4($92);
      $94 = $93 >>> 14;
      $95 = (($94) + -131071)|0;
      $96 = ($95|0)==(-1);
      $97 = (($$0$i$i$i16) + 1)|0;
      $98 = (($97) + ($95))|0;
      $$0$i$i$i$i = $96 ? -1 : $98;
      $99 = ($$0$i$i$i$i|0)==(-1);
      if ($99) {
       break;
      } else {
       $$0$i$i$i16 = $$0$i$i$i$i;
      }
     }
     $$neg11$i$i$i$i = $$0$i$i$i16 ^ -1;
     $100 = (($88) + ($$neg11$i$i$i$i))|0;
     $ispos$i$i$i$i = ($100|0)>(-1);
     $neg$i$i$i$i = (0 - ($100))|0;
     $101 = $ispos$i$i$i$i ? $100 : $neg$i$i$i$i;
     $102 = ($101|0)>(131071);
     if ($102) {
      $103 = ((($0)) + 8|0);
      $104 = load4($103);
      _luaX_syntaxerror($104,10514);
      // unreachable;
     } else {
      $105 = $93 & 16383;
      $106 = $100 << 14;
      $107 = (($106) + 2147467264)|0;
      $108 = $107 | $105;
      store4($92,$108);
      $$0 = $89;
      label = 32;
      break;
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 32) {
  $109 = ($$0|0)==(-1);
  if (!($109)) {
   $$033 = $$0;
   label = 33;
  }
 }
 do {
  if ((label|0) == 33) {
   $110 = ((($1)) + 20|0);
   $111 = load4($110);
   $112 = ($111|0)==(-1);
   if ($112) {
    store4($110,$$033);
    break;
   }
   $$idx$val$i = load4($0);
   $$idx$val$idx$i = ((($$idx$val$i)) + 48|0);
   $$idx$val$idx$val$i = load4($$idx$val$idx$i);
   $$0$i = $111;
   while(1) {
    $113 = (($$idx$val$idx$val$i) + ($$0$i<<2)|0);
    $114 = load4($113);
    $115 = $114 >>> 14;
    $116 = (($115) + -131071)|0;
    $117 = ($116|0)==(-1);
    $118 = (($$0$i) + 1)|0;
    $119 = (($118) + ($116))|0;
    $$0$i$i18 = $117 ? -1 : $119;
    $120 = ($$0$i$i18|0)==(-1);
    if ($120) {
     break;
    } else {
     $$0$i = $$0$i$i18;
    }
   }
   $$neg11$i$i = $$0$i ^ -1;
   $121 = (($$033) + ($$neg11$i$i))|0;
   $ispos$i$i = ($121|0)>(-1);
   $neg$i$i = (0 - ($121))|0;
   $122 = $ispos$i$i ? $121 : $neg$i$i;
   $123 = ($122|0)>(131071);
   if ($123) {
    $124 = ((($0)) + 8|0);
    $125 = load4($124);
    _luaX_syntaxerror($125,10514);
    // unreachable;
   } else {
    $126 = $114 & 16383;
    $127 = $121 << 14;
    $128 = (($127) + 2147467264)|0;
    $129 = $128 | $126;
    store4($113,$129);
    break;
   }
  }
 } while(0);
 $130 = ((($1)) + 16|0);
 $131 = load4($130);
 $132 = ((($0)) + 16|0);
 $133 = load4($132);
 $134 = ((($0)) + 20|0);
 store4($134,$133);
 $135 = ((($0)) + 24|0);
 $136 = ($131|0)==(-1);
 if ($136) {
  store4($130,-1);
  return;
 }
 $137 = load4($135);
 $138 = ($137|0)==(-1);
 if ($138) {
  store4($135,$131);
  store4($130,-1);
  return;
 }
 $$idx$val$i$i = load4($0);
 $$idx$val$idx$i$i = ((($$idx$val$i$i)) + 48|0);
 $$idx$val$idx$val$i$i = load4($$idx$val$idx$i$i);
 $$0$i$i14 = $137;
 while(1) {
  $139 = (($$idx$val$idx$val$i$i) + ($$0$i$i14<<2)|0);
  $140 = load4($139);
  $141 = $140 >>> 14;
  $142 = (($141) + -131071)|0;
  $143 = ($142|0)==(-1);
  $144 = (($$0$i$i14) + 1)|0;
  $145 = (($144) + ($142))|0;
  $$0$i$i$i = $143 ? -1 : $145;
  $146 = ($$0$i$i$i|0)==(-1);
  if ($146) {
   break;
  } else {
   $$0$i$i14 = $$0$i$i$i;
  }
 }
 $$neg11$i$i$i = $$0$i$i14 ^ -1;
 $147 = (($131) + ($$neg11$i$i$i))|0;
 $ispos$i$i$i = ($147|0)>(-1);
 $neg$i$i$i = (0 - ($147))|0;
 $148 = $ispos$i$i$i ? $147 : $neg$i$i$i;
 $149 = ($148|0)>(131071);
 if ($149) {
  $150 = ((($0)) + 8|0);
  $151 = load4($150);
  _luaX_syntaxerror($151,10514);
  // unreachable;
 }
 $152 = $140 & 16383;
 $153 = $147 << 14;
 $154 = (($153) + 2147467264)|0;
 $155 = $154 | $152;
 store4($139,$155);
 store4($130,-1);
 return;
}
function _luaK_goiffalse($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i20 = 0, $$0$i$i$i14 = 0, $$0$i$i$i19 = 0, $$0$i$i12 = 0, $$0$i$i13 = 0, $$029 = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $$idx$val$i$i$i = 0, $$idx$val$i$i$i16 = 0, $$idx$val$idx$i = 0, $$idx$val$idx$i$i = 0, $$idx$val$idx$i$i$i = 0, $$idx$val$idx$i$i$i17 = 0, $$idx$val$idx$val$i = 0, $$idx$val$idx$val$i$i = 0;
 var $$idx$val$idx$val$i$i$i = 0, $$idx$val$idx$val$i$i$i18 = 0, $$neg11$i$i = 0, $$neg11$i$i$i = 0, $$neg11$i$i$i$i = 0, $$neg11$i$i$i$i21 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi19$i27Z2D = 0, $$pre$phi19$i2847Z2D = 0, $$pre$phi19$i2848Z2D = 0, $$pre46 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ispos$i$i = 0, $ispos$i$i$i = 0, $ispos$i$i$i$i = 0, $ispos$i$i$i$i22 = 0, $neg$i$i = 0, $neg$i$i$i = 0, $neg$i$i$i$i = 0, $neg$i$i$i$i23 = 0;
 var $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _luaK_dischargevars($0,$1);
 $2 = load4($1);
 L1: do {
  switch ($2|0) {
  case 11:  {
   $3 = ((($1)) + 8|0);
   $4 = load4($3);
   $$0 = $4;
   label = 29;
   break;
  }
  case 3: case 1:  {
   break;
  }
  case 12:  {
   $5 = load4($0);
   $6 = ((($5)) + 48|0);
   $7 = load4($6);
   $8 = ((($1)) + 8|0);
   $9 = load4($8);
   $10 = (($7) + ($9<<2)|0);
   $11 = load4($10);
   $12 = $11 & 63;
   $13 = ($12|0)==(27);
   $14 = ((($0)) + 16|0);
   if ($13) {
    $15 = $11 >>> 23;
    $16 = load4($14);
    $17 = (($16) + -1)|0;
    store4($14,$17);
    $18 = $15 << 6;
    $19 = $18 | 34;
    (_luaK_code($0,$19)|0);
    $20 = ((($0)) + 24|0);
    $21 = load4($20);
    store4($20,-1);
    $22 = (_luaK_code($0,2147450910)|0);
    $23 = ($21|0)==(-1);
    if ($23) {
     $$0 = $22;
     label = 29;
    } else {
     $24 = ($22|0)==(-1);
     if ($24) {
      $$029 = $21;
      label = 30;
     } else {
      $$idx$val$i$i$i16 = load4($0);
      $$idx$val$idx$i$i$i17 = ((($$idx$val$i$i$i16)) + 48|0);
      $$idx$val$idx$val$i$i$i18 = load4($$idx$val$idx$i$i$i17);
      $$0$i$i$i19 = $22;
      while(1) {
       $25 = (($$idx$val$idx$val$i$i$i18) + ($$0$i$i$i19<<2)|0);
       $26 = load4($25);
       $27 = $26 >>> 14;
       $28 = (($27) + -131071)|0;
       $29 = ($28|0)==(-1);
       $30 = (($$0$i$i$i19) + 1)|0;
       $31 = (($30) + ($28))|0;
       $$0$i$i$i$i20 = $29 ? -1 : $31;
       $32 = ($$0$i$i$i$i20|0)==(-1);
       if ($32) {
        break;
       } else {
        $$0$i$i$i19 = $$0$i$i$i$i20;
       }
      }
      $$neg11$i$i$i$i21 = $$0$i$i$i19 ^ -1;
      $33 = (($21) + ($$neg11$i$i$i$i21))|0;
      $ispos$i$i$i$i22 = ($33|0)>(-1);
      $neg$i$i$i$i23 = (0 - ($33))|0;
      $34 = $ispos$i$i$i$i22 ? $33 : $neg$i$i$i$i23;
      $35 = ($34|0)>(131071);
      if ($35) {
       $36 = ((($0)) + 8|0);
       $37 = load4($36);
       _luaX_syntaxerror($37,10514);
       // unreachable;
      } else {
       $38 = $26 & 16383;
       $39 = $33 << 14;
       $40 = (($39) + 2147467264)|0;
       $41 = $40 | $38;
       store4($25,$41);
       $$0 = $22;
       label = 29;
       break L1;
      }
     }
    }
   } else {
    $$pre$phi19$i27Z2D = $8;$48 = $5;
    label = 13;
   }
   break;
  }
  default: {
   $$pre$i = ((($1)) + 8|0);
   $42 = ($2|0)==(7);
   if ($42) {
    $$pre$phi19$i2848Z2D = $$pre$i;
    label = 19;
   } else {
    $$pre = load4($0);
    $$pre$phi19$i27Z2D = $$pre$i;$48 = $$pre;
    label = 13;
   }
  }
  }
 } while(0);
 if ((label|0) == 13) {
  $43 = ((($0)) + 44|0);
  $44 = load1($43);
  $45 = $44&255;
  $46 = (($45) + 1)|0;
  $47 = ((($48)) + 8|0);
  $49 = load1($47);
  $50 = ($44&255)<($49&255);
  do {
   if ($50) {
    $$pre$i$i = $46&255;
    $$pre$phi$i$iZ2D = $$pre$i$i;
   } else {
    $51 = ($44&255)>(253);
    if ($51) {
     $52 = ((($0)) + 8|0);
     $53 = load4($52);
     _luaX_syntaxerror($53,10549);
     // unreachable;
    } else {
     $54 = $46&255;
     store1($47,$54);
     $$pre$phi$i$iZ2D = $54;
     break;
    }
   }
  } while(0);
  store1($43,$$pre$phi$i$iZ2D);
  $55 = $$pre$phi$i$iZ2D&255;
  $56 = (($55) + -1)|0;
  _discharge2reg($0,$1,$56);
  $$pre46 = load4($1);
  $phitmp = ($$pre46|0)==(7);
  if ($phitmp) {
   $$pre$phi19$i2848Z2D = $$pre$phi19$i27Z2D;
   label = 19;
  } else {
   $$pre$phi19$i2847Z2D = $$pre$phi19$i27Z2D;
   label = 22;
  }
 }
 if ((label|0) == 19) {
  $57 = ((($1)) + 8|0);
  $58 = load4($57);
  $59 = $58 & 256;
  $60 = ($59|0)==(0);
  if ($60) {
   $61 = ((($0)) + 42|0);
   $62 = load1($61);
   $63 = $62&255;
   $64 = ($58|0)<($63|0);
   if ($64) {
    $$pre$phi19$i2847Z2D = $$pre$phi19$i2848Z2D;
    label = 22;
   } else {
    $65 = ((($0)) + 44|0);
    $66 = load1($65);
    $67 = (($66) + -1)<<24>>24;
    store1($65,$67);
    $$pre$phi19$i2847Z2D = $$pre$phi19$i2848Z2D;
    label = 22;
   }
  } else {
   $$pre$phi19$i2847Z2D = $$pre$phi19$i2848Z2D;
   label = 22;
  }
 }
 do {
  if ((label|0) == 22) {
   $68 = load4($$pre$phi19$i2847Z2D);
   $69 = $68 << 23;
   $70 = $69 | 32739;
   (_luaK_code($0,$70)|0);
   $71 = ((($0)) + 24|0);
   $72 = load4($71);
   store4($71,-1);
   $73 = (_luaK_code($0,2147450910)|0);
   $74 = ($72|0)==(-1);
   if ($74) {
    $$0 = $73;
    label = 29;
   } else {
    $75 = ($73|0)==(-1);
    if ($75) {
     $$029 = $72;
     label = 30;
    } else {
     $$idx$val$i$i$i = load4($0);
     $$idx$val$idx$i$i$i = ((($$idx$val$i$i$i)) + 48|0);
     $$idx$val$idx$val$i$i$i = load4($$idx$val$idx$i$i$i);
     $$0$i$i$i = $73;
     while(1) {
      $76 = (($$idx$val$idx$val$i$i$i) + ($$0$i$i$i<<2)|0);
      $77 = load4($76);
      $78 = $77 >>> 14;
      $79 = (($78) + -131071)|0;
      $80 = ($79|0)==(-1);
      $81 = (($$0$i$i$i) + 1)|0;
      $82 = (($81) + ($79))|0;
      $$0$i$i$i$i = $80 ? -1 : $82;
      $83 = ($$0$i$i$i$i|0)==(-1);
      if ($83) {
       break;
      } else {
       $$0$i$i$i = $$0$i$i$i$i;
      }
     }
     $$neg11$i$i$i$i = $$0$i$i$i ^ -1;
     $84 = (($72) + ($$neg11$i$i$i$i))|0;
     $ispos$i$i$i$i = ($84|0)>(-1);
     $neg$i$i$i$i = (0 - ($84))|0;
     $85 = $ispos$i$i$i$i ? $84 : $neg$i$i$i$i;
     $86 = ($85|0)>(131071);
     if ($86) {
      $87 = ((($0)) + 8|0);
      $88 = load4($87);
      _luaX_syntaxerror($88,10514);
      // unreachable;
     } else {
      $89 = $77 & 16383;
      $90 = $84 << 14;
      $91 = (($90) + 2147467264)|0;
      $92 = $91 | $89;
      store4($76,$92);
      $$0 = $73;
      label = 29;
      break;
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 29) {
  $93 = ($$0|0)==(-1);
  if (!($93)) {
   $$029 = $$0;
   label = 30;
  }
 }
 do {
  if ((label|0) == 30) {
   $94 = ((($1)) + 16|0);
   $95 = load4($94);
   $96 = ($95|0)==(-1);
   if ($96) {
    store4($94,$$029);
    break;
   }
   $$idx$val$i = load4($0);
   $$idx$val$idx$i = ((($$idx$val$i)) + 48|0);
   $$idx$val$idx$val$i = load4($$idx$val$idx$i);
   $$0$i = $95;
   while(1) {
    $97 = (($$idx$val$idx$val$i) + ($$0$i<<2)|0);
    $98 = load4($97);
    $99 = $98 >>> 14;
    $100 = (($99) + -131071)|0;
    $101 = ($100|0)==(-1);
    $102 = (($$0$i) + 1)|0;
    $103 = (($102) + ($100))|0;
    $$0$i$i12 = $101 ? -1 : $103;
    $104 = ($$0$i$i12|0)==(-1);
    if ($104) {
     break;
    } else {
     $$0$i = $$0$i$i12;
    }
   }
   $$neg11$i$i = $$0$i ^ -1;
   $105 = (($$029) + ($$neg11$i$i))|0;
   $ispos$i$i = ($105|0)>(-1);
   $neg$i$i = (0 - ($105))|0;
   $106 = $ispos$i$i ? $105 : $neg$i$i;
   $107 = ($106|0)>(131071);
   if ($107) {
    $108 = ((($0)) + 8|0);
    $109 = load4($108);
    _luaX_syntaxerror($109,10514);
    // unreachable;
   } else {
    $110 = $98 & 16383;
    $111 = $105 << 14;
    $112 = (($111) + 2147467264)|0;
    $113 = $112 | $110;
    store4($97,$113);
    break;
   }
  }
 } while(0);
 $114 = ((($1)) + 20|0);
 $115 = load4($114);
 $116 = ((($0)) + 16|0);
 $117 = load4($116);
 $118 = ((($0)) + 20|0);
 store4($118,$117);
 $119 = ((($0)) + 24|0);
 $120 = ($115|0)==(-1);
 if ($120) {
  store4($114,-1);
  return;
 }
 $121 = load4($119);
 $122 = ($121|0)==(-1);
 if ($122) {
  store4($119,$115);
  store4($114,-1);
  return;
 }
 $$idx$val$i$i = load4($0);
 $$idx$val$idx$i$i = ((($$idx$val$i$i)) + 48|0);
 $$idx$val$idx$val$i$i = load4($$idx$val$idx$i$i);
 $$0$i$i13 = $121;
 while(1) {
  $123 = (($$idx$val$idx$val$i$i) + ($$0$i$i13<<2)|0);
  $124 = load4($123);
  $125 = $124 >>> 14;
  $126 = (($125) + -131071)|0;
  $127 = ($126|0)==(-1);
  $128 = (($$0$i$i13) + 1)|0;
  $129 = (($128) + ($126))|0;
  $$0$i$i$i14 = $127 ? -1 : $129;
  $130 = ($$0$i$i$i14|0)==(-1);
  if ($130) {
   break;
  } else {
   $$0$i$i13 = $$0$i$i$i14;
  }
 }
 $$neg11$i$i$i = $$0$i$i13 ^ -1;
 $131 = (($115) + ($$neg11$i$i$i))|0;
 $ispos$i$i$i = ($131|0)>(-1);
 $neg$i$i$i = (0 - ($131))|0;
 $132 = $ispos$i$i$i ? $131 : $neg$i$i$i;
 $133 = ($132|0)>(131071);
 if ($133) {
  $134 = ((($0)) + 8|0);
  $135 = load4($134);
  _luaX_syntaxerror($135,10514);
  // unreachable;
 }
 $136 = $124 & 16383;
 $137 = $131 << 14;
 $138 = (($137) + 2147467264)|0;
 $139 = $138 | $136;
 store4($123,$139);
 store4($114,-1);
 return;
}
function _luaK_indexed($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = load4($3);
 $5 = $4&255;
 $6 = ((($3)) + 2|0);
 store1($6,$5);
 $7 = (_luaK_exp2RK($0,$2)|0);
 $8 = $7&65535;
 store2($3,$8);
 $9 = load4($1);
 $10 = ($9|0)==(9);
 $11 = $10 ? 9 : 8;
 $12 = ((($3)) + 3|0);
 store1($12,$11);
 store4($1,10);
 return;
}
function _luaK_prefix($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i31$i = 0, $$06$i$i = 0, $$06$i29$i = 0, $$idx$val$i = 0, $$idx$val$idx$i = 0, $$idx$val$idx$val$i = 0, $$idx4$val$idx$phi$trans$insert$i$i = 0, $$idx4$val$idx$phi$trans$insert$i26$i = 0, $$idx4$val$idx$val$pre$i$i = 0, $$idx4$val$idx$val$pre$i27$i = 0, $$idx4$val$pre$i$i = 0, $$idx4$val$pre$i25$i = 0, $$pr$i = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i30$i = 0, $$pre$i$i36$i = 0;
 var $$pre$phi$i$i$iZ2D = 0, $$pre$phi39$iZ2D = 0, $$pre37$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $phitmp$i = 0, $spec$select$i$i = 0, $spec$select$i33$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 switch ($1|0) {
 case 1: case 0:  {
  $4 = (($1) + 12)|0;
  $5 = (_constfolding($0,$4,$2,6712)|0);
  $6 = ($5|0)==(0);
  if (!($6)) {
   return;
  }
  break;
 }
 case 3:  {
  break;
 }
 case 2:  {
  _luaK_dischargevars($0,$2);
  $32 = load4($2);
  switch ($32|0) {
  case 3: case 1:  {
   store4($2,2);
   break;
  }
  case 2: case 6: case 5: case 4:  {
   store4($2,3);
   break;
  }
  case 11:  {
   $$idx$val$i = load4($0);
   $$idx$val$idx$i = ((($$idx$val$i)) + 48|0);
   $$idx$val$idx$val$i = load4($$idx$val$idx$i);
   $33 = ((($2)) + 8|0);
   $34 = load4($33);
   $35 = (($$idx$val$idx$val$i) + ($34<<2)|0);
   $36 = ($34|0)>(0);
   if ($36) {
    $37 = ((($35)) + -4|0);
    $38 = load4($37);
    $39 = $38 & 63;
    $40 = (1280 + ($39)|0);
    $41 = load1($40);
    $42 = ($41<<24>>24)<(0);
    if ($42) {
     $$0$i$i$i = $37;$44 = $38;
    } else {
     label = 13;
    }
   } else {
    label = 13;
   }
   if ((label|0) == 13) {
    $$pre$i$i = load4($35);
    $$0$i$i$i = $35;$44 = $$pre$i$i;
   }
   $43 = $44 & -16321;
   $45 = $44 & 16320;
   $46 = ($45|0)==(0);
   $47 = $46&1;
   $48 = $47 << 6;
   $49 = $48 | $43;
   store4($$0$i$i$i,$49);
   break;
  }
  case 7:  {
   label = 22;
   break;
  }
  case 12:  {
   $50 = ((($0)) + 44|0);
   $51 = load1($50);
   $52 = $51&255;
   $53 = (($52) + 1)|0;
   $54 = load4($0);
   $55 = ((($54)) + 8|0);
   $56 = load1($55);
   $57 = ($51&255)<($56&255);
   do {
    if ($57) {
     $$pre$i$i36$i = $53&255;
     $$pre$phi$i$i$iZ2D = $$pre$i$i36$i;
    } else {
     $58 = ($51&255)>(253);
     if ($58) {
      $59 = ((($0)) + 8|0);
      $60 = load4($59);
      _luaX_syntaxerror($60,10549);
      // unreachable;
     } else {
      $61 = $53&255;
      store1($55,$61);
      $$pre$phi$i$i$iZ2D = $61;
      break;
     }
    }
   } while(0);
   store1($50,$$pre$phi$i$i$iZ2D);
   $62 = $$pre$phi$i$i$iZ2D&255;
   $63 = (($62) + -1)|0;
   _discharge2reg($0,$2,$63);
   $$pre$i = load4($2);
   $phitmp$i = ($$pre$i|0)==(7);
   if ($phitmp$i) {
    label = 22;
   } else {
    $$pre37$i = ((($2)) + 8|0);
    $$pre$phi39$iZ2D = $$pre37$i;
    label = 25;
   }
   break;
  }
  default: {
  }
  }
  if ((label|0) == 22) {
   $64 = ((($2)) + 8|0);
   $65 = load4($64);
   $66 = $65 & 256;
   $67 = ($66|0)==(0);
   if ($67) {
    $68 = ((($0)) + 42|0);
    $69 = load1($68);
    $70 = $69&255;
    $71 = ($65|0)<($70|0);
    if ($71) {
     $$pre$phi39$iZ2D = $64;
     label = 25;
    } else {
     $72 = ((($0)) + 44|0);
     $73 = load1($72);
     $74 = (($73) + -1)<<24>>24;
     store1($72,$74);
     $$pre$phi39$iZ2D = $64;
     label = 25;
    }
   } else {
    $$pre$phi39$iZ2D = $64;
    label = 25;
   }
  }
  if ((label|0) == 25) {
   $75 = load4($$pre$phi39$iZ2D);
   $76 = $75 << 23;
   $77 = $76 | 27;
   $78 = (_luaK_code($0,$77)|0);
   store4($$pre$phi39$iZ2D,$78);
   store4($2,12);
  }
  $79 = ((($2)) + 20|0);
  $80 = load4($79);
  $81 = ((($2)) + 16|0);
  $82 = load4($81);
  store4($79,$82);
  store4($81,$80);
  $83 = ($82|0)==(-1);
  if ($83) {
   $107 = $80;
  } else {
   $$idx4$val$pre$i25$i = load4($0);
   $$idx4$val$idx$phi$trans$insert$i26$i = ((($$idx4$val$pre$i25$i)) + 48|0);
   $$idx4$val$idx$val$pre$i27$i = load4($$idx4$val$idx$phi$trans$insert$i26$i);
   $$06$i29$i = $82;
   while(1) {
    $84 = (($$idx4$val$idx$val$pre$i27$i) + ($$06$i29$i<<2)|0);
    $85 = ($$06$i29$i|0)>(0);
    if ($85) {
     $86 = ((($84)) + -4|0);
     $87 = load4($86);
     $88 = $87 & 63;
     $89 = (1280 + ($88)|0);
     $90 = load1($89);
     $91 = ($90<<24>>24)<(0);
     if ($91) {
      $$0$i$i$i31$i = $86;$93 = $87;
     } else {
      label = 30;
     }
    } else {
     label = 30;
    }
    if ((label|0) == 30) {
     label = 0;
     $$pre$i$i30$i = load4($84);
     $$0$i$i$i31$i = $84;$93 = $$pre$i$i30$i;
    }
    $92 = $93 & 63;
    $94 = ($92|0)==(35);
    if ($94) {
     $95 = $93 & 8372224;
     $96 = $93 >>> 23;
     $97 = $96 << 6;
     $98 = $95 | $97;
     $99 = $98 | 34;
     store4($$0$i$i$i31$i,$99);
    }
    $100 = load4($84);
    $101 = $100 >>> 14;
    $102 = (($101) + -131071)|0;
    $103 = ($102|0)==(-1);
    $104 = (($$06$i29$i) + 1)|0;
    $105 = (($104) + ($102))|0;
    $spec$select$i33$i = $103 ? -1 : $105;
    $106 = ($spec$select$i33$i|0)==(-1);
    if ($106) {
     break;
    } else {
     $$06$i29$i = $spec$select$i33$i;
    }
   }
   $$pr$i = load4($81);
   $107 = $$pr$i;
  }
  $108 = ($107|0)==(-1);
  if ($108) {
   return;
  }
  $$idx4$val$pre$i$i = load4($0);
  $$idx4$val$idx$phi$trans$insert$i$i = ((($$idx4$val$pre$i$i)) + 48|0);
  $$idx4$val$idx$val$pre$i$i = load4($$idx4$val$idx$phi$trans$insert$i$i);
  $$06$i$i = $107;
  while(1) {
   $109 = (($$idx4$val$idx$val$pre$i$i) + ($$06$i$i<<2)|0);
   $110 = ($$06$i$i|0)>(0);
   if ($110) {
    $111 = ((($109)) + -4|0);
    $112 = load4($111);
    $113 = $112 & 63;
    $114 = (1280 + ($113)|0);
    $115 = load1($114);
    $116 = ($115<<24>>24)<(0);
    if ($116) {
     $$0$i$i$i$i = $111;$118 = $112;
    } else {
     label = 39;
    }
   } else {
    label = 39;
   }
   if ((label|0) == 39) {
    label = 0;
    $$pre$i$i$i = load4($109);
    $$0$i$i$i$i = $109;$118 = $$pre$i$i$i;
   }
   $117 = $118 & 63;
   $119 = ($117|0)==(35);
   if ($119) {
    $120 = $118 & 8372224;
    $121 = $118 >>> 23;
    $122 = $121 << 6;
    $123 = $120 | $122;
    $124 = $123 | 34;
    store4($$0$i$i$i$i,$124);
   }
   $125 = load4($109);
   $126 = $125 >>> 14;
   $127 = (($126) + -131071)|0;
   $128 = ($127|0)==(-1);
   $129 = (($$06$i$i) + 1)|0;
   $130 = (($129) + ($127))|0;
   $spec$select$i$i = $128 ? -1 : $130;
   $131 = ($spec$select$i$i|0)==(-1);
   if ($131) {
    break;
   } else {
    $$06$i$i = $spec$select$i$i;
   }
  }
  return;
  break;
 }
 default: {
  return;
 }
 }
 $7 = (($1) + 25)|0;
 $8 = (_luaK_exp2anyreg($0,$2)|0);
 $9 = load4($2);
 $10 = ($9|0)==(7);
 $11 = ((($2)) + 8|0);
 if ($10) {
  $12 = load4($11);
  $13 = $12 & 256;
  $14 = ($13|0)==(0);
  if ($14) {
   $15 = ((($0)) + 42|0);
   $16 = load1($15);
   $17 = $16&255;
   $18 = ($12|0)<($17|0);
   if (!($18)) {
    $19 = ((($0)) + 44|0);
    $20 = load1($19);
    $21 = (($20) + -1)<<24>>24;
    store1($19,$21);
   }
  }
 }
 $22 = $8 << 23;
 $23 = $22 | $7;
 $24 = (_luaK_code($0,$23)|0);
 store4($11,$24);
 store4($2,12);
 $25 = load4($0);
 $26 = ((($25)) + 56|0);
 $27 = load4($26);
 $28 = ((($0)) + 16|0);
 $29 = load4($28);
 $30 = (($29) + -1)|0;
 $31 = (($27) + ($30<<2)|0);
 store4($31,$3);
 return;
}
function _constfolding($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$1 = 0, $$cast = 0.0, $$phi$trans$insert = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = i64(), $16 = 0, $17 = 0, $18 = 0.0, $19 = 0, $20 = i64(), $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = i64(), $29 = 0, $30 = 0, $31 = 0.0, $32 = 0, $33 = i64(), $34 = 0, $35 = 0, $36 = i64(), $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0.0, $44 = i64();
 var $45 = 0.0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = i64(), $56 = 0, $57 = 0.0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $4 = sp + 48|0;
 $5 = sp + 32|0;
 $6 = sp + 16|0;
 $7 = sp;
 $8 = ((($2)) + 16|0);
 $9 = load4($8);
 $10 = ((($2)) + 20|0);
 $11 = load4($10);
 $12 = ($9|0)==($11|0);
 if (!($12)) {
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 $13 = load4($2);
 switch ($13|0) {
 case 6:  {
  $14 = ((($2)) + 8|0);
  $15 = load8($14);
  store8($5,$15);
  $16 = ((($5)) + 8|0);
  store4($16,19);
  $34 = 19;$36 = $15;
  break;
 }
 case 5:  {
  $17 = ((($2)) + 8|0);
  $18 = loadd($17);
  stored($5,$18);
  $19 = ((($5)) + 8|0);
  store4($19,3);
  $20 = i64_bc2i($18);
  $34 = 3;$36 = $20;
  break;
 }
 default: {
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 }
 $21 = ((($3)) + 16|0);
 $22 = load4($21);
 $23 = ((($3)) + 20|0);
 $24 = load4($23);
 $25 = ($22|0)==($24|0);
 if (!($25)) {
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 $26 = load4($3);
 switch ($26|0) {
 case 6:  {
  $27 = ((($3)) + 8|0);
  $28 = load8($27);
  store8($6,$28);
  $29 = ((($6)) + 8|0);
  store4($29,19);
  $41 = 19;$44 = $28;
  break;
 }
 case 5:  {
  $30 = ((($3)) + 8|0);
  $31 = loadd($30);
  stored($6,$31);
  $32 = ((($6)) + 8|0);
  store4($32,3);
  $33 = i64_bc2i($31);
  $41 = 3;$44 = $33;
  break;
 }
 default: {
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 }
 L17: do {
  switch ($1|0) {
  case 13: case 11: case 10: case 9: case 8: case 7:  {
   $35 = ($34|0)==(19);
   do {
    if ($35) {
     store8($4,$36);
     $39 = $41;
    } else {
     $37 = (_luaV_tointeger($5,$4,0)|0);
     $38 = ($37|0)==(0);
     if (!($38)) {
      $$phi$trans$insert = ((($6)) + 8|0);
      $$pre = load4($$phi$trans$insert);
      $39 = $$pre;
      break;
     }
     $$1 = 0;
     STACKTOP = sp;return ($$1|0);
    }
   } while(0);
   $40 = ($39|0)==(19);
   if ($40) {
    break L17;
   }
   $47 = (_luaV_tointeger($6,$4,0)|0);
   $phitmp$i = ($47|0)==(0);
   if ($phitmp$i) {
    $$1 = 0;
    STACKTOP = sp;return ($$1|0);
   }
   break;
  }
  case 3: case 6: case 5:  {
   $42 = ($41|0)==(19);
   $43 = i64_s2d($44);
   $$cast = i64_bc2d($44);
   $45 = $42 ? $43 : $$cast;
   $46 = $45 != 0.0;
   if (!($46)) {
    $$1 = 0;
    STACKTOP = sp;return ($$1|0);
   }
   break;
  }
  default: {
  }
  }
 } while(0);
 $48 = ((($0)) + 8|0);
 $49 = load4($48);
 $50 = ((($49)) + 52|0);
 $51 = load4($50);
 _luaO_arith($51,$1,$5,$6,$7);
 $52 = ((($7)) + 8|0);
 $53 = load4($52);
 $54 = ($53|0)==(19);
 if ($54) {
  store4($2,6);
  $55 = load8($7);
  $56 = ((($2)) + 8|0);
  store8($56,$55);
  $$1 = 1;
  STACKTOP = sp;return ($$1|0);
 }
 $57 = loadd($7);
 $58 = ($57 != $57) | (0.0 != 0.0) |($57 == 0.0);
 if ($58) {
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 store4($2,5);
 $59 = ((($2)) + 8|0);
 stored($59,$57);
 $$1 = 1;
 STACKTOP = sp;return ($$1|0);
}
function _luaK_infix($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$off = 0, $$pre$i$i = 0, $$pre$phi$i$iZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 switch ($1|0) {
 case 19:  {
  _luaK_goiftrue($0,$2);
  return;
  break;
 }
 case 20:  {
  _luaK_goiffalse($0,$2);
  return;
  break;
 }
 case 12:  {
  _luaK_dischargevars($0,$2);
  $3 = load4($2);
  $4 = ($3|0)==(7);
  if ($4) {
   $5 = ((($2)) + 8|0);
   $6 = load4($5);
   $7 = $6 & 256;
   $8 = ($7|0)==(0);
   if ($8) {
    $9 = ((($0)) + 42|0);
    $10 = load1($9);
    $11 = $10&255;
    $12 = ($6|0)<($11|0);
    if (!($12)) {
     $13 = ((($0)) + 44|0);
     $14 = load1($13);
     $15 = (($14) + -1)<<24>>24;
     store1($13,$15);
    }
   }
  }
  $16 = ((($0)) + 44|0);
  $17 = load1($16);
  $18 = $17&255;
  $19 = (($18) + 1)|0;
  $20 = load4($0);
  $21 = ((($20)) + 8|0);
  $22 = load1($21);
  $23 = ($17&255)<($22&255);
  do {
   if ($23) {
    $$pre$i$i = $19&255;
    $$pre$phi$i$iZ2D = $$pre$i$i;
   } else {
    $24 = ($17&255)>(253);
    if ($24) {
     $25 = ((($0)) + 8|0);
     $26 = load4($25);
     _luaX_syntaxerror($26,10549);
     // unreachable;
    } else {
     $27 = $19&255;
     store1($21,$27);
     $$pre$phi$i$iZ2D = $27;
     break;
    }
   }
  } while(0);
  store1($16,$$pre$phi$i$iZ2D);
  $28 = $$pre$phi$i$iZ2D&255;
  $29 = (($28) + -1)|0;
  _exp2reg($0,$2,$29);
  return;
  break;
 }
 case 11: case 10: case 9: case 8: case 7: case 4: case 3: case 6: case 5: case 2: case 1: case 0:  {
  $30 = ((($2)) + 16|0);
  $31 = load4($30);
  $32 = ((($2)) + 20|0);
  $33 = load4($32);
  $34 = ($31|0)==($33|0);
  if ($34) {
   $35 = load4($2);
   $$off = (($35) + -5)|0;
   $switch = ($$off>>>0)<(2);
   if ($switch) {
    return;
   }
  }
  (_luaK_exp2RK($0,$2)|0);
  return;
  break;
 }
 default: {
  (_luaK_exp2RK($0,$2)|0);
  return;
 }
 }
}
function _luaK_posfix($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i36$i = 0, $$0$i$i$i$i48$i = 0, $$0$i$i$i35$i = 0, $$0$i$i$i47$i = 0, $$0$i$i41$i$sink = 0, $$0$i$i53 = 0, $$0$i52 = 0, $$idx$val$i = 0, $$idx$val$i$i$i$i = 0, $$idx$val$i$i$i32$i = 0, $$idx$val$i$i$i44$i = 0, $$idx$val$i49 = 0, $$idx$val$idx$i = 0, $$idx$val$idx$i$i$i$i = 0, $$idx$val$idx$i$i$i33$i = 0, $$idx$val$idx$i$i$i45$i = 0;
 var $$idx$val$idx$i50 = 0, $$idx$val$idx$val$i = 0, $$idx$val$idx$val$i$i$i$i = 0, $$idx$val$idx$val$i$i$i34$i = 0, $$idx$val$idx$val$i$i$i46$i = 0, $$idx$val$idx$val$i51 = 0, $$neg11$i$i = 0, $$neg11$i$i$i$i$i = 0, $$neg11$i$i$i$i37$i = 0, $$neg11$i$i$i$i49$i = 0, $$neg11$i$i54 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$i$i = 0, $$pre$phi$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre77 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $ispos$i$i = 0, $ispos$i$i$i$i$i = 0, $ispos$i$i$i$i38$i = 0, $ispos$i$i$i$i50$i = 0, $ispos$i$i55 = 0, $neg$i$i = 0, $neg$i$i$i$i$i = 0, $neg$i$i$i$i39$i = 0, $neg$i$i$i$i51$i = 0, $neg$i$i56 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 switch ($1|0) {
 case 19:  {
  _luaK_dischargevars($0,$3);
  $5 = ((($3)) + 20|0);
  $6 = ((($2)) + 20|0);
  $7 = load4($6);
  $8 = ($7|0)==(-1);
  do {
   if (!($8)) {
    $9 = load4($5);
    $10 = ($9|0)==(-1);
    if ($10) {
     store4($5,$7);
     break;
    }
    $$idx$val$i = load4($0);
    $$idx$val$idx$i = ((($$idx$val$i)) + 48|0);
    $$idx$val$idx$val$i = load4($$idx$val$idx$i);
    $$0$i = $9;
    while(1) {
     $11 = (($$idx$val$idx$val$i) + ($$0$i<<2)|0);
     $12 = load4($11);
     $13 = $12 >>> 14;
     $14 = (($13) + -131071)|0;
     $15 = ($14|0)==(-1);
     $16 = (($$0$i) + 1)|0;
     $17 = (($16) + ($14))|0;
     $$0$i$i = $15 ? -1 : $17;
     $18 = ($$0$i$i|0)==(-1);
     if ($18) {
      break;
     } else {
      $$0$i = $$0$i$i;
     }
    }
    $$neg11$i$i = $$0$i ^ -1;
    $19 = (($7) + ($$neg11$i$i))|0;
    $ispos$i$i = ($19|0)>(-1);
    $neg$i$i = (0 - ($19))|0;
    $20 = $ispos$i$i ? $19 : $neg$i$i;
    $21 = ($20|0)>(131071);
    if ($21) {
     $22 = ((($0)) + 8|0);
     $23 = load4($22);
     _luaX_syntaxerror($23,10514);
     // unreachable;
    } else {
     $24 = $12 & 16383;
     $25 = $19 << 14;
     $26 = (($25) + 2147467264)|0;
     $27 = $26 | $24;
     store4($11,$27);
     break;
    }
   }
  } while(0);
  ; store8($2,load8($3,8),8); store8($2+8 | 0,load8($3+8 | 0,8),8); store8($2+16 | 0,load8($3+16 | 0,8),8);
  return;
  break;
 }
 case 20:  {
  _luaK_dischargevars($0,$3);
  $28 = ((($3)) + 16|0);
  $29 = ((($2)) + 16|0);
  $30 = load4($29);
  $31 = ($30|0)==(-1);
  do {
   if (!($31)) {
    $32 = load4($28);
    $33 = ($32|0)==(-1);
    if ($33) {
     store4($28,$30);
     break;
    }
    $$idx$val$i49 = load4($0);
    $$idx$val$idx$i50 = ((($$idx$val$i49)) + 48|0);
    $$idx$val$idx$val$i51 = load4($$idx$val$idx$i50);
    $$0$i52 = $32;
    while(1) {
     $34 = (($$idx$val$idx$val$i51) + ($$0$i52<<2)|0);
     $35 = load4($34);
     $36 = $35 >>> 14;
     $37 = (($36) + -131071)|0;
     $38 = ($37|0)==(-1);
     $39 = (($$0$i52) + 1)|0;
     $40 = (($39) + ($37))|0;
     $$0$i$i53 = $38 ? -1 : $40;
     $41 = ($$0$i$i53|0)==(-1);
     if ($41) {
      break;
     } else {
      $$0$i52 = $$0$i$i53;
     }
    }
    $$neg11$i$i54 = $$0$i52 ^ -1;
    $42 = (($30) + ($$neg11$i$i54))|0;
    $ispos$i$i55 = ($42|0)>(-1);
    $neg$i$i56 = (0 - ($42))|0;
    $43 = $ispos$i$i55 ? $42 : $neg$i$i56;
    $44 = ($43|0)>(131071);
    if ($44) {
     $45 = ((($0)) + 8|0);
     $46 = load4($45);
     _luaX_syntaxerror($46,10514);
     // unreachable;
    } else {
     $47 = $35 & 16383;
     $48 = $42 << 14;
     $49 = (($48) + 2147467264)|0;
     $50 = $49 | $47;
     store4($34,$50);
     break;
    }
   }
  } while(0);
  ; store8($2,load8($3,8),8); store8($2+8 | 0,load8($3+8 | 0,8),8); store8($2+16 | 0,load8($3+16 | 0,8),8);
  return;
  break;
 }
 case 12:  {
  $51 = ((($3)) + 16|0);
  $52 = load4($51);
  $53 = ((($3)) + 20|0);
  $54 = load4($53);
  $55 = ($52|0)==($54|0);
  if ($55) {
   _luaK_dischargevars($0,$3);
  } else {
   (_luaK_exp2anyreg($0,$3)|0);
  }
  $56 = load4($3);
  $57 = ($56|0)==(12);
  if ($57) {
   $58 = load4($0);
   $59 = ((($58)) + 48|0);
   $60 = load4($59);
   $61 = ((($3)) + 8|0);
   $62 = load4($61);
   $63 = (($60) + ($62<<2)|0);
   $64 = load4($63);
   $65 = $64 & 63;
   $66 = ($65|0)==(29);
   if ($66) {
    $67 = load4($2);
    $68 = ($67|0)==(7);
    $69 = ((($2)) + 8|0);
    if ($68) {
     $70 = load4($69);
     $71 = $70 & 256;
     $72 = ($71|0)==(0);
     if ($72) {
      $73 = ((($0)) + 42|0);
      $74 = load1($73);
      $75 = $74&255;
      $76 = ($70|0)<($75|0);
      if ($76) {
       $$pre$phiZ2D = $63;$81 = $64;
      } else {
       $77 = ((($0)) + 44|0);
       $78 = load1($77);
       $79 = (($78) + -1)<<24>>24;
       store1($77,$79);
       $$pre = load4($61);
       $$phi$trans$insert = (($60) + ($$pre<<2)|0);
       $$pre77 = load4($$phi$trans$insert);
       $$pre$phiZ2D = $$phi$trans$insert;$81 = $$pre77;
      }
     } else {
      $$pre$phiZ2D = $63;$81 = $64;
     }
    } else {
     $$pre$phiZ2D = $63;$81 = $64;
    }
    $80 = $81 & 8388607;
    $82 = load4($69);
    $83 = $82 << 23;
    $84 = $83 | $80;
    store4($$pre$phiZ2D,$84);
    store4($2,12);
    $85 = load4($61);
    store4($69,$85);
    return;
   }
  }
  _luaK_dischargevars($0,$3);
  $86 = load4($3);
  $87 = ($86|0)==(7);
  if ($87) {
   $88 = ((($3)) + 8|0);
   $89 = load4($88);
   $90 = $89 & 256;
   $91 = ($90|0)==(0);
   if ($91) {
    $92 = ((($0)) + 42|0);
    $93 = load1($92);
    $94 = $93&255;
    $95 = ($89|0)<($94|0);
    if (!($95)) {
     $96 = ((($0)) + 44|0);
     $97 = load1($96);
     $98 = (($97) + -1)<<24>>24;
     store1($96,$98);
    }
   }
  }
  $99 = ((($0)) + 44|0);
  $100 = load1($99);
  $101 = $100&255;
  $102 = (($101) + 1)|0;
  $103 = load4($0);
  $104 = ((($103)) + 8|0);
  $105 = load1($104);
  $106 = ($100&255)<($105&255);
  do {
   if ($106) {
    $$pre$i$i = $102&255;
    $$pre$phi$i$iZ2D = $$pre$i$i;
   } else {
    $107 = ($100&255)>(253);
    if ($107) {
     $108 = ((($0)) + 8|0);
     $109 = load4($108);
     _luaX_syntaxerror($109,10549);
     // unreachable;
    } else {
     $110 = $102&255;
     store1($104,$110);
     $$pre$phi$i$iZ2D = $110;
     break;
    }
   }
  } while(0);
  store1($99,$$pre$phi$i$iZ2D);
  $111 = $$pre$phi$i$iZ2D&255;
  $112 = (($111) + -1)|0;
  _exp2reg($0,$3,$112);
  _codebinexpval($0,29,$2,$3,$4);
  return;
  break;
 }
 case 11: case 10: case 9: case 8: case 7: case 4: case 3: case 6: case 5: case 2: case 1: case 0:  {
  $113 = (_constfolding($0,$1,$2,$3)|0);
  $114 = ($113|0)==(0);
  if (!($114)) {
   return;
  }
  $115 = (($1) + 13)|0;
  _codebinexpval($0,$115,$2,$3,$4);
  return;
  break;
 }
 case 18: case 17: case 16: case 15: case 14: case 13:  {
  $116 = load4($2);
  $117 = ($116|0)==(4);
  $118 = ((($2)) + 8|0);
  $119 = load4($118);
  $120 = $119 | 256;
  $121 = $117 ? $120 : $119;
  $122 = (_luaK_exp2RK($0,$3)|0);
  $123 = load4($2);
  $124 = ($123|0)==(7);
  if ($124) {
   $125 = load4($118);
   $130 = $125;
  } else {
   $130 = -1;
  }
  $126 = load4($3);
  $127 = ($126|0)==(7);
  if ($127) {
   $128 = ((($3)) + 8|0);
   $129 = load4($128);
   $132 = $129;
  } else {
   $132 = -1;
  }
  $131 = ($130|0)>($132|0);
  if ($131) {
   $133 = $130 & 256;
   $134 = ($133|0)==(0);
   if ($134) {
    $135 = ((($0)) + 42|0);
    $136 = load1($135);
    $137 = $136&255;
    $138 = ($130|0)<($137|0);
    if (!($138)) {
     $139 = ((($0)) + 44|0);
     $140 = load1($139);
     $141 = (($140) + -1)<<24>>24;
     store1($139,$141);
    }
   }
   $142 = $132 & 256;
   $143 = ($142|0)==(0);
   if ($143) {
    $144 = ((($0)) + 42|0);
    $145 = load1($144);
    $146 = $145&255;
    $147 = ($132|0)<($146|0);
    if (!($147)) {
     $148 = ((($0)) + 44|0);
     $149 = load1($148);
     $150 = (($149) + -1)<<24>>24;
     store1($148,$150);
    }
   }
  } else {
   $151 = $132 & 256;
   $152 = ($151|0)==(0);
   if ($152) {
    $153 = ((($0)) + 42|0);
    $154 = load1($153);
    $155 = $154&255;
    $156 = ($132|0)<($155|0);
    if (!($156)) {
     $157 = ((($0)) + 44|0);
     $158 = load1($157);
     $159 = (($158) + -1)<<24>>24;
     store1($157,$159);
    }
   }
   $160 = $130 & 256;
   $161 = ($160|0)==(0);
   if ($161) {
    $162 = ((($0)) + 42|0);
    $163 = load1($162);
    $164 = $163&255;
    $165 = ($130|0)<($164|0);
    if (!($165)) {
     $166 = ((($0)) + 44|0);
     $167 = load1($166);
     $168 = (($167) + -1)<<24>>24;
     store1($166,$168);
    }
   }
  }
  L86: do {
   switch ($1|0) {
   case 16:  {
    $169 = $121 << 23;
    $170 = $122 << 14;
    $171 = $170 | $169;
    $172 = $171 | 31;
    (_luaK_code($0,$172)|0);
    $173 = ((($0)) + 24|0);
    $174 = load4($173);
    store4($173,-1);
    $175 = (_luaK_code($0,2147450910)|0);
    $176 = ($174|0)==(-1);
    if ($176) {
     $$0$i$i41$i$sink = $175;
    } else {
     $177 = ($175|0)==(-1);
     if ($177) {
      $$0$i$i41$i$sink = $174;
     } else {
      $$idx$val$i$i$i32$i = load4($0);
      $$idx$val$idx$i$i$i33$i = ((($$idx$val$i$i$i32$i)) + 48|0);
      $$idx$val$idx$val$i$i$i34$i = load4($$idx$val$idx$i$i$i33$i);
      $$0$i$i$i35$i = $175;
      while(1) {
       $178 = (($$idx$val$idx$val$i$i$i34$i) + ($$0$i$i$i35$i<<2)|0);
       $179 = load4($178);
       $180 = $179 >>> 14;
       $181 = (($180) + -131071)|0;
       $182 = ($181|0)==(-1);
       $183 = (($$0$i$i$i35$i) + 1)|0;
       $184 = (($183) + ($181))|0;
       $$0$i$i$i$i36$i = $182 ? -1 : $184;
       $185 = ($$0$i$i$i$i36$i|0)==(-1);
       if ($185) {
        break;
       } else {
        $$0$i$i$i35$i = $$0$i$i$i$i36$i;
       }
      }
      $$neg11$i$i$i$i37$i = $$0$i$i$i35$i ^ -1;
      $186 = (($174) + ($$neg11$i$i$i$i37$i))|0;
      $ispos$i$i$i$i38$i = ($186|0)>(-1);
      $neg$i$i$i$i39$i = (0 - ($186))|0;
      $187 = $ispos$i$i$i$i38$i ? $186 : $neg$i$i$i$i39$i;
      $188 = ($187|0)>(131071);
      if ($188) {
       $189 = ((($0)) + 8|0);
       $190 = load4($189);
       _luaX_syntaxerror($190,10514);
       // unreachable;
      } else {
       $191 = $179 & 16383;
       $192 = $186 << 14;
       $193 = (($192) + 2147467264)|0;
       $194 = $193 | $191;
       store4($178,$194);
       $$0$i$i41$i$sink = $175;
       break L86;
      }
     }
    }
    break;
   }
   case 18: case 17:  {
    $195 = (($1) + 15)|0;
    $196 = $122 << 23;
    $197 = $121 << 14;
    $198 = $195 | $196;
    $199 = $198 | $197;
    $200 = $199 | 64;
    (_luaK_code($0,$200)|0);
    $201 = ((($0)) + 24|0);
    $202 = load4($201);
    store4($201,-1);
    $203 = (_luaK_code($0,2147450910)|0);
    $204 = ($202|0)==(-1);
    if ($204) {
     $$0$i$i41$i$sink = $203;
    } else {
     $205 = ($203|0)==(-1);
     if ($205) {
      $$0$i$i41$i$sink = $202;
     } else {
      $$idx$val$i$i$i44$i = load4($0);
      $$idx$val$idx$i$i$i45$i = ((($$idx$val$i$i$i44$i)) + 48|0);
      $$idx$val$idx$val$i$i$i46$i = load4($$idx$val$idx$i$i$i45$i);
      $$0$i$i$i47$i = $203;
      while(1) {
       $206 = (($$idx$val$idx$val$i$i$i46$i) + ($$0$i$i$i47$i<<2)|0);
       $207 = load4($206);
       $208 = $207 >>> 14;
       $209 = (($208) + -131071)|0;
       $210 = ($209|0)==(-1);
       $211 = (($$0$i$i$i47$i) + 1)|0;
       $212 = (($211) + ($209))|0;
       $$0$i$i$i$i48$i = $210 ? -1 : $212;
       $213 = ($$0$i$i$i$i48$i|0)==(-1);
       if ($213) {
        break;
       } else {
        $$0$i$i$i47$i = $$0$i$i$i$i48$i;
       }
      }
      $$neg11$i$i$i$i49$i = $$0$i$i$i47$i ^ -1;
      $214 = (($202) + ($$neg11$i$i$i$i49$i))|0;
      $ispos$i$i$i$i50$i = ($214|0)>(-1);
      $neg$i$i$i$i51$i = (0 - ($214))|0;
      $215 = $ispos$i$i$i$i50$i ? $214 : $neg$i$i$i$i51$i;
      $216 = ($215|0)>(131071);
      if ($216) {
       $217 = ((($0)) + 8|0);
       $218 = load4($217);
       _luaX_syntaxerror($218,10514);
       // unreachable;
      } else {
       $219 = $207 & 16383;
       $220 = $214 << 14;
       $221 = (($220) + 2147467264)|0;
       $222 = $221 | $219;
       store4($206,$222);
       $$0$i$i41$i$sink = $203;
       break L86;
      }
     }
    }
    break;
   }
   default: {
    $223 = (($1) + 18)|0;
    $224 = $121 << 23;
    $225 = $122 << 14;
    $226 = $223 | $225;
    $227 = $226 | $224;
    $228 = $227 | 64;
    (_luaK_code($0,$228)|0);
    $229 = ((($0)) + 24|0);
    $230 = load4($229);
    store4($229,-1);
    $231 = (_luaK_code($0,2147450910)|0);
    $232 = ($230|0)==(-1);
    if ($232) {
     $$0$i$i41$i$sink = $231;
    } else {
     $233 = ($231|0)==(-1);
     if ($233) {
      $$0$i$i41$i$sink = $230;
     } else {
      $$idx$val$i$i$i$i = load4($0);
      $$idx$val$idx$i$i$i$i = ((($$idx$val$i$i$i$i)) + 48|0);
      $$idx$val$idx$val$i$i$i$i = load4($$idx$val$idx$i$i$i$i);
      $$0$i$i$i$i = $231;
      while(1) {
       $234 = (($$idx$val$idx$val$i$i$i$i) + ($$0$i$i$i$i<<2)|0);
       $235 = load4($234);
       $236 = $235 >>> 14;
       $237 = (($236) + -131071)|0;
       $238 = ($237|0)==(-1);
       $239 = (($$0$i$i$i$i) + 1)|0;
       $240 = (($239) + ($237))|0;
       $$0$i$i$i$i$i = $238 ? -1 : $240;
       $241 = ($$0$i$i$i$i$i|0)==(-1);
       if ($241) {
        break;
       } else {
        $$0$i$i$i$i = $$0$i$i$i$i$i;
       }
      }
      $$neg11$i$i$i$i$i = $$0$i$i$i$i ^ -1;
      $242 = (($230) + ($$neg11$i$i$i$i$i))|0;
      $ispos$i$i$i$i$i = ($242|0)>(-1);
      $neg$i$i$i$i$i = (0 - ($242))|0;
      $243 = $ispos$i$i$i$i$i ? $242 : $neg$i$i$i$i$i;
      $244 = ($243|0)>(131071);
      if ($244) {
       $245 = ((($0)) + 8|0);
       $246 = load4($245);
       _luaX_syntaxerror($246,10514);
       // unreachable;
      } else {
       $247 = $235 & 16383;
       $248 = $242 << 14;
       $249 = (($248) + 2147467264)|0;
       $250 = $249 | $247;
       store4($234,$250);
       $$0$i$i41$i$sink = $231;
       break L86;
      }
     }
    }
   }
   }
  } while(0);
  store4($118,$$0$i$i41$i$sink);
  store4($2,11);
  return;
  break;
 }
 default: {
  return;
 }
 }
}
function _codebinexpval($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = (_luaK_exp2RK($0,$3)|0);
 $6 = (_luaK_exp2RK($0,$2)|0);
 $7 = load4($2);
 $8 = ($7|0)==(7);
 if ($8) {
  $9 = ((($2)) + 8|0);
  $10 = load4($9);
  $15 = $10;
 } else {
  $15 = -1;
 }
 $11 = load4($3);
 $12 = ($11|0)==(7);
 if ($12) {
  $13 = ((($3)) + 8|0);
  $14 = load4($13);
  $17 = $14;
 } else {
  $17 = -1;
 }
 $16 = ($15|0)>($17|0);
 if ($16) {
  $18 = $15 & 256;
  $19 = ($18|0)==(0);
  if ($19) {
   $20 = ((($0)) + 42|0);
   $21 = load1($20);
   $22 = $21&255;
   $23 = ($15|0)<($22|0);
   if (!($23)) {
    $24 = ((($0)) + 44|0);
    $25 = load1($24);
    $26 = (($25) + -1)<<24>>24;
    store1($24,$26);
   }
  }
  $27 = $17 & 256;
  $28 = ($27|0)==(0);
  if ($28) {
   $29 = ((($0)) + 42|0);
   $30 = load1($29);
   $31 = $30&255;
   $32 = ($17|0)<($31|0);
   if (!($32)) {
    $33 = ((($0)) + 44|0);
    $34 = load1($33);
    $35 = (($34) + -1)<<24>>24;
    store1($33,$35);
   }
  }
 } else {
  $36 = $17 & 256;
  $37 = ($36|0)==(0);
  if ($37) {
   $38 = ((($0)) + 42|0);
   $39 = load1($38);
   $40 = $39&255;
   $41 = ($17|0)<($40|0);
   if (!($41)) {
    $42 = ((($0)) + 44|0);
    $43 = load1($42);
    $44 = (($43) + -1)<<24>>24;
    store1($42,$44);
   }
  }
  $45 = $15 & 256;
  $46 = ($45|0)==(0);
  if ($46) {
   $47 = ((($0)) + 42|0);
   $48 = load1($47);
   $49 = $48&255;
   $50 = ($15|0)<($49|0);
   if (!($50)) {
    $51 = ((($0)) + 44|0);
    $52 = load1($51);
    $53 = (($52) + -1)<<24>>24;
    store1($51,$53);
   }
  }
 }
 $54 = $6 << 23;
 $55 = $5 << 14;
 $56 = $55 | $1;
 $57 = $56 | $54;
 $58 = (_luaK_code($0,$57)|0);
 $59 = ((($2)) + 8|0);
 store4($59,$58);
 store4($2,12);
 $60 = load4($0);
 $61 = ((($60)) + 56|0);
 $62 = load4($61);
 $63 = ((($0)) + 16|0);
 $64 = load4($63);
 $65 = (($64) + -1)|0;
 $66 = (($62) + ($65<<2)|0);
 store4($66,$4);
 return;
}
function _luaK_fixline($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = load4($0);
 $3 = ((($2)) + 56|0);
 $4 = load4($3);
 $5 = ((($0)) + 16|0);
 $6 = load4($5);
 $7 = (($6) + -1)|0;
 $8 = (($4) + ($7<<2)|0);
 store4($8,$1);
 return;
}
function _luaK_setlist($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$op = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (($2) + -1)|0;
 $5 = (($4|0) / 50)&-1;
 $6 = (($5) + 1)|0;
 $7 = ($3|0)==(-1);
 $8 = ($2|0)<(25551);
 $9 = $1 << 6;
 $$op = $3 << 23;
 $10 = $7 ? 0 : $$op;
 $11 = $9 | $10;
 $12 = $11 | 43;
 if ($8) {
  $13 = $6 << 14;
  $14 = $12 | $13;
  (_luaK_code($0,$14)|0);
 } else {
  (_luaK_code($0,$12)|0);
  $15 = $6 << 6;
  $16 = $15 | 46;
  (_luaK_code($0,$16)|0);
 }
 $17 = (($1) + 1)|0;
 $18 = $17&255;
 $19 = ((($0)) + 44|0);
 store1($19,$18);
 return;
}
function _luaX_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_luaS_newlstr($0,10607,4)|0);
 _luaC_fix($0,$1);
 $2 = (_luaS_new($0,10612)|0);
 _luaC_fix($0,$2);
 $3 = ((($2)) + 6|0);
 store1($3,1);
 $4 = (_luaS_new($0,10616)|0);
 _luaC_fix($0,$4);
 $5 = ((($4)) + 6|0);
 store1($5,2);
 $6 = (_luaS_new($0,10622)|0);
 _luaC_fix($0,$6);
 $7 = ((($6)) + 6|0);
 store1($7,3);
 $8 = (_luaS_new($0,10625)|0);
 _luaC_fix($0,$8);
 $9 = ((($8)) + 6|0);
 store1($9,4);
 $10 = (_luaS_new($0,10630)|0);
 _luaC_fix($0,$10);
 $11 = ((($10)) + 6|0);
 store1($11,5);
 $12 = (_luaS_new($0,12674)|0);
 _luaC_fix($0,$12);
 $13 = ((($12)) + 6|0);
 store1($13,6);
 $14 = (_luaS_new($0,10637)|0);
 _luaC_fix($0,$14);
 $15 = ((($14)) + 6|0);
 store1($15,7);
 $16 = (_luaS_new($0,10643)|0);
 _luaC_fix($0,$16);
 $17 = ((($16)) + 6|0);
 store1($17,8);
 $18 = (_luaS_new($0,10647)|0);
 _luaC_fix($0,$18);
 $19 = ((($18)) + 6|0);
 store1($19,9);
 $20 = (_luaS_new($0,10656)|0);
 _luaC_fix($0,$20);
 $21 = ((($20)) + 6|0);
 store1($21,10);
 $22 = (_luaS_new($0,10661)|0);
 _luaC_fix($0,$22);
 $23 = ((($22)) + 6|0);
 store1($23,11);
 $24 = (_luaS_new($0,10664)|0);
 _luaC_fix($0,$24);
 $25 = ((($24)) + 6|0);
 store1($25,12);
 $26 = (_luaS_new($0,10667)|0);
 _luaC_fix($0,$26);
 $27 = ((($26)) + 6|0);
 store1($27,13);
 $28 = (_luaS_new($0,10673)|0);
 _luaC_fix($0,$28);
 $29 = ((($28)) + 6|0);
 store1($29,14);
 $30 = (_luaS_new($0,10677)|0);
 _luaC_fix($0,$30);
 $31 = ((($30)) + 6|0);
 store1($31,15);
 $32 = (_luaS_new($0,10681)|0);
 _luaC_fix($0,$32);
 $33 = ((($32)) + 6|0);
 store1($33,16);
 $34 = (_luaS_new($0,10684)|0);
 _luaC_fix($0,$34);
 $35 = ((($34)) + 6|0);
 store1($35,17);
 $36 = (_luaS_new($0,12164)|0);
 _luaC_fix($0,$36);
 $37 = ((($36)) + 6|0);
 store1($37,18);
 $38 = (_luaS_new($0,10691)|0);
 _luaC_fix($0,$38);
 $39 = ((($38)) + 6|0);
 store1($39,19);
 $40 = (_luaS_new($0,10696)|0);
 _luaC_fix($0,$40);
 $41 = ((($40)) + 6|0);
 store1($41,20);
 $42 = (_luaS_new($0,10701)|0);
 _luaC_fix($0,$42);
 $43 = ((($42)) + 6|0);
 store1($43,21);
 $44 = (_luaS_new($0,10707)|0);
 _luaC_fix($0,$44);
 $45 = ((($44)) + 6|0);
 store1($45,22);
 return;
}
function _luaX_token2str($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = ($1|0)<(257);
 if ($2) {
  $3 = ((($0)) + 52|0);
  $4 = load4($3);
  store4($vararg_buffer,$1);
  $5 = (_luaO_pushfstring($4,10713,$vararg_buffer)|0);
  $$1 = $5;
  STACKTOP = sp;return ($$1|0);
 }
 $6 = (($1) + -257)|0;
 $7 = (1792 + ($6<<2)|0);
 $8 = load4($7);
 $9 = ($1|0)<(289);
 if (!($9)) {
  $$1 = $8;
  STACKTOP = sp;return ($$1|0);
 }
 $10 = ((($0)) + 52|0);
 $11 = load4($10);
 store4($vararg_buffer1,$8);
 $12 = (_luaO_pushfstring($11,10718,$vararg_buffer1)|0);
 $$1 = $12;
 STACKTOP = sp;return ($$1|0);
}
function _luaX_syntaxerror($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = load4($2);
 _lexerror($0,$1,$3);
 // unreachable;
}
function _lexerror($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $$off$i = 0, $$pre = 0, $$pre$phi11Z2D = 0, $$pre10 = 0, $$pre9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $switch$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, $vararg_ptr10 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = ((($0)) + 52|0);
 $4 = load4($3);
 $5 = ((($0)) + 72|0);
 $6 = load4($5);
 $7 = ((($0)) + 4|0);
 $8 = load4($7);
 $9 = (_luaG_addinfo($4,$1,$6,$8)|0);
 $10 = ($2|0)==(0);
 if ($10) {
  $38 = load4($3);
  _luaD_throw($38,3);
  // unreachable;
 }
 $11 = load4($3);
 $$off$i = (($2) + -290)|0;
 $switch$i = ($$off$i>>>0)<(4);
 do {
  if ($switch$i) {
   $12 = ((($0)) + 60|0);
   $13 = load4($12);
   $14 = ((($13)) + 4|0);
   $15 = load4($14);
   $16 = (($15) + 1)|0;
   $17 = ((($13)) + 8|0);
   $18 = load4($17);
   $19 = ($16>>>0)>($18>>>0);
   do {
    if ($19) {
     $20 = ($18>>>0)>(2147483646);
     if ($20) {
      _lexerror($0,10795,0);
      // unreachable;
     } else {
      $21 = $18 << 1;
      $22 = load4($13);
      $23 = (_luaM_realloc_($11,$22,$18,$21)|0);
      store4($13,$23);
      store4($17,$21);
      $$pre9 = load4($14);
      $$pre10 = (($$pre9) + 1)|0;
      $$pre$phi11Z2D = $$pre10;$25 = $23;$26 = $$pre9;
      break;
     }
    } else {
     $$pre = load4($13);
     $$pre$phi11Z2D = $16;$25 = $$pre;$26 = $15;
    }
   } while(0);
   store4($14,$$pre$phi11Z2D);
   $24 = (($25) + ($26)|0);
   store1($24,0);
   $27 = load4($3);
   $28 = load4($12);
   $29 = load4($28);
   store4($vararg_buffer,$29);
   $30 = (_luaO_pushfstring($27,10718,$vararg_buffer)|0);
   $$0$i = $30;
  } else {
   $31 = ($2|0)<(257);
   if ($31) {
    store4($vararg_buffer1,$2);
    $32 = (_luaO_pushfstring($11,10713,$vararg_buffer1)|0);
    $$0$i = $32;
    break;
   }
   $33 = (($2) + -257)|0;
   $34 = (1792 + ($33<<2)|0);
   $35 = load4($34);
   $36 = ($2|0)<(289);
   if ($36) {
    store4($vararg_buffer4,$35);
    $37 = (_luaO_pushfstring($11,10718,$vararg_buffer4)|0);
    $$0$i = $37;
   } else {
    $$0$i = $35;
   }
  }
 } while(0);
 store4($vararg_buffer7,$9);
 $vararg_ptr10 = ((($vararg_buffer7)) + 4|0);
 store4($vararg_ptr10,$$0$i);
 (_luaO_pushfstring($11,10820,$vararg_buffer7)|0);
 $38 = load4($3);
 _luaD_throw($38,3);
 // unreachable;
}
function _luaX_newstring($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 52|0);
 $4 = load4($3);
 $5 = (_luaS_newlstr($4,$1,$2)|0);
 $6 = ((($4)) + 12|0);
 $7 = load4($6);
 $8 = ((($7)) + 16|0);
 store4($6,$8);
 store4($7,$5);
 $9 = ((($5)) + 4|0);
 $10 = load1($9);
 $11 = $10 | 64;
 $12 = $11&255;
 $13 = ((($7)) + 8|0);
 store4($13,$12);
 $14 = ((($0)) + 64|0);
 $15 = load4($14);
 $16 = load4($6);
 $17 = ((($16)) + -16|0);
 $18 = (_luaH_set($4,$15,$17)|0);
 $19 = ((($18)) + 8|0);
 $20 = load4($19);
 $21 = ($20|0)==(0);
 if ($21) {
  store4($18,1);
  store4($19,1);
  $22 = ((($4)) + 16|0);
  $23 = load4($22);
  $24 = ((($23)) + 12|0);
  $25 = load4($24);
  $26 = ($25|0)>(0);
  if ($26) {
   _luaC_step($4);
   $$0 = $5;
  } else {
   $$0 = $5;
  }
 } else {
  $27 = ((($18)) + 16|0);
  $28 = load4($27);
  $$0 = $28;
 }
 $29 = load4($6);
 $30 = ((($29)) + -16|0);
 store4($6,$30);
 return ($$0|0);
}
function _luaX_setinput($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $5 = ((($1)) + 16|0);
 store4($5,0);
 $6 = ((($1)) + 52|0);
 store4($6,$0);
 store4($1,$4);
 $7 = ((($1)) + 32|0);
 store4($7,289);
 $8 = ((($1)) + 56|0);
 store4($8,$2);
 $9 = ((($1)) + 48|0);
 store4($9,0);
 $10 = ((($1)) + 4|0);
 store4($10,1);
 $11 = ((($1)) + 8|0);
 store4($11,1);
 $12 = ((($1)) + 72|0);
 store4($12,$3);
 $13 = (_luaS_newlstr($0,10607,4)|0);
 $14 = ((($1)) + 76|0);
 store4($14,$13);
 $15 = load4($6);
 $16 = ((($1)) + 60|0);
 $17 = load4($16);
 $18 = load4($17);
 $19 = ((($17)) + 8|0);
 $20 = load4($19);
 $21 = (_luaM_realloc_($15,$18,$20,32)|0);
 $22 = load4($16);
 store4($22,$21);
 $23 = ((($22)) + 8|0);
 store4($23,32);
 return;
}
function _luaX_next($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = load4($1);
 $3 = ((($0)) + 8|0);
 store4($3,$2);
 $4 = ((($0)) + 32|0);
 $5 = load4($4);
 $6 = ($5|0)==(289);
 if ($6) {
  $8 = ((($0)) + 24|0);
  $9 = (_llex($0,$8)|0);
  $10 = ((($0)) + 16|0);
  store4($10,$9);
  return;
 } else {
  $7 = ((($0)) + 16|0);
  ; store8($7,load8($4,8),8); store8($7+8 | 0,load8($4+8 | 0,8),8);
  store4($4,289);
  return;
 }
}
function _llex($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $$0$i$i$i = 0, $$0$i123 = 0, $$0$i136 = 0, $$0$lcssa$i$i = 0, $$010$i$i = 0, $$017$lcssa$i$i = 0, $$029$i$i$i = 0, $$1$i = 0, $$2 = 0, $$ph = 0, $$pr$i = 0, $$pr$pre = 0, $$pr105$i = 0, $$pr105236$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$1$i$i = 0, $$pre$i$2$i$i = 0, $$pre$i$i = 0;
 var $$pre$i$i$i = 0, $$pre$i$i$i$i = 0, $$pre$i$i61$i = 0, $$pre$i$i70$i = 0, $$pre$i130 = 0, $$pre$i15$i$i = 0, $$pre$i19$i$i = 0, $$pre$i22$i$i = 0, $$pre$i31$i$i$i = 0, $$pre$i40$i$i$i = 0, $$pre$i47$i$i$i = 0, $$pre$i54$i = 0, $$pre$i55$i$i$i = 0, $$pre$i62$i$i$i = 0, $$pre$i69$i$i$i = 0, $$pre$i7$i$i = 0, $$pre$i78$i = 0, $$pre$i85$i = 0, $$pre$i92$i = 0, $$pre$i99$i = 0;
 var $$pre$phi20$i$1$i$iZ2D = 0, $$pre$phi20$i$2$i$iZ2D = 0, $$pre$phi20$i$i$i$iZ2D = 0, $$pre$phi20$i$i$iZ2D = 0, $$pre$phi20$i$i65$iZ2D = 0, $$pre$phi20$i$i74$iZ2D = 0, $$pre$phi20$i$iZ2D = 0, $$pre$phi20$i103$iZ2D = 0, $$pre$phi20$i11$i$iZ2D = 0, $$pre$phi20$i134Z2D = 0, $$pre$phi20$i19$i$iZ2D = 0, $$pre$phi20$i23$i$iZ2D = 0, $$pre$phi20$i26$i$iZ2D = 0, $$pre$phi20$i35$i$i$iZ2D = 0, $$pre$phi20$i44$i$i$iZ2D = 0, $$pre$phi20$i51$i$i$iZ2D = 0, $$pre$phi20$i58$iZ2D = 0, $$pre$phi20$i59$i$i$iZ2D = 0, $$pre$phi20$i66$i$i$iZ2D = 0, $$pre$phi20$i73$i$i$iZ2D = 0;
 var $$pre$phi20$i82$iZ2D = 0, $$pre$phi20$i89$iZ2D = 0, $$pre$phi20$i96$iZ2D = 0, $$pre$phi20$iZ2D = 0, $$pre$phiZ2D = 0, $$pre18$i = 0, $$pre18$i$1$i$i = 0, $$pre18$i$2$i$i = 0, $$pre18$i$i = 0, $$pre18$i$i$i = 0, $$pre18$i$i$i$i = 0, $$pre18$i$i63$i = 0, $$pre18$i$i72$i = 0, $$pre18$i101$i = 0, $$pre18$i132 = 0, $$pre18$i17$i$i = 0, $$pre18$i21$i$i = 0, $$pre18$i24$i$i = 0, $$pre18$i33$i$i$i = 0, $$pre18$i42$i$i$i = 0;
 var $$pre18$i49$i$i$i = 0, $$pre18$i56$i = 0, $$pre18$i57$i$i$i = 0, $$pre18$i64$i$i$i = 0, $$pre18$i71$i$i$i = 0, $$pre18$i80$i = 0, $$pre18$i87$i = 0, $$pre18$i9$i$i = 0, $$pre18$i94$i = 0, $$pre19$i = 0, $$pre19$i$1$i$i = 0, $$pre19$i$2$i$i = 0, $$pre19$i$i = 0, $$pre19$i$i$i = 0, $$pre19$i$i$i$i = 0, $$pre19$i$i64$i = 0, $$pre19$i$i73$i = 0, $$pre19$i10$i$i = 0, $$pre19$i102$i = 0, $$pre19$i133 = 0;
 var $$pre19$i18$i$i = 0, $$pre19$i22$i$i = 0, $$pre19$i25$i$i = 0, $$pre19$i34$i$i$i = 0, $$pre19$i43$i$i$i = 0, $$pre19$i50$i$i$i = 0, $$pre19$i57$i = 0, $$pre19$i58$i$i$i = 0, $$pre19$i65$i$i$i = 0, $$pre19$i72$i$i$i = 0, $$pre19$i81$i = 0, $$pre19$i88$i = 0, $$pre19$i95$i = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0;
 var $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0;
 var $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0;
 var $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0;
 var $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0;
 var $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0;
 var $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0;
 var $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0;
 var $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0;
 var $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0;
 var $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0;
 var $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;
 var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;
 var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0;
 var $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0;
 var $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0;
 var $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0;
 var $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0;
 var $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0;
 var $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0;
 var $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0;
 var $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0;
 var $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0;
 var $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0;
 var $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0;
 var $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0;
 var $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0;
 var $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0;
 var $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0;
 var $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0;
 var $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0;
 var $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0;
 var $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0;
 var $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0;
 var $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0;
 var $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0;
 var $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0;
 var $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0;
 var $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0;
 var $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0;
 var $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0;
 var $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0;
 var $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0;
 var $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0;
 var $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0;
 var $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0;
 var $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0;
 var $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0;
 var $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0;
 var $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = ((($0)) + 60|0);
 $4 = load4($3);
 $5 = ((($4)) + 4|0);
 store4($5,0);
 $6 = ((($0)) + 56|0);
 $7 = ((($0)) + 4|0);
 L1: while(1) {
  $8 = load4($0);
  L3: do {
   switch ($8|0) {
   case 91:  {
    label = 36;
    break L1;
    break;
   }
   case 61:  {
    label = 40;
    break L1;
    break;
   }
   case 60:  {
    label = 48;
    break L1;
    break;
   }
   case 62:  {
    label = 60;
    break L1;
    break;
   }
   case 47:  {
    label = 72;
    break L1;
    break;
   }
   case 126:  {
    label = 80;
    break L1;
    break;
   }
   case 58:  {
    label = 88;
    break L1;
    break;
   }
   case 39: case 34:  {
    label = 96;
    break L1;
    break;
   }
   case 46:  {
    label = 367;
    break L1;
    break;
   }
   case 57: case 56: case 55: case 54: case 53: case 52: case 51: case 50: case 49: case 48:  {
    label = 386;
    break L1;
    break;
   }
   case -1:  {
    $$2 = 289;
    label = 408;
    break L1;
    break;
   }
   case 13: case 10:  {
    $9 = load4($6);
    $10 = load4($9);
    $11 = (($10) + -1)|0;
    store4($9,$11);
    $12 = ($10|0)==(0);
    if ($12) {
     $18 = (_luaZ_fill($9)|0);
     $19 = $18;
    } else {
     $13 = ((($9)) + 4|0);
     $14 = load4($13);
     $15 = ((($14)) + 1|0);
     store4($13,$15);
     $16 = load1($14);
     $17 = $16&255;
     $19 = $17;
    }
    store4($0,$19);
    switch ($19|0) {
    case 13: case 10:  {
     $20 = ($19|0)==($8|0);
     if (!($20)) {
      $21 = load4($6);
      $22 = load4($21);
      $23 = (($22) + -1)|0;
      store4($21,$23);
      $24 = ($22|0)==(0);
      if ($24) {
       $30 = (_luaZ_fill($21)|0);
       $31 = $30;
      } else {
       $25 = ((($21)) + 4|0);
       $26 = load4($25);
       $27 = ((($26)) + 1|0);
       store4($25,$27);
       $28 = load1($26);
       $29 = $28&255;
       $31 = $29;
      }
      store4($0,$31);
     }
     break;
    }
    default: {
    }
    }
    $32 = load4($7);
    $33 = (($32) + 1)|0;
    store4($7,$33);
    $34 = ($33|0)==(2147483647);
    if ($34) {
     label = 14;
     break L1;
    }
    break;
   }
   case 11: case 9: case 12: case 32:  {
    $35 = load4($6);
    $36 = load4($35);
    $37 = (($36) + -1)|0;
    store4($35,$37);
    $38 = ($36|0)==(0);
    if ($38) {
     $44 = (_luaZ_fill($35)|0);
     $45 = $44;
    } else {
     $39 = ((($35)) + 4|0);
     $40 = load4($39);
     $41 = ((($40)) + 1|0);
     store4($39,$41);
     $42 = load1($40);
     $43 = $42&255;
     $45 = $43;
    }
    store4($0,$45);
    break;
   }
   case 45:  {
    $46 = load4($6);
    $47 = load4($46);
    $48 = (($47) + -1)|0;
    store4($46,$48);
    $49 = ($47|0)==(0);
    if ($49) {
     $55 = (_luaZ_fill($46)|0);
     $56 = $55;
    } else {
     $50 = ((($46)) + 4|0);
     $51 = load4($50);
     $52 = ((($51)) + 1|0);
     store4($50,$52);
     $53 = load1($51);
     $54 = $53&255;
     $56 = $54;
    }
    store4($0,$56);
    $57 = ($56|0)==(45);
    if (!($57)) {
     $$2 = 45;
     label = 408;
     break L1;
    }
    $58 = load4($6);
    $59 = load4($58);
    $60 = (($59) + -1)|0;
    store4($58,$60);
    $61 = ($59|0)==(0);
    if ($61) {
     $67 = (_luaZ_fill($58)|0);
     $68 = $67;
    } else {
     $62 = ((($58)) + 4|0);
     $63 = load4($62);
     $64 = ((($63)) + 1|0);
     store4($62,$64);
     $65 = load1($63);
     $66 = $65&255;
     $68 = $66;
    }
    store4($0,$68);
    $69 = ($68|0)==(91);
    do {
     if ($69) {
      $70 = (_skip_sep($0)|0);
      $71 = load4($3);
      $72 = ((($71)) + 4|0);
      store4($72,0);
      $73 = ($70|0)>(-1);
      if ($73) {
       _read_long_string($0,0,$70);
       $74 = load4($3);
       $75 = ((($74)) + 4|0);
       store4($75,0);
       break L3;
      } else {
       $$pr$pre = load4($0);
       $$ph = $$pr$pre;
       break;
      }
     } else {
      $$ph = $68;
     }
    } while(0);
    $76 = $$ph;
    while(1) {
     switch ($76|0) {
     case -1: case 13: case 10:  {
      break L3;
      break;
     }
     default: {
     }
     }
     $77 = load4($6);
     $78 = load4($77);
     $79 = (($78) + -1)|0;
     store4($77,$79);
     $80 = ($78|0)==(0);
     if ($80) {
      $86 = (_luaZ_fill($77)|0);
      $87 = $86;
     } else {
      $81 = ((($77)) + 4|0);
      $82 = load4($81);
      $83 = ((($82)) + 1|0);
      store4($81,$83);
      $84 = load1($82);
      $85 = $84&255;
      $87 = $85;
     }
     store4($0,$87);
     $76 = $87;
    }
    break;
   }
   default: {
    label = 387;
    break L1;
   }
   }
  } while(0);
 }
 switch (label|0) {
  case 14: {
   _lexerror($0,10831,0);
   // unreachable;
   break;
  }
  case 36: {
   $88 = (_skip_sep($0)|0);
   $89 = ($88|0)>(-1);
   if ($89) {
    _read_long_string($0,$1,$88);
    $$2 = 293;
    STACKTOP = sp;return ($$2|0);
   }
   $90 = ($88|0)==(-1);
   if ($90) {
    $$2 = 91;
    STACKTOP = sp;return ($$2|0);
   } else {
    _lexerror($0,10856,293);
    // unreachable;
   }
   break;
  }
  case 40: {
   $91 = load4($6);
   $92 = load4($91);
   $93 = (($92) + -1)|0;
   store4($91,$93);
   $94 = ($92|0)==(0);
   if ($94) {
    $100 = (_luaZ_fill($91)|0);
    $101 = $100;
   } else {
    $95 = ((($91)) + 4|0);
    $96 = load4($95);
    $97 = ((($96)) + 1|0);
    store4($95,$97);
    $98 = load1($96);
    $99 = $98&255;
    $101 = $99;
   }
   store4($0,$101);
   $102 = ($101|0)==(61);
   if (!($102)) {
    $$2 = 61;
    STACKTOP = sp;return ($$2|0);
   }
   $103 = load4($6);
   $104 = load4($103);
   $105 = (($104) + -1)|0;
   store4($103,$105);
   $106 = ($104|0)==(0);
   if ($106) {
    $112 = (_luaZ_fill($103)|0);
    $113 = $112;
   } else {
    $107 = ((($103)) + 4|0);
    $108 = load4($107);
    $109 = ((($108)) + 1|0);
    store4($107,$109);
    $110 = load1($108);
    $111 = $110&255;
    $113 = $111;
   }
   store4($0,$113);
   $$2 = 282;
   STACKTOP = sp;return ($$2|0);
   break;
  }
  case 48: {
   $114 = load4($6);
   $115 = load4($114);
   $116 = (($115) + -1)|0;
   store4($114,$116);
   $117 = ($115|0)==(0);
   if ($117) {
    $123 = (_luaZ_fill($114)|0);
    $124 = $123;
   } else {
    $118 = ((($114)) + 4|0);
    $119 = load4($118);
    $120 = ((($119)) + 1|0);
    store4($118,$120);
    $121 = load1($119);
    $122 = $121&255;
    $124 = $122;
   }
   store4($0,$124);
   switch ($124|0) {
   case 61:  {
    $125 = load4($6);
    $126 = load4($125);
    $127 = (($126) + -1)|0;
    store4($125,$127);
    $128 = ($126|0)==(0);
    if ($128) {
     $134 = (_luaZ_fill($125)|0);
     $135 = $134;
    } else {
     $129 = ((($125)) + 4|0);
     $130 = load4($129);
     $131 = ((($130)) + 1|0);
     store4($129,$131);
     $132 = load1($130);
     $133 = $132&255;
     $135 = $133;
    }
    store4($0,$135);
    $$2 = 284;
    STACKTOP = sp;return ($$2|0);
    break;
   }
   case 60:  {
    $136 = load4($6);
    $137 = load4($136);
    $138 = (($137) + -1)|0;
    store4($136,$138);
    $139 = ($137|0)==(0);
    if ($139) {
     $145 = (_luaZ_fill($136)|0);
     $146 = $145;
    } else {
     $140 = ((($136)) + 4|0);
     $141 = load4($140);
     $142 = ((($141)) + 1|0);
     store4($140,$142);
     $143 = load1($141);
     $144 = $143&255;
     $146 = $144;
    }
    store4($0,$146);
    $$2 = 286;
    STACKTOP = sp;return ($$2|0);
    break;
   }
   default: {
    $$2 = 60;
    STACKTOP = sp;return ($$2|0);
   }
   }
   break;
  }
  case 60: {
   $147 = load4($6);
   $148 = load4($147);
   $149 = (($148) + -1)|0;
   store4($147,$149);
   $150 = ($148|0)==(0);
   if ($150) {
    $156 = (_luaZ_fill($147)|0);
    $157 = $156;
   } else {
    $151 = ((($147)) + 4|0);
    $152 = load4($151);
    $153 = ((($152)) + 1|0);
    store4($151,$153);
    $154 = load1($152);
    $155 = $154&255;
    $157 = $155;
   }
   store4($0,$157);
   switch ($157|0) {
   case 61:  {
    $158 = load4($6);
    $159 = load4($158);
    $160 = (($159) + -1)|0;
    store4($158,$160);
    $161 = ($159|0)==(0);
    if ($161) {
     $167 = (_luaZ_fill($158)|0);
     $168 = $167;
    } else {
     $162 = ((($158)) + 4|0);
     $163 = load4($162);
     $164 = ((($163)) + 1|0);
     store4($162,$164);
     $165 = load1($163);
     $166 = $165&255;
     $168 = $166;
    }
    store4($0,$168);
    $$2 = 283;
    STACKTOP = sp;return ($$2|0);
    break;
   }
   case 62:  {
    $169 = load4($6);
    $170 = load4($169);
    $171 = (($170) + -1)|0;
    store4($169,$171);
    $172 = ($170|0)==(0);
    if ($172) {
     $178 = (_luaZ_fill($169)|0);
     $179 = $178;
    } else {
     $173 = ((($169)) + 4|0);
     $174 = load4($173);
     $175 = ((($174)) + 1|0);
     store4($173,$175);
     $176 = load1($174);
     $177 = $176&255;
     $179 = $177;
    }
    store4($0,$179);
    $$2 = 287;
    STACKTOP = sp;return ($$2|0);
    break;
   }
   default: {
    $$2 = 62;
    STACKTOP = sp;return ($$2|0);
   }
   }
   break;
  }
  case 72: {
   $180 = load4($6);
   $181 = load4($180);
   $182 = (($181) + -1)|0;
   store4($180,$182);
   $183 = ($181|0)==(0);
   if ($183) {
    $189 = (_luaZ_fill($180)|0);
    $190 = $189;
   } else {
    $184 = ((($180)) + 4|0);
    $185 = load4($184);
    $186 = ((($185)) + 1|0);
    store4($184,$186);
    $187 = load1($185);
    $188 = $187&255;
    $190 = $188;
   }
   store4($0,$190);
   $191 = ($190|0)==(47);
   if (!($191)) {
    $$2 = 47;
    STACKTOP = sp;return ($$2|0);
   }
   $192 = load4($6);
   $193 = load4($192);
   $194 = (($193) + -1)|0;
   store4($192,$194);
   $195 = ($193|0)==(0);
   if ($195) {
    $201 = (_luaZ_fill($192)|0);
    $202 = $201;
   } else {
    $196 = ((($192)) + 4|0);
    $197 = load4($196);
    $198 = ((($197)) + 1|0);
    store4($196,$198);
    $199 = load1($197);
    $200 = $199&255;
    $202 = $200;
   }
   store4($0,$202);
   $$2 = 279;
   STACKTOP = sp;return ($$2|0);
   break;
  }
  case 80: {
   $203 = load4($6);
   $204 = load4($203);
   $205 = (($204) + -1)|0;
   store4($203,$205);
   $206 = ($204|0)==(0);
   if ($206) {
    $212 = (_luaZ_fill($203)|0);
    $213 = $212;
   } else {
    $207 = ((($203)) + 4|0);
    $208 = load4($207);
    $209 = ((($208)) + 1|0);
    store4($207,$209);
    $210 = load1($208);
    $211 = $210&255;
    $213 = $211;
   }
   store4($0,$213);
   $214 = ($213|0)==(61);
   if (!($214)) {
    $$2 = 126;
    STACKTOP = sp;return ($$2|0);
   }
   $215 = load4($6);
   $216 = load4($215);
   $217 = (($216) + -1)|0;
   store4($215,$217);
   $218 = ($216|0)==(0);
   if ($218) {
    $224 = (_luaZ_fill($215)|0);
    $225 = $224;
   } else {
    $219 = ((($215)) + 4|0);
    $220 = load4($219);
    $221 = ((($220)) + 1|0);
    store4($219,$221);
    $222 = load1($220);
    $223 = $222&255;
    $225 = $223;
   }
   store4($0,$225);
   $$2 = 285;
   STACKTOP = sp;return ($$2|0);
   break;
  }
  case 88: {
   $226 = load4($6);
   $227 = load4($226);
   $228 = (($227) + -1)|0;
   store4($226,$228);
   $229 = ($227|0)==(0);
   if ($229) {
    $235 = (_luaZ_fill($226)|0);
    $236 = $235;
   } else {
    $230 = ((($226)) + 4|0);
    $231 = load4($230);
    $232 = ((($231)) + 1|0);
    store4($230,$232);
    $233 = load1($231);
    $234 = $233&255;
    $236 = $234;
   }
   store4($0,$236);
   $237 = ($236|0)==(58);
   if (!($237)) {
    $$2 = 58;
    STACKTOP = sp;return ($$2|0);
   }
   $238 = load4($6);
   $239 = load4($238);
   $240 = (($239) + -1)|0;
   store4($238,$240);
   $241 = ($239|0)==(0);
   if ($241) {
    $247 = (_luaZ_fill($238)|0);
    $248 = $247;
   } else {
    $242 = ((($238)) + 4|0);
    $243 = load4($242);
    $244 = ((($243)) + 1|0);
    store4($242,$244);
    $245 = load1($243);
    $246 = $245&255;
    $248 = $246;
   }
   store4($0,$248);
   $$2 = 288;
   STACKTOP = sp;return ($$2|0);
   break;
  }
  case 96: {
   $249 = load4($3);
   $250 = ((($249)) + 4|0);
   $251 = load4($250);
   $252 = (($251) + 1)|0;
   $253 = ((($249)) + 8|0);
   $254 = load4($253);
   $255 = ($252>>>0)>($254>>>0);
   do {
    if ($255) {
     $256 = ($254>>>0)>(2147483646);
     if ($256) {
      _lexerror($0,10795,0);
      // unreachable;
     } else {
      $257 = $254 << 1;
      $258 = ((($0)) + 52|0);
      $259 = load4($258);
      $260 = load4($249);
      $261 = (_luaM_realloc_($259,$260,$254,$257)|0);
      store4($249,$261);
      store4($253,$257);
      $$pre18$i$i = load4($250);
      $$pre19$i$i = (($$pre18$i$i) + 1)|0;
      $$pre$phi20$i$iZ2D = $$pre19$i$i;$264 = $261;$265 = $$pre18$i$i;
      break;
     }
    } else {
     $$pre$i$i = load4($249);
     $$pre$phi20$i$iZ2D = $252;$264 = $$pre$i$i;$265 = $251;
    }
   } while(0);
   $262 = $8&255;
   store4($250,$$pre$phi20$i$iZ2D);
   $263 = (($264) + ($265)|0);
   store1($263,$262);
   $266 = load4($6);
   $267 = load4($266);
   $268 = (($267) + -1)|0;
   store4($266,$268);
   $269 = ($267|0)==(0);
   if ($269) {
    $275 = (_luaZ_fill($266)|0);
    $276 = $275;
   } else {
    $270 = ((($266)) + 4|0);
    $271 = load4($270);
    $272 = ((($271)) + 1|0);
    store4($270,$272);
    $273 = load1($271);
    $274 = $273&255;
    $276 = $274;
   }
   store4($0,$276);
   $277 = ($276|0)==($8|0);
   L188: do {
    if (!($277)) {
     $278 = ((($0)) + 52|0);
     $279 = $276;
     L190: while(1) {
      L192: do {
       switch ($279|0) {
       case -1:  {
        label = 107;
        break L190;
        break;
       }
       case 13: case 10:  {
        label = 108;
        break L190;
        break;
       }
       case 92:  {
        $280 = load4($3);
        $281 = ((($280)) + 4|0);
        $282 = load4($281);
        $283 = (($282) + 1)|0;
        $284 = ((($280)) + 8|0);
        $285 = load4($284);
        $286 = ($283>>>0)>($285>>>0);
        if ($286) {
         $287 = ($285>>>0)>(2147483646);
         if ($287) {
          label = 112;
          break L190;
         }
         $288 = $285 << 1;
         $289 = load4($278);
         $290 = load4($280);
         $291 = (_luaM_realloc_($289,$290,$285,$288)|0);
         store4($280,$291);
         store4($284,$288);
         $$pre18$i56$i = load4($281);
         $$pre19$i57$i = (($$pre18$i56$i) + 1)|0;
         $$pre$phi20$i58$iZ2D = $$pre19$i57$i;$293 = $291;$294 = $$pre18$i56$i;
        } else {
         $$pre$i54$i = load4($280);
         $$pre$phi20$i58$iZ2D = $283;$293 = $$pre$i54$i;$294 = $282;
        }
        store4($281,$$pre$phi20$i58$iZ2D);
        $292 = (($293) + ($294)|0);
        store1($292,92);
        $295 = load4($6);
        $296 = load4($295);
        $297 = (($296) + -1)|0;
        store4($295,$297);
        $298 = ($296|0)==(0);
        if ($298) {
         $304 = (_luaZ_fill($295)|0);
         $305 = $304;
        } else {
         $299 = ((($295)) + 4|0);
         $300 = load4($299);
         $301 = ((($300)) + 1|0);
         store4($299,$301);
         $302 = load1($300);
         $303 = $302&255;
         $305 = $303;
        }
        store4($0,$305);
        do {
         switch ($305|0) {
         case -1:  {
          break L192;
          break;
         }
         case 97:  {
          $$0$i123 = 7;
          label = 334;
          break;
         }
         case 98:  {
          $$0$i123 = 8;
          label = 334;
          break;
         }
         case 102:  {
          $$0$i123 = 12;
          label = 334;
          break;
         }
         case 110:  {
          $$0$i123 = 10;
          label = 334;
          break;
         }
         case 114:  {
          $$0$i123 = 13;
          label = 334;
          break;
         }
         case 116:  {
          $$0$i123 = 9;
          label = 334;
          break;
         }
         case 118:  {
          $$0$i123 = 11;
          label = 334;
          break;
         }
         case 120:  {
          $306 = load4($3);
          $307 = ((($306)) + 4|0);
          $308 = load4($307);
          $309 = (($308) + 1)|0;
          $310 = ((($306)) + 8|0);
          $311 = load4($310);
          $312 = ($309>>>0)>($311>>>0);
          if ($312) {
           $313 = ($311>>>0)>(2147483646);
           if ($313) {
            label = 127;
            break L190;
           }
           $314 = $311 << 1;
           $315 = load4($278);
           $316 = load4($306);
           $317 = (_luaM_realloc_($315,$316,$311,$314)|0);
           store4($306,$317);
           store4($310,$314);
           $$pre18$i$i$i = load4($307);
           $$pre19$i$i$i = (($$pre18$i$i$i) + 1)|0;
           $$pre$phi20$i$i$iZ2D = $$pre19$i$i$i;$319 = $317;$320 = $$pre18$i$i$i;
          } else {
           $$pre$i$i$i = load4($306);
           $$pre$phi20$i$i$iZ2D = $309;$319 = $$pre$i$i$i;$320 = $308;
          }
          store4($307,$$pre$phi20$i$i$iZ2D);
          $318 = (($319) + ($320)|0);
          store1($318,120);
          $321 = load4($6);
          $322 = load4($321);
          $323 = (($322) + -1)|0;
          store4($321,$323);
          $324 = ($322|0)==(0);
          if ($324) {
           $330 = (_luaZ_fill($321)|0);
           $331 = $330;
          } else {
           $325 = ((($321)) + 4|0);
           $326 = load4($325);
           $327 = ((($326)) + 1|0);
           store4($325,$327);
           $328 = load1($326);
           $329 = $328&255;
           $331 = $329;
          }
          store4($0,$331);
          $332 = (($331) + 1)|0;
          $333 = (1520 + ($332)|0);
          $334 = load1($333);
          $335 = $334 & 16;
          $336 = ($335<<24>>24)==(0);
          if ($336) {
           label = 133;
           break L190;
          }
          $365 = (_luaO_hexavalue($331)|0);
          $366 = $365 << 4;
          $367 = load4($0);
          $368 = load4($3);
          $369 = ((($368)) + 4|0);
          $370 = load4($369);
          $371 = (($370) + 1)|0;
          $372 = ((($368)) + 8|0);
          $373 = load4($372);
          $374 = ($371>>>0)>($373>>>0);
          if ($374) {
           $375 = ($373>>>0)>(2147483646);
           if ($375) {
            label = 147;
            break L190;
           }
           $376 = $373 << 1;
           $377 = load4($278);
           $378 = load4($368);
           $379 = (_luaM_realloc_($377,$378,$373,$376)|0);
           store4($368,$379);
           store4($372,$376);
           $$pre18$i9$i$i = load4($369);
           $$pre19$i10$i$i = (($$pre18$i9$i$i) + 1)|0;
           $$pre$phi20$i11$i$iZ2D = $$pre19$i10$i$i;$382 = $379;$383 = $$pre18$i9$i$i;
          } else {
           $$pre$i7$i$i = load4($368);
           $$pre$phi20$i11$i$iZ2D = $371;$382 = $$pre$i7$i$i;$383 = $370;
          }
          $380 = $367&255;
          store4($369,$$pre$phi20$i11$i$iZ2D);
          $381 = (($382) + ($383)|0);
          store1($381,$380);
          $384 = load4($6);
          $385 = load4($384);
          $386 = (($385) + -1)|0;
          store4($384,$386);
          $387 = ($385|0)==(0);
          if ($387) {
           $393 = (_luaZ_fill($384)|0);
           $394 = $393;
          } else {
           $388 = ((($384)) + 4|0);
           $389 = load4($388);
           $390 = ((($389)) + 1|0);
           store4($388,$390);
           $391 = load1($389);
           $392 = $391&255;
           $394 = $392;
          }
          store4($0,$394);
          $395 = (($394) + 1)|0;
          $396 = (1520 + ($395)|0);
          $397 = load1($396);
          $398 = $397 & 16;
          $399 = ($398<<24>>24)==(0);
          if ($399) {
           label = 153;
           break L190;
          }
          $428 = (_luaO_hexavalue($394)|0);
          $429 = (($428) + ($366))|0;
          $430 = load4($3);
          $431 = ((($430)) + 4|0);
          $432 = load4($431);
          $433 = (($432) + -2)|0;
          store4($431,$433);
          $$0$i123 = $429;
          label = 334;
          break;
         }
         case 117:  {
          $434 = load4($3);
          $435 = ((($434)) + 4|0);
          $436 = load4($435);
          $437 = (($436) + 1)|0;
          $438 = ((($434)) + 8|0);
          $439 = load4($438);
          $440 = ($437>>>0)>($439>>>0);
          if ($440) {
           $441 = ($439>>>0)>(2147483646);
           if ($441) {
            label = 168;
            break L190;
           }
           $442 = $439 << 1;
           $443 = load4($278);
           $444 = load4($434);
           $445 = (_luaM_realloc_($443,$444,$439,$442)|0);
           store4($434,$445);
           store4($438,$442);
           $$pre18$i$i$i$i = load4($435);
           $$pre19$i$i$i$i = (($$pre18$i$i$i$i) + 1)|0;
           $$pre$phi20$i$i$i$iZ2D = $$pre19$i$i$i$i;$447 = $445;$448 = $$pre18$i$i$i$i;
          } else {
           $$pre$i$i$i$i = load4($434);
           $$pre$phi20$i$i$i$iZ2D = $437;$447 = $$pre$i$i$i$i;$448 = $436;
          }
          store4($435,$$pre$phi20$i$i$i$iZ2D);
          $446 = (($447) + ($448)|0);
          store1($446,117);
          $449 = load4($6);
          $450 = load4($449);
          $451 = (($450) + -1)|0;
          store4($449,$451);
          $452 = ($450|0)==(0);
          if ($452) {
           $458 = (_luaZ_fill($449)|0);
           $459 = $458;
          } else {
           $453 = ((($449)) + 4|0);
           $454 = load4($453);
           $455 = ((($454)) + 1|0);
           store4($453,$455);
           $456 = load1($454);
           $457 = $456&255;
           $459 = $457;
          }
          store4($0,$459);
          switch ($459|0) {
          case -1:  {
           label = 183;
           break L190;
           break;
          }
          case 123:  {
           break;
          }
          default: {
           label = 174;
           break L190;
          }
          }
          $487 = load4($3);
          $488 = ((($487)) + 4|0);
          $489 = load4($488);
          $490 = (($489) + 1)|0;
          $491 = ((($487)) + 8|0);
          $492 = load4($491);
          $493 = ($490>>>0)>($492>>>0);
          if ($493) {
           $494 = ($492>>>0)>(2147483646);
           if ($494) {
            label = 187;
            break L190;
           }
           $495 = $492 << 1;
           $496 = load4($278);
           $497 = load4($487);
           $498 = (_luaM_realloc_($496,$497,$492,$495)|0);
           store4($487,$498);
           store4($491,$495);
           $$pre18$i49$i$i$i = load4($488);
           $$pre19$i50$i$i$i = (($$pre18$i49$i$i$i) + 1)|0;
           $$pre$phi20$i51$i$i$iZ2D = $$pre19$i50$i$i$i;$500 = $498;$501 = $$pre18$i49$i$i$i;
          } else {
           $$pre$i47$i$i$i = load4($487);
           $$pre$phi20$i51$i$i$iZ2D = $490;$500 = $$pre$i47$i$i$i;$501 = $489;
          }
          store4($488,$$pre$phi20$i51$i$i$iZ2D);
          $499 = (($500) + ($501)|0);
          store1($499,123);
          $502 = load4($6);
          $503 = load4($502);
          $504 = (($503) + -1)|0;
          store4($502,$504);
          $505 = ($503|0)==(0);
          if ($505) {
           $511 = (_luaZ_fill($502)|0);
           $512 = $511;
          } else {
           $506 = ((($502)) + 4|0);
           $507 = load4($506);
           $508 = ((($507)) + 1|0);
           store4($506,$508);
           $509 = load1($507);
           $510 = $509&255;
           $512 = $510;
          }
          store4($0,$512);
          $513 = (($512) + 1)|0;
          $514 = (1520 + ($513)|0);
          $515 = load1($514);
          $516 = $515 & 16;
          $517 = ($516<<24>>24)==(0);
          if ($517) {
           label = 193;
           break L190;
          }
          $546 = (_luaO_hexavalue($512)|0);
          $$0$i$i$i = 4;$$029$i$i$i = $546;
          while(1) {
           $547 = load4($0);
           $548 = load4($3);
           $549 = ((($548)) + 4|0);
           $550 = load4($549);
           $551 = (($550) + 1)|0;
           $552 = ((($548)) + 8|0);
           $553 = load4($552);
           $554 = ($551>>>0)>($553>>>0);
           if ($554) {
            $555 = ($553>>>0)>(2147483646);
            if ($555) {
             label = 208;
             break L190;
            }
            $556 = $553 << 1;
            $557 = load4($278);
            $558 = load4($548);
            $559 = (_luaM_realloc_($557,$558,$553,$556)|0);
            store4($548,$559);
            store4($552,$556);
            $$pre18$i33$i$i$i = load4($549);
            $$pre19$i34$i$i$i = (($$pre18$i33$i$i$i) + 1)|0;
            $$pre$phi20$i35$i$i$iZ2D = $$pre19$i34$i$i$i;$562 = $559;$563 = $$pre18$i33$i$i$i;
           } else {
            $$pre$i31$i$i$i = load4($548);
            $$pre$phi20$i35$i$i$iZ2D = $551;$562 = $$pre$i31$i$i$i;$563 = $550;
           }
           $560 = $547&255;
           store4($549,$$pre$phi20$i35$i$i$iZ2D);
           $561 = (($562) + ($563)|0);
           store1($561,$560);
           $564 = load4($6);
           $565 = load4($564);
           $566 = (($565) + -1)|0;
           store4($564,$566);
           $567 = ($565|0)==(0);
           if ($567) {
            $573 = (_luaZ_fill($564)|0);
            $574 = $573;
           } else {
            $568 = ((($564)) + 4|0);
            $569 = load4($568);
            $570 = ((($569)) + 1|0);
            store4($568,$570);
            $571 = load1($569);
            $572 = $571&255;
            $574 = $572;
           }
           store4($0,$574);
           $575 = (($574) + 1)|0;
           $576 = (1520 + ($575)|0);
           $577 = load1($576);
           $578 = $577 & 16;
           $579 = ($578<<24>>24)==(0);
           if ($579) {
            break;
           }
           $580 = $$029$i$i$i << 4;
           $581 = (_luaO_hexavalue($574)|0);
           $582 = (($581) + ($580))|0;
           $583 = ($582>>>0)>(1114111);
           if ($583) {
            label = 215;
            break L190;
           }
           $613 = (($$0$i$i$i) + 1)|0;
           $$0$i$i$i = $613;$$029$i$i$i = $582;
          }
          switch ($574|0) {
          case -1:  {
           label = 237;
           break L190;
           break;
          }
          case 125:  {
           break;
          }
          default: {
           label = 228;
           break L190;
          }
          }
          $641 = load4($6);
          $642 = load4($641);
          $643 = (($642) + -1)|0;
          store4($641,$643);
          $644 = ($642|0)==(0);
          if ($644) {
           $650 = (_luaZ_fill($641)|0);
           $651 = $650;
          } else {
           $645 = ((($641)) + 4|0);
           $646 = load4($645);
           $647 = ((($646)) + 1|0);
           store4($645,$647);
           $648 = load1($646);
           $649 = $648&255;
           $651 = $649;
          }
          store4($0,$651);
          $652 = load4($3);
          $653 = ((($652)) + 4|0);
          $654 = load4($653);
          $655 = (($654) - ($$0$i$i$i))|0;
          store4($653,$655);
          $656 = (_luaO_utf8esc($2,$$029$i$i$i)|0);
          $657 = ($656|0)>(0);
          if ($657) {
           $$010$i$i = $656;
           while(1) {
            $658 = (8 - ($$010$i$i))|0;
            $659 = (($2) + ($658)|0);
            $660 = load1($659);
            $661 = load4($3);
            $662 = ((($661)) + 4|0);
            $663 = load4($662);
            $664 = (($663) + 1)|0;
            $665 = ((($661)) + 8|0);
            $666 = load4($665);
            $667 = ($664>>>0)>($666>>>0);
            if ($667) {
             $668 = ($666>>>0)>(2147483646);
             if ($668) {
              label = 246;
              break L190;
             }
             $669 = $666 << 1;
             $670 = load4($278);
             $671 = load4($661);
             $672 = (_luaM_realloc_($670,$671,$666,$669)|0);
             store4($661,$672);
             store4($665,$669);
             $$pre18$i$i63$i = load4($662);
             $$pre19$i$i64$i = (($$pre18$i$i63$i) + 1)|0;
             $$pre$phi20$i$i65$iZ2D = $$pre19$i$i64$i;$674 = $672;$675 = $$pre18$i$i63$i;
            } else {
             $$pre$i$i61$i = load4($661);
             $$pre$phi20$i$i65$iZ2D = $664;$674 = $$pre$i$i61$i;$675 = $663;
            }
            store4($662,$$pre$phi20$i$i65$iZ2D);
            $673 = (($674) + ($675)|0);
            store1($673,$660);
            $676 = (($$010$i$i) + -1)|0;
            $677 = ($$010$i$i|0)>(1);
            if ($677) {
             $$010$i$i = $676;
            } else {
             break;
            }
           }
          }
          break L192;
          break;
         }
         case 13: case 10:  {
          $678 = load4($6);
          $679 = load4($678);
          $680 = (($679) + -1)|0;
          store4($678,$680);
          $681 = ($679|0)==(0);
          if ($681) {
           $687 = (_luaZ_fill($678)|0);
           $688 = $687;
          } else {
           $682 = ((($678)) + 4|0);
           $683 = load4($682);
           $684 = ((($683)) + 1|0);
           store4($682,$684);
           $685 = load1($683);
           $686 = $685&255;
           $688 = $686;
          }
          store4($0,$688);
          switch ($688|0) {
          case 13: case 10:  {
           $689 = ($688|0)==($305|0);
           if (!($689)) {
            $690 = load4($6);
            $691 = load4($690);
            $692 = (($691) + -1)|0;
            store4($690,$692);
            $693 = ($691|0)==(0);
            if ($693) {
             $699 = (_luaZ_fill($690)|0);
             $700 = $699;
            } else {
             $694 = ((($690)) + 4|0);
             $695 = load4($694);
             $696 = ((($695)) + 1|0);
             store4($694,$696);
             $697 = load1($695);
             $698 = $697&255;
             $700 = $698;
            }
            store4($0,$700);
           }
           break;
          }
          default: {
          }
          }
          $701 = load4($7);
          $702 = (($701) + 1)|0;
          store4($7,$702);
          $703 = ($702|0)==(2147483647);
          if ($703) {
           label = 260;
           break L190;
          } else {
           $$1$i = 10;
          }
          break;
         }
         case 39: case 34: case 92:  {
          $$0$i123 = $305;
          label = 334;
          break;
         }
         case 122:  {
          $704 = load4($3);
          $705 = ((($704)) + 4|0);
          $706 = load4($705);
          $707 = (($706) + -1)|0;
          store4($705,$707);
          $708 = load4($6);
          $709 = load4($708);
          $710 = (($709) + -1)|0;
          store4($708,$710);
          $711 = ($709|0)==(0);
          if ($711) {
           $717 = (_luaZ_fill($708)|0);
           $718 = $717;
          } else {
           $712 = ((($708)) + 4|0);
           $713 = load4($712);
           $714 = ((($713)) + 1|0);
           store4($712,$714);
           $715 = load1($713);
           $716 = $715&255;
           $718 = $716;
          }
          store4($0,$718);
          $719 = (($718) + 1)|0;
          $720 = (1520 + ($719)|0);
          $721 = load1($720);
          $722 = $721 & 8;
          $723 = ($722<<24>>24)==(0);
          if ($723) {
           break L192;
          }
          $724 = $718;
          while(1) {
           switch ($724|0) {
           case 13: case 10:  {
            $725 = load4($6);
            $726 = load4($725);
            $727 = (($726) + -1)|0;
            store4($725,$727);
            $728 = ($726|0)==(0);
            if ($728) {
             $734 = (_luaZ_fill($725)|0);
             $735 = $734;
            } else {
             $729 = ((($725)) + 4|0);
             $730 = load4($729);
             $731 = ((($730)) + 1|0);
             store4($729,$731);
             $732 = load1($730);
             $733 = $732&255;
             $735 = $733;
            }
            store4($0,$735);
            switch ($735|0) {
            case 13: case 10:  {
             $736 = ($735|0)==($724|0);
             if ($736) {
              $$pr105236$i = $724;
             } else {
              $737 = load4($6);
              $738 = load4($737);
              $739 = (($738) + -1)|0;
              store4($737,$739);
              $740 = ($738|0)==(0);
              if ($740) {
               $746 = (_luaZ_fill($737)|0);
               $747 = $746;
              } else {
               $741 = ((($737)) + 4|0);
               $742 = load4($741);
               $743 = ((($742)) + 1|0);
               store4($741,$743);
               $744 = load1($742);
               $745 = $744&255;
               $747 = $745;
              }
              store4($0,$747);
              $$pr105236$i = $747;
             }
             break;
            }
            default: {
             $$pr105236$i = $735;
            }
            }
            $748 = load4($7);
            $749 = (($748) + 1)|0;
            store4($7,$749);
            $750 = ($749|0)==(2147483647);
            if ($750) {
             label = 278;
             break L190;
            } else {
             $$pr105$i = $$pr105236$i;
            }
            break;
           }
           default: {
            $751 = load4($6);
            $752 = load4($751);
            $753 = (($752) + -1)|0;
            store4($751,$753);
            $754 = ($752|0)==(0);
            if ($754) {
             $760 = (_luaZ_fill($751)|0);
             $761 = $760;
            } else {
             $755 = ((($751)) + 4|0);
             $756 = load4($755);
             $757 = ((($756)) + 1|0);
             store4($755,$757);
             $758 = load1($756);
             $759 = $758&255;
             $761 = $759;
            }
            store4($0,$761);
            $$pr105$i = $761;
           }
           }
           $762 = (($$pr105$i) + 1)|0;
           $763 = (1520 + ($762)|0);
           $764 = load1($763);
           $765 = $764 & 8;
           $766 = ($765<<24>>24)==(0);
           if ($766) {
            break L192;
           } else {
            $724 = $$pr105$i;
           }
          }
          break;
         }
         default: {
          $767 = (($305) + 1)|0;
          $768 = (1520 + ($767)|0);
          $769 = load1($768);
          $770 = $769 & 2;
          $771 = ($770<<24>>24)==(0);
          if ($771) {
           label = 285;
           break L190;
          }
          $800 = (($305) + -48)|0;
          $801 = load4($3);
          $802 = ((($801)) + 4|0);
          $803 = load4($802);
          $804 = (($803) + 1)|0;
          $805 = ((($801)) + 8|0);
          $806 = load4($805);
          $807 = ($804>>>0)>($806>>>0);
          if ($807) {
           $808 = ($806>>>0)>(2147483646);
           if ($808) {
            label = 299;
            break L190;
           }
           $809 = $806 << 1;
           $810 = load4($278);
           $811 = load4($801);
           $812 = (_luaM_realloc_($810,$811,$806,$809)|0);
           store4($801,$812);
           store4($805,$809);
           $$pre18$i$i72$i = load4($802);
           $$pre19$i$i73$i = (($$pre18$i$i72$i) + 1)|0;
           $$pre$phi20$i$i74$iZ2D = $$pre19$i$i73$i;$815 = $812;$816 = $$pre18$i$i72$i;
          } else {
           $$pre$i$i70$i = load4($801);
           $$pre$phi20$i$i74$iZ2D = $804;$815 = $$pre$i$i70$i;$816 = $803;
          }
          $813 = $305&255;
          store4($802,$$pre$phi20$i$i74$iZ2D);
          $814 = (($815) + ($816)|0);
          store1($814,$813);
          $817 = load4($6);
          $818 = load4($817);
          $819 = (($818) + -1)|0;
          store4($817,$819);
          $820 = ($818|0)==(0);
          if ($820) {
           $826 = (_luaZ_fill($817)|0);
           $827 = $826;
          } else {
           $821 = ((($817)) + 4|0);
           $822 = load4($821);
           $823 = ((($822)) + 1|0);
           store4($821,$823);
           $824 = load1($822);
           $825 = $824&255;
           $827 = $825;
          }
          store4($0,$827);
          $828 = (($827) + 1)|0;
          $829 = (1520 + ($828)|0);
          $830 = load1($829);
          $831 = $830 & 2;
          $832 = ($831<<24>>24)==(0);
          if ($832) {
           $$0$lcssa$i$i = $800;$$017$lcssa$i$i = 1;$834 = $827;
          } else {
           $863 = ($800*10)|0;
           $864 = (($863) + -48)|0;
           $865 = (($864) + ($827))|0;
           $866 = load4($3);
           $867 = ((($866)) + 4|0);
           $868 = load4($867);
           $869 = (($868) + 1)|0;
           $870 = ((($866)) + 8|0);
           $871 = load4($870);
           $872 = ($869>>>0)>($871>>>0);
           if ($872) {
            $873 = ($871>>>0)>(2147483646);
            if ($873) {
             label = 299;
             break L190;
            }
            $874 = $871 << 1;
            $875 = load4($278);
            $876 = load4($866);
            $877 = (_luaM_realloc_($875,$876,$871,$874)|0);
            store4($866,$877);
            store4($870,$874);
            $$pre18$i$1$i$i = load4($867);
            $$pre19$i$1$i$i = (($$pre18$i$1$i$i) + 1)|0;
            $$pre$phi20$i$1$i$iZ2D = $$pre19$i$1$i$i;$880 = $877;$881 = $$pre18$i$1$i$i;
           } else {
            $$pre$i$1$i$i = load4($866);
            $$pre$phi20$i$1$i$iZ2D = $869;$880 = $$pre$i$1$i$i;$881 = $868;
           }
           $878 = $827&255;
           store4($867,$$pre$phi20$i$1$i$iZ2D);
           $879 = (($880) + ($881)|0);
           store1($879,$878);
           $882 = load4($6);
           $883 = load4($882);
           $884 = (($883) + -1)|0;
           store4($882,$884);
           $885 = ($883|0)==(0);
           if ($885) {
            $891 = (_luaZ_fill($882)|0);
            $892 = $891;
           } else {
            $886 = ((($882)) + 4|0);
            $887 = load4($886);
            $888 = ((($887)) + 1|0);
            store4($886,$888);
            $889 = load1($887);
            $890 = $889&255;
            $892 = $890;
           }
           store4($0,$892);
           $893 = (($892) + 1)|0;
           $894 = (1520 + ($893)|0);
           $895 = load1($894);
           $896 = $895 & 2;
           $897 = ($896<<24>>24)==(0);
           if ($897) {
            $$0$lcssa$i$i = $865;$$017$lcssa$i$i = 2;$834 = $892;
           } else {
            $898 = ($865*10)|0;
            $899 = (($898) + -48)|0;
            $900 = (($899) + ($892))|0;
            $901 = load4($3);
            $902 = ((($901)) + 4|0);
            $903 = load4($902);
            $904 = (($903) + 1)|0;
            $905 = ((($901)) + 8|0);
            $906 = load4($905);
            $907 = ($904>>>0)>($906>>>0);
            if ($907) {
             $908 = ($906>>>0)>(2147483646);
             if ($908) {
              label = 299;
              break L190;
             }
             $909 = $906 << 1;
             $910 = load4($278);
             $911 = load4($901);
             $912 = (_luaM_realloc_($910,$911,$906,$909)|0);
             store4($901,$912);
             store4($905,$909);
             $$pre18$i$2$i$i = load4($902);
             $$pre19$i$2$i$i = (($$pre18$i$2$i$i) + 1)|0;
             $$pre$phi20$i$2$i$iZ2D = $$pre19$i$2$i$i;$915 = $912;$916 = $$pre18$i$2$i$i;
            } else {
             $$pre$i$2$i$i = load4($901);
             $$pre$phi20$i$2$i$iZ2D = $904;$915 = $$pre$i$2$i$i;$916 = $903;
            }
            $913 = $892&255;
            store4($902,$$pre$phi20$i$2$i$iZ2D);
            $914 = (($915) + ($916)|0);
            store1($914,$913);
            $917 = load4($6);
            $918 = load4($917);
            $919 = (($918) + -1)|0;
            store4($917,$919);
            $920 = ($918|0)==(0);
            if ($920) {
             $926 = (_luaZ_fill($917)|0);
             $927 = $926;
            } else {
             $921 = ((($917)) + 4|0);
             $922 = load4($921);
             $923 = ((($922)) + 1|0);
             store4($921,$923);
             $924 = load1($922);
             $925 = $924&255;
             $927 = $925;
            }
            store4($0,$927);
            $$0$lcssa$i$i = $900;$$017$lcssa$i$i = 3;$834 = $927;
           }
          }
          $833 = ($$0$lcssa$i$i|0)>(255);
          if ($833) {
           label = 306;
           break L190;
          }
          $928 = load4($3);
          $929 = ((($928)) + 4|0);
          $930 = load4($929);
          $931 = (($930) - ($$017$lcssa$i$i))|0;
          store4($929,$931);
          $$1$i = $$0$lcssa$i$i;
         }
         }
        } while(0);
        if ((label|0) == 334) {
         label = 0;
         $932 = load4($6);
         $933 = load4($932);
         $934 = (($933) + -1)|0;
         store4($932,$934);
         $935 = ($933|0)==(0);
         if ($935) {
          $941 = (_luaZ_fill($932)|0);
          $942 = $941;
         } else {
          $936 = ((($932)) + 4|0);
          $937 = load4($936);
          $938 = ((($937)) + 1|0);
          store4($936,$938);
          $939 = load1($937);
          $940 = $939&255;
          $942 = $940;
         }
         store4($0,$942);
         $$1$i = $$0$i123;
        }
        $943 = load4($3);
        $944 = ((($943)) + 4|0);
        $945 = load4($944);
        $946 = (($945) + -1)|0;
        store4($944,$946);
        $947 = ((($943)) + 8|0);
        $948 = load4($947);
        $949 = ($945>>>0)>($948>>>0);
        if ($949) {
         $950 = ($948>>>0)>(2147483646);
         if ($950) {
          label = 341;
          break L190;
         }
         $951 = $948 << 1;
         $952 = load4($278);
         $953 = load4($943);
         $954 = (_luaM_realloc_($952,$953,$948,$951)|0);
         store4($943,$954);
         store4($947,$951);
         $$pre18$i80$i = load4($944);
         $$pre19$i81$i = (($$pre18$i80$i) + 1)|0;
         $$pre$phi20$i82$iZ2D = $$pre19$i81$i;$957 = $954;$958 = $$pre18$i80$i;
        } else {
         $$pre$i78$i = load4($943);
         $$pre$phi20$i82$iZ2D = $945;$957 = $$pre$i78$i;$958 = $946;
        }
        $955 = $$1$i&255;
        store4($944,$$pre$phi20$i82$iZ2D);
        $956 = (($957) + ($958)|0);
        store1($956,$955);
        break;
       }
       default: {
        $959 = load4($3);
        $960 = ((($959)) + 4|0);
        $961 = load4($960);
        $962 = (($961) + 1)|0;
        $963 = ((($959)) + 8|0);
        $964 = load4($963);
        $965 = ($962>>>0)>($964>>>0);
        if ($965) {
         $966 = ($964>>>0)>(2147483646);
         if ($966) {
          label = 347;
          break L190;
         }
         $967 = $964 << 1;
         $968 = load4($278);
         $969 = load4($959);
         $970 = (_luaM_realloc_($968,$969,$964,$967)|0);
         store4($959,$970);
         store4($963,$967);
         $$pre18$i87$i = load4($960);
         $$pre19$i88$i = (($$pre18$i87$i) + 1)|0;
         $$pre$phi20$i89$iZ2D = $$pre19$i88$i;$973 = $970;$974 = $$pre18$i87$i;
        } else {
         $$pre$i85$i = load4($959);
         $$pre$phi20$i89$iZ2D = $962;$973 = $$pre$i85$i;$974 = $961;
        }
        $971 = $279&255;
        store4($960,$$pre$phi20$i89$iZ2D);
        $972 = (($973) + ($974)|0);
        store1($972,$971);
        $975 = load4($6);
        $976 = load4($975);
        $977 = (($976) + -1)|0;
        store4($975,$977);
        $978 = ($976|0)==(0);
        if ($978) {
         $984 = (_luaZ_fill($975)|0);
         $985 = $984;
        } else {
         $979 = ((($975)) + 4|0);
         $980 = load4($979);
         $981 = ((($980)) + 1|0);
         store4($979,$981);
         $982 = load1($980);
         $983 = $982&255;
         $985 = $983;
        }
        store4($0,$985);
       }
       }
      } while(0);
      $$pr$i = load4($0);
      $986 = ($$pr$i|0)==($8|0);
      if ($986) {
       break L188;
      } else {
       $279 = $$pr$i;
      }
     }
     switch (label|0) {
      case 107: {
       _lexerror($0,10886,289);
       // unreachable;
       break;
      }
      case 108: {
       _lexerror($0,10886,293);
       // unreachable;
       break;
      }
      case 112: {
       _lexerror($0,10795,0);
       // unreachable;
       break;
      }
      case 127: {
       _lexerror($0,10795,0);
       // unreachable;
       break;
      }
      case 133: {
       $337 = ($331|0)==(-1);
       if ($337) {
        _lexerror($0,10904,293);
        // unreachable;
       }
       $338 = load4($3);
       $339 = ((($338)) + 4|0);
       $340 = load4($339);
       $341 = (($340) + 1)|0;
       $342 = ((($338)) + 8|0);
       $343 = load4($342);
       $344 = ($341>>>0)>($343>>>0);
       do {
        if ($344) {
         $345 = ($343>>>0)>(2147483646);
         if ($345) {
          _lexerror($0,10795,0);
          // unreachable;
         } else {
          $346 = $343 << 1;
          $347 = load4($278);
          $348 = load4($338);
          $349 = (_luaM_realloc_($347,$348,$343,$346)|0);
          store4($338,$349);
          store4($342,$346);
          $$pre18$i17$i$i = load4($339);
          $$pre19$i18$i$i = (($$pre18$i17$i$i) + 1)|0;
          $$pre$phi20$i19$i$iZ2D = $$pre19$i18$i$i;$352 = $349;$353 = $$pre18$i17$i$i;
          break;
         }
        } else {
         $$pre$i15$i$i = load4($338);
         $$pre$phi20$i19$i$iZ2D = $341;$352 = $$pre$i15$i$i;$353 = $340;
        }
       } while(0);
       $350 = $331&255;
       store4($339,$$pre$phi20$i19$i$iZ2D);
       $351 = (($352) + ($353)|0);
       store1($351,$350);
       $354 = load4($6);
       $355 = load4($354);
       $356 = (($355) + -1)|0;
       store4($354,$356);
       $357 = ($355|0)==(0);
       if ($357) {
        $363 = (_luaZ_fill($354)|0);
        $364 = $363;
       } else {
        $358 = ((($354)) + 4|0);
        $359 = load4($358);
        $360 = ((($359)) + 1|0);
        store4($358,$360);
        $361 = load1($359);
        $362 = $361&255;
        $364 = $362;
       }
       store4($0,$364);
       _lexerror($0,10904,293);
       // unreachable;
       break;
      }
      case 147: {
       _lexerror($0,10795,0);
       // unreachable;
       break;
      }
      case 153: {
       $400 = ($394|0)==(-1);
       if ($400) {
        _lexerror($0,10904,293);
        // unreachable;
       }
       $401 = load4($3);
       $402 = ((($401)) + 4|0);
       $403 = load4($402);
       $404 = (($403) + 1)|0;
       $405 = ((($401)) + 8|0);
       $406 = load4($405);
       $407 = ($404>>>0)>($406>>>0);
       do {
        if ($407) {
         $408 = ($406>>>0)>(2147483646);
         if ($408) {
          _lexerror($0,10795,0);
          // unreachable;
         } else {
          $409 = $406 << 1;
          $410 = load4($278);
          $411 = load4($401);
          $412 = (_luaM_realloc_($410,$411,$406,$409)|0);
          store4($401,$412);
          store4($405,$409);
          $$pre18$i24$i$i = load4($402);
          $$pre19$i25$i$i = (($$pre18$i24$i$i) + 1)|0;
          $$pre$phi20$i26$i$iZ2D = $$pre19$i25$i$i;$415 = $412;$416 = $$pre18$i24$i$i;
          break;
         }
        } else {
         $$pre$i22$i$i = load4($401);
         $$pre$phi20$i26$i$iZ2D = $404;$415 = $$pre$i22$i$i;$416 = $403;
        }
       } while(0);
       $413 = $394&255;
       store4($402,$$pre$phi20$i26$i$iZ2D);
       $414 = (($415) + ($416)|0);
       store1($414,$413);
       $417 = load4($6);
       $418 = load4($417);
       $419 = (($418) + -1)|0;
       store4($417,$419);
       $420 = ($418|0)==(0);
       if ($420) {
        $426 = (_luaZ_fill($417)|0);
        $427 = $426;
       } else {
        $421 = ((($417)) + 4|0);
        $422 = load4($421);
        $423 = ((($422)) + 1|0);
        store4($421,$423);
        $424 = load1($422);
        $425 = $424&255;
        $427 = $425;
       }
       store4($0,$427);
       _lexerror($0,10904,293);
       // unreachable;
       break;
      }
      case 168: {
       _lexerror($0,10795,0);
       // unreachable;
       break;
      }
      case 174: {
       $460 = load4($3);
       $461 = ((($460)) + 4|0);
       $462 = load4($461);
       $463 = (($462) + 1)|0;
       $464 = ((($460)) + 8|0);
       $465 = load4($464);
       $466 = ($463>>>0)>($465>>>0);
       do {
        if ($466) {
         $467 = ($465>>>0)>(2147483646);
         if ($467) {
          _lexerror($0,10795,0);
          // unreachable;
         } else {
          $468 = $465 << 1;
          $469 = load4($278);
          $470 = load4($460);
          $471 = (_luaM_realloc_($469,$470,$465,$468)|0);
          store4($460,$471);
          store4($464,$468);
          $$pre18$i42$i$i$i = load4($461);
          $$pre19$i43$i$i$i = (($$pre18$i42$i$i$i) + 1)|0;
          $$pre$phi20$i44$i$i$iZ2D = $$pre19$i43$i$i$i;$474 = $471;$475 = $$pre18$i42$i$i$i;
          break;
         }
        } else {
         $$pre$i40$i$i$i = load4($460);
         $$pre$phi20$i44$i$i$iZ2D = $463;$474 = $$pre$i40$i$i$i;$475 = $462;
        }
       } while(0);
       $472 = $459&255;
       store4($461,$$pre$phi20$i44$i$i$iZ2D);
       $473 = (($474) + ($475)|0);
       store1($473,$472);
       $476 = load4($6);
       $477 = load4($476);
       $478 = (($477) + -1)|0;
       store4($476,$478);
       $479 = ($477|0)==(0);
       if ($479) {
        $485 = (_luaZ_fill($476)|0);
        $486 = $485;
       } else {
        $480 = ((($476)) + 4|0);
        $481 = load4($480);
        $482 = ((($481)) + 1|0);
        store4($480,$482);
        $483 = load1($481);
        $484 = $483&255;
        $486 = $484;
       }
       store4($0,$486);
       _lexerror($0,10931,293);
       // unreachable;
       break;
      }
      case 183: {
       _lexerror($0,10931,293);
       // unreachable;
       break;
      }
      case 187: {
       _lexerror($0,10795,0);
       // unreachable;
       break;
      }
      case 193: {
       $518 = ($512|0)==(-1);
       if ($518) {
        _lexerror($0,10904,293);
        // unreachable;
       }
       $519 = load4($3);
       $520 = ((($519)) + 4|0);
       $521 = load4($520);
       $522 = (($521) + 1)|0;
       $523 = ((($519)) + 8|0);
       $524 = load4($523);
       $525 = ($522>>>0)>($524>>>0);
       do {
        if ($525) {
         $526 = ($524>>>0)>(2147483646);
         if ($526) {
          _lexerror($0,10795,0);
          // unreachable;
         } else {
          $527 = $524 << 1;
          $528 = load4($278);
          $529 = load4($519);
          $530 = (_luaM_realloc_($528,$529,$524,$527)|0);
          store4($519,$530);
          store4($523,$527);
          $$pre18$i71$i$i$i = load4($520);
          $$pre19$i72$i$i$i = (($$pre18$i71$i$i$i) + 1)|0;
          $$pre$phi20$i73$i$i$iZ2D = $$pre19$i72$i$i$i;$533 = $530;$534 = $$pre18$i71$i$i$i;
          break;
         }
        } else {
         $$pre$i69$i$i$i = load4($519);
         $$pre$phi20$i73$i$i$iZ2D = $522;$533 = $$pre$i69$i$i$i;$534 = $521;
        }
       } while(0);
       $531 = $512&255;
       store4($520,$$pre$phi20$i73$i$i$iZ2D);
       $532 = (($533) + ($534)|0);
       store1($532,$531);
       $535 = load4($6);
       $536 = load4($535);
       $537 = (($536) + -1)|0;
       store4($535,$537);
       $538 = ($536|0)==(0);
       if ($538) {
        $544 = (_luaZ_fill($535)|0);
        $545 = $544;
       } else {
        $539 = ((($535)) + 4|0);
        $540 = load4($539);
        $541 = ((($540)) + 1|0);
        store4($539,$541);
        $542 = load1($540);
        $543 = $542&255;
        $545 = $543;
       }
       store4($0,$545);
       _lexerror($0,10904,293);
       // unreachable;
       break;
      }
      case 208: {
       _lexerror($0,10795,0);
       // unreachable;
       break;
      }
      case 215: {
       $584 = load4($0);
       $585 = ($584|0)==(-1);
       if ($585) {
        _lexerror($0,10943,293);
        // unreachable;
       }
       $586 = load4($3);
       $587 = ((($586)) + 4|0);
       $588 = load4($587);
       $589 = (($588) + 1)|0;
       $590 = ((($586)) + 8|0);
       $591 = load4($590);
       $592 = ($589>>>0)>($591>>>0);
       do {
        if ($592) {
         $593 = ($591>>>0)>(2147483646);
         if ($593) {
          _lexerror($0,10795,0);
          // unreachable;
         } else {
          $594 = $591 << 1;
          $595 = load4($278);
          $596 = load4($586);
          $597 = (_luaM_realloc_($595,$596,$591,$594)|0);
          store4($586,$597);
          store4($590,$594);
          $$pre18$i57$i$i$i = load4($587);
          $$pre19$i58$i$i$i = (($$pre18$i57$i$i$i) + 1)|0;
          $$pre$phi20$i59$i$i$iZ2D = $$pre19$i58$i$i$i;$600 = $597;$601 = $$pre18$i57$i$i$i;
          break;
         }
        } else {
         $$pre$i55$i$i$i = load4($586);
         $$pre$phi20$i59$i$i$iZ2D = $589;$600 = $$pre$i55$i$i$i;$601 = $588;
        }
       } while(0);
       $598 = $584&255;
       store4($587,$$pre$phi20$i59$i$i$iZ2D);
       $599 = (($600) + ($601)|0);
       store1($599,$598);
       $602 = load4($6);
       $603 = load4($602);
       $604 = (($603) + -1)|0;
       store4($602,$604);
       $605 = ($603|0)==(0);
       if ($605) {
        $611 = (_luaZ_fill($602)|0);
        $612 = $611;
       } else {
        $606 = ((($602)) + 4|0);
        $607 = load4($606);
        $608 = ((($607)) + 1|0);
        store4($606,$608);
        $609 = load1($607);
        $610 = $609&255;
        $612 = $610;
       }
       store4($0,$612);
       _lexerror($0,10943,293);
       // unreachable;
       break;
      }
      case 228: {
       $614 = load4($3);
       $615 = ((($614)) + 4|0);
       $616 = load4($615);
       $617 = (($616) + 1)|0;
       $618 = ((($614)) + 8|0);
       $619 = load4($618);
       $620 = ($617>>>0)>($619>>>0);
       do {
        if ($620) {
         $621 = ($619>>>0)>(2147483646);
         if ($621) {
          _lexerror($0,10795,0);
          // unreachable;
         } else {
          $622 = $619 << 1;
          $623 = load4($278);
          $624 = load4($614);
          $625 = (_luaM_realloc_($623,$624,$619,$622)|0);
          store4($614,$625);
          store4($618,$622);
          $$pre18$i64$i$i$i = load4($615);
          $$pre19$i65$i$i$i = (($$pre18$i64$i$i$i) + 1)|0;
          $$pre$phi20$i66$i$i$iZ2D = $$pre19$i65$i$i$i;$628 = $625;$629 = $$pre18$i64$i$i$i;
          break;
         }
        } else {
         $$pre$i62$i$i$i = load4($614);
         $$pre$phi20$i66$i$i$iZ2D = $617;$628 = $$pre$i62$i$i$i;$629 = $616;
        }
       } while(0);
       $626 = $574&255;
       store4($615,$$pre$phi20$i66$i$i$iZ2D);
       $627 = (($628) + ($629)|0);
       store1($627,$626);
       $630 = load4($6);
       $631 = load4($630);
       $632 = (($631) + -1)|0;
       store4($630,$632);
       $633 = ($631|0)==(0);
       if ($633) {
        $639 = (_luaZ_fill($630)|0);
        $640 = $639;
       } else {
        $634 = ((($630)) + 4|0);
        $635 = load4($634);
        $636 = ((($635)) + 1|0);
        store4($634,$636);
        $637 = load1($635);
        $638 = $637&255;
        $640 = $638;
       }
       store4($0,$640);
       _lexerror($0,10965,293);
       // unreachable;
       break;
      }
      case 237: {
       _lexerror($0,10965,293);
       // unreachable;
       break;
      }
      case 246: {
       _lexerror($0,10795,0);
       // unreachable;
       break;
      }
      case 260: {
       _lexerror($0,10831,0);
       // unreachable;
       break;
      }
      case 278: {
       _lexerror($0,10831,0);
       // unreachable;
       break;
      }
      case 285: {
       $772 = ($305|0)==(-1);
       if ($772) {
        _lexerror($0,10977,293);
        // unreachable;
       }
       $773 = load4($3);
       $774 = ((($773)) + 4|0);
       $775 = load4($774);
       $776 = (($775) + 1)|0;
       $777 = ((($773)) + 8|0);
       $778 = load4($777);
       $779 = ($776>>>0)>($778>>>0);
       do {
        if ($779) {
         $780 = ($778>>>0)>(2147483646);
         if ($780) {
          _lexerror($0,10795,0);
          // unreachable;
         } else {
          $781 = $778 << 1;
          $782 = load4($278);
          $783 = load4($773);
          $784 = (_luaM_realloc_($782,$783,$778,$781)|0);
          store4($773,$784);
          store4($777,$781);
          $$pre18$i101$i = load4($774);
          $$pre19$i102$i = (($$pre18$i101$i) + 1)|0;
          $$pre$phi20$i103$iZ2D = $$pre19$i102$i;$787 = $784;$788 = $$pre18$i101$i;
          break;
         }
        } else {
         $$pre$i99$i = load4($773);
         $$pre$phi20$i103$iZ2D = $776;$787 = $$pre$i99$i;$788 = $775;
        }
       } while(0);
       $785 = $305&255;
       store4($774,$$pre$phi20$i103$iZ2D);
       $786 = (($787) + ($788)|0);
       store1($786,$785);
       $789 = load4($6);
       $790 = load4($789);
       $791 = (($790) + -1)|0;
       store4($789,$791);
       $792 = ($790|0)==(0);
       if ($792) {
        $798 = (_luaZ_fill($789)|0);
        $799 = $798;
       } else {
        $793 = ((($789)) + 4|0);
        $794 = load4($793);
        $795 = ((($794)) + 1|0);
        store4($793,$795);
        $796 = load1($794);
        $797 = $796&255;
        $799 = $797;
       }
       store4($0,$799);
       _lexerror($0,10977,293);
       // unreachable;
       break;
      }
      case 299: {
       _lexerror($0,10795,0);
       // unreachable;
       break;
      }
      case 306: {
       $835 = ($834|0)==(-1);
       if ($835) {
        _lexerror($0,11001,293);
        // unreachable;
       }
       $836 = load4($3);
       $837 = ((($836)) + 4|0);
       $838 = load4($837);
       $839 = (($838) + 1)|0;
       $840 = ((($836)) + 8|0);
       $841 = load4($840);
       $842 = ($839>>>0)>($841>>>0);
       do {
        if ($842) {
         $843 = ($841>>>0)>(2147483646);
         if ($843) {
          _lexerror($0,10795,0);
          // unreachable;
         } else {
          $844 = $841 << 1;
          $845 = load4($278);
          $846 = load4($836);
          $847 = (_luaM_realloc_($845,$846,$841,$844)|0);
          store4($836,$847);
          store4($840,$844);
          $$pre18$i21$i$i = load4($837);
          $$pre19$i22$i$i = (($$pre18$i21$i$i) + 1)|0;
          $$pre$phi20$i23$i$iZ2D = $$pre19$i22$i$i;$850 = $847;$851 = $$pre18$i21$i$i;
          break;
         }
        } else {
         $$pre$i19$i$i = load4($836);
         $$pre$phi20$i23$i$iZ2D = $839;$850 = $$pre$i19$i$i;$851 = $838;
        }
       } while(0);
       $848 = $834&255;
       store4($837,$$pre$phi20$i23$i$iZ2D);
       $849 = (($850) + ($851)|0);
       store1($849,$848);
       $852 = load4($6);
       $853 = load4($852);
       $854 = (($853) + -1)|0;
       store4($852,$854);
       $855 = ($853|0)==(0);
       if ($855) {
        $861 = (_luaZ_fill($852)|0);
        $862 = $861;
       } else {
        $856 = ((($852)) + 4|0);
        $857 = load4($856);
        $858 = ((($857)) + 1|0);
        store4($856,$858);
        $859 = load1($857);
        $860 = $859&255;
        $862 = $860;
       }
       store4($0,$862);
       _lexerror($0,11001,293);
       // unreachable;
       break;
      }
      case 341: {
       _lexerror($0,10795,0);
       // unreachable;
       break;
      }
      case 347: {
       _lexerror($0,10795,0);
       // unreachable;
       break;
      }
     }
    }
   } while(0);
   $987 = load4($3);
   $988 = ((($987)) + 4|0);
   $989 = load4($988);
   $990 = (($989) + 1)|0;
   $991 = ((($987)) + 8|0);
   $992 = load4($991);
   $993 = ($990>>>0)>($992>>>0);
   do {
    if ($993) {
     $994 = ($992>>>0)>(2147483646);
     if ($994) {
      _lexerror($0,10795,0);
      // unreachable;
     } else {
      $995 = $992 << 1;
      $996 = ((($0)) + 52|0);
      $997 = load4($996);
      $998 = load4($987);
      $999 = (_luaM_realloc_($997,$998,$992,$995)|0);
      store4($987,$999);
      store4($991,$995);
      $$pre18$i94$i = load4($988);
      $$pre19$i95$i = (($$pre18$i94$i) + 1)|0;
      $$pre$phi20$i96$iZ2D = $$pre19$i95$i;$1001 = $999;$1002 = $$pre18$i94$i;
      break;
     }
    } else {
     $$pre$i92$i = load4($987);
     $$pre$phi20$i96$iZ2D = $990;$1001 = $$pre$i92$i;$1002 = $989;
    }
   } while(0);
   store4($988,$$pre$phi20$i96$iZ2D);
   $1000 = (($1001) + ($1002)|0);
   store1($1000,$262);
   $1003 = load4($6);
   $1004 = load4($1003);
   $1005 = (($1004) + -1)|0;
   store4($1003,$1005);
   $1006 = ($1004|0)==(0);
   if ($1006) {
    $1012 = (_luaZ_fill($1003)|0);
    $1013 = $1012;
   } else {
    $1007 = ((($1003)) + 4|0);
    $1008 = load4($1007);
    $1009 = ((($1008)) + 1|0);
    store4($1007,$1009);
    $1010 = load1($1008);
    $1011 = $1010&255;
    $1013 = $1011;
   }
   store4($0,$1013);
   $1014 = load4($3);
   $1015 = load4($1014);
   $1016 = ((($1015)) + 1|0);
   $1017 = ((($1014)) + 4|0);
   $1018 = load4($1017);
   $1019 = (($1018) + -2)|0;
   $1020 = ((($0)) + 52|0);
   $1021 = load4($1020);
   $1022 = (_luaS_newlstr($1021,$1016,$1019)|0);
   $1023 = ((($1021)) + 12|0);
   $1024 = load4($1023);
   $1025 = ((($1024)) + 16|0);
   store4($1023,$1025);
   store4($1024,$1022);
   $1026 = ((($1022)) + 4|0);
   $1027 = load1($1026);
   $1028 = $1027 | 64;
   $1029 = $1028&255;
   $1030 = ((($1024)) + 8|0);
   store4($1030,$1029);
   $1031 = ((($0)) + 64|0);
   $1032 = load4($1031);
   $1033 = load4($1023);
   $1034 = ((($1033)) + -16|0);
   $1035 = (_luaH_set($1021,$1032,$1034)|0);
   $1036 = ((($1035)) + 8|0);
   $1037 = load4($1036);
   $1038 = ($1037|0)==(0);
   if ($1038) {
    store4($1035,1);
    store4($1036,1);
    $1039 = ((($1021)) + 16|0);
    $1040 = load4($1039);
    $1041 = ((($1040)) + 12|0);
    $1042 = load4($1041);
    $1043 = ($1042|0)>(0);
    if ($1043) {
     _luaC_step($1021);
     $$0$i$i = $1022;
    } else {
     $$0$i$i = $1022;
    }
   } else {
    $1044 = ((($1035)) + 16|0);
    $1045 = load4($1044);
    $$0$i$i = $1045;
   }
   $1046 = load4($1023);
   $1047 = ((($1046)) + -16|0);
   store4($1023,$1047);
   store4($1,$$0$i$i);
   $$2 = 293;
   STACKTOP = sp;return ($$2|0);
   break;
  }
  case 367: {
   $1048 = load4($3);
   $1049 = ((($1048)) + 4|0);
   $1050 = load4($1049);
   $1051 = (($1050) + 1)|0;
   $1052 = ((($1048)) + 8|0);
   $1053 = load4($1052);
   $1054 = ($1051>>>0)>($1053>>>0);
   do {
    if ($1054) {
     $1055 = ($1053>>>0)>(2147483646);
     if ($1055) {
      _lexerror($0,10795,0);
      // unreachable;
     } else {
      $1056 = $1053 << 1;
      $1057 = ((($0)) + 52|0);
      $1058 = load4($1057);
      $1059 = load4($1048);
      $1060 = (_luaM_realloc_($1058,$1059,$1053,$1056)|0);
      store4($1048,$1060);
      store4($1052,$1056);
      $$pre18$i = load4($1049);
      $$pre19$i = (($$pre18$i) + 1)|0;
      $$pre$phi20$iZ2D = $$pre19$i;$1062 = $1060;$1063 = $$pre18$i;
      break;
     }
    } else {
     $$pre$i = load4($1048);
     $$pre$phi20$iZ2D = $1051;$1062 = $$pre$i;$1063 = $1050;
    }
   } while(0);
   store4($1049,$$pre$phi20$iZ2D);
   $1061 = (($1062) + ($1063)|0);
   store1($1061,46);
   $1064 = load4($6);
   $1065 = load4($1064);
   $1066 = (($1065) + -1)|0;
   store4($1064,$1066);
   $1067 = ($1065|0)==(0);
   if ($1067) {
    $1073 = (_luaZ_fill($1064)|0);
    $1074 = $1073;
   } else {
    $1068 = ((($1064)) + 4|0);
    $1069 = load4($1068);
    $1070 = ((($1069)) + 1|0);
    store4($1068,$1070);
    $1071 = load1($1069);
    $1072 = $1071&255;
    $1074 = $1072;
   }
   store4($0,$1074);
   $1075 = ($1074|0)==(46);
   if (!($1075)) {
    $1099 = (($1074) + 1)|0;
    $1100 = (1520 + ($1099)|0);
    $1101 = load1($1100);
    $1102 = $1101 & 2;
    $1103 = ($1102<<24>>24)==(0);
    if ($1103) {
     $$2 = 46;
     STACKTOP = sp;return ($$2|0);
    }
    $1104 = (_read_numeral($0,$1)|0);
    $$2 = $1104;
    STACKTOP = sp;return ($$2|0);
   }
   $1076 = load4($6);
   $1077 = load4($1076);
   $1078 = (($1077) + -1)|0;
   store4($1076,$1078);
   $1079 = ($1077|0)==(0);
   if ($1079) {
    $1085 = (_luaZ_fill($1076)|0);
    $1086 = $1085;
   } else {
    $1080 = ((($1076)) + 4|0);
    $1081 = load4($1080);
    $1082 = ((($1081)) + 1|0);
    store4($1080,$1082);
    $1083 = load1($1081);
    $1084 = $1083&255;
    $1086 = $1084;
   }
   store4($0,$1086);
   $1087 = ($1086|0)==(46);
   if (!($1087)) {
    $$2 = 280;
    STACKTOP = sp;return ($$2|0);
   }
   $1088 = load4($6);
   $1089 = load4($1088);
   $1090 = (($1089) + -1)|0;
   store4($1088,$1090);
   $1091 = ($1089|0)==(0);
   if ($1091) {
    $1097 = (_luaZ_fill($1088)|0);
    $1098 = $1097;
   } else {
    $1092 = ((($1088)) + 4|0);
    $1093 = load4($1092);
    $1094 = ((($1093)) + 1|0);
    store4($1092,$1094);
    $1095 = load1($1093);
    $1096 = $1095&255;
    $1098 = $1096;
   }
   store4($0,$1098);
   $$2 = 281;
   STACKTOP = sp;return ($$2|0);
   break;
  }
  case 386: {
   $1105 = (_read_numeral($0,$1)|0);
   $$2 = $1105;
   STACKTOP = sp;return ($$2|0);
   break;
  }
  case 387: {
   $1106 = (($8) + 1)|0;
   $1107 = (1520 + ($1106)|0);
   $1108 = load1($1107);
   $1109 = $1108 & 1;
   $1110 = ($1109<<24>>24)==(0);
   if ($1110) {
    $1183 = load4($6);
    $1184 = load4($1183);
    $1185 = (($1184) + -1)|0;
    store4($1183,$1185);
    $1186 = ($1184|0)==(0);
    if ($1186) {
     $1192 = (_luaZ_fill($1183)|0);
     $1193 = $1192;
    } else {
     $1187 = ((($1183)) + 4|0);
     $1188 = load4($1187);
     $1189 = ((($1188)) + 1|0);
     store4($1187,$1189);
     $1190 = load1($1188);
     $1191 = $1190&255;
     $1193 = $1191;
    }
    store4($0,$1193);
    $$2 = $8;
    STACKTOP = sp;return ($$2|0);
   }
   $1111 = ((($0)) + 52|0);
   $1125 = $8;
   while(1) {
    $1112 = load4($3);
    $1113 = ((($1112)) + 4|0);
    $1114 = load4($1113);
    $1115 = (($1114) + 1)|0;
    $1116 = ((($1112)) + 8|0);
    $1117 = load4($1116);
    $1118 = ($1115>>>0)>($1117>>>0);
    if ($1118) {
     $1119 = ($1117>>>0)>(2147483646);
     if ($1119) {
      label = 392;
      break;
     }
     $1120 = $1117 << 1;
     $1121 = load4($1111);
     $1122 = load4($1112);
     $1123 = (_luaM_realloc_($1121,$1122,$1117,$1120)|0);
     store4($1112,$1123);
     store4($1116,$1120);
     $$pre18$i132 = load4($1113);
     $$pre19$i133 = (($$pre18$i132) + 1)|0;
     $$pre$phi20$i134Z2D = $$pre19$i133;$1127 = $1123;$1128 = $$pre18$i132;
    } else {
     $$pre$i130 = load4($1112);
     $$pre$phi20$i134Z2D = $1115;$1127 = $$pre$i130;$1128 = $1114;
    }
    $1124 = $1125&255;
    store4($1113,$$pre$phi20$i134Z2D);
    $1126 = (($1127) + ($1128)|0);
    store1($1126,$1124);
    $1129 = load4($6);
    $1130 = load4($1129);
    $1131 = (($1130) + -1)|0;
    store4($1129,$1131);
    $1132 = ($1130|0)==(0);
    if ($1132) {
     $1138 = (_luaZ_fill($1129)|0);
     $1139 = $1138;
    } else {
     $1133 = ((($1129)) + 4|0);
     $1134 = load4($1133);
     $1135 = ((($1134)) + 1|0);
     store4($1133,$1135);
     $1136 = load1($1134);
     $1137 = $1136&255;
     $1139 = $1137;
    }
    store4($0,$1139);
    $1140 = (($1139) + 1)|0;
    $1141 = (1520 + ($1140)|0);
    $1142 = load1($1141);
    $1143 = $1142 & 3;
    $1144 = ($1143<<24>>24)==(0);
    if ($1144) {
     break;
    } else {
     $1125 = $1139;
    }
   }
   if ((label|0) == 392) {
    _lexerror($0,10795,0);
    // unreachable;
   }
   $1145 = load4($3);
   $1146 = load4($1145);
   $1147 = ((($1145)) + 4|0);
   $1148 = load4($1147);
   $1149 = load4($1111);
   $1150 = (_luaS_newlstr($1149,$1146,$1148)|0);
   $1151 = ((($1149)) + 12|0);
   $1152 = load4($1151);
   $1153 = ((($1152)) + 16|0);
   store4($1151,$1153);
   store4($1152,$1150);
   $1154 = ((($1150)) + 4|0);
   $1155 = load1($1154);
   $1156 = $1155 | 64;
   $1157 = $1156&255;
   $1158 = ((($1152)) + 8|0);
   store4($1158,$1157);
   $1159 = ((($0)) + 64|0);
   $1160 = load4($1159);
   $1161 = load4($1151);
   $1162 = ((($1161)) + -16|0);
   $1163 = (_luaH_set($1149,$1160,$1162)|0);
   $1164 = ((($1163)) + 8|0);
   $1165 = load4($1164);
   $1166 = ($1165|0)==(0);
   if ($1166) {
    store4($1163,1);
    store4($1164,1);
    $1167 = ((($1149)) + 16|0);
    $1168 = load4($1167);
    $1169 = ((($1168)) + 12|0);
    $1170 = load4($1169);
    $1171 = ($1170|0)>(0);
    if ($1171) {
     _luaC_step($1149);
     $$0$i136 = $1150;$$pre$phiZ2D = $1154;
    } else {
     $$0$i136 = $1150;$$pre$phiZ2D = $1154;
    }
   } else {
    $1172 = ((($1163)) + 16|0);
    $1173 = load4($1172);
    $$pre = ((($1173)) + 4|0);
    $$0$i136 = $1173;$$pre$phiZ2D = $$pre;
   }
   $1174 = load4($1151);
   $1175 = ((($1174)) + -16|0);
   store4($1151,$1175);
   store4($1,$$0$i136);
   $1176 = load1($$pre$phiZ2D);
   $1177 = ($1176<<24>>24)==(4);
   if ($1177) {
    $1178 = ((($$0$i136)) + 6|0);
    $1179 = load1($1178);
    $1180 = ($1179<<24>>24)==(0);
    $1181 = $1179&255;
    $1182 = $1181 | 256;
    $spec$select = $1180 ? 292 : $1182;
    STACKTOP = sp;return ($spec$select|0);
   } else {
    $$2 = 292;
    STACKTOP = sp;return ($$2|0);
   }
   break;
  }
  case 408: {
   STACKTOP = sp;return ($$2|0);
   break;
  }
 }
 return (0)|0;
}
function _skip_sep($0) {
 $0 = $0|0;
 var $$0$lcssa = 0, $$026 = 0, $$lcssa = 0, $$pre$i = 0, $$pre$i18 = 0, $$pre$phi20$i22Z2D = 0, $$pre$phi20$iZ2D = 0, $$pre18$i = 0, $$pre18$i20 = 0, $$pre19$i = 0, $$pre19$i21 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = load4($0);
 $2 = ((($0)) + 60|0);
 $3 = load4($2);
 $4 = ((($3)) + 4|0);
 $5 = load4($4);
 $6 = (($5) + 1)|0;
 $7 = ((($3)) + 8|0);
 $8 = load4($7);
 $9 = ($6>>>0)>($8>>>0);
 do {
  if ($9) {
   $10 = ($8>>>0)>(2147483646);
   if ($10) {
    _lexerror($0,10795,0);
    // unreachable;
   } else {
    $11 = $8 << 1;
    $12 = ((($0)) + 52|0);
    $13 = load4($12);
    $14 = load4($3);
    $15 = (_luaM_realloc_($13,$14,$8,$11)|0);
    store4($3,$15);
    store4($7,$11);
    $$pre18$i = load4($4);
    $$pre19$i = (($$pre18$i) + 1)|0;
    $$pre$phi20$iZ2D = $$pre19$i;$18 = $15;$19 = $$pre18$i;
    break;
   }
  } else {
   $$pre$i = load4($3);
   $$pre$phi20$iZ2D = $6;$18 = $$pre$i;$19 = $5;
  }
 } while(0);
 $16 = $1&255;
 store4($4,$$pre$phi20$iZ2D);
 $17 = (($18) + ($19)|0);
 store1($17,$16);
 $20 = ((($0)) + 56|0);
 $21 = load4($20);
 $22 = load4($21);
 $23 = (($22) + -1)|0;
 store4($21,$23);
 $24 = ($22|0)==(0);
 if ($24) {
  $30 = (_luaZ_fill($21)|0);
  $31 = $30;
 } else {
  $25 = ((($21)) + 4|0);
  $26 = load4($25);
  $27 = ((($26)) + 1|0);
  store4($25,$27);
  $28 = load1($26);
  $29 = $28&255;
  $31 = $29;
 }
 store4($0,$31);
 $32 = ($31|0)==(61);
 if (!($32)) {
  $$0$lcssa = 0;$$lcssa = $31;
  $62 = ($$lcssa|0)!=($1|0);
  $63 = $62 << 31 >> 31;
  $64 = $$0$lcssa ^ $63;
  return ($64|0);
 }
 $33 = ((($0)) + 52|0);
 $$026 = 0;
 while(1) {
  $34 = load4($2);
  $35 = ((($34)) + 4|0);
  $36 = load4($35);
  $37 = (($36) + 1)|0;
  $38 = ((($34)) + 8|0);
  $39 = load4($38);
  $40 = ($37>>>0)>($39>>>0);
  if ($40) {
   $41 = ($39>>>0)>(2147483646);
   if ($41) {
    label = 14;
    break;
   }
   $42 = $39 << 1;
   $43 = load4($33);
   $44 = load4($34);
   $45 = (_luaM_realloc_($43,$44,$39,$42)|0);
   store4($34,$45);
   store4($38,$42);
   $$pre18$i20 = load4($35);
   $$pre19$i21 = (($$pre18$i20) + 1)|0;
   $$pre$phi20$i22Z2D = $$pre19$i21;$47 = $45;$48 = $$pre18$i20;
  } else {
   $$pre$i18 = load4($34);
   $$pre$phi20$i22Z2D = $37;$47 = $$pre$i18;$48 = $36;
  }
  store4($35,$$pre$phi20$i22Z2D);
  $46 = (($47) + ($48)|0);
  store1($46,61);
  $49 = load4($20);
  $50 = load4($49);
  $51 = (($50) + -1)|0;
  store4($49,$51);
  $52 = ($50|0)==(0);
  if ($52) {
   $58 = (_luaZ_fill($49)|0);
   $59 = $58;
  } else {
   $53 = ((($49)) + 4|0);
   $54 = load4($53);
   $55 = ((($54)) + 1|0);
   store4($53,$55);
   $56 = load1($54);
   $57 = $56&255;
   $59 = $57;
  }
  store4($0,$59);
  $60 = (($$026) + 1)|0;
  $61 = ($59|0)==(61);
  if ($61) {
   $$026 = $60;
  } else {
   $$0$lcssa = $60;$$lcssa = $59;
   label = 20;
   break;
  }
 }
 if ((label|0) == 14) {
  _lexerror($0,10795,0);
  // unreachable;
 }
 else if ((label|0) == 20) {
  $62 = ($$lcssa|0)!=($1|0);
  $63 = $62 << 31 >> 31;
  $64 = $$0$lcssa ^ $63;
  return ($64|0);
 }
 return (0)|0;
}
function _read_long_string($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $$be = 0, $$pre$i = 0, $$pre$i45 = 0, $$pre$i52 = 0, $$pre$i60 = 0, $$pre$phi20$i49Z2D = 0, $$pre$phi20$i56Z2D = 0, $$pre$phi20$i64Z2D = 0, $$pre$phi20$iZ2D = 0, $$pre18$i = 0, $$pre18$i47 = 0, $$pre18$i54 = 0, $$pre18$i62 = 0, $$pre19$i = 0, $$pre19$i48 = 0, $$pre19$i55 = 0, $$pre19$i63 = 0, $$pre67 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;
 var $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0;
 var $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0;
 var $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = ((($0)) + 4|0);
 $4 = load4($3);
 $5 = load4($0);
 $6 = ((($0)) + 60|0);
 $7 = load4($6);
 $8 = ((($7)) + 4|0);
 $9 = load4($8);
 $10 = (($9) + 1)|0;
 $11 = ((($7)) + 8|0);
 $12 = load4($11);
 $13 = ($10>>>0)>($12>>>0);
 do {
  if ($13) {
   $14 = ($12>>>0)>(2147483646);
   if ($14) {
    _lexerror($0,10795,0);
    // unreachable;
   } else {
    $15 = $12 << 1;
    $16 = ((($0)) + 52|0);
    $17 = load4($16);
    $18 = load4($7);
    $19 = (_luaM_realloc_($17,$18,$12,$15)|0);
    store4($7,$19);
    store4($11,$15);
    $$pre18$i = load4($8);
    $$pre19$i = (($$pre18$i) + 1)|0;
    $$pre$phi20$iZ2D = $$pre19$i;$22 = $19;$23 = $$pre18$i;
    break;
   }
  } else {
   $$pre$i = load4($7);
   $$pre$phi20$iZ2D = $10;$22 = $$pre$i;$23 = $9;
  }
 } while(0);
 $20 = $5&255;
 store4($8,$$pre$phi20$iZ2D);
 $21 = (($22) + ($23)|0);
 store1($21,$20);
 $24 = ((($0)) + 56|0);
 $25 = load4($24);
 $26 = load4($25);
 $27 = (($26) + -1)|0;
 store4($25,$27);
 $28 = ($26|0)==(0);
 if ($28) {
  $34 = (_luaZ_fill($25)|0);
  $35 = $34;
 } else {
  $29 = ((($25)) + 4|0);
  $30 = load4($29);
  $31 = ((($30)) + 1|0);
  store4($29,$31);
  $32 = load1($30);
  $33 = $32&255;
  $35 = $33;
 }
 store4($0,$35);
 switch ($35|0) {
 case 13: case 10:  {
  $36 = load4($24);
  $37 = load4($36);
  $38 = (($37) + -1)|0;
  store4($36,$38);
  $39 = ($37|0)==(0);
  if ($39) {
   $45 = (_luaZ_fill($36)|0);
   $46 = $45;
  } else {
   $40 = ((($36)) + 4|0);
   $41 = load4($40);
   $42 = ((($41)) + 1|0);
   store4($40,$42);
   $43 = load1($41);
   $44 = $43&255;
   $46 = $44;
  }
  store4($0,$46);
  switch ($46|0) {
  case 13: case 10:  {
   $47 = ($46|0)==($35|0);
   if ($47) {
    $216 = $35;
   } else {
    $48 = load4($24);
    $49 = load4($48);
    $50 = (($49) + -1)|0;
    store4($48,$50);
    $51 = ($49|0)==(0);
    if ($51) {
     $57 = (_luaZ_fill($48)|0);
     $58 = $57;
    } else {
     $52 = ((($48)) + 4|0);
     $53 = load4($52);
     $54 = ((($53)) + 1|0);
     store4($52,$54);
     $55 = load1($53);
     $56 = $55&255;
     $58 = $56;
    }
    store4($0,$58);
    $216 = $58;
   }
   break;
  }
  default: {
   $216 = $46;
  }
  }
  $59 = load4($3);
  $60 = (($59) + 1)|0;
  store4($3,$60);
  $61 = ($60|0)==(2147483647);
  if ($61) {
   _lexerror($0,10831,0);
   // unreachable;
  } else {
   $215 = $216;
  }
  break;
 }
 default: {
  $215 = $35;
 }
 }
 $62 = ($1|0)==(0|0);
 $63 = ((($0)) + 52|0);
 $64 = $215;
 L28: while(1) {
  L30: do {
   switch ($64|0) {
   case -1:  {
    label = 23;
    break L28;
    break;
   }
   case 93:  {
    $68 = (_skip_sep($0)|0);
    $69 = ($68|0)==($2|0);
    $70 = load4($0);
    if ($69) {
     label = 26;
     break L28;
    } else {
     $$be = $70;
    }
    break;
   }
   case 13: case 10:  {
    $98 = load4($6);
    $99 = ((($98)) + 4|0);
    $100 = load4($99);
    $101 = (($100) + 1)|0;
    $102 = ((($98)) + 8|0);
    $103 = load4($102);
    $104 = ($101>>>0)>($103>>>0);
    if ($104) {
     $105 = ($103>>>0)>(2147483646);
     if ($105) {
      label = 38;
      break L28;
     }
     $106 = $103 << 1;
     $107 = load4($63);
     $108 = load4($98);
     $109 = (_luaM_realloc_($107,$108,$103,$106)|0);
     store4($98,$109);
     store4($102,$106);
     $$pre18$i54 = load4($99);
     $$pre19$i55 = (($$pre18$i54) + 1)|0;
     $$pre$phi20$i56Z2D = $$pre19$i55;$111 = $109;$112 = $$pre18$i54;
    } else {
     $$pre$i52 = load4($98);
     $$pre$phi20$i56Z2D = $101;$111 = $$pre$i52;$112 = $100;
    }
    store4($99,$$pre$phi20$i56Z2D);
    $110 = (($111) + ($112)|0);
    store1($110,10);
    $113 = load4($0);
    $114 = load4($24);
    $115 = load4($114);
    $116 = (($115) + -1)|0;
    store4($114,$116);
    $117 = ($115|0)==(0);
    if ($117) {
     $123 = (_luaZ_fill($114)|0);
     $124 = $123;
    } else {
     $118 = ((($114)) + 4|0);
     $119 = load4($118);
     $120 = ((($119)) + 1|0);
     store4($118,$120);
     $121 = load1($119);
     $122 = $121&255;
     $124 = $122;
    }
    store4($0,$124);
    switch ($124|0) {
    case 13: case 10:  {
     $125 = ($124|0)==($113|0);
     if ($125) {
      $$pre67 = $113;
     } else {
      $126 = load4($24);
      $127 = load4($126);
      $128 = (($127) + -1)|0;
      store4($126,$128);
      $129 = ($127|0)==(0);
      if ($129) {
       $135 = (_luaZ_fill($126)|0);
       $136 = $135;
      } else {
       $130 = ((($126)) + 4|0);
       $131 = load4($130);
       $132 = ((($131)) + 1|0);
       store4($130,$132);
       $133 = load1($131);
       $134 = $133&255;
       $136 = $134;
      }
      store4($0,$136);
      $$pre67 = $136;
     }
     break;
    }
    default: {
     $$pre67 = $124;
    }
    }
    $137 = load4($3);
    $138 = (($137) + 1)|0;
    store4($3,$138);
    $139 = ($138|0)==(2147483647);
    if ($139) {
     label = 50;
     break L28;
    }
    if ($62) {
     $140 = load4($6);
     $141 = ((($140)) + 4|0);
     store4($141,0);
     $$be = $$pre67;
    } else {
     $$be = $$pre67;
    }
    break;
   }
   default: {
    if ($62) {
     $169 = load4($24);
     $170 = load4($169);
     $171 = (($170) + -1)|0;
     store4($169,$171);
     $172 = ($170|0)==(0);
     if ($172) {
      $178 = (_luaZ_fill($169)|0);
      $179 = $178;
     } else {
      $173 = ((($169)) + 4|0);
      $174 = load4($173);
      $175 = ((($174)) + 1|0);
      store4($173,$175);
      $176 = load1($174);
      $177 = $176&255;
      $179 = $177;
     }
     store4($0,$179);
     $$be = $179;
     break L30;
    }
    $142 = load4($6);
    $143 = ((($142)) + 4|0);
    $144 = load4($143);
    $145 = (($144) + 1)|0;
    $146 = ((($142)) + 8|0);
    $147 = load4($146);
    $148 = ($145>>>0)>($147>>>0);
    if ($148) {
     $149 = ($147>>>0)>(2147483646);
     if ($149) {
      label = 57;
      break L28;
     }
     $150 = $147 << 1;
     $151 = load4($63);
     $152 = load4($142);
     $153 = (_luaM_realloc_($151,$152,$147,$150)|0);
     store4($142,$153);
     store4($146,$150);
     $$pre18$i62 = load4($143);
     $$pre19$i63 = (($$pre18$i62) + 1)|0;
     $$pre$phi20$i64Z2D = $$pre19$i63;$156 = $153;$157 = $$pre18$i62;
    } else {
     $$pre$i60 = load4($142);
     $$pre$phi20$i64Z2D = $145;$156 = $$pre$i60;$157 = $144;
    }
    $154 = $64&255;
    store4($143,$$pre$phi20$i64Z2D);
    $155 = (($156) + ($157)|0);
    store1($155,$154);
    $158 = load4($24);
    $159 = load4($158);
    $160 = (($159) + -1)|0;
    store4($158,$160);
    $161 = ($159|0)==(0);
    if ($161) {
     $167 = (_luaZ_fill($158)|0);
     $168 = $167;
    } else {
     $162 = ((($158)) + 4|0);
     $163 = load4($162);
     $164 = ((($163)) + 1|0);
     store4($162,$164);
     $165 = load1($163);
     $166 = $165&255;
     $168 = $166;
    }
    store4($0,$168);
    $$be = $168;
   }
   }
  } while(0);
  $64 = $$be;
 }
 if ((label|0) == 23) {
  $65 = $62 ? 11049 : 11057;
  $66 = load4($63);
  store4($vararg_buffer,$65);
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  store4($vararg_ptr1,$4);
  $67 = (_luaO_pushfstring($66,11064,$vararg_buffer)|0);
  _lexerror($0,$67,289);
  // unreachable;
 }
 else if ((label|0) == 26) {
  $71 = load4($6);
  $72 = ((($71)) + 4|0);
  $73 = load4($72);
  $74 = (($73) + 1)|0;
  $75 = ((($71)) + 8|0);
  $76 = load4($75);
  $77 = ($74>>>0)>($76>>>0);
  do {
   if ($77) {
    $78 = ($76>>>0)>(2147483646);
    if ($78) {
     _lexerror($0,10795,0);
     // unreachable;
    } else {
     $79 = $76 << 1;
     $80 = load4($63);
     $81 = load4($71);
     $82 = (_luaM_realloc_($80,$81,$76,$79)|0);
     store4($71,$82);
     store4($75,$79);
     $$pre18$i47 = load4($72);
     $$pre19$i48 = (($$pre18$i47) + 1)|0;
     $$pre$phi20$i49Z2D = $$pre19$i48;$85 = $82;$86 = $$pre18$i47;
     break;
    }
   } else {
    $$pre$i45 = load4($71);
    $$pre$phi20$i49Z2D = $74;$85 = $$pre$i45;$86 = $73;
   }
  } while(0);
  $83 = $70&255;
  store4($72,$$pre$phi20$i49Z2D);
  $84 = (($85) + ($86)|0);
  store1($84,$83);
  $87 = load4($24);
  $88 = load4($87);
  $89 = (($88) + -1)|0;
  store4($87,$89);
  $90 = ($88|0)==(0);
  if ($90) {
   $96 = (_luaZ_fill($87)|0);
   $97 = $96;
  } else {
   $91 = ((($87)) + 4|0);
   $92 = load4($91);
   $93 = ((($92)) + 1|0);
   store4($91,$93);
   $94 = load1($92);
   $95 = $94&255;
   $97 = $95;
  }
  store4($0,$97);
  if ($62) {
   STACKTOP = sp;return;
  }
  $180 = load4($6);
  $181 = load4($180);
  $182 = (($2) + 2)|0;
  $183 = (($181) + ($182)|0);
  $184 = ((($180)) + 4|0);
  $185 = load4($184);
  $186 = $182 << 1;
  $187 = (($185) - ($186))|0;
  $188 = load4($63);
  $189 = (_luaS_newlstr($188,$183,$187)|0);
  $190 = ((($188)) + 12|0);
  $191 = load4($190);
  $192 = ((($191)) + 16|0);
  store4($190,$192);
  store4($191,$189);
  $193 = ((($189)) + 4|0);
  $194 = load1($193);
  $195 = $194 | 64;
  $196 = $195&255;
  $197 = ((($191)) + 8|0);
  store4($197,$196);
  $198 = ((($0)) + 64|0);
  $199 = load4($198);
  $200 = load4($190);
  $201 = ((($200)) + -16|0);
  $202 = (_luaH_set($188,$199,$201)|0);
  $203 = ((($202)) + 8|0);
  $204 = load4($203);
  $205 = ($204|0)==(0);
  if ($205) {
   store4($202,1);
   store4($203,1);
   $206 = ((($188)) + 16|0);
   $207 = load4($206);
   $208 = ((($207)) + 12|0);
   $209 = load4($208);
   $210 = ($209|0)>(0);
   if ($210) {
    _luaC_step($188);
    $$0$i = $189;
   } else {
    $$0$i = $189;
   }
  } else {
   $211 = ((($202)) + 16|0);
   $212 = load4($211);
   $$0$i = $212;
  }
  $213 = load4($190);
  $214 = ((($213)) + -16|0);
  store4($190,$214);
  store4($1,$$0$i);
  STACKTOP = sp;return;
 }
 else if ((label|0) == 38) {
  _lexerror($0,10795,0);
  // unreachable;
 }
 else if ((label|0) == 50) {
  _lexerror($0,10831,0);
  // unreachable;
 }
 else if ((label|0) == 57) {
  _lexerror($0,10795,0);
  // unreachable;
 }
}
function _read_numeral($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$029 = 0, $$pr = 0, $$pre$i = 0, $$pre$i35 = 0, $$pre$i42 = 0, $$pre$i49 = 0, $$pre$i56 = 0, $$pre$i63 = 0, $$pre$i70 = 0, $$pre$phi20$i39Z2D = 0, $$pre$phi20$i46Z2D = 0, $$pre$phi20$i53Z2D = 0, $$pre$phi20$i60Z2D = 0, $$pre$phi20$i67Z2D = 0, $$pre$phi20$i74Z2D = 0, $$pre$phi20$iZ2D = 0, $$pre18$i = 0, $$pre18$i37 = 0, $$pre18$i44 = 0;
 var $$pre18$i51 = 0, $$pre18$i58 = 0, $$pre18$i65 = 0, $$pre18$i72 = 0, $$pre19$i = 0, $$pre19$i38 = 0, $$pre19$i45 = 0, $$pre19$i52 = 0, $$pre19$i59 = 0, $$pre19$i66 = 0, $$pre19$i73 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0;
 var $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = i64();
 var $199 = 0.0, $2 = 0, $20 = 0, $200 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = load4($0);
 $4 = ((($0)) + 60|0);
 $5 = load4($4);
 $6 = ((($5)) + 4|0);
 $7 = load4($6);
 $8 = (($7) + 1)|0;
 $9 = ((($5)) + 8|0);
 $10 = load4($9);
 $11 = ($8>>>0)>($10>>>0);
 do {
  if ($11) {
   $12 = ($10>>>0)>(2147483646);
   if ($12) {
    _lexerror($0,10795,0);
    // unreachable;
   } else {
    $13 = $10 << 1;
    $14 = ((($0)) + 52|0);
    $15 = load4($14);
    $16 = load4($5);
    $17 = (_luaM_realloc_($15,$16,$10,$13)|0);
    store4($5,$17);
    store4($9,$13);
    $$pre18$i = load4($6);
    $$pre19$i = (($$pre18$i) + 1)|0;
    $$pre$phi20$iZ2D = $$pre19$i;$20 = $17;$21 = $$pre18$i;
    break;
   }
  } else {
   $$pre$i = load4($5);
   $$pre$phi20$iZ2D = $8;$20 = $$pre$i;$21 = $7;
  }
 } while(0);
 $18 = $3&255;
 store4($6,$$pre$phi20$iZ2D);
 $19 = (($20) + ($21)|0);
 store1($19,$18);
 $22 = ((($0)) + 56|0);
 $23 = load4($22);
 $24 = load4($23);
 $25 = (($24) + -1)|0;
 store4($23,$25);
 $26 = ($24|0)==(0);
 if ($26) {
  $32 = (_luaZ_fill($23)|0);
  $33 = $32;
 } else {
  $27 = ((($23)) + 4|0);
  $28 = load4($27);
  $29 = ((($28)) + 1|0);
  store4($27,$29);
  $30 = load1($28);
  $31 = $30&255;
  $33 = $31;
 }
 store4($0,$33);
 $34 = ($3|0)==(48);
 L12: do {
  if ($34) {
   switch ($33|0) {
   case 88: case 120:  {
    break;
   }
   default: {
    $$029 = 11026;$200 = $33;
    break L12;
   }
   }
   $35 = load4($4);
   $36 = ((($35)) + 4|0);
   $37 = load4($36);
   $38 = (($37) + 1)|0;
   $39 = ((($35)) + 8|0);
   $40 = load4($39);
   $41 = ($38>>>0)>($40>>>0);
   do {
    if ($41) {
     $42 = ($40>>>0)>(2147483646);
     if ($42) {
      _lexerror($0,10795,0);
      // unreachable;
     } else {
      $43 = $40 << 1;
      $44 = ((($0)) + 52|0);
      $45 = load4($44);
      $46 = load4($35);
      $47 = (_luaM_realloc_($45,$46,$40,$43)|0);
      store4($35,$47);
      store4($39,$43);
      $$pre18$i58 = load4($36);
      $$pre19$i59 = (($$pre18$i58) + 1)|0;
      $$pre$phi20$i60Z2D = $$pre19$i59;$50 = $47;$51 = $$pre18$i58;
      break;
     }
    } else {
     $$pre$i56 = load4($35);
     $$pre$phi20$i60Z2D = $38;$50 = $$pre$i56;$51 = $37;
    }
   } while(0);
   $48 = $33&255;
   store4($36,$$pre$phi20$i60Z2D);
   $49 = (($50) + ($51)|0);
   store1($49,$48);
   $52 = load4($22);
   $53 = load4($52);
   $54 = (($53) + -1)|0;
   store4($52,$54);
   $55 = ($53|0)==(0);
   if ($55) {
    $61 = (_luaZ_fill($52)|0);
    $62 = $61;
   } else {
    $56 = ((($52)) + 4|0);
    $57 = load4($56);
    $58 = ((($57)) + 1|0);
    store4($56,$58);
    $59 = load1($57);
    $60 = $59&255;
    $62 = $60;
   }
   store4($0,$62);
   $$029 = 11029;$200 = $62;
  } else {
   $$029 = 11026;$200 = $33;
  }
 } while(0);
 $63 = ((($$029)) + 1|0);
 $64 = ((($0)) + 52|0);
 $$pr = $200;
 L27: while(1) {
  $65 = load1($$029);
  $66 = $65 << 24 >> 24;
  $67 = ($$pr|0)==($66|0);
  if ($67) {
   label = 23;
  } else {
   $68 = load1($63);
   $69 = $68 << 24 >> 24;
   $70 = ($$pr|0)==($69|0);
   if ($70) {
    label = 23;
   } else {
    $126 = $$pr;
   }
  }
  L31: do {
   if ((label|0) == 23) {
    label = 0;
    $71 = load4($4);
    $72 = ((($71)) + 4|0);
    $73 = load4($72);
    $74 = (($73) + 1)|0;
    $75 = ((($71)) + 8|0);
    $76 = load4($75);
    $77 = ($74>>>0)>($76>>>0);
    if ($77) {
     $78 = ($76>>>0)>(2147483646);
     if ($78) {
      label = 26;
      break L27;
     }
     $79 = $76 << 1;
     $80 = load4($64);
     $81 = load4($71);
     $82 = (_luaM_realloc_($80,$81,$76,$79)|0);
     store4($71,$82);
     store4($75,$79);
     $$pre18$i65 = load4($72);
     $$pre19$i66 = (($$pre18$i65) + 1)|0;
     $$pre$phi20$i67Z2D = $$pre19$i66;$85 = $82;$86 = $$pre18$i65;
    } else {
     $$pre$i63 = load4($71);
     $$pre$phi20$i67Z2D = $74;$85 = $$pre$i63;$86 = $73;
    }
    $83 = $$pr&255;
    store4($72,$$pre$phi20$i67Z2D);
    $84 = (($85) + ($86)|0);
    store1($84,$83);
    $87 = load4($22);
    $88 = load4($87);
    $89 = (($88) + -1)|0;
    store4($87,$89);
    $90 = ($88|0)==(0);
    if ($90) {
     $96 = (_luaZ_fill($87)|0);
     $97 = $96;
    } else {
     $91 = ((($87)) + 4|0);
     $92 = load4($91);
     $93 = ((($92)) + 1|0);
     store4($91,$93);
     $94 = load1($92);
     $95 = $94&255;
     $97 = $95;
    }
    store4($0,$97);
    switch ($97|0) {
    case 43: case 45:  {
     break;
    }
    default: {
     $126 = $97;
     break L31;
    }
    }
    $98 = load4($4);
    $99 = ((($98)) + 4|0);
    $100 = load4($99);
    $101 = (($100) + 1)|0;
    $102 = ((($98)) + 8|0);
    $103 = load4($102);
    $104 = ($101>>>0)>($103>>>0);
    if ($104) {
     $105 = ($103>>>0)>(2147483646);
     if ($105) {
      label = 35;
      break L27;
     }
     $106 = $103 << 1;
     $107 = load4($64);
     $108 = load4($98);
     $109 = (_luaM_realloc_($107,$108,$103,$106)|0);
     store4($98,$109);
     store4($102,$106);
     $$pre18$i72 = load4($99);
     $$pre19$i73 = (($$pre18$i72) + 1)|0;
     $$pre$phi20$i74Z2D = $$pre19$i73;$112 = $109;$113 = $$pre18$i72;
    } else {
     $$pre$i70 = load4($98);
     $$pre$phi20$i74Z2D = $101;$112 = $$pre$i70;$113 = $100;
    }
    $110 = $97&255;
    store4($99,$$pre$phi20$i74Z2D);
    $111 = (($112) + ($113)|0);
    store1($111,$110);
    $114 = load4($22);
    $115 = load4($114);
    $116 = (($115) + -1)|0;
    store4($114,$116);
    $117 = ($115|0)==(0);
    if ($117) {
     $123 = (_luaZ_fill($114)|0);
     $124 = $123;
    } else {
     $118 = ((($114)) + 4|0);
     $119 = load4($118);
     $120 = ((($119)) + 1|0);
     store4($118,$120);
     $121 = load1($119);
     $122 = $121&255;
     $124 = $122;
    }
    store4($0,$124);
    $126 = $124;
   }
  } while(0);
  $125 = (($126) + 1)|0;
  $127 = (1520 + ($125)|0);
  $128 = load1($127);
  $129 = $128 & 16;
  $130 = ($129<<24>>24)==(0);
  do {
   if ($130) {
    $157 = ($126|0)==(46);
    $158 = load4($4);
    $159 = ((($158)) + 4|0);
    $160 = load4($159);
    $161 = (($160) + 1)|0;
    $162 = ((($158)) + 8|0);
    $163 = load4($162);
    $164 = ($161>>>0)>($163>>>0);
    if (!($157)) {
     label = 60;
     break L27;
    }
    if ($164) {
     $165 = ($163>>>0)>(2147483646);
     if ($165) {
      label = 54;
      break L27;
     }
     $166 = $163 << 1;
     $167 = load4($64);
     $168 = load4($158);
     $169 = (_luaM_realloc_($167,$168,$163,$166)|0);
     store4($158,$169);
     store4($162,$166);
     $$pre18$i44 = load4($159);
     $$pre19$i45 = (($$pre18$i44) + 1)|0;
     $$pre$phi20$i46Z2D = $$pre19$i45;$171 = $169;$172 = $$pre18$i44;
    } else {
     $$pre$i42 = load4($158);
     $$pre$phi20$i46Z2D = $161;$171 = $$pre$i42;$172 = $160;
    }
    store4($159,$$pre$phi20$i46Z2D);
    $170 = (($171) + ($172)|0);
    store1($170,46);
    $173 = load4($22);
    $174 = load4($173);
    $175 = (($174) + -1)|0;
    store4($173,$175);
    $176 = ($174|0)==(0);
    if ($176) {
     $182 = (_luaZ_fill($173)|0);
     $storemerge = $182;
     break;
    } else {
     $177 = ((($173)) + 4|0);
     $178 = load4($177);
     $179 = ((($178)) + 1|0);
     store4($177,$179);
     $180 = load1($178);
     $181 = $180&255;
     $storemerge = $181;
     break;
    }
   } else {
    $131 = load4($4);
    $132 = ((($131)) + 4|0);
    $133 = load4($132);
    $134 = (($133) + 1)|0;
    $135 = ((($131)) + 8|0);
    $136 = load4($135);
    $137 = ($134>>>0)>($136>>>0);
    if ($137) {
     $138 = ($136>>>0)>(2147483646);
     if ($138) {
      label = 45;
      break L27;
     }
     $139 = $136 << 1;
     $140 = load4($64);
     $141 = load4($131);
     $142 = (_luaM_realloc_($140,$141,$136,$139)|0);
     store4($131,$142);
     store4($135,$139);
     $$pre18$i37 = load4($132);
     $$pre19$i38 = (($$pre18$i37) + 1)|0;
     $$pre$phi20$i39Z2D = $$pre19$i38;$145 = $142;$146 = $$pre18$i37;
    } else {
     $$pre$i35 = load4($131);
     $$pre$phi20$i39Z2D = $134;$145 = $$pre$i35;$146 = $133;
    }
    $143 = $126&255;
    store4($132,$$pre$phi20$i39Z2D);
    $144 = (($145) + ($146)|0);
    store1($144,$143);
    $147 = load4($22);
    $148 = load4($147);
    $149 = (($148) + -1)|0;
    store4($147,$149);
    $150 = ($148|0)==(0);
    if ($150) {
     $156 = (_luaZ_fill($147)|0);
     $storemerge = $156;
     break;
    } else {
     $151 = ((($147)) + 4|0);
     $152 = load4($151);
     $153 = ((($152)) + 1|0);
     store4($151,$153);
     $154 = load1($152);
     $155 = $154&255;
     $storemerge = $155;
     break;
    }
   }
  } while(0);
  store4($0,$storemerge);
  $$pr = $storemerge;
 }
 if ((label|0) == 26) {
  _lexerror($0,10795,0);
  // unreachable;
 }
 else if ((label|0) == 35) {
  _lexerror($0,10795,0);
  // unreachable;
 }
 else if ((label|0) == 45) {
  _lexerror($0,10795,0);
  // unreachable;
 }
 else if ((label|0) == 54) {
  _lexerror($0,10795,0);
  // unreachable;
 }
 else if ((label|0) == 60) {
  do {
   if ($164) {
    $183 = ($163>>>0)>(2147483646);
    if ($183) {
     _lexerror($0,10795,0);
     // unreachable;
    } else {
     $184 = $163 << 1;
     $185 = load4($64);
     $186 = load4($158);
     $187 = (_luaM_realloc_($185,$186,$163,$184)|0);
     store4($158,$187);
     store4($162,$184);
     $$pre18$i51 = load4($159);
     $$pre19$i52 = (($$pre18$i51) + 1)|0;
     $$pre$phi20$i53Z2D = $$pre19$i52;$189 = $187;$190 = $$pre18$i51;
     break;
    }
   } else {
    $$pre$i49 = load4($158);
    $$pre$phi20$i53Z2D = $161;$189 = $$pre$i49;$190 = $160;
   }
  } while(0);
  store4($159,$$pre$phi20$i53Z2D);
  $188 = (($189) + ($190)|0);
  store1($188,0);
  $191 = load4($4);
  $192 = load4($191);
  $193 = (_luaO_str2num($192,$2)|0);
  $194 = ($193|0)==(0);
  if ($194) {
   _lexerror($0,11032,290);
   // unreachable;
  }
  $195 = ((($2)) + 8|0);
  $196 = load4($195);
  $197 = ($196|0)==(19);
  if ($197) {
   $198 = load8($2);
   store8($1,$198);
   $$0 = 291;
   STACKTOP = sp;return ($$0|0);
  } else {
   $199 = loadd($2);
   stored($1,$199);
   $$0 = 290;
   STACKTOP = sp;return ($$0|0);
  }
 }
 return (0)|0;
}
function _luaX_lookahead($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 40|0);
 $2 = (_llex($0,$1)|0);
 $3 = ((($0)) + 32|0);
 store4($3,$2);
 return ($2|0);
}
function _luaopen_base($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (_lua_rawgeti($0,-1001000,i64_const(2,0))|0);
 _luaL_setfuncs($0,1952,0);
 _lua_pushvalue($0,-1);
 _lua_setfield($0,-2,11105);
 (_lua_pushstring($0,11108)|0);
 _lua_setfield($0,-2,11116);
 return 1;
}
function _luaB_assert($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_toboolean($0,1)|0);
 $2 = ($1|0)==(0);
 if ($2) {
  _luaL_checkany($0,1);
  _lua_rotate($0,1,-1);
  _lua_settop($0,-2);
  (_lua_pushstring($0,11573)|0);
  _lua_settop($0,1);
  $4 = (_luaB_error($0)|0);
  $$0 = $4;
  return ($$0|0);
 } else {
  $3 = (_lua_gettop($0)|0);
  $$0 = $3;
  return ($$0|0);
 }
 return (0)|0;
}
function _luaB_collectgarbage($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0.0, $11 = 0.0, $12 = i64(), $2 = 0, $3 = 0, $4 = i64(), $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_luaL_checkoption($0,1,11517,2160)|0);
 $2 = (2208 + ($1<<2)|0);
 $3 = load4($2);
 $4 = (i64(_luaL_optinteger($0,2,i64_const(0,0))));
 $5 = i64_trunc($4);
 $6 = (_lua_gc($0,$3,$5)|0);
 switch ($3|0) {
 case 3:  {
  $7 = (_lua_gc($0,4,0)|0);
  $8 = (+($6|0));
  $9 = (+($7|0));
  $10 = $9 * 9.765625E-4;
  $11 = $10 + $8;
  _lua_pushnumber($0,$11);
  return 1;
  break;
 }
 case 9: case 5:  {
  _lua_pushboolean($0,$6);
  return 1;
  break;
 }
 default: {
  $12 = i64_sext($6);
  _lua_pushinteger($0,$12);
  return 1;
 }
 }
 return (0)|0;
}
function _luaB_dofile($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_luaL_optlstring($0,1,0,0)|0);
 _lua_settop($0,1);
 $2 = (_luaL_loadfilex($0,$1,0)|0);
 $3 = ($2|0)==(0);
 if ($3) {
  _lua_callk($0,0,-1,0,7);
  $4 = (_lua_gettop($0)|0);
  $5 = (($4) + -1)|0;
  return ($5|0);
 } else {
  (_lua_error($0)|0);
  // unreachable;
 }
 return (0)|0;
}
function _luaB_error($0) {
 $0 = $0|0;
 var $1 = i64(), $2 = 0, $3 = 0, $4 = 0, $5 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (i64(_luaL_optinteger($0,2,i64_const(1,0))));
 $2 = i64_trunc($1);
 _lua_settop($0,1);
 $3 = (_lua_type($0,1)|0);
 $4 = ($3|0)==(4);
 $5 = ($2|0)>(0);
 $or$cond = $5 & $4;
 if (!($or$cond)) {
  (_lua_error($0)|0);
  // unreachable;
 }
 _luaL_where($0,$2);
 _lua_pushvalue($0,1);
 _lua_concat($0,2);
 (_lua_error($0)|0);
 // unreachable;
 return (0)|0;
}
function _luaB_getmetatable($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checkany($0,1);
 $1 = (_lua_getmetatable($0,1)|0);
 $2 = ($1|0)==(0);
 if ($2) {
  _lua_pushnil($0);
  return 1;
 } else {
  (_luaL_getmetafield($0,1,11291)|0);
  return 1;
 }
 return (0)|0;
}
function _luaB_ipairs($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _pairsmeta($0,11508,1,165);
 return 3;
}
function _luaB_loadfile($0) {
 $0 = $0|0;
 var $$0$i = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_luaL_optlstring($0,1,0,0)|0);
 $2 = (_luaL_optlstring($0,2,0,0)|0);
 $3 = (_lua_type($0,3)|0);
 $4 = ($3|0)==(-1);
 $5 = $4 ? 0 : 3;
 $6 = (_luaL_loadfilex($0,$1,$2)|0);
 $7 = ($6|0)==(0);
 if (!($7)) {
  _lua_pushnil($0);
  _lua_rotate($0,-2,1);
  $$0$i = 2;
  return ($$0$i|0);
 }
 if ($4) {
  $$0$i = 1;
  return ($$0$i|0);
 }
 _lua_pushvalue($0,$5);
 $8 = (_lua_setupvalue($0,-2,1)|0);
 $9 = ($8|0)==(0|0);
 if (!($9)) {
  $$0$i = 1;
  return ($$0$i|0);
 }
 _lua_settop($0,-2);
 $$0$i = 1;
 return ($$0$i|0);
}
function _luaB_load($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = (_lua_tolstring($0,1,$1)|0);
 $3 = (_luaL_optlstring($0,3,11434,0)|0);
 $4 = (_lua_type($0,4)|0);
 $5 = ($4|0)==(-1);
 $6 = $5 ? 0 : 4;
 $7 = ($2|0)==(0|0);
 if ($7) {
  $11 = (_luaL_optlstring($0,2,11437,0)|0);
  _luaL_checktype($0,1,6);
  _lua_settop($0,5);
  $12 = (_lua_load($0,8,0,$11,$3)|0);
  $$0 = $12;
 } else {
  $8 = (_luaL_optlstring($0,2,$2,0)|0);
  $9 = load4($1);
  $10 = (_luaL_loadbufferx($0,$2,$9,$8,$3)|0);
  $$0 = $10;
 }
 $13 = ($$0|0)==(0);
 if (!($13)) {
  _lua_pushnil($0);
  _lua_rotate($0,-2,1);
  $$0$i = 2;
  STACKTOP = sp;return ($$0$i|0);
 }
 if ($5) {
  $$0$i = 1;
  STACKTOP = sp;return ($$0$i|0);
 }
 _lua_pushvalue($0,$6);
 $14 = (_lua_setupvalue($0,-2,1)|0);
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  $$0$i = 1;
  STACKTOP = sp;return ($$0$i|0);
 }
 _lua_settop($0,-2);
 $$0$i = 1;
 STACKTOP = sp;return ($$0$i|0);
}
function _luaB_next($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checktype($0,1,5);
 _lua_settop($0,2);
 $1 = (_lua_next($0,1)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $$0 = 2;
  return ($$0|0);
 }
 _lua_pushnil($0);
 $$0 = 1;
 return ($$0|0);
}
function _luaB_pairs($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _pairsmeta($0,11426,0,9);
 return 3;
}
function _luaB_pcall($0) {
 $0 = $0|0;
 var $$0$i = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checkany($0,1);
 _lua_pushboolean($0,1);
 _lua_rotate($0,1,1);
 $1 = (_lua_gettop($0)|0);
 $2 = (($1) + -2)|0;
 $3 = (_lua_pcallk($0,$2,-1,0,0,9)|0);
 $4 = ($3>>>0)>(1);
 if ($4) {
  _lua_pushboolean($0,0);
  _lua_pushvalue($0,-2);
  $$0$i = 2;
  return ($$0$i|0);
 } else {
  $5 = (_lua_gettop($0)|0);
  $$0$i = $5;
  return ($$0$i|0);
 }
 return (0)|0;
}
function _luaB_print($0) {
 $0 = $0|0;
 var $$02227 = 0, $$2 = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = sp + 4|0;
 $2 = (_lua_gettop($0)|0);
 (_lua_getglobal($0,11250)|0);
 $3 = ($2|0)<(1);
 L1: do {
  if ($3) {
   $$pre = load4(7372);
   $12 = $$pre;
  } else {
   $4 = load4(7372);
   $$02227 = 1;
   while(1) {
    _lua_pushvalue($0,-1);
    _lua_pushvalue($0,$$02227);
    _lua_callk($0,1,1,0,0);
    $5 = (_lua_tolstring($0,-1,$1)|0);
    $6 = ($5|0)==(0|0);
    if ($6) {
     break;
    }
    $7 = ($$02227>>>0)>(1);
    if ($7) {
     (_fputc(9,$4)|0);
    }
    $9 = load4($1);
    (_fwrite($5,1,$9,$4)|0);
    _lua_settop($0,-2);
    $10 = (($$02227) + 1)|0;
    $11 = ($$02227|0)<($2|0);
    if ($11) {
     $$02227 = $10;
    } else {
     $12 = $4;
     break L1;
    }
   }
   $8 = (_luaL_error($0,11383,$vararg_buffer)|0);
   $$2 = $8;
   STACKTOP = sp;return ($$2|0);
  }
 } while(0);
 (_fputc(10,$12)|0);
 (_fflush($12)|0);
 $$2 = 0;
 STACKTOP = sp;return ($$2|0);
}
function _luaB_rawequal($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checkany($0,1);
 _luaL_checkany($0,2);
 $1 = (_lua_rawequal($0,1,2)|0);
 _lua_pushboolean($0,$1);
 return 1;
}
function _luaB_rawlen($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_type($0,1)|0);
 $2 = $1 | 1;
 $3 = ($2|0)==(5);
 if (!($3)) {
  (_luaL_argerror($0,1,11358)|0);
 }
 $4 = (_lua_rawlen($0,1)|0);
 $5 = i64_zext($4>>>0);
 _lua_pushinteger($0,$5);
 return 1;
}
function _luaB_rawget($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checktype($0,1,5);
 _luaL_checkany($0,2);
 _lua_settop($0,2);
 (_lua_rawget($0,1)|0);
 return 1;
}
function _luaB_rawset($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checktype($0,1,5);
 _luaL_checkany($0,2);
 _luaL_checkany($0,3);
 _lua_settop($0,3);
 _lua_rawset($0,1);
 return 1;
}
function _luaB_select($0) {
 $0 = $0|0;
 var $$0 = i64(), $$019 = 0, $1 = 0, $10 = 0, $11 = i64(), $12 = i64(), $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = i64(), $9 = i64(), $spec$select = i64(), label = 0;
 var sp = 0;
 sp = STACKTOP;
 $1 = (_lua_gettop($0)|0);
 $2 = (_lua_type($0,1)|0);
 $3 = ($2|0)==(4);
 if ($3) {
  $4 = (_lua_tolstring($0,1,0)|0);
  $5 = load1($4);
  $6 = ($5<<24>>24)==(35);
  if ($6) {
   $7 = (($1) + -1)|0;
   $8 = i64_sext($7);
   _lua_pushinteger($0,$8);
   $$019 = 1;
   return ($$019|0);
  }
 }
 $9 = (i64(_luaL_checkinteger($0,1)));
 $10 = i64_slt($9,i64_const(0,0));
 $11 = i64_sext($1);
 $12 = i64_add($9,$11);
 $13 = i64_sgt($9,$11);
 $spec$select = $13 ? $11 : $9;
 $$0 = $10 ? $12 : $spec$select;
 $14 = i64_sgt($$0,i64_const(0,0));
 if (!($14)) {
  (_luaL_argerror($0,1,11339)|0);
 }
 $15 = i64_trunc($$0);
 $16 = (($1) - ($15))|0;
 $$019 = $16;
 return ($$019|0);
}
function _luaB_setmetatable($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = (_lua_type($0,2)|0);
 _luaL_checktype($0,1,5);
 switch ($1|0) {
 case 0: case 5:  {
  break;
 }
 default: {
  (_luaL_argerror($0,2,12094)|0);
 }
 }
 $2 = (_luaL_getmetafield($0,1,11291)|0);
 $3 = ($2|0)==(0);
 if ($3) {
  _lua_settop($0,2);
  (_lua_setmetatable($0,1)|0);
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 } else {
  $4 = (_luaL_error($0,11303,$vararg_buffer)|0);
  $$0 = $4;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _luaB_tonumber($0) {
 $0 = $0|0;
 var $$0 = i64(), $$028$i = 0, $$029$i = i64(), $$031$i = 0, $$132$i = 0, $$2$i = 0, $$off = i64(), $1 = 0, $10 = 0, $11 = 0, $12 = i64(), $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = i64(), $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = i64(), $35 = i64(), $36 = i64(), $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = i64(), $46 = i64(), $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isdigit$i = 0, $isdigittmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = (_lua_type($0,2)|0);
 $3 = ($2|0)<(1);
 do {
  if ($3) {
   _luaL_checkany($0,1);
   $4 = (_lua_type($0,1)|0);
   $5 = ($4|0)==(3);
   if ($5) {
    _lua_settop($0,1);
    STACKTOP = sp;return 1;
   }
   $6 = (_lua_tolstring($0,1,$1)|0);
   $7 = ($6|0)==(0|0);
   if (!($7)) {
    $8 = (_lua_stringtonumber($0,$6)|0);
    $9 = load4($1);
    $10 = (($9) + 1)|0;
    $11 = ($8|0)==($10|0);
    if ($11) {
     STACKTOP = sp;return 1;
    }
   }
  } else {
   $12 = (i64(_luaL_checkinteger($0,2)));
   _luaL_checktype($0,1,4);
   $13 = (_lua_tolstring($0,1,$1)|0);
   $$off = i64_add($12,i64_const(4294967294,4294967295));
   $14 = i64_ult($$off,i64_const(35,0));
   if (!($14)) {
    (_luaL_argerror($0,2,11266)|0);
   }
   $15 = i64_trunc($12);
   $16 = (_strspn($13,11284)|0);
   $17 = (($13) + ($16)|0);
   $18 = load1($17);
   switch ($18<<24>>24) {
   case 45:  {
    $19 = ((($17)) + 1|0);
    $$028$i = 1;$$031$i = $19;
    break;
   }
   case 43:  {
    $20 = ((($17)) + 1|0);
    $$028$i = 0;$$031$i = $20;
    break;
   }
   default: {
    $$028$i = 0;$$031$i = $17;
   }
   }
   $21 = load1($$031$i);
   $22 = $21&255;
   $23 = (_isalnum($22)|0);
   $24 = ($23|0)==(0);
   L20: do {
    if ($24) {
     $$0 = i64_const(0,0);$$2$i = 0;
    } else {
     $25 = i64_sext($15);
     $$029$i = i64_const(0,0);$$132$i = $$031$i;$27 = $21;
     while(1) {
      $26 = $27&255;
      $isdigittmp$i = (($26) + -48)|0;
      $isdigit$i = ($isdigittmp$i>>>0)<(10);
      if ($isdigit$i) {
       $28 = $27 << 24 >> 24;
       $29 = (($28) + -48)|0;
       $32 = $29;
      } else {
       $30 = (_toupper($26)|0);
       $31 = (($30) + -55)|0;
       $32 = $31;
      }
      $33 = ($32|0)<($15|0);
      $34 = i64_mul($$029$i,$25);
      $35 = i64_sext($32);
      $36 = i64_add($34,$35);
      $37 = ((($$132$i)) + 1|0);
      if (!($33)) {
       $$0 = i64_const(0,0);$$2$i = 0;
       break L20;
      }
      $38 = load1($37);
      $39 = $38&255;
      $40 = (_isalnum($39)|0);
      $41 = ($40|0)==(0);
      if ($41) {
       break;
      } else {
       $$029$i = $36;$$132$i = $37;$27 = $38;
      }
     }
     $42 = (_strspn($37,11284)|0);
     $43 = (($37) + ($42)|0);
     $44 = ($$028$i|0)==(0);
     $45 = i64_sub(i64_const(0,0),$36);
     $46 = $44 ? $36 : $45;
     $$0 = $46;$$2$i = $43;
    }
   } while(0);
   $47 = load4($1);
   $48 = (($13) + ($47)|0);
   $49 = ($$2$i|0)==($48|0);
   if (!($49)) {
    break;
   }
   _lua_pushinteger($0,$$0);
   STACKTOP = sp;return 1;
  }
 } while(0);
 _lua_pushnil($0);
 STACKTOP = sp;return 1;
}
function _luaB_tostring($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checkany($0,1);
 (_luaL_tolstring($0,1,0)|0);
 return 1;
}
function _luaB_type($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_type($0,1)|0);
 $2 = ($1|0)==(-1);
 if ($2) {
  (_luaL_argerror($0,1,13150)|0);
 }
 $3 = (_lua_typename($0,$1)|0);
 (_lua_pushstring($0,$3)|0);
 return 1;
}
function _luaB_xpcall($0) {
 $0 = $0|0;
 var $$0$i = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_gettop($0)|0);
 _luaL_checktype($0,2,6);
 _lua_pushboolean($0,1);
 _lua_pushvalue($0,1);
 _lua_rotate($0,3,2);
 $2 = (($1) + -2)|0;
 $3 = (_lua_pcallk($0,$2,-1,2,2,9)|0);
 $4 = ($3>>>0)>(1);
 if ($4) {
  _lua_pushboolean($0,0);
  _lua_pushvalue($0,-2);
  $$0$i = 2;
  return ($$0$i|0);
 } else {
  $5 = (_lua_gettop($0)|0);
  $6 = (($5) + -2)|0;
  $$0$i = $6;
  return ($$0$i|0);
 }
 return (0)|0;
}
function _finishpcall($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)>(1);
 if ($3) {
  _lua_pushboolean($0,0);
  _lua_pushvalue($0,-2);
  $$0 = 2;
  return ($$0|0);
 } else {
  $4 = (_lua_gettop($0)|0);
  $5 = (($4) - ($2))|0;
  $$0 = $5;
  return ($$0|0);
 }
 return (0)|0;
}
function _pairsmeta($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checkany($0,1);
 $4 = (_luaL_getmetafield($0,1,$1)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  _lua_pushvalue($0,1);
  _lua_callk($0,1,3,0,0);
  return;
 }
 _lua_pushcclosure($0,$3,0);
 _lua_pushvalue($0,1);
 $6 = ($2|0)==(0);
 if ($6) {
  _lua_pushnil($0);
  return;
 } else {
  _lua_pushinteger($0,i64_const(0,0));
  return;
 }
}
function _generic_reader($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 _luaL_checkstack($0,2,11445);
 _lua_pushvalue($0,1);
 _lua_callk($0,0,1,0,0);
 $3 = (_lua_type($0,-1)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  _lua_settop($0,-2);
  store4($2,0);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $5 = (_lua_isstring($0,-1)|0);
 $6 = ($5|0)==(0);
 if ($6) {
  (_luaL_error($0,11471,$vararg_buffer)|0);
 }
 _lua_copy($0,-1,5);
 _lua_settop($0,-2);
 $7 = (_lua_tolstring($0,5,$2)|0);
 $$0 = $7;
 STACKTOP = sp;return ($$0|0);
}
function _ipairsaux($0) {
 $0 = $0|0;
 var $1 = i64(), $2 = i64(), $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (i64(_luaL_checkinteger($0,2)));
 $2 = i64_add($1,i64_const(1,0));
 _lua_pushinteger($0,$2);
 $3 = (_lua_geti($0,1,$2)|0);
 $4 = ($3|0)==(0);
 $5 = $4 ? 1 : 2;
 return ($5|0);
}
function _dofilecont($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_lua_gettop($0)|0);
 $4 = (($3) + -1)|0;
 return ($4|0);
}
function _luaopen_bit32($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checkversion_($0,503.0,136);
 _lua_createtable($0,0,12);
 _luaL_setfuncs($0,2240,0);
 return 1;
}
function _b_arshift($0) {
 $0 = $0|0;
 var $$0$i = i64(), $$1$i = i64(), $1 = i64(), $10 = i64(), $11 = 0, $12 = i64(), $13 = 0, $14 = i64(), $15 = i64(), $16 = i64(), $17 = i64(), $2 = i64(), $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = i64(), $9 = i64(), $or$cond = 0;
 var $phitmp$i = i64(), $spec$select = i64(), $spec$select$i = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (i64(_luaL_checkinteger($0,1)));
 $2 = (i64(_luaL_checkinteger($0,2)));
 $3 = i64_sgt($2,i64_const(4294967295,4294967295));
 $4 = i64_trunc($1);
 $5 = ($4|0)<(0);
 $or$cond = $3 & $5;
 if ($or$cond) {
  $13 = i64_sgt($2,i64_const(31,0));
  $14 = i64_lshr($1,$2);
  $15 = i64_ashr(i64_const(0,4294967295),$2);
  $16 = i64_or($14,$15);
  $17 = i64_and($16,i64_const(4294967295,0));
  $spec$select = $13 ? i64_const(4294967295,0) : $17;
  _lua_pushinteger($0,$spec$select);
  return 1;
 }
 $6 = i64_sgt($2,i64_const(0,0));
 if ($6) {
  $7 = i64_sgt($2,i64_const(31,0));
  $8 = i64_and($1,i64_const(4294967295,0));
  $9 = i64_lshr($8,$2);
  $spec$select$i = $7 ? i64_const(0,0) : $9;
  $$1$i = $spec$select$i;
 } else {
  $10 = i64_sub(i64_const(0,0),$2);
  $11 = i64_slt($2,i64_const(4294967265,4294967295));
  $12 = i64_shl($1,$10);
  $phitmp$i = i64_and($12,i64_const(4294967295,0));
  $$0$i = $11 ? i64_const(0,0) : $phitmp$i;
  $$1$i = $$0$i;
 }
 _lua_pushinteger($0,$$1$i);
 return 1;
}
function _b_and($0) {
 $0 = $0|0;
 var $$0$lcssa$i = i64(), $$01213$i = 0, $$014$i = i64(), $1 = 0, $2 = 0, $3 = i64(), $4 = i64(), $5 = 0, $exitcond$i = 0, $phitmp$i = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_gettop($0)|0);
 $2 = ($1|0)<(1);
 if ($2) {
  $$0$lcssa$i = i64_const(4294967295,0);
  _lua_pushinteger($0,$$0$lcssa$i);
  return 1;
 }
 $$01213$i = 1;$$014$i = i64_const(4294967295,4294967295);
 while(1) {
  $3 = (i64(_luaL_checkinteger($0,$$01213$i)));
  $4 = i64_and($3,$$014$i);
  $5 = (($$01213$i) + 1)|0;
  $exitcond$i = ($$01213$i|0)==($1|0);
  if ($exitcond$i) {
   break;
  } else {
   $$01213$i = $5;$$014$i = $4;
  }
 }
 $phitmp$i = i64_and($4,i64_const(4294967295,0));
 $$0$lcssa$i = $phitmp$i;
 _lua_pushinteger($0,$$0$lcssa$i);
 return 1;
}
function _b_not($0) {
 $0 = $0|0;
 var $1 = i64(), $2 = i64(), $3 = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (i64(_luaL_checkinteger($0,1)));
 $2 = i64_and($1,i64_const(4294967295,0));
 $3 = i64_xor($2,i64_const(4294967295,0));
 _lua_pushinteger($0,$3);
 return 1;
}
function _b_or($0) {
 $0 = $0|0;
 var $$0$lcssa = i64(), $$01213 = 0, $$014 = i64(), $1 = 0, $2 = 0, $3 = i64(), $4 = i64(), $5 = 0, $exitcond = 0, $phitmp = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_gettop($0)|0);
 $2 = ($1|0)<(1);
 if ($2) {
  $$0$lcssa = i64_const(0,0);
  _lua_pushinteger($0,$$0$lcssa);
  return 1;
 }
 $$01213 = 1;$$014 = i64_const(0,0);
 while(1) {
  $3 = (i64(_luaL_checkinteger($0,$$01213)));
  $4 = i64_or($3,$$014);
  $5 = (($$01213) + 1)|0;
  $exitcond = ($$01213|0)==($1|0);
  if ($exitcond) {
   break;
  } else {
   $$01213 = $5;$$014 = $4;
  }
 }
 $phitmp = i64_and($4,i64_const(4294967295,0));
 $$0$lcssa = $phitmp;
 _lua_pushinteger($0,$$0$lcssa);
 return 1;
}
function _b_xor($0) {
 $0 = $0|0;
 var $$0$lcssa = i64(), $$01213 = 0, $$014 = i64(), $1 = 0, $2 = 0, $3 = i64(), $4 = i64(), $5 = 0, $exitcond = 0, $phitmp = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_gettop($0)|0);
 $2 = ($1|0)<(1);
 if ($2) {
  $$0$lcssa = i64_const(0,0);
  _lua_pushinteger($0,$$0$lcssa);
  return 1;
 }
 $$01213 = 1;$$014 = i64_const(0,0);
 while(1) {
  $3 = (i64(_luaL_checkinteger($0,$$01213)));
  $4 = i64_xor($3,$$014);
  $5 = (($$01213) + 1)|0;
  $exitcond = ($$01213|0)==($1|0);
  if ($exitcond) {
   break;
  } else {
   $$01213 = $5;$$014 = $4;
  }
 }
 $phitmp = i64_and($4,i64_const(4294967295,0));
 $$0$lcssa = $phitmp;
 _lua_pushinteger($0,$$0$lcssa);
 return 1;
}
function _b_test($0) {
 $0 = $0|0;
 var $$0$lcssa$i = 0, $$01213$i = 0, $$014$i = i64(), $1 = 0, $2 = 0, $3 = i64(), $4 = i64(), $5 = 0, $exitcond$i = 0, $phitmp = 0, $phitmp$i = i64(), $phitmp3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_gettop($0)|0);
 $2 = ($1|0)<(1);
 if ($2) {
  $$0$lcssa$i = 1;
  _lua_pushboolean($0,$$0$lcssa$i);
  return 1;
 }
 $$01213$i = 1;$$014$i = i64_const(4294967295,4294967295);
 while(1) {
  $3 = (i64(_luaL_checkinteger($0,$$01213$i)));
  $4 = i64_and($3,$$014$i);
  $5 = (($$01213$i) + 1)|0;
  $exitcond$i = ($$01213$i|0)==($1|0);
  if ($exitcond$i) {
   break;
  } else {
   $$01213$i = $5;$$014$i = $4;
  }
 }
 $phitmp$i = i64_and($4,i64_const(4294967295,0));
 $phitmp = i64_ne($phitmp$i,i64_const(0,0));
 $phitmp3 = $phitmp&1;
 $$0$lcssa$i = $phitmp3;
 _lua_pushboolean($0,$$0$lcssa$i);
 return 1;
}
function _b_extract($0) {
 $0 = $0|0;
 var $1 = i64(), $10 = i64(), $11 = i64(), $12 = 0, $13 = i64(), $14 = i64(), $15 = i64(), $16 = i64(), $2 = i64(), $3 = i64(), $4 = i64(), $5 = 0, $6 = 0, $7 = i64(), $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = (i64(_luaL_checkinteger($0,1)));
 $2 = i64_and($1,i64_const(4294967295,0));
 $3 = (i64(_luaL_checkinteger($0,2)));
 $4 = (i64(_luaL_optinteger($0,3,i64_const(1,0))));
 $5 = i64_sgt($3,i64_const(4294967295,4294967295));
 if (!($5)) {
  (_luaL_argerror($0,2,11670)|0);
 }
 $6 = i64_sgt($4,i64_const(0,0));
 if (!($6)) {
  (_luaL_argerror($0,3,11695)|0);
 }
 $7 = i64_add($4,$3);
 $8 = i64_sgt($7,i64_const(32,0));
 if ($8) {
  (_luaL_error($0,11718,$vararg_buffer)|0);
 }
 $9 = i64_trunc($4);
 $10 = i64_and($3,i64_const(4294967295,0));
 $11 = i64_lshr($2,$10);
 $12 = (($9) + -1)|0;
 $13 = i64_zext($12>>>0);
 $14 = i64_shl(i64_const(4294967294,1),$13);
 $15 = i64_xor($14,i64_const(4294967295,4294967295));
 $16 = i64_and($11,$15);
 _lua_pushinteger($0,$16);
 STACKTOP = sp;return 1;
}
function _b_lrot($0) {
 $0 = $0|0;
 var $1 = i64(), $10 = i64(), $11 = i64(), $12 = i64(), $13 = i64(), $2 = i64(), $3 = 0, $4 = 0, $5 = i64(), $6 = 0, $7 = i64(), $8 = i64(), $9 = 0, $spec$select$i = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (i64(_luaL_checkinteger($0,2)));
 $2 = (i64(_luaL_checkinteger($0,1)));
 $3 = i64_trunc($1);
 $4 = $3 & 31;
 $5 = i64_and($2,i64_const(4294967295,0));
 $6 = ($4|0)==(0);
 $7 = i64_zext($4>>>0);
 $8 = i64_shl($5,$7);
 $9 = (32 - ($4))|0;
 $10 = i64_zext($9>>>0);
 $11 = i64_lshr($5,$10);
 $12 = i64_or($11,$8);
 $spec$select$i = $6 ? $2 : $12;
 $13 = i64_and($spec$select$i,i64_const(4294967295,0));
 _lua_pushinteger($0,$13);
 return 1;
}
function _b_lshift($0) {
 $0 = $0|0;
 var $$0$i = i64(), $$1$i = i64(), $1 = i64(), $2 = i64(), $3 = 0, $4 = 0, $5 = i64(), $6 = i64(), $7 = i64(), $8 = 0, $9 = i64(), $phitmp$i = i64(), $spec$select$i = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (i64(_luaL_checkinteger($0,1)));
 $2 = (i64(_luaL_checkinteger($0,2)));
 $3 = i64_slt($2,i64_const(0,0));
 if ($3) {
  $4 = i64_slt($2,i64_const(4294967265,4294967295));
  $5 = i64_sub(i64_const(0,0),$2);
  $6 = i64_and($1,i64_const(4294967295,0));
  $7 = i64_lshr($6,$5);
  $spec$select$i = $4 ? i64_const(0,0) : $7;
  $$1$i = $spec$select$i;
  _lua_pushinteger($0,$$1$i);
  return 1;
 } else {
  $8 = i64_sgt($2,i64_const(31,0));
  $9 = i64_shl($1,$2);
  $phitmp$i = i64_and($9,i64_const(4294967295,0));
  $$0$i = $8 ? i64_const(0,0) : $phitmp$i;
  $$1$i = $$0$i;
  _lua_pushinteger($0,$$1$i);
  return 1;
 }
 return (0)|0;
}
function _b_replace($0) {
 $0 = $0|0;
 var $1 = i64(), $10 = 0, $11 = 0, $12 = 0, $13 = i64(), $14 = i64(), $15 = i64(), $16 = i64(), $17 = i64(), $18 = i64(), $19 = i64(), $2 = i64(), $20 = i64(), $21 = i64(), $22 = i64(), $3 = i64(), $4 = i64(), $5 = i64(), $6 = i64(), $7 = 0;
 var $8 = 0, $9 = i64(), $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = (i64(_luaL_checkinteger($0,1)));
 $2 = i64_and($1,i64_const(4294967295,0));
 $3 = (i64(_luaL_checkinteger($0,2)));
 $4 = i64_and($3,i64_const(4294967295,0));
 $5 = (i64(_luaL_checkinteger($0,3)));
 $6 = (i64(_luaL_optinteger($0,4,i64_const(1,0))));
 $7 = i64_sgt($5,i64_const(4294967295,4294967295));
 if (!($7)) {
  (_luaL_argerror($0,3,11670)|0);
 }
 $8 = i64_sgt($6,i64_const(0,0));
 if (!($8)) {
  (_luaL_argerror($0,4,11695)|0);
 }
 $9 = i64_add($6,$5);
 $10 = i64_sgt($9,i64_const(32,0));
 if ($10) {
  (_luaL_error($0,11718,$vararg_buffer)|0);
 }
 $11 = i64_trunc($6);
 $12 = (($11) + -1)|0;
 $13 = i64_zext($12>>>0);
 $14 = i64_shl(i64_const(4294967294,1),$13);
 $15 = i64_xor($14,i64_const(4294967295,4294967295));
 $16 = i64_and($5,i64_const(4294967295,0));
 $17 = i64_shl($15,$16);
 $18 = i64_xor($17,i64_const(4294967295,4294967295));
 $19 = i64_and($2,$18);
 $20 = i64_and($4,$15);
 $21 = i64_shl($20,$16);
 $22 = i64_or($19,$21);
 _lua_pushinteger($0,$22);
 STACKTOP = sp;return 1;
}
function _b_rrot($0) {
 $0 = $0|0;
 var $1 = i64(), $10 = 0, $11 = i64(), $12 = i64(), $13 = i64(), $14 = i64(), $2 = i64(), $3 = 0, $4 = 0, $5 = 0, $6 = i64(), $7 = 0, $8 = i64(), $9 = i64(), $spec$select$i = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (i64(_luaL_checkinteger($0,2)));
 $2 = (i64(_luaL_checkinteger($0,1)));
 $3 = i64_trunc($1);
 $4 = (0 - ($3))|0;
 $5 = $4 & 31;
 $6 = i64_and($2,i64_const(4294967295,0));
 $7 = ($5|0)==(0);
 $8 = i64_zext($5>>>0);
 $9 = i64_shl($6,$8);
 $10 = (32 - ($5))|0;
 $11 = i64_zext($10>>>0);
 $12 = i64_lshr($6,$11);
 $13 = i64_or($12,$9);
 $spec$select$i = $7 ? $2 : $13;
 $14 = i64_and($spec$select$i,i64_const(4294967295,0));
 _lua_pushinteger($0,$14);
 return 1;
}
function _b_rshift($0) {
 $0 = $0|0;
 var $$0$i = i64(), $$1$i = i64(), $1 = i64(), $2 = i64(), $3 = 0, $4 = 0, $5 = i64(), $6 = i64(), $7 = i64(), $8 = 0, $9 = i64(), $phitmp$i = i64(), $spec$select$i = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (i64(_luaL_checkinteger($0,1)));
 $2 = (i64(_luaL_checkinteger($0,2)));
 $3 = i64_sgt($2,i64_const(0,0));
 if ($3) {
  $4 = i64_sgt($2,i64_const(31,0));
  $5 = i64_and($1,i64_const(4294967295,0));
  $6 = i64_lshr($5,$2);
  $spec$select$i = $4 ? i64_const(0,0) : $6;
  $$1$i = $spec$select$i;
  _lua_pushinteger($0,$$1$i);
  return 1;
 } else {
  $7 = i64_sub(i64_const(0,0),$2);
  $8 = i64_slt($2,i64_const(4294967265,4294967295));
  $9 = i64_shl($1,$7);
  $phitmp$i = i64_and($9,i64_const(4294967295,0));
  $$0$i = $8 ? i64_const(0,0) : $phitmp$i;
  $$1$i = $$0$i;
  _lua_pushinteger($0,$$1$i);
  return 1;
 }
 return (0)|0;
}
function _luaopen_coroutine($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checkversion_($0,503.0,136);
 _lua_createtable($0,0,7);
 _luaL_setfuncs($0,2352,0);
 return 1;
}
function _luaB_cocreate($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checktype($0,1,6);
 $1 = (_lua_newthread($0)|0);
 _lua_pushvalue($0,1);
 _lua_xmove($0,$1,1);
 return 1;
}
function _luaB_coresume($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_tothread($0,1)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  (_luaL_argerror($0,1,11890)|0);
 }
 $3 = (_lua_gettop($0)|0);
 $4 = (($3) + -1)|0;
 $5 = (_auxresume($0,$1,$4)|0);
 $6 = ($5|0)<(0);
 if ($6) {
  _lua_pushboolean($0,0);
  _lua_rotate($0,-2,1);
  $$0 = 2;
  return ($$0|0);
 } else {
  _lua_pushboolean($0,1);
  $7 = (($5) + 1)|0;
  $8 = $5 ^ -1;
  _lua_rotate($0,$8,1);
  $$0 = $7;
  return ($$0|0);
 }
 return (0)|0;
}
function _luaB_corunning($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_pushthread($0)|0);
 _lua_pushboolean($0,$1);
 return 2;
}
function _luaB_costatus($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $1 = sp;
 $2 = (_lua_tothread($0,1)|0);
 $3 = ($2|0)==(0|0);
 if ($3) {
  (_luaL_argerror($0,1,11890)|0);
 }
 $4 = ($2|0)==($0|0);
 if ($4) {
  (_lua_pushstring($0,11767)|0);
  STACKTOP = sp;return 1;
 }
 $5 = (_lua_status($2)|0);
 switch ($5|0) {
 case 1:  {
  (_lua_pushstring($0,11906)|0);
  STACKTOP = sp;return 1;
  break;
 }
 case 0:  {
  $6 = (_lua_getstack($2,0,$1)|0);
  $7 = ($6|0)>(0);
  do {
   if ($7) {
    (_lua_pushstring($0,11916)|0);
   } else {
    $8 = (_lua_gettop($2)|0);
    $9 = ($8|0)==(0);
    if ($9) {
     (_lua_pushstring($0,11923)|0);
     break;
    } else {
     (_lua_pushstring($0,11906)|0);
     break;
    }
   }
  } while(0);
  STACKTOP = sp;return 1;
  break;
 }
 default: {
  (_lua_pushstring($0,11923)|0);
  STACKTOP = sp;return 1;
 }
 }
 return (0)|0;
}
function _luaB_cowrap($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checktype($0,1,6);
 $1 = (_lua_newthread($0)|0);
 _lua_pushvalue($0,1);
 _lua_xmove($0,$1,1);
 _lua_pushcclosure($0,166,1);
 return 1;
}
function _luaB_yield($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_gettop($0)|0);
 $2 = (_lua_yieldk($0,$1,0,0)|0);
 return ($2|0);
}
function _luaB_yieldable($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_isyieldable($0)|0);
 _lua_pushboolean($0,$1);
 return 1;
}
function _luaB_auxwrap($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_tothread($0,-1001001)|0);
 $2 = (_lua_gettop($0)|0);
 $3 = (_auxresume($0,$1,$2)|0);
 $4 = ($3|0)<(0);
 if (!($4)) {
  return ($3|0);
 }
 $5 = (_lua_type($0,-1)|0);
 $6 = ($5|0)==(4);
 if (!($6)) {
  (_lua_error($0)|0);
  // unreachable;
 }
 _luaL_where($0,1);
 _lua_rotate($0,-2,1);
 _lua_concat($0,2);
 (_lua_error($0)|0);
 // unreachable;
 return (0)|0;
}
function _auxresume($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_lua_checkstack($1,$2)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  (_lua_pushstring($0,11805)|0);
  $$1 = -1;
  return ($$1|0);
 }
 $5 = (_lua_status($1)|0);
 $6 = ($5|0)==(0);
 if ($6) {
  $7 = (_lua_gettop($1)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   (_lua_pushstring($0,11834)|0);
   $$1 = -1;
   return ($$1|0);
  }
 }
 _lua_xmove($0,$1,$2);
 $9 = (_lua_resume($1,$0,$2)|0);
 $10 = ($9>>>0)<(2);
 if (!($10)) {
  _lua_xmove($1,$0,1);
  $$1 = -1;
  return ($$1|0);
 }
 $11 = (_lua_gettop($1)|0);
 $12 = (($11) + 1)|0;
 $13 = (_lua_checkstack($0,$12)|0);
 $14 = ($13|0)==(0);
 if ($14) {
  $15 = $11 ^ -1;
  _lua_settop($1,$15);
  (_lua_pushstring($0,11863)|0);
  $$1 = -1;
  return ($$1|0);
 } else {
  _lua_xmove($1,$0,$11);
  $$1 = $11;
  return ($$1|0);
 }
 return (0)|0;
}
function _luaopen_debug($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checkversion_($0,503.0,136);
 _lua_createtable($0,0,16);
 _luaL_setfuncs($0,2416,0);
 return 1;
}
function _db_debug($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0;
 $vararg_buffer = sp + 256|0;
 $1 = sp;
 $2 = load4(7364);
 (_fwrite(12397,11,1,$2)|0);
 (_fflush($2)|0);
 $3 = load4(7368);
 $4 = (_fgets($1,250,$3)|0);
 $5 = ($4|0)==(0|0);
 if ($5) {
  STACKTOP = sp;return 0;
 }
 while(1) {
  $6 = (_strcmp($1,12409)|0);
  $7 = ($6|0)==(0);
  if ($7) {
   label = 8;
   break;
  }
  $8 = (_strlen($1)|0);
  $9 = (_luaL_loadbufferx($0,$1,$8,12415,0)|0);
  $10 = ($9|0)==(0);
  if ($10) {
   $11 = (_lua_pcallk($0,0,0,0,0,0)|0);
   $12 = ($11|0)==(0);
   if (!($12)) {
    label = 6;
   }
  } else {
   label = 6;
  }
  if ((label|0) == 6) {
   label = 0;
   $13 = (_lua_tolstring($0,-1,0)|0);
   store4($vararg_buffer,$13);
   (_fprintf($2,12432,$vararg_buffer)|0);
   (_fflush($2)|0);
  }
  _lua_settop($0,0);
  (_fwrite(12397,11,1,$2)|0);
  (_fflush($2)|0);
  $14 = (_fgets($1,250,$3)|0);
  $15 = ($14|0)==(0|0);
  if ($15) {
   label = 8;
   break;
  }
 }
 if ((label|0) == 8) {
  STACKTOP = sp;return 0;
 }
 return (0)|0;
}
function _db_getuservalue($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_type($0,1)|0);
 $2 = ($1|0)==(7);
 if ($2) {
  (_lua_getuservalue($0,1)|0);
  return 1;
 } else {
  _lua_pushnil($0);
  return 1;
 }
 return (0)|0;
}
function _db_gethook($0) {
 $0 = $0|0;
 var $$0$i = 0, $$0$i23 = 0, $$1$i = 0, $$2$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = i64(), $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = sp + 4|0;
 $2 = (_lua_type($0,1)|0);
 $3 = ($2|0)==(8);
 if ($3) {
  $4 = (_lua_tothread($0,1)|0);
  $$0$i = $4;
 } else {
  $$0$i = $0;
 }
 $5 = (_lua_gethookmask($$0$i)|0);
 $6 = (_lua_gethook($$0$i)|0);
 $7 = ($6|0)==(0|0);
 do {
  if ($7) {
   _lua_pushnil($0);
  } else {
   $8 = ($6|0)==(9|0);
   if (!($8)) {
    (_lua_pushstring($0,12383)|0);
    break;
   }
   (_lua_rawgetp($0,-1001000,18400)|0);
   $9 = ($$0$i|0)==($0|0);
   if (!($9)) {
    $10 = (_lua_checkstack($$0$i,1)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     (_luaL_error($0,12135,$vararg_buffer)|0);
    }
   }
   (_lua_pushthread($$0$i)|0);
   _lua_xmove($$0$i,$0,1);
   (_lua_rawget($0,-2)|0);
   _lua_rotate($0,-2,-1);
   _lua_settop($0,-2);
  }
 } while(0);
 $12 = $5 & 1;
 $13 = ($12|0)==(0);
 if ($13) {
  $$0$i23 = 0;
 } else {
  store1($1,99);
  $$0$i23 = 1;
 }
 $14 = $5 & 2;
 $15 = ($14|0)==(0);
 if ($15) {
  $$1$i = $$0$i23;
 } else {
  $16 = (($$0$i23) + 1)|0;
  $17 = (($1) + ($$0$i23)|0);
  store1($17,114);
  $$1$i = $16;
 }
 $18 = $5 & 4;
 $19 = ($18|0)==(0);
 if ($19) {
  $$2$i = $$1$i;
  $22 = (($1) + ($$2$i)|0);
  store1($22,0);
  (_lua_pushstring($0,$1)|0);
  $23 = (_lua_gethookcount($$0$i)|0);
  $24 = i64_sext($23);
  _lua_pushinteger($0,$24);
  STACKTOP = sp;return 3;
 }
 $20 = (($$1$i) + 1)|0;
 $21 = (($1) + ($$1$i)|0);
 store1($21,108);
 $$2$i = $20;
 $22 = (($1) + ($$2$i)|0);
 store1($22,0);
 (_lua_pushstring($0,$1)|0);
 $23 = (_lua_gethookcount($$0$i)|0);
 $24 = i64_sext($23);
 _lua_pushinteger($0,$24);
 STACKTOP = sp;return 3;
}
function _db_getinfo($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i51 = 0, $$042 = 0, $$04950 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = i64(), $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = i64(), $3 = 0, $30 = 0, $31 = 0, $32 = i64(), $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = i64(), $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = i64(), $45 = 0, $46 = 0, $47 = i64(), $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = sp + 12|0;
 $2 = (_lua_type($0,1)|0);
 $3 = ($2|0)==(8);
 if ($3) {
  $5 = (_lua_tothread($0,1)|0);
  $6 = (_luaL_optlstring($0,3,12231,0)|0);
  $7 = ($5|0)==($0|0);
  if ($7) {
   $$0$i51 = $5;$$04950 = 2;$12 = $6;$20 = 3;$66 = 1;
  } else {
   $8 = (_lua_checkstack($5,3)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    (_luaL_error($0,12135,$vararg_buffer)|0);
    $$0$i51 = $5;$$04950 = 2;$12 = $6;$20 = 3;$66 = 0;
   } else {
    $$0$i51 = $5;$$04950 = 2;$12 = $6;$20 = 3;$66 = 0;
   }
  }
 } else {
  $4 = (_luaL_optlstring($0,2,12231,0)|0);
  $$0$i51 = $0;$$04950 = 1;$12 = $4;$20 = 2;$66 = 1;
 }
 $10 = (_lua_type($0,$$04950)|0);
 $11 = ($10|0)==(6);
 if ($11) {
  store4($vararg_buffer1,$12);
  $13 = (_lua_pushfstring($0,12238,$vararg_buffer1)|0);
  _lua_pushvalue($0,$$04950);
  _lua_xmove($0,$$0$i51,1);
  $$0 = $13;
 } else {
  $14 = (i64(_luaL_checkinteger($0,$$04950)));
  $15 = i64_trunc($14);
  $16 = (_lua_getstack($$0$i51,$15,$1)|0);
  $17 = ($16|0)==(0);
  if ($17) {
   _lua_pushnil($0);
   $$042 = 1;
   STACKTOP = sp;return ($$042|0);
  } else {
   $$0 = $12;
  }
 }
 $18 = (_lua_getinfo($$0$i51,$$0,$1)|0);
 $19 = ($18|0)==(0);
 if ($19) {
  $21 = (_luaL_argerror($0,$20,12242)|0);
  $$042 = $21;
  STACKTOP = sp;return ($$042|0);
 }
 _lua_createtable($0,0,0);
 $22 = (_strchr($$0,83)|0);
 $23 = ($22|0)==(0|0);
 if (!($23)) {
  $24 = ((($1)) + 16|0);
  $25 = load4($24);
  (_lua_pushstring($0,$25)|0);
  _lua_setfield($0,-2,12257);
  $26 = ((($1)) + 36|0);
  (_lua_pushstring($0,$26)|0);
  _lua_setfield($0,-2,12264);
  $27 = ((($1)) + 24|0);
  $28 = load4($27);
  $29 = i64_sext($28);
  _lua_pushinteger($0,$29);
  _lua_setfield($0,-2,12274);
  $30 = ((($1)) + 28|0);
  $31 = load4($30);
  $32 = i64_sext($31);
  _lua_pushinteger($0,$32);
  _lua_setfield($0,-2,12286);
  $33 = ((($1)) + 12|0);
  $34 = load4($33);
  (_lua_pushstring($0,$34)|0);
  _lua_setfield($0,-2,12302);
 }
 $35 = (_strchr($$0,108)|0);
 $36 = ($35|0)==(0|0);
 if (!($36)) {
  $37 = ((($1)) + 20|0);
  $38 = load4($37);
  $39 = i64_sext($38);
  _lua_pushinteger($0,$39);
  _lua_setfield($0,-2,12307);
 }
 $40 = (_strchr($$0,117)|0);
 $41 = ($40|0)==(0|0);
 if (!($41)) {
  $42 = ((($1)) + 32|0);
  $43 = load1($42);
  $44 = i64_zext($43&255);
  _lua_pushinteger($0,$44);
  _lua_setfield($0,-2,12319);
  $45 = ((($1)) + 33|0);
  $46 = load1($45);
  $47 = i64_zext($46&255);
  _lua_pushinteger($0,$47);
  _lua_setfield($0,-2,12324);
  $48 = ((($1)) + 34|0);
  $49 = load1($48);
  $50 = $49 << 24 >> 24;
  _lua_pushboolean($0,$50);
  _lua_setfield($0,-2,12332);
 }
 $51 = (_strchr($$0,110)|0);
 $52 = ($51|0)==(0|0);
 if (!($52)) {
  $53 = ((($1)) + 4|0);
  $54 = load4($53);
  (_lua_pushstring($0,$54)|0);
  _lua_setfield($0,-2,12341);
  $55 = ((($1)) + 8|0);
  $56 = load4($55);
  (_lua_pushstring($0,$56)|0);
  _lua_setfield($0,-2,12346);
 }
 $57 = (_strchr($$0,116)|0);
 $58 = ($57|0)==(0|0);
 if (!($58)) {
  $59 = ((($1)) + 35|0);
  $60 = load1($59);
  $61 = $60 << 24 >> 24;
  _lua_pushboolean($0,$61);
  _lua_setfield($0,-2,12355);
 }
 $62 = (_strchr($$0,76)|0);
 $63 = ($62|0)==(0|0);
 if (!($63)) {
  if ($66) {
   _lua_rotate($0,-2,1);
  } else {
   _lua_xmove($$0$i51,$0,1);
  }
  _lua_setfield($0,-2,12366);
 }
 $64 = (_strchr($$0,102)|0);
 $65 = ($64|0)==(0|0);
 if ($65) {
  $$042 = 1;
  STACKTOP = sp;return ($$042|0);
 }
 if ($66) {
  _lua_rotate($0,-2,1);
 } else {
  _lua_xmove($$0$i51,$0,1);
 }
 _lua_setfield($0,-2,12378);
 $$042 = 1;
 STACKTOP = sp;return ($$042|0);
}
function _db_getlocal($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $$1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = i64(), $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = i64(), $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $vararg_buffer = sp;
 $1 = sp + 4|0;
 $2 = (_lua_type($0,1)|0);
 $3 = ($2|0)==(8);
 if ($3) {
  $4 = (_lua_tothread($0,1)|0);
  $$0 = 1;$$0$i = $4;
 } else {
  $$0 = 0;$$0$i = $0;
 }
 $5 = $$0 | 2;
 $6 = (i64(_luaL_checkinteger($0,$5)));
 $7 = i64_trunc($6);
 $8 = (($$0) + 1)|0;
 $9 = (_lua_type($0,$8)|0);
 $10 = ($9|0)==(6);
 if ($10) {
  _lua_pushvalue($0,$8);
  $11 = (_lua_getlocal($0,0,$7)|0);
  (_lua_pushstring($0,$11)|0);
  $$1 = 1;
  STACKTOP = sp;return ($$1|0);
 }
 $12 = (i64(_luaL_checkinteger($0,$8)));
 $13 = i64_trunc($12);
 $14 = (_lua_getstack($$0$i,$13,$1)|0);
 $15 = ($14|0)==(0);
 if ($15) {
  $16 = (_luaL_argerror($0,$8,12116)|0);
  $$1 = $16;
  STACKTOP = sp;return ($$1|0);
 }
 $17 = ($$0$i|0)==($0|0);
 if (!($17)) {
  $18 = (_lua_checkstack($$0$i,1)|0);
  $19 = ($18|0)==(0);
  if ($19) {
   (_luaL_error($0,12135,$vararg_buffer)|0);
  }
 }
 $20 = (_lua_getlocal($$0$i,$1,$7)|0);
 $21 = ($20|0)==(0|0);
 if ($21) {
  _lua_pushnil($0);
  $$1 = 1;
  STACKTOP = sp;return ($$1|0);
 } else {
  _lua_xmove($$0$i,$0,1);
  (_lua_pushstring($0,$20)|0);
  _lua_rotate($0,-2,1);
  $$1 = 2;
  STACKTOP = sp;return ($$1|0);
 }
 return (0)|0;
}
function _db_getregistry($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _lua_pushvalue($0,-1001000);
 return 1;
}
function _db_getmetatable($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checkany($0,1);
 $1 = (_lua_getmetatable($0,1)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  return 1;
 }
 _lua_pushnil($0);
 return 1;
}
function _db_getupvalue($0) {
 $0 = $0|0;
 var $$0$i = 0, $1 = i64(), $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (i64(_luaL_checkinteger($0,2)));
 $2 = i64_trunc($1);
 _luaL_checktype($0,1,6);
 $3 = (_lua_getupvalue($0,1,$2)|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$0$i = 0;
  return ($$0$i|0);
 }
 (_lua_pushstring($0,$3)|0);
 _lua_rotate($0,-2,1);
 $$0$i = 2;
 return ($$0$i|0);
}
function _db_upvaluejoin($0) {
 $0 = $0|0;
 var $1 = i64(), $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = i64(), $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (i64(_luaL_checkinteger($0,2)));
 $2 = i64_trunc($1);
 _luaL_checktype($0,1,6);
 $3 = (_lua_getupvalue($0,1,$2)|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  (_luaL_argerror($0,2,12187)|0);
 }
 $5 = (i64(_luaL_checkinteger($0,4)));
 $6 = i64_trunc($5);
 _luaL_checktype($0,3,6);
 $7 = (_lua_getupvalue($0,3,$6)|0);
 $8 = ($7|0)==(0|0);
 if ($8) {
  (_luaL_argerror($0,4,12187)|0);
 }
 $9 = (_lua_iscfunction($0,1)|0);
 $10 = ($9|0)==(0);
 if (!($10)) {
  (_luaL_argerror($0,1,12209)|0);
 }
 $11 = (_lua_iscfunction($0,3)|0);
 $12 = ($11|0)==(0);
 if ($12) {
  _lua_upvaluejoin($0,1,$2,3,$6);
  return 0;
 }
 (_luaL_argerror($0,3,12209)|0);
 _lua_upvaluejoin($0,1,$2,3,$6);
 return 0;
}
function _db_upvalueid($0) {
 $0 = $0|0;
 var $1 = i64(), $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (i64(_luaL_checkinteger($0,2)));
 $2 = i64_trunc($1);
 _luaL_checktype($0,1,6);
 $3 = (_lua_getupvalue($0,1,$2)|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  (_luaL_argerror($0,2,12187)|0);
 }
 $5 = (_lua_upvalueid($0,1,$2)|0);
 _lua_pushlightuserdata($0,$5);
 return 1;
}
function _db_setuservalue($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checktype($0,1,7);
 _luaL_checkany($0,2);
 _lua_settop($0,2);
 _lua_setuservalue($0,1);
 return 1;
}
function _db_sethook($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $$035 = 0, $$036 = 0, $$042 = 0, $$1$i = 0, $$3$i = 0, $1 = 0, $10 = i64(), $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select$i = 0, $spec$select9$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = (_lua_type($0,1)|0);
 $2 = ($1|0)==(8);
 if ($2) {
  $3 = (_lua_tothread($0,1)|0);
  $$0$i = $3;$$042 = 1;
 } else {
  $$0$i = $0;$$042 = 0;
 }
 $4 = (($$042) + 1)|0;
 $5 = (_lua_type($0,$4)|0);
 $6 = ($5|0)<(1);
 if ($6) {
  _lua_settop($0,$4);
  $$0 = 0;$$035 = 0;$$036 = 0;
 } else {
  $7 = $$042 | 2;
  $8 = (_luaL_checklstring($0,$7,0)|0);
  _luaL_checktype($0,$4,6);
  $9 = (($$042) + 3)|0;
  $10 = (i64(_luaL_optinteger($0,$9,i64_const(0,0))));
  $11 = i64_trunc($10);
  $12 = (_strchr($8,99)|0);
  $13 = ($12|0)!=(0|0);
  $spec$select$i = $13&1;
  $14 = (_strchr($8,114)|0);
  $15 = ($14|0)==(0|0);
  $16 = $spec$select$i | 2;
  $$1$i = $15 ? $spec$select$i : $16;
  $17 = (_strchr($8,108)|0);
  $18 = ($17|0)==(0|0);
  $19 = $$1$i | 4;
  $spec$select9$i = $18 ? $$1$i : $19;
  $20 = ($11|0)>(0);
  $21 = $spec$select9$i | 8;
  $$3$i = $20 ? $21 : $spec$select9$i;
  $$0 = $$3$i;$$035 = $11;$$036 = 9;
 }
 $22 = (_lua_rawgetp($0,-1001000,18400)|0);
 $23 = ($22|0)==(0);
 if ($23) {
  _lua_createtable($0,0,2);
  _lua_pushvalue($0,-1);
  _lua_rawsetp($0,-1001000,18400);
  (_lua_pushstring($0,12150)|0);
  _lua_setfield($0,-2,12152);
  _lua_pushvalue($0,-1);
  (_lua_setmetatable($0,-2)|0);
 }
 $24 = ($$0$i|0)==($0|0);
 if (!($24)) {
  $25 = (_lua_checkstack($$0$i,1)|0);
  $26 = ($25|0)==(0);
  if ($26) {
   (_luaL_error($0,12135,$vararg_buffer)|0);
  }
 }
 (_lua_pushthread($$0$i)|0);
 _lua_xmove($$0$i,$0,1);
 _lua_pushvalue($0,$4);
 _lua_rawset($0,-3);
 _lua_sethook($$0$i,$$036,$$0,$$035);
 STACKTOP = sp;return 0;
}
function _db_setlocal($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $$028 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = i64(), $7 = 0;
 var $8 = 0, $9 = i64(), $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $vararg_buffer = sp;
 $1 = sp + 4|0;
 $2 = (_lua_type($0,1)|0);
 $3 = ($2|0)==(8);
 if ($3) {
  $4 = (_lua_tothread($0,1)|0);
  $$0$i = $4;$$028 = 1;
 } else {
  $$0$i = $0;$$028 = 0;
 }
 $5 = (($$028) + 1)|0;
 $6 = (i64(_luaL_checkinteger($0,$5)));
 $7 = i64_trunc($6);
 $8 = $$028 | 2;
 $9 = (i64(_luaL_checkinteger($0,$8)));
 $10 = (_lua_getstack($$0$i,$7,$1)|0);
 $11 = ($10|0)==(0);
 if ($11) {
  $12 = (_luaL_argerror($0,$5,12116)|0);
  $$0 = $12;
  STACKTOP = sp;return ($$0|0);
 }
 $13 = i64_trunc($9);
 $14 = (($$028) + 3)|0;
 _luaL_checkany($0,$14);
 _lua_settop($0,$14);
 $15 = ($$0$i|0)==($0|0);
 if (!($15)) {
  $16 = (_lua_checkstack($$0$i,1)|0);
  $17 = ($16|0)==(0);
  if ($17) {
   (_luaL_error($0,12135,$vararg_buffer)|0);
  }
 }
 _lua_xmove($0,$$0$i,1);
 $18 = (_lua_setlocal($$0$i,$1,$13)|0);
 $19 = ($18|0)==(0|0);
 if ($19) {
  _lua_settop($$0$i,-2);
 }
 (_lua_pushstring($0,$18)|0);
 $$0 = 1;
 STACKTOP = sp;return ($$0|0);
}
function _db_setmetatable($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_type($0,2)|0);
 switch ($1|0) {
 case 0: case 5:  {
  break;
 }
 default: {
  (_luaL_argerror($0,2,12094)|0);
 }
 }
 _lua_settop($0,2);
 (_lua_setmetatable($0,1)|0);
 return 1;
}
function _db_setupvalue($0) {
 $0 = $0|0;
 var $$0$i = 0, $1 = i64(), $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checkany($0,3);
 $1 = (i64(_luaL_checkinteger($0,2)));
 $2 = i64_trunc($1);
 _luaL_checktype($0,1,6);
 $3 = (_lua_setupvalue($0,1,$2)|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$0$i = 0;
  return ($$0$i|0);
 }
 (_lua_pushstring($0,$3)|0);
 _lua_rotate($0,-1,1);
 $$0$i = 1;
 return ($$0$i|0);
}
function _db_traceback($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $1 = 0, $10 = 0, $11 = i64(), $12 = i64(), $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_type($0,1)|0);
 $2 = ($1|0)==(8);
 if ($2) {
  $3 = (_lua_tothread($0,1)|0);
  $$0 = 1;$$0$i = $3;
 } else {
  $$0 = 0;$$0$i = $0;
 }
 $4 = (($$0) + 1)|0;
 $5 = (_lua_tolstring($0,$4,0)|0);
 $6 = ($5|0)==(0|0);
 if ($6) {
  $7 = (_lua_type($0,$4)|0);
  $8 = ($7|0)<(1);
  if (!($8)) {
   _lua_pushvalue($0,$4);
   return 1;
  }
 }
 $9 = $$0 | 2;
 $10 = ($$0$i|0)==($0|0);
 $11 = i64_zext($10&1);
 $12 = (i64(_luaL_optinteger($0,$9,$11)));
 $13 = i64_trunc($12);
 _luaL_traceback($0,$$0$i,$5,$13);
 return 1;
}
function _hookf($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = i64(), $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (_lua_rawgetp($0,-1001000,18400)|0);
 (_lua_pushthread($0)|0);
 $2 = (_lua_rawget($0,-2)|0);
 $3 = ($2|0)==(6);
 if (!($3)) {
  return;
 }
 $4 = load4($1);
 $5 = (2560 + ($4<<2)|0);
 $6 = load4($5);
 (_lua_pushstring($0,$6)|0);
 $7 = ((($1)) + 20|0);
 $8 = load4($7);
 $9 = ($8|0)>(-1);
 if ($9) {
  $10 = i64_sext($8);
  _lua_pushinteger($0,$10);
 } else {
  _lua_pushnil($0);
 }
 _lua_callk($0,2,0,0,0);
 return;
}
function _luaopen_io($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checkversion_($0,503.0,136);
 _lua_createtable($0,0,11);
 _luaL_setfuncs($0,2592,0);
 (_luaL_newmetatable($0,12436)|0);
 _lua_pushvalue($0,-1);
 _lua_setfield($0,-2,14857);
 _luaL_setfuncs($0,2688,0);
 _lua_settop($0,-2);
 $1 = load4(7368);
 $2 = (_lua_newuserdata($0,8)|0);
 $3 = ((($2)) + 4|0);
 store4($3,0);
 _luaL_setmetatable($0,12436);
 store4($2,$1);
 store4($3,167);
 _lua_pushvalue($0,-1);
 _lua_setfield($0,-1001000,12442);
 _lua_setfield($0,-2,12452);
 $4 = load4(7372);
 $5 = (_lua_newuserdata($0,8)|0);
 $6 = ((($5)) + 4|0);
 store4($6,0);
 _luaL_setmetatable($0,12436);
 store4($5,$4);
 store4($6,167);
 _lua_pushvalue($0,-1);
 _lua_setfield($0,-1001000,12458);
 _lua_setfield($0,-2,12469);
 $7 = load4(7364);
 $8 = (_lua_newuserdata($0,8)|0);
 $9 = ((($8)) + 4|0);
 store4($9,0);
 _luaL_setmetatable($0,12436);
 store4($8,$7);
 store4($9,167);
 _lua_setfield($0,-2,12476);
 return 1;
}
function _io_noclose($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_luaL_checkudata($0,1,12436)|0);
 $2 = ((($1)) + 4|0);
 store4($2,167);
 _lua_pushnil($0);
 (_lua_pushstring($0,12483)|0);
 return 2;
}
function _f_close($0) {
 $0 = $0|0;
 var $$sroa$0$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$0$$i = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $$sroa$0$i = sp + 4|0;
 $1 = (_luaL_checkudata($0,1,12436)|0);
 $2 = ((($1)) + 4|0);
 $3 = load4($2);
 $4 = ($3|0)==(0|0);
 if ($4) {
  (_luaL_error($0,12587,$vararg_buffer)|0);
 }
 $5 = (_luaL_checkudata($0,1,12436)|0);
 $6 = ((($5)) + 4|0);
 $7 = load4($6);
 store4($$sroa$0$i,$7);
 store4($6,0);
 $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$0$$i = load4($$sroa$0$i);
 $8 = $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$0$$i;
 $9 = (FUNCTION_TABLE_ii[$8 & 255]($0)|0);
 STACKTOP = sp;return ($9|0);
}
function _f_flush($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = (_luaL_checkudata($0,1,12436)|0);
 $2 = ((($1)) + 4|0);
 $3 = load4($2);
 $4 = ($3|0)==(0|0);
 if ($4) {
  (_luaL_error($0,12587,$vararg_buffer)|0);
 }
 $5 = load4($1);
 $6 = (_fflush($5)|0);
 $7 = ($6|0)==(0);
 $8 = $7&1;
 $9 = (_luaL_fileresult($0,$8,0)|0);
 STACKTOP = sp;return ($9|0);
}
function _f_lines($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = i64(), $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = (_luaL_checkudata($0,1,12436)|0);
 $2 = ((($1)) + 4|0);
 $3 = load4($2);
 $4 = ($3|0)==(0|0);
 if ($4) {
  (_luaL_error($0,12587,$vararg_buffer)|0);
 }
 $5 = (_lua_gettop($0)|0);
 $6 = (($5) + -1)|0;
 $7 = ($5|0)<(252);
 if (!($7)) {
  (_luaL_argerror($0,252,12678)|0);
 }
 $8 = i64_sext($6);
 _lua_pushinteger($0,$8);
 _lua_pushboolean($0,0);
 _lua_rotate($0,2,2);
 $9 = (($5) + 2)|0;
 _lua_pushcclosure($0,168,$9);
 STACKTOP = sp;return 1;
}
function _f_read($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = (_luaL_checkudata($0,1,12436)|0);
 $2 = ((($1)) + 4|0);
 $3 = load4($2);
 $4 = ($3|0)==(0|0);
 if ($4) {
  (_luaL_error($0,12587,$vararg_buffer)|0);
 }
 $5 = load4($1);
 $6 = (_g_read($0,$5,2)|0);
 STACKTOP = sp;return ($6|0);
}
function _f_seek($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = i64(), $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = i64(), $8 = 0, $9 = i64(), $vararg_buffer = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = (_luaL_checkudata($0,1,12436)|0);
 $2 = ((($1)) + 4|0);
 $3 = load4($2);
 $4 = ($3|0)==(0|0);
 if ($4) {
  (_luaL_error($0,12587,$vararg_buffer)|0);
 }
 $5 = load4($1);
 $6 = (_luaL_checkoption($0,2,12635,2784)|0);
 $7 = (i64(_luaL_optinteger($0,3,i64_const(0,0))));
 $8 = i64_trunc($7);
 $9 = i64_sext($8);
 $10 = i64_eq($7,$9);
 if (!($10)) {
  (_luaL_argerror($0,3,12639)|0);
 }
 $11 = (7324 + ($6<<2)|0);
 $12 = load4($11);
 $13 = (_fseek($5,$8,$12)|0);
 $14 = ($13|0)==(0);
 if ($14) {
  $16 = (_ftell($5)|0);
  $17 = i64_sext($16);
  _lua_pushinteger($0,$17);
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 } else {
  $15 = (_luaL_fileresult($0,0,0)|0);
  $$0 = $15;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _f_setvbuf($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = i64(), $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = (_luaL_checkudata($0,1,12436)|0);
 $2 = ((($1)) + 4|0);
 $3 = load4($2);
 $4 = ($3|0)==(0|0);
 if ($4) {
  (_luaL_error($0,12587,$vararg_buffer)|0);
 }
 $5 = load4($1);
 $6 = (_luaL_checkoption($0,2,0,2768)|0);
 $7 = (i64(_luaL_optinteger($0,3,i64_const(4096,0))));
 $8 = (7312 + ($6<<2)|0);
 $9 = load4($8);
 $10 = i64_trunc($7);
 $11 = (_setvbuf($5,0,$9,$10)|0);
 $12 = ($11|0)==(0);
 $13 = $12&1;
 $14 = (_luaL_fileresult($0,$13,0)|0);
 STACKTOP = sp;return ($14|0);
}
function _f_write($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = (_luaL_checkudata($0,1,12436)|0);
 $2 = ((($1)) + 4|0);
 $3 = load4($2);
 $4 = ($3|0)==(0|0);
 if ($4) {
  (_luaL_error($0,12587,$vararg_buffer)|0);
 }
 $5 = load4($1);
 _lua_pushvalue($0,1);
 $6 = (_g_write($0,$5,2)|0);
 STACKTOP = sp;return ($6|0);
}
function _f_gc($0) {
 $0 = $0|0;
 var $$sroa$0$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$0$$i = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$sroa$0$i = sp;
 $1 = (_luaL_checkudata($0,1,12436)|0);
 $2 = ((($1)) + 4|0);
 $3 = load4($2);
 $4 = ($3|0)==(0|0);
 if ($4) {
  STACKTOP = sp;return 0;
 }
 $5 = load4($1);
 $6 = ($5|0)==(0|0);
 if ($6) {
  STACKTOP = sp;return 0;
 }
 $7 = (_luaL_checkudata($0,1,12436)|0);
 $8 = ((($7)) + 4|0);
 $9 = load4($8);
 store4($$sroa$0$i,$9);
 store4($8,0);
 $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$0$$i = load4($$sroa$0$i);
 $10 = $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$0$$i;
 (FUNCTION_TABLE_ii[$10 & 255]($0)|0);
 STACKTOP = sp;return 0;
}
function _f_tostring($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = (_luaL_checkudata($0,1,12436)|0);
 $2 = ((($1)) + 4|0);
 $3 = load4($2);
 $4 = ($3|0)==(0|0);
 if ($4) {
  (_lua_pushstring($0,12563)|0);
  STACKTOP = sp;return 1;
 } else {
  $5 = load4($1);
  store4($vararg_buffer,$5);
  (_lua_pushfstring($0,12577,$vararg_buffer)|0);
  STACKTOP = sp;return 1;
 }
 return (0)|0;
}
function _g_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$02832 = 0, $$02931 = 0, $$1 = 0, $$1$in = 0, $$in = 0, $10 = 0, $11 = 0, $12 = i64(), $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = sp + 16|0;
 $4 = (_lua_gettop($0)|0);
 $5 = (($4) - ($2))|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $$02832 = $2;$$02931 = 1;$$in = $5;
 while(1) {
  $7 = (($$in) + -1)|0;
  $8 = (_lua_type($0,$$02832)|0);
  $9 = ($8|0)==(3);
  if ($9) {
   $10 = (_lua_isinteger($0,$$02832)|0);
   $11 = ($10|0)==(0);
   if ($11) {
    $14 = (+_lua_tonumberx($0,$$02832,0));
    stored($vararg_buffer1,$14);
    $15 = (_fprintf($1,12616,$vararg_buffer1)|0);
    $17 = $15;
   } else {
    $12 = (i64(_lua_tointegerx($0,$$02832,0)));
    store8($vararg_buffer,$12);
    $13 = (_fprintf($1,14670,$vararg_buffer)|0);
    $17 = $13;
   }
   $16 = ($$02931|0)!=(0);
   $18 = ($17|0)>(0);
   $19 = $16 & $18;
   $$1$in = $19;
  } else {
   $20 = (_luaL_checklstring($0,$$02832,$3)|0);
   $21 = ($$02931|0)==(0);
   if ($21) {
    $29 = 0;
   } else {
    $22 = load4($3);
    $23 = (_fwrite($20,1,$22,$1)|0);
    $24 = load4($3);
    $25 = ($23|0)==($24|0);
    $29 = $25;
   }
   $$1$in = $29;
  }
  $$1 = $$1$in&1;
  $26 = (($$02832) + 1)|0;
  $27 = ($7|0)==(0);
  if ($27) {
   break;
  } else {
   $$02832 = $26;$$02931 = $$1;$$in = $7;
  }
 }
 if ($$1$in) {
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $28 = (_luaL_fileresult($0,0,0)|0);
 $$0 = $28;
 STACKTOP = sp;return ($$0|0);
}
function _g_read($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i1979$i = 0, $$0$i2971$i = 0, $$0$lcssa5$i$i = 0, $$0$lcssa5$i30$i = 0, $$0$us$i2569$i = 0, $$0$us$i76$i = 0, $$012$ph$i = 0, $$01250$i = 0, $$01251$i = 0, $$013$i = 0, $$05398 = 0, $$06$i$i = 0, $$06$i32$i = 0, $$1$i = 0, $$154 = 0, $$3 = 0, $$358 = 0, $$4 = 0, $$pre11$i40$i = 0, $$pre11$i49$i = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = i64(), $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $isdigit$us$i$i = 0, $isdigit$us$i27$i = 0, $isdigit$us$i2768$i = 0, $isdigit$us$i44$i = 0, $isdigit$us$i4466$i = 0, $isdigit$us$i75$i = 0, $isdigittmp$us$i$i = 0, $isdigittmp$us$i26$i = 0, $isdigittmp$us$i2667$i = 0, $isdigittmp$us$i43$i = 0, $isdigittmp$us$i4365$i = 0, $isdigittmp$us$i74$i = 0, $or$cond$i = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4112|0;
 $3 = sp;
 $4 = (_lua_gettop($0)|0);
 _clearerr($1);
 $5 = ($4|0)==(1);
 L1: do {
  if ($5) {
   $6 = (_read_line($0,$1,1)|0);
   $7 = (($2) + 1)|0;
   $$154 = $7;$$4 = $6;
  } else {
   $8 = (($4) + 19)|0;
   _luaL_checkstack($0,$8,12678);
   $9 = (($4) + -2)|0;
   $10 = ((($3)) + 8|0);
   $11 = ((($3)) + 8|0);
   $12 = ((($3)) + 8|0);
   $13 = ((($3)) + 4|0);
   $14 = ((($3)) + 12|0);
   $$05398 = $2;$149 = $9;
   L4: while(1) {
    $15 = (_lua_type($0,$$05398)|0);
    $16 = ($15|0)==(3);
    L6: do {
     if ($16) {
      $17 = (i64(_luaL_checkinteger($0,$$05398)));
      $18 = i64_trunc($17);
      $19 = ($18|0)==(0);
      if ($19) {
       $20 = (_getc($1)|0);
       (_ungetc($20,$1)|0);
       (_lua_pushstring($0,19032)|0);
       $21 = ($20|0)!=(-1);
       $22 = $21&1;
       $$358 = $22;
       break;
      } else {
       _luaL_buffinit($0,$3);
       $23 = (_luaL_prepbuffsize($3,$18)|0);
       $24 = (_fread($23,1,$18,$1)|0);
       $25 = load4($10);
       $26 = (($25) + ($24))|0;
       store4($10,$26);
       _luaL_pushresult($3);
       $27 = ($24|0)!=(0);
       $28 = $27&1;
       $$358 = $28;
       break;
      }
     } else {
      $29 = (_luaL_checklstring($0,$$05398,0)|0);
      $30 = load1($29);
      $31 = ($30<<24>>24)==(42);
      $32 = ((($29)) + 1|0);
      $spec$select = $31 ? $32 : $29;
      $33 = load1($spec$select);
      $34 = $33 << 24 >> 24;
      switch ($34|0) {
      case 110:  {
       store4($3,$1);
       store4($11,0);
       $35 = (_localeconv()|0);
       $36 = load4($35);
       $37 = load1($36);
       while(1) {
        $38 = (_getc($1)|0);
        $39 = (_isspace($38)|0);
        $40 = ($39|0)==(0);
        if ($40) {
         break;
        }
       }
       store4($13,$38);
       switch ($38|0) {
       case 43: case 45:  {
        $41 = $38&255;
        store4($11,1);
        store1($14,$41);
        $42 = (_getc($1)|0);
        store4($13,$42);
        $43 = $42;$46 = 1;
        break;
       }
       default: {
        $43 = $38;$46 = 0;
       }
       }
       $44 = ($43|0)==(48);
       L20: do {
        if ($44) {
         $45 = (($46) + 1)|0;
         store4($11,$45);
         $47 = (((($3)) + 12|0) + ($46)|0);
         store1($47,48);
         $48 = (_getc($1)|0);
         store4($13,$48);
         switch ($48|0) {
         case 88: case 120:  {
          break;
         }
         default: {
          $$012$ph$i = 1;$$pre11$i49$i = $48;$158 = $45;
          label = 15;
          break L20;
         }
         }
         $57 = $48&255;
         $58 = $46 | 2;
         store4($11,$58);
         $59 = (((($3)) + 12|0) + ($45)|0);
         store1($59,$57);
         $60 = (_getc($1)|0);
         store4($13,$60);
         $61 = (_isxdigit($60)|0);
         $62 = ($61|0)==(0);
         if ($62) {
          $$01251$i = 0;$$06$i$i = 0;$106 = 0;$75 = $60;$78 = $58;
         } else {
          $$0$i1979$i = 0;$63 = $58;$66 = $60;
          while(1) {
           $64 = ($63>>>0)>(199);
           if ($64) {
            $$0$lcssa5$i$i = $$0$i1979$i;$$01250$i = 0;$159 = $63;$160 = $66;$161 = 0;
            label = 22;
            break L20;
           }
           $65 = $66&255;
           $67 = (($63) + 1)|0;
           store4($11,$67);
           $68 = (((($3)) + 12|0) + ($63)|0);
           store1($68,$65);
           $69 = (_getc($1)|0);
           store4($13,$69);
           $70 = (($$0$i1979$i) + 1)|0;
           $71 = (_isxdigit($69)|0);
           $72 = ($71|0)==(0);
           if ($72) {
            $$01251$i = 0;$$06$i$i = $70;$106 = 0;$75 = $69;$78 = $67;
            break;
           } else {
            $$0$i1979$i = $70;$63 = $67;$66 = $69;
           }
          }
         }
        } else {
         $$012$ph$i = 0;$$pre11$i49$i = $43;$158 = $46;
         label = 15;
        }
       } while(0);
       L27: do {
        if ((label|0) == 15) {
         label = 0;
         $isdigittmp$us$i74$i = (($$pre11$i49$i) + -48)|0;
         $isdigit$us$i75$i = ($isdigittmp$us$i74$i>>>0)<(10);
         if ($isdigit$us$i75$i) {
          $$0$us$i76$i = 0;$49 = $158;$52 = $$pre11$i49$i;
          while(1) {
           $50 = ($49|0)>(199);
           if ($50) {
            $$0$lcssa5$i$i = $$0$us$i76$i;$$01250$i = $$012$ph$i;$159 = $49;$160 = $52;$161 = 1;
            label = 22;
            break L27;
           }
           $51 = $52&255;
           $53 = (($49) + 1)|0;
           store4($11,$53);
           $54 = (((($3)) + 12|0) + ($49)|0);
           store1($54,$51);
           $55 = (_getc($1)|0);
           store4($13,$55);
           $56 = (($$0$us$i76$i) + 1)|0;
           $isdigittmp$us$i$i = (($55) + -48)|0;
           $isdigit$us$i$i = ($isdigittmp$us$i$i>>>0)<(10);
           if ($isdigit$us$i$i) {
            $$0$us$i76$i = $56;$49 = $53;$52 = $55;
           } else {
            $$01251$i = $$012$ph$i;$$06$i$i = $56;$106 = 1;$75 = $55;$78 = $53;
            break;
           }
          }
         } else {
          $$01251$i = $$012$ph$i;$$06$i$i = 0;$106 = 1;$75 = $$pre11$i49$i;$78 = $158;
         }
        }
       } while(0);
       if ((label|0) == 22) {
        label = 0;
        store1($14,0);
        $$01251$i = $$01250$i;$$06$i$i = $$0$lcssa5$i$i;$106 = $161;$75 = $160;$78 = $159;
       }
       $73 = (($$06$i$i) + ($$01251$i))|0;
       $74 = $37 << 24 >> 24;
       $76 = ($75|0)==($74|0);
       $77 = ($75|0)==(46);
       $or$cond$i = $76 | $77;
       do {
        if ($or$cond$i) {
         $79 = ($78|0)>(199);
         if ($79) {
          store1($14,0);
          $$1$i = $73;$110 = $75;$116 = $78;
          break;
         }
         $80 = $75&255;
         $81 = (($78) + 1)|0;
         store4($11,$81);
         $82 = (((($3)) + 12|0) + ($78)|0);
         store1($82,$80);
         $83 = (_getc($1)|0);
         store4($13,$83);
         L41: do {
          if ($106) {
           $isdigittmp$us$i2667$i = (($83) + -48)|0;
           $isdigit$us$i2768$i = ($isdigittmp$us$i2667$i>>>0)<(10);
           if ($isdigit$us$i2768$i) {
            $$0$us$i2569$i = 0;$84 = $81;$87 = $83;
            while(1) {
             $85 = ($84|0)>(199);
             if ($85) {
              $$0$lcssa5$i30$i = $$0$us$i2569$i;$164 = $87;
              label = 35;
              break L41;
             }
             $86 = $87&255;
             $88 = (($84) + 1)|0;
             store4($11,$88);
             $89 = (((($3)) + 12|0) + ($84)|0);
             store1($89,$86);
             $90 = (_getc($1)|0);
             store4($13,$90);
             $91 = (($$0$us$i2569$i) + 1)|0;
             $isdigittmp$us$i26$i = (($90) + -48)|0;
             $isdigit$us$i27$i = ($isdigittmp$us$i26$i>>>0)<(10);
             if ($isdigit$us$i27$i) {
              $$0$us$i2569$i = $91;$84 = $88;$87 = $90;
             } else {
              $$06$i32$i = $91;$162 = $88;$163 = $90;
              break;
             }
            }
           } else {
            $$06$i32$i = 0;$162 = $81;$163 = $83;
           }
          } else {
           $92 = (_isxdigit($83)|0);
           $93 = ($92|0)==(0);
           if ($93) {
            $$06$i32$i = 0;$162 = $81;$163 = $83;
           } else {
            $$0$i2971$i = 0;$94 = $81;$97 = $83;
            while(1) {
             $95 = ($94|0)>(199);
             if ($95) {
              $$0$lcssa5$i30$i = $$0$i2971$i;$164 = $97;
              label = 35;
              break L41;
             }
             $96 = $97&255;
             $98 = (($94) + 1)|0;
             store4($11,$98);
             $99 = (((($3)) + 12|0) + ($94)|0);
             store1($99,$96);
             $100 = (_getc($1)|0);
             store4($13,$100);
             $101 = (($$0$i2971$i) + 1)|0;
             $102 = (_isxdigit($100)|0);
             $103 = ($102|0)==(0);
             if ($103) {
              $$06$i32$i = $101;$162 = $98;$163 = $100;
              break;
             } else {
              $$0$i2971$i = $101;$94 = $98;$97 = $100;
             }
            }
           }
          }
         } while(0);
         if ((label|0) == 35) {
          label = 0;
          store1($14,0);
          $$06$i32$i = $$0$lcssa5$i30$i;$162 = 200;$163 = $164;
         }
         $104 = (($$06$i32$i) + ($73))|0;
         $$1$i = $104;$110 = $163;$116 = $162;
        } else {
         $$1$i = $73;$110 = $75;$116 = $78;
        }
       } while(0);
       $105 = ($$1$i|0)>(0);
       L56: do {
        if ($105) {
         $107 = $106 ? 12697 : 12700;
         $108 = load1($107);
         $109 = $108 << 24 >> 24;
         $111 = ($110|0)==($109|0);
         if (!($111)) {
          $112 = ((($107)) + 1|0);
          $113 = load1($112);
          $114 = $113 << 24 >> 24;
          $115 = ($110|0)==($114|0);
          if (!($115)) {
           $134 = $110;$136 = $116;
           break;
          }
         }
         $117 = ($116|0)>(199);
         if ($117) {
          store1($14,0);
          $134 = $110;$136 = $116;
          break;
         }
         $118 = $110&255;
         $119 = (($116) + 1)|0;
         store4($11,$119);
         $120 = (((($3)) + 12|0) + ($116)|0);
         store1($120,$118);
         $121 = (_getc($1)|0);
         store4($13,$121);
         L64: do {
          switch ($121|0) {
          case 43: case 45:  {
           $122 = ($116|0)>(198);
           if ($122) {
            store1($14,0);
            $$pre11$i40$i = $121;$165 = $119;
            break L64;
           } else {
            $123 = $121&255;
            $124 = (($116) + 2)|0;
            store4($11,$124);
            $125 = (((($3)) + 12|0) + ($119)|0);
            store1($125,$123);
            $126 = (_getc($1)|0);
            store4($13,$126);
            $$pre11$i40$i = $126;$165 = $124;
            break L64;
           }
           break;
          }
          default: {
           $$pre11$i40$i = $121;$165 = $119;
          }
          }
         } while(0);
         $isdigittmp$us$i4365$i = (($$pre11$i40$i) + -48)|0;
         $isdigit$us$i4466$i = ($isdigittmp$us$i4365$i>>>0)<(10);
         if ($isdigit$us$i4466$i) {
          $127 = $165;$130 = $$pre11$i40$i;
          while(1) {
           $128 = ($127|0)>(199);
           if ($128) {
            break;
           }
           $129 = $130&255;
           $131 = (($127) + 1)|0;
           store4($11,$131);
           $132 = (((($3)) + 12|0) + ($127)|0);
           store1($132,$129);
           $133 = (_getc($1)|0);
           store4($13,$133);
           $isdigittmp$us$i43$i = (($133) + -48)|0;
           $isdigit$us$i44$i = ($isdigittmp$us$i43$i>>>0)<(10);
           if ($isdigit$us$i44$i) {
            $127 = $131;$130 = $133;
           } else {
            $134 = $133;$136 = $131;
            break L56;
           }
          }
          store1($14,0);
          $134 = $130;$136 = 200;
         } else {
          $134 = $$pre11$i40$i;$136 = $165;
         }
        } else {
         $134 = $110;$136 = $116;
        }
       } while(0);
       (_ungetc($134,$1)|0);
       $135 = (((($3)) + 12|0) + ($136)|0);
       store1($135,0);
       $137 = (_lua_stringtonumber($0,$14)|0);
       $138 = ($137|0)==(0);
       if ($138) {
        _lua_pushnil($0);
        $$013$i = 0;
       } else {
        $$013$i = 1;
       }
       $$358 = $$013$i;
       break L6;
       break;
      }
      case 108:  {
       $139 = (_read_line($0,$1,1)|0);
       $$358 = $139;
       break L6;
       break;
      }
      case 76:  {
       $140 = (_read_line($0,$1,0)|0);
       $$358 = $140;
       break L6;
       break;
      }
      case 97:  {
       _luaL_buffinit($0,$3);
       while(1) {
        $141 = (_luaL_prepbuffsize($3,4096)|0);
        $142 = (_fread($141,1,4096,$1)|0);
        $143 = load4($12);
        $144 = (($143) + ($142))|0;
        store4($12,$144);
        $145 = ($142|0)==(4096);
        if (!($145)) {
         break;
        }
       }
       _luaL_pushresult($3);
       $$358 = 1;
       break L6;
       break;
      }
      default: {
       break L4;
      }
      }
     }
    } while(0);
    $147 = (($$05398) + 1)|0;
    $148 = (($149) + -1)|0;
    $150 = ($149|0)!=(0);
    $151 = ($$358|0)!=(0);
    $152 = $150 & $151;
    if ($152) {
     $$05398 = $147;$149 = $148;
    } else {
     $$154 = $147;$$4 = $$358;
     break L1;
    }
   }
   $146 = (_luaL_argerror($0,$$05398,12703)|0);
   $$3 = $146;
   STACKTOP = sp;return ($$3|0);
  }
 } while(0);
 $153 = (_ferror($1)|0);
 $154 = ($153|0)==(0);
 if (!($154)) {
  $155 = (_luaL_fileresult($0,0,0)|0);
  $$3 = $155;
  STACKTOP = sp;return ($$3|0);
 }
 $156 = ($$4|0)==(0);
 if ($156) {
  _lua_settop($0,-2);
  _lua_pushnil($0);
 }
 $157 = (($$154) - ($2))|0;
 $$3 = $157;
 STACKTOP = sp;return ($$3|0);
}
function _read_line($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$023 = 0, $$024 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4112|0;
 $3 = sp;
 _luaL_buffinit($0,$3);
 $4 = ((($3)) + 8|0);
 $$023 = 0;
 L1: while(1) {
  switch ($$023|0) {
  case 10: case -1:  {
   break L1;
   break;
  }
  default: {
  }
  }
  $5 = (_luaL_prepbuffsize($3,4096)|0);
  $$024 = 0;
  L4: while(1) {
   $6 = (_getc($1)|0);
   switch ($6|0) {
   case 10: case -1:  {
    $$0$lcssa = $$024;
    break L4;
    break;
   }
   default: {
   }
   }
   $7 = $6&255;
   $8 = (($$024) + 1)|0;
   $9 = (($5) + ($$024)|0);
   store1($9,$7);
   $10 = ($8>>>0)<(4096);
   if ($10) {
    $$024 = $8;
   } else {
    $$0$lcssa = 4096;
    break;
   }
  }
  $11 = load4($4);
  $12 = (($11) + ($$0$lcssa))|0;
  store4($4,$12);
  $$023 = $6;
 }
 $13 = ($2|0)==(0);
 $14 = ($$023|0)==(10);
 $or$cond = $13 & $14;
 if ($or$cond) {
  $15 = load4($4);
  $16 = ((($3)) + 4|0);
  $17 = load4($16);
  $18 = ($15>>>0)<($17>>>0);
  if ($18) {
   $21 = $15;
  } else {
   (_luaL_prepbuffsize($3,1)|0);
   $$pre = load4($4);
   $21 = $$pre;
  }
  $19 = load4($3);
  $20 = (($21) + 1)|0;
  store4($4,$20);
  $22 = (($19) + ($21)|0);
  store1($22,10);
 }
 _luaL_pushresult($3);
 if ($14) {
  $25 = 1;
  STACKTOP = sp;return ($25|0);
 }
 $23 = (_lua_rawlen($0,-1)|0);
 $24 = ($23|0)!=(0);
 $phitmp = $24&1;
 $25 = $phitmp;
 STACKTOP = sp;return ($25|0);
}
function _io_readline($0) {
 $0 = $0|0;
 var $$026 = 0, $$028 = 0, $$sroa$0$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$0$$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = i64(), $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $$sroa$0$i = sp + 12|0;
 $1 = (_lua_touserdata($0,-1001001)|0);
 $2 = (i64(_lua_tointegerx($0,-1001002,0)));
 $3 = i64_trunc($2);
 $4 = ((($1)) + 4|0);
 $5 = load4($4);
 $6 = ($5|0)==(0|0);
 if ($6) {
  $7 = (_luaL_error($0,12718,$vararg_buffer)|0);
  $$026 = $7;
  STACKTOP = sp;return ($$026|0);
 }
 _lua_settop($0,1);
 _luaL_checkstack($0,$3,12678);
 $8 = ($3|0)<(1);
 if (!($8)) {
  $$028 = 1;
  while(1) {
   $9 = (-1001003 - ($$028))|0;
   _lua_pushvalue($0,$9);
   $10 = (($$028) + 1)|0;
   $exitcond = ($$028|0)==($3|0);
   if ($exitcond) {
    break;
   } else {
    $$028 = $10;
   }
  }
 }
 $11 = load4($1);
 $12 = (_g_read($0,$11,2)|0);
 $13 = (0 - ($12))|0;
 $14 = (_lua_toboolean($0,$13)|0);
 $15 = ($14|0)==(0);
 if (!($15)) {
  $$026 = $12;
  STACKTOP = sp;return ($$026|0);
 }
 $16 = ($12|0)>(1);
 if ($16) {
  $17 = (1 - ($12))|0;
  $18 = (_lua_tolstring($0,$17,0)|0);
  store4($vararg_buffer1,$18);
  $19 = (_luaL_error($0,12741,$vararg_buffer1)|0);
  $$026 = $19;
  STACKTOP = sp;return ($$026|0);
 }
 $20 = (_lua_toboolean($0,-1001003)|0);
 $21 = ($20|0)==(0);
 if ($21) {
  $$026 = 0;
  STACKTOP = sp;return ($$026|0);
 }
 _lua_settop($0,0);
 _lua_pushvalue($0,-1001001);
 $22 = (_luaL_checkudata($0,1,12436)|0);
 $23 = ((($22)) + 4|0);
 $24 = load4($23);
 store4($$sroa$0$i,$24);
 store4($23,0);
 $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$0$$i = load4($$sroa$0$i);
 $25 = $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$0$$i;
 (FUNCTION_TABLE_ii[$25 & 255]($0)|0);
 $$026 = 0;
 STACKTOP = sp;return ($$026|0);
}
function _io_close($0) {
 $0 = $0|0;
 var $$sroa$0$i$i = 0, $$sroa$0$i$i$0$$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$0$$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $$sroa$0$i$i = sp + 4|0;
 $1 = (_lua_type($0,1)|0);
 $2 = ($1|0)==(-1);
 if ($2) {
  (_lua_getfield($0,-1001000,12458)|0);
 }
 $3 = (_luaL_checkudata($0,1,12436)|0);
 $4 = ((($3)) + 4|0);
 $5 = load4($4);
 $6 = ($5|0)==(0|0);
 if ($6) {
  (_luaL_error($0,12587,$vararg_buffer)|0);
 }
 $7 = (_luaL_checkudata($0,1,12436)|0);
 $8 = ((($7)) + 4|0);
 $9 = load4($8);
 store4($$sroa$0$i$i,$9);
 store4($8,0);
 $$sroa$0$i$i$0$$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$0$$i$i = load4($$sroa$0$i$i);
 $10 = $$sroa$0$i$i$0$$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$0$$i$i;
 $11 = (FUNCTION_TABLE_ii[$10 & 255]($0)|0);
 STACKTOP = sp;return ($11|0);
}
function _io_flush($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 (_lua_getfield($0,-1001000,12458)|0);
 $1 = (_lua_touserdata($0,-1)|0);
 $2 = ((($1)) + 4|0);
 $3 = load4($2);
 $4 = ($3|0)==(0|0);
 if ($4) {
  store4($vararg_buffer,(12462));
  (_luaL_error($0,12776,$vararg_buffer)|0);
 }
 $5 = load4($1);
 $6 = (_fflush($5)|0);
 $7 = ($6|0)==(0);
 $8 = $7&1;
 $9 = (_luaL_fileresult($0,$8,0)|0);
 STACKTOP = sp;return ($9|0);
}
function _io_input($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_iofile($0,12442,15927);
 return 1;
}
function _io_lines($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = i64(), $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = i64(), $26 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_ptr3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = (_lua_type($0,1)|0);
 $2 = ($1|0)==(-1);
 if ($2) {
  _lua_pushnil($0);
 }
 $3 = (_lua_type($0,1)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  (_lua_getfield($0,-1001000,12442)|0);
  _lua_copy($0,-1,1);
  _lua_settop($0,-2);
  $5 = (_luaL_checkudata($0,1,12436)|0);
  $6 = ((($5)) + 4|0);
  $7 = load4($6);
  $8 = ($7|0)==(0|0);
  if ($8) {
   (_luaL_error($0,12587,$vararg_buffer)|0);
  }
  $9 = (_lua_gettop($0)|0);
  $10 = (($9) + -1)|0;
  $11 = ($9|0)<(252);
  if (!($11)) {
   (_luaL_argerror($0,252,12678)|0);
  }
  $12 = i64_sext($10);
  _lua_pushinteger($0,$12);
  _lua_pushboolean($0,0);
  _lua_rotate($0,2,2);
  $13 = (($9) + 2)|0;
  _lua_pushcclosure($0,168,$13);
  STACKTOP = sp;return 1;
 } else {
  $14 = (_luaL_checklstring($0,1,0)|0);
  $15 = (_lua_newuserdata($0,8)|0);
  $16 = ((($15)) + 4|0);
  store4($16,0);
  _luaL_setmetatable($0,12436);
  store4($15,0);
  store4($16,169);
  $17 = (_fopen($14,15927)|0);
  store4($15,$17);
  $18 = ($17|0)==(0|0);
  if ($18) {
   $19 = (___errno_location()|0);
   $20 = load4($19);
   $21 = (_strerror($20)|0);
   store4($vararg_buffer1,$14);
   $vararg_ptr3 = ((($vararg_buffer1)) + 4|0);
   store4($vararg_ptr3,$21);
   (_luaL_error($0,12844,$vararg_buffer1)|0);
  }
  _lua_copy($0,-1,1);
  _lua_settop($0,-2);
  $22 = (_lua_gettop($0)|0);
  $23 = (($22) + -1)|0;
  $24 = ($22|0)<(252);
  if (!($24)) {
   (_luaL_argerror($0,252,12678)|0);
  }
  $25 = i64_sext($23);
  _lua_pushinteger($0,$25);
  _lua_pushboolean($0,1);
  _lua_rotate($0,2,2);
  $26 = (($22) + 2)|0;
  _lua_pushcclosure($0,168,$26);
  STACKTOP = sp;return 1;
 }
 return (0)|0;
}
function _io_open($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $memchr$i = 0;
 var $spec$select$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_luaL_checklstring($0,1,0)|0);
 $2 = (_luaL_optlstring($0,2,15927,0)|0);
 $3 = (_lua_newuserdata($0,8)|0);
 $4 = ((($3)) + 4|0);
 store4($4,0);
 _luaL_setmetatable($0,12436);
 store4($3,0);
 store4($4,169);
 $5 = load1($2);
 $6 = ($5<<24>>24)==(0);
 if ($6) {
  label = 4;
 } else {
  $7 = $5 << 24 >> 24;
  $8 = ((($2)) + 1|0);
  $memchr$i = (_memchr(16112,$7,4)|0);
  $9 = ($memchr$i|0)==(0|0);
  if ($9) {
   label = 4;
  } else {
   $10 = load1($8);
   $11 = ($10<<24>>24)==(43);
   $12 = ((($2)) + 2|0);
   $spec$select$i = $11 ? $12 : $8;
   $13 = (_strspn($spec$select$i,12871)|0);
   $14 = (_strlen($spec$select$i)|0);
   $15 = ($13|0)==($14|0);
   if (!($15)) {
    label = 4;
   }
  }
 }
 if ((label|0) == 4) {
  (_luaL_argerror($0,2,12873)|0);
 }
 $16 = (_fopen($1,$2)|0);
 store4($3,$16);
 $17 = ($16|0)==(0|0);
 if (!($17)) {
  $19 = 1;
  return ($19|0);
 }
 $18 = (_luaL_fileresult($0,0,$1)|0);
 $19 = $18;
 return ($19|0);
}
function _io_output($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_iofile($0,12458,12842);
 return 1;
}
function _io_popen($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = (_luaL_checklstring($0,1,0)|0);
 (_luaL_optlstring($0,2,15927,0)|0);
 $2 = (_lua_newuserdata($0,8)|0);
 $3 = ((($2)) + 4|0);
 store4($3,0);
 _luaL_setmetatable($0,12436);
 (_luaL_error($0,12820,$vararg_buffer)|0);
 store4($2,0);
 store4($3,170);
 $4 = (_luaL_fileresult($0,0,$1)|0);
 STACKTOP = sp;return ($4|0);
}
function _io_read($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 (_lua_getfield($0,-1001000,12442)|0);
 $1 = (_lua_touserdata($0,-1)|0);
 $2 = ((($1)) + 4|0);
 $3 = load4($2);
 $4 = ($3|0)==(0|0);
 if ($4) {
  store4($vararg_buffer,(12446));
  (_luaL_error($0,12776,$vararg_buffer)|0);
 }
 $5 = load4($1);
 $6 = (_g_read($0,$5,1)|0);
 STACKTOP = sp;return ($6|0);
}
function _io_tmpfile($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_newuserdata($0,8)|0);
 $2 = ((($1)) + 4|0);
 store4($2,0);
 _luaL_setmetatable($0,12436);
 store4($1,0);
 store4($2,169);
 $3 = (_tmpfile()|0);
 store4($1,$3);
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  $6 = 1;
  return ($6|0);
 }
 $5 = (_luaL_fileresult($0,0,0)|0);
 $6 = $5;
 return ($6|0);
}
function _io_type($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checkany($0,1);
 $1 = (_luaL_testudata($0,1,12436)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  _lua_pushnil($0);
  return 1;
 }
 $3 = ((($1)) + 4|0);
 $4 = load4($3);
 $5 = ($4|0)==(0|0);
 if ($5) {
  (_lua_pushstring($0,12803)|0);
  return 1;
 } else {
  (_lua_pushstring($0,12815)|0);
  return 1;
 }
 return (0)|0;
}
function _io_write($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 (_lua_getfield($0,-1001000,12458)|0);
 $1 = (_lua_touserdata($0,-1)|0);
 $2 = ((($1)) + 4|0);
 $3 = load4($2);
 $4 = ($3|0)==(0|0);
 if ($4) {
  store4($vararg_buffer,(12462));
  (_luaL_error($0,12776,$vararg_buffer)|0);
 }
 $5 = load4($1);
 $6 = (_g_write($0,$5,1)|0);
 STACKTOP = sp;return ($6|0);
}
function _io_fclose($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_luaL_checkudata($0,1,12436)|0);
 $2 = load4($1);
 $3 = (_fclose($2)|0);
 $4 = ($3|0)==(0);
 $5 = $4&1;
 $6 = (_luaL_fileresult($0,$5,0)|0);
 return ($6|0);
}
function _io_pclose($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (_luaL_checkudata($0,1,12436)|0);
 $1 = (_luaL_execresult($0,-1)|0);
 return ($1|0);
}
function _g_iofile($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = (_lua_type($0,1)|0);
 $4 = ($3|0)<(1);
 if ($4) {
  (_lua_getfield($0,-1001000,$1)|0);
  STACKTOP = sp;return;
 }
 $5 = (_lua_tolstring($0,1,0)|0);
 $6 = ($5|0)==(0|0);
 if ($6) {
  $14 = (_luaL_checkudata($0,1,12436)|0);
  $15 = ((($14)) + 4|0);
  $16 = load4($15);
  $17 = ($16|0)==(0|0);
  if ($17) {
   (_luaL_error($0,12587,$vararg_buffer2)|0);
  }
  _lua_pushvalue($0,1);
 } else {
  $7 = (_lua_newuserdata($0,8)|0);
  $8 = ((($7)) + 4|0);
  store4($8,0);
  _luaL_setmetatable($0,12436);
  store4($7,0);
  store4($8,169);
  $9 = (_fopen($5,$2)|0);
  store4($7,$9);
  $10 = ($9|0)==(0|0);
  if ($10) {
   $11 = (___errno_location()|0);
   $12 = load4($11);
   $13 = (_strerror($12)|0);
   store4($vararg_buffer,$5);
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   store4($vararg_ptr1,$13);
   (_luaL_error($0,12844,$vararg_buffer)|0);
  }
 }
 _lua_setfield($0,-1001000,$1);
 (_lua_getfield($0,-1001000,$1)|0);
 STACKTOP = sp;return;
}
function _luaopen_math($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checkversion_($0,503.0,136);
 _lua_createtable($0,0,35);
 _luaL_setfuncs($0,2800,0);
 _lua_pushnumber($0,3.1415926535897931);
 _lua_setfield($0,-2,12886);
 _lua_pushnumber($0,inf);
 _lua_setfield($0,-2,12889);
 _lua_pushinteger($0,i64_const(4294967295,2147483647));
 _lua_setfield($0,-2,12894);
 _lua_pushinteger($0,i64_const(0,2147483648));
 _lua_setfield($0,-2,12905);
 return 1;
}
function _math_abs($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = i64(), $4 = 0, $5 = i64(), $6 = 0.0, $7 = 0.0, $spec$select = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_isinteger($0,1)|0);
 $2 = ($1|0)==(0);
 if ($2) {
  $6 = (+_luaL_checknumber($0,1));
  $7 = (+Math_abs((+$6)));
  _lua_pushnumber($0,$7);
  return 1;
 } else {
  $3 = (i64(_lua_tointegerx($0,1,0)));
  $4 = i64_slt($3,i64_const(0,0));
  $5 = i64_sub(i64_const(0,0),$3);
  $spec$select = $4 ? $5 : $3;
  _lua_pushinteger($0,$spec$select);
  return 1;
 }
 return (0)|0;
}
function _math_acos($0) {
 $0 = $0|0;
 var $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (+_luaL_checknumber($0,1));
 $2 = (+_acos($1));
 _lua_pushnumber($0,$2);
 return 1;
}
function _math_asin($0) {
 $0 = $0|0;
 var $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (+_luaL_checknumber($0,1));
 $2 = (+_asin($1));
 _lua_pushnumber($0,$2);
 return 1;
}
function _math_atan($0) {
 $0 = $0|0;
 var $1 = 0.0, $2 = 0.0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (+_luaL_checknumber($0,1));
 $2 = (+_luaL_optnumber($0,2,1.0));
 $3 = (+_atan2($1,$2));
 _lua_pushnumber($0,$3);
 return 1;
}
function _math_ceil($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0.0, $4 = 0.0, $5 = 0, $6 = 0, $7 = i64(), $or$cond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_isinteger($0,1)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  _lua_settop($0,1);
  return 1;
 }
 $3 = (+_luaL_checknumber($0,1));
 $4 = (+Math_ceil((+$3)));
 $5 = $4 >= -9.2233720368547758E+18;
 $6 = $4 < 9.2233720368547758E+18;
 $or$cond$i = $5 & $6;
 if ($or$cond$i) {
  $7 = i64_d2s($4);
  _lua_pushinteger($0,$7);
  return 1;
 } else {
  _lua_pushnumber($0,$4);
  return 1;
 }
 return (0)|0;
}
function _math_cos($0) {
 $0 = $0|0;
 var $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (+_luaL_checknumber($0,1));
 $2 = (+_cos($1));
 _lua_pushnumber($0,$2);
 return 1;
}
function _math_deg($0) {
 $0 = $0|0;
 var $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (+_luaL_checknumber($0,1));
 $2 = $1 * 57.295779513082323;
 _lua_pushnumber($0,$2);
 return 1;
}
function _math_exp($0) {
 $0 = $0|0;
 var $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (+_luaL_checknumber($0,1));
 $2 = (+_exp($1));
 _lua_pushnumber($0,$2);
 return 1;
}
function _math_toint($0) {
 $0 = $0|0;
 var $1 = 0, $2 = i64(), $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = (i64(_lua_tointegerx($0,1,$1)));
 $3 = load4($1);
 $4 = ($3|0)==(0);
 if ($4) {
  _luaL_checkany($0,1);
  _lua_pushnil($0);
  STACKTOP = sp;return 1;
 } else {
  _lua_pushinteger($0,$2);
  STACKTOP = sp;return 1;
 }
 return (0)|0;
}
function _math_floor($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0.0, $4 = 0.0, $5 = 0, $6 = 0, $7 = i64(), $or$cond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_isinteger($0,1)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  _lua_settop($0,1);
  return 1;
 }
 $3 = (+_luaL_checknumber($0,1));
 $4 = (+Math_floor((+$3)));
 $5 = $4 >= -9.2233720368547758E+18;
 $6 = $4 < 9.2233720368547758E+18;
 $or$cond$i = $5 & $6;
 if ($or$cond$i) {
  $7 = i64_d2s($4);
  _lua_pushinteger($0,$7);
  return 1;
 } else {
  _lua_pushnumber($0,$4);
  return 1;
 }
 return (0)|0;
}
function _math_fmod($0) {
 $0 = $0|0;
 var $1 = 0, $10 = i64(), $11 = 0.0, $12 = 0.0, $13 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = i64(), $6 = i64(), $7 = 0, $8 = 0, $9 = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_isinteger($0,1)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_lua_isinteger($0,2)|0);
  $4 = ($3|0)==(0);
  if (!($4)) {
   $5 = (i64(_lua_tointegerx($0,2,0)));
   $6 = i64_add($5,i64_const(1,0));
   $7 = i64_ult($6,i64_const(2,0));
   if (!($7)) {
    $9 = (i64(_lua_tointegerx($0,1,0)));
    $10 = i64_srem($9,$5);
    _lua_pushinteger($0,$10);
    return 1;
   }
   $8 = i64_eq($5,i64_const(0,0));
   if ($8) {
    (_luaL_argerror($0,2,13165)|0);
   }
   _lua_pushinteger($0,i64_const(0,0));
   return 1;
  }
 }
 $11 = (+_luaL_checknumber($0,1));
 $12 = (+_luaL_checknumber($0,2));
 $13 = $11 % $12;
 _lua_pushnumber($0,$13);
 return 1;
}
function _math_ult($0) {
 $0 = $0|0;
 var $1 = i64(), $2 = i64(), $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (i64(_luaL_checkinteger($0,1)));
 $2 = (i64(_luaL_checkinteger($0,2)));
 $3 = i64_ult($1,$2);
 $4 = $3&1;
 _lua_pushboolean($0,$4);
 return 1;
}
function _math_log($0) {
 $0 = $0|0;
 var $$1 = 0.0, $1 = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0.0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (+_luaL_checknumber($0,1));
 $2 = (_lua_type($0,2)|0);
 $3 = ($2|0)<(1);
 do {
  if ($3) {
   $4 = (+_log($1));
   $$1 = $4;
  } else {
   $5 = (+_luaL_checknumber($0,2));
   $6 = $5 == 2.0;
   if ($6) {
    $7 = (+_llvm_log2_f64((+$1)));
    $$1 = $7;
    break;
   }
   $8 = $5 == 10.0;
   if ($8) {
    $9 = (+_llvm_log10_f64((+$1)));
    $$1 = $9;
    break;
   } else {
    $10 = (+_log($1));
    $11 = (+_log($5));
    $12 = $10 / $11;
    $$1 = $12;
    break;
   }
  }
 } while(0);
 _lua_pushnumber($0,$$1);
 return 1;
}
function _math_max($0) {
 $0 = $0|0;
 var $$014$lcssa = 0, $$01415 = 0, $$016 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $exitcond = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_gettop($0)|0);
 $2 = ($1|0)>(0);
 if ($2) {
  $3 = ($1|0)==(1);
  if ($3) {
   $$014$lcssa = 1;
  } else {
   $$01415 = 1;$$016 = 2;
   while(1) {
    $4 = (_lua_compare($0,$$01415,$$016,1)|0);
    $5 = ($4|0)==(0);
    $spec$select = $5 ? $$01415 : $$016;
    $6 = (($$016) + 1)|0;
    $exitcond = ($$016|0)==($1|0);
    if ($exitcond) {
     $$014$lcssa = $spec$select;
     break;
    } else {
     $$01415 = $spec$select;$$016 = $6;
    }
   }
  }
 } else {
  (_luaL_argerror($0,1,13150)|0);
  $$014$lcssa = 1;
 }
 _lua_pushvalue($0,$$014$lcssa);
 return 1;
}
function _math_min($0) {
 $0 = $0|0;
 var $$015$lcssa = 0, $$01516 = 0, $$017 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $exitcond = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_gettop($0)|0);
 $2 = ($1|0)>(0);
 if ($2) {
  $3 = ($1|0)==(1);
  if ($3) {
   $$015$lcssa = 1;
  } else {
   $$01516 = 1;$$017 = 2;
   while(1) {
    $4 = (_lua_compare($0,$$017,$$01516,1)|0);
    $5 = ($4|0)==(0);
    $spec$select = $5 ? $$01516 : $$017;
    $6 = (($$017) + 1)|0;
    $exitcond = ($$017|0)==($1|0);
    if ($exitcond) {
     $$015$lcssa = $spec$select;
     break;
    } else {
     $$01516 = $spec$select;$$017 = $6;
    }
   }
  }
 } else {
  (_luaL_argerror($0,1,13150)|0);
  $$015$lcssa = 1;
 }
 _lua_pushvalue($0,$$015$lcssa);
 return 1;
}
function _math_modf($0) {
 $0 = $0|0;
 var $1 = 0, $10 = i64(), $11 = 0, $12 = 0.0, $13 = 0.0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, $or$cond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_isinteger($0,1)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  _lua_settop($0,1);
  _lua_pushnumber($0,0.0);
  return 2;
 }
 $3 = (+_luaL_checknumber($0,1));
 $4 = $3 < 0.0;
 $5 = (+Math_ceil((+$3)));
 $6 = (+Math_floor((+$3)));
 $7 = $4 ? $5 : $6;
 $8 = $7 >= -9.2233720368547758E+18;
 $9 = $7 < 9.2233720368547758E+18;
 $or$cond$i = $8 & $9;
 if ($or$cond$i) {
  $10 = i64_d2s($7);
  _lua_pushinteger($0,$10);
 } else {
  _lua_pushnumber($0,$7);
 }
 $11 = $3 == $7;
 $12 = $3 - $7;
 $13 = $11 ? 0.0 : $12;
 _lua_pushnumber($0,$13);
 return 2;
}
function _math_rad($0) {
 $0 = $0|0;
 var $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (+_luaL_checknumber($0,1));
 $2 = $1 * 0.017453292519943295;
 _lua_pushnumber($0,$2);
 return 1;
}
function _math_random($0) {
 $0 = $0|0;
 var $$025 = i64(), $$026 = 0, $$sink = 0, $1 = 0, $10 = i64(), $11 = 0, $12 = i64(), $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = i64(), $17 = i64(), $2 = 0.0, $3 = 0.0, $4 = 0, $5 = i64(), $6 = 0, $7 = i64(), $8 = 0, $9 = 0;
 var $or$cond = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = (_rand()|0);
 $2 = (+($1|0));
 $3 = $2 * 4.6566128730773926E-10;
 $4 = (_lua_gettop($0)|0);
 switch ($4|0) {
 case 0:  {
  _lua_pushnumber($0,$3);
  $$026 = 1;
  STACKTOP = sp;return ($$026|0);
  break;
 }
 case 1:  {
  $$025 = i64_const(1,0);$$sink = $4;
  break;
 }
 case 2:  {
  $5 = (i64(_luaL_checkinteger($0,1)));
  $$025 = $5;$$sink = 2;
  break;
 }
 default: {
  $6 = (_luaL_error($0,13087,$vararg_buffer)|0);
  $$026 = $6;
  STACKTOP = sp;return ($$026|0);
 }
 }
 $7 = (i64(_luaL_checkinteger($0,$$sink)));
 $8 = i64_slt($7,$$025);
 if ($8) {
  (_luaL_argerror($0,1,13113)|0);
 }
 $9 = i64_slt($$025,i64_const(0,0));
 $10 = i64_add($$025,i64_const(4294967295,2147483647));
 $11 = i64_sgt($7,$10);
 $or$cond = $9 & $11;
 if ($or$cond) {
  (_luaL_argerror($0,1,13131)|0);
 }
 $12 = i64_sub($7,$$025);
 $13 = i64_s2d($12);
 $14 = $13 + 1.0;
 $15 = $3 * $14;
 $16 = i64_d2s($15);
 $17 = i64_add($$025,$16);
 _lua_pushinteger($0,$17);
 $$026 = 1;
 STACKTOP = sp;return ($$026|0);
}
function _math_randomseed($0) {
 $0 = $0|0;
 var $1 = 0.0, $2 = i64(), $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (+_luaL_checknumber($0,1));
 $2 = i64_d2s($1);
 $3 = i64_trunc($2);
 _srand($3);
 (_rand()|0);
 return 0;
}
function _math_sin($0) {
 $0 = $0|0;
 var $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (+_luaL_checknumber($0,1));
 $2 = (+_sin($1));
 _lua_pushnumber($0,$2);
 return 1;
}
function _math_sqrt($0) {
 $0 = $0|0;
 var $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (+_luaL_checknumber($0,1));
 $2 = (+Math_sqrt((+$1)));
 _lua_pushnumber($0,$2);
 return 1;
}
function _math_tan($0) {
 $0 = $0|0;
 var $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (+_luaL_checknumber($0,1));
 $2 = (+_tan($1));
 _lua_pushnumber($0,$2);
 return 1;
}
function _math_type($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_type($0,1)|0);
 $2 = ($1|0)==(3);
 if (!($2)) {
  _luaL_checkany($0,1);
  _lua_pushnil($0);
  return 1;
 }
 $3 = (_lua_isinteger($0,1)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  (_lua_pushstring($0,13081)|0);
  return 1;
 } else {
  (_lua_pushstring($0,13073)|0);
  return 1;
 }
 return (0)|0;
}
function _math_cosh($0) {
 $0 = $0|0;
 var $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (+_luaL_checknumber($0,1));
 $2 = (+_cosh($1));
 _lua_pushnumber($0,$2);
 return 1;
}
function _math_sinh($0) {
 $0 = $0|0;
 var $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (+_luaL_checknumber($0,1));
 $2 = (+_sinh($1));
 _lua_pushnumber($0,$2);
 return 1;
}
function _math_tanh($0) {
 $0 = $0|0;
 var $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (+_luaL_checknumber($0,1));
 $2 = (+_tanh($1));
 _lua_pushnumber($0,$2);
 return 1;
}
function _math_pow($0) {
 $0 = $0|0;
 var $1 = 0.0, $2 = 0.0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (+_luaL_checknumber($0,1));
 $2 = (+_luaL_checknumber($0,2));
 $3 = (+_pow($1,$2));
 _lua_pushnumber($0,$3);
 return 1;
}
function _math_frexp($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0.0, $3 = 0.0, $4 = 0, $5 = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = (+_luaL_checknumber($0,1));
 $3 = (+_frexp($2,$1));
 _lua_pushnumber($0,$3);
 $4 = load4($1);
 $5 = i64_sext($4);
 _lua_pushinteger($0,$5);
 STACKTOP = sp;return 2;
}
function _math_ldexp($0) {
 $0 = $0|0;
 var $1 = 0.0, $2 = i64(), $3 = 0, $4 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (+_luaL_checknumber($0,1));
 $2 = (i64(_luaL_checkinteger($0,2)));
 $3 = i64_trunc($2);
 $4 = (+_ldexp($1,$3));
 _lua_pushnumber($0,$4);
 return 1;
}
function _math_log10($0) {
 $0 = $0|0;
 var $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (+_luaL_checknumber($0,1));
 $2 = (+_llvm_log10_f64((+$1)));
 _lua_pushnumber($0,$2);
 return 1;
}
function _luaopen_os($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checkversion_($0,503.0,136);
 _lua_createtable($0,0,11);
 _luaL_setfuncs($0,3088,0);
 return 1;
}
function _os_clock($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0.0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_clock()|0);
 $2 = (+($1|0));
 $3 = $2 / 1.0E+6;
 _lua_pushnumber($0,$3);
 return 1;
}
function _os_date($0) {
 $0 = $0|0;
 var $$0 = 0, $$02427$i = 0, $$025$i = 0, $$028$i = 0, $$036 = 0, $$037 = 0, $$1$i = 0, $$139 = 0, $$2 = 0, $$pre = 0, $$pre41 = 0, $1 = 0, $10 = 0, $11 = i64(), $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = i64(), $or$cond$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4144|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = sp + 4132|0;
 $2 = sp + 4128|0;
 $3 = sp + 4136|0;
 $4 = sp + 16|0;
 $5 = (_luaL_optlstring($0,1,13519,$1)|0);
 $6 = (_lua_type($0,2)|0);
 $7 = ($6|0)<(1);
 if ($7) {
  $8 = (_time((0|0))|0);
  $13 = $8;
 } else {
  $9 = (i64(_luaL_checkinteger($0,2)));
  $10 = i64_trunc($9);
  $11 = i64_sext($10);
  $12 = i64_eq($9,$11);
  if ($12) {
   $13 = $10;
  } else {
   (_luaL_argerror($0,2,13500)|0);
   $13 = $10;
  }
 }
 store4($2,$13);
 $14 = load4($1);
 $15 = (($5) + ($14)|0);
 $16 = load1($5);
 $17 = ($16<<24>>24)==(33);
 if ($17) {
  $18 = (_gmtime(($2|0))|0);
  $19 = ((($5)) + 1|0);
  $$036 = $19;$$037 = $18;
 } else {
  $20 = (_localtime(($2|0))|0);
  $$036 = $5;$$037 = $20;
 }
 $21 = ($$037|0)==(0|0);
 if ($21) {
  $22 = (_luaL_error($0,13367,$vararg_buffer)|0);
  $$0 = $22;
  STACKTOP = sp;return ($$0|0);
 }
 $23 = (_strcmp($$036,13522)|0);
 $24 = ($23|0)==(0);
 if ($24) {
  _lua_createtable($0,0,9);
  _setallfields($0,$$037);
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 store1($3,37);
 _luaL_buffinit($0,$4);
 $25 = ($$036>>>0)<($15>>>0);
 if ($25) {
  $26 = $15;
  $27 = ((($3)) + 1|0);
  $28 = ((($4)) + 8|0);
  $29 = ((($4)) + 4|0);
  $$139 = $$036;
  while(1) {
   $30 = load1($$139);
   $31 = ($30<<24>>24)==(37);
   if ($31) {
    $41 = (_luaL_prepbuffsize($4,250)|0);
    $42 = ((($$139)) + 1|0);
    $43 = $42;
    $44 = (($26) - ($43))|0;
    $45 = ($44|0)<(1);
    L24: do {
     if ($45) {
      label = 25;
     } else {
      $$02427$i = 13525;$$028$i = 1;$46 = 97;
      while(1) {
       $47 = ($46<<24>>24)==(124);
       if ($47) {
        $48 = (($$028$i) + 1)|0;
        $$1$i = $48;
       } else {
        $49 = (_memcmp($42,$$02427$i,$$028$i)|0);
        $50 = ($49|0)==(0);
        if ($50) {
         break;
        } else {
         $$1$i = $$028$i;
        }
       }
       $53 = (($$02427$i) + ($$1$i)|0);
       $54 = load1($53);
       $55 = ($54<<24>>24)==(0);
       $56 = ($$1$i|0)>($44|0);
       $or$cond$i = $56 | $55;
       if ($or$cond$i) {
        label = 25;
        break L24;
       } else {
        $$02427$i = $53;$$028$i = $$1$i;$46 = $54;
       }
      }
      _memcpy(($27|0),($42|0),($$028$i|0))|0;
      $51 = (($27) + ($$028$i)|0);
      store1($51,0);
      $52 = (($42) + ($$028$i)|0);
      $$025$i = $52;
     }
    } while(0);
    if ((label|0) == 25) {
     label = 0;
     store4($vararg_buffer1,$42);
     $57 = (_lua_pushfstring($0,13603,$vararg_buffer1)|0);
     (_luaL_argerror($0,1,$57)|0);
     $$025$i = $42;
    }
    $58 = (_strftime(($41|0),250,($3|0),($$037|0))|0);
    $59 = load4($28);
    $60 = (($59) + ($58))|0;
    store4($28,$60);
    $$2 = $$025$i;
   } else {
    $32 = load4($28);
    $33 = load4($29);
    $34 = ($32>>>0)<($33>>>0);
    if ($34) {
     $38 = $32;$40 = $30;
    } else {
     (_luaL_prepbuffsize($4,1)|0);
     $$pre = load1($$139);
     $$pre41 = load4($28);
     $38 = $$pre41;$40 = $$pre;
    }
    $35 = ((($$139)) + 1|0);
    $36 = load4($4);
    $37 = (($38) + 1)|0;
    store4($28,$37);
    $39 = (($36) + ($38)|0);
    store1($39,$40);
    $$2 = $35;
   }
   $61 = ($$2>>>0)<($15>>>0);
   if ($61) {
    $$139 = $$2;
   } else {
    break;
   }
  }
 }
 _luaL_pushresult($4);
 $$0 = 1;
 STACKTOP = sp;return ($$0|0);
}
function _os_difftime($0) {
 $0 = $0|0;
 var $1 = i64(), $2 = 0, $3 = i64(), $4 = 0, $5 = i64(), $6 = 0, $7 = i64(), $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (i64(_luaL_checkinteger($0,1)));
 $2 = i64_trunc($1);
 $3 = i64_sext($2);
 $4 = i64_eq($1,$3);
 if (!($4)) {
  (_luaL_argerror($0,1,13500)|0);
 }
 $5 = (i64(_luaL_checkinteger($0,2)));
 $6 = i64_trunc($5);
 $7 = i64_sext($6);
 $8 = i64_eq($5,$7);
 if (!($8)) {
  (_luaL_argerror($0,2,13500)|0);
 }
 $9 = (+_difftime(($2|0),($6|0)));
 _lua_pushnumber($0,$9);
 return 1;
}
function _os_execute($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_luaL_optlstring($0,1,0,0)|0);
 $2 = (_system(($1|0))|0);
 $3 = ($1|0)==(0|0);
 if ($3) {
  _lua_pushboolean($0,$2);
  $$0 = 1;
  return ($$0|0);
 } else {
  $4 = (_luaL_execresult($0,$2)|0);
  $$0 = $4;
  return ($$0|0);
 }
 return (0)|0;
}
function _os_exit($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = i64(), $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_type($0,1)|0);
 $2 = ($1|0)==(1);
 if ($2) {
  $3 = (_lua_toboolean($0,1)|0);
  $4 = ($3|0)==(0);
  $5 = $4&1;
  $$0 = $5;
 } else {
  $6 = (i64(_luaL_optinteger($0,1,i64_const(0,0))));
  $7 = i64_trunc($6);
  $$0 = $7;
 }
 $8 = (_lua_toboolean($0,2)|0);
 $9 = ($8|0)==(0);
 if (!($9)) {
  _lua_close($0);
 }
 $10 = ($0|0)==(0|0);
 if ($10) {
  return 0;
 } else {
  _exit(($$0|0));
  // unreachable;
 }
 return (0)|0;
}
function _os_getenv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_luaL_checklstring($0,1,0)|0);
 $2 = (_getenv(($1|0))|0);
 (_lua_pushstring($0,$2)|0);
 return 1;
}
function _os_remove($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_luaL_checklstring($0,1,0)|0);
 $2 = (_remove($1)|0);
 $3 = ($2|0)==(0);
 $4 = $3&1;
 $5 = (_luaL_fileresult($0,$4,$1)|0);
 return ($5|0);
}
function _os_rename($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_luaL_checklstring($0,1,0)|0);
 $2 = (_luaL_checklstring($0,2,0)|0);
 $3 = (_rename($1,$2)|0);
 $4 = ($3|0)==(0);
 $5 = $4&1;
 $6 = (_luaL_fileresult($0,$5,0)|0);
 return ($6|0);
}
function _os_setlocale($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_luaL_optlstring($0,1,0,0)|0);
 $2 = (_luaL_checkoption($0,2,13465,3184)|0);
 $3 = (3216 + ($2<<2)|0);
 $4 = load4($3);
 $5 = (_setlocale($4,$1)|0);
 (_lua_pushstring($0,$5)|0);
 return 1;
}
function _os_time($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$off0$i = 0, $$0$off0$i20 = 0, $$0$off0$i24 = 0, $$018 = 0, $$022$i = 0, $$022$i21 = 0, $$022$i25 = 0, $$off$i = i64(), $$off$i19 = i64(), $$off$i23 = i64(), $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = i64(), $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = i64(), $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = i64(), $5 = 0, $6 = 0, $7 = i64(), $8 = 0, $9 = 0;
 var $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer13 = 0, $vararg_buffer16 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $vararg_buffer16 = sp + 48|0;
 $vararg_buffer13 = sp + 40|0;
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = sp + 96|0;
 $2 = sp + 52|0;
 $3 = (_lua_type($0,1)|0);
 $4 = ($3|0)<(1);
 if ($4) {
  $5 = (_time((0|0))|0);
  $$0 = $5;
 } else {
  _luaL_checktype($0,1,5);
  _lua_settop($0,1);
  $6 = (_lua_getfield($0,-1,13277)|0);
  $7 = (i64(_lua_tointegerx($0,-1,$1)));
  $8 = load4($1);
  $9 = ($8|0)==(0);
  do {
   if ($9) {
    $10 = ($6|0)==(0);
    if ($10) {
     $$0$off0$i = 0;
     label = 9;
    } else {
     store4($vararg_buffer,13277);
     $11 = (_luaL_error($0,13281,$vararg_buffer)|0);
     $$022$i = $11;
    }
   } else {
    $$off$i = i64_add($7,i64_const(1073741823,0));
    $12 = i64_ult($$off$i,i64_const(2147483647,0));
    if ($12) {
     $14 = i64_trunc($7);
     $$0$off0$i = $14;
     label = 9;
     break;
    } else {
     store4($vararg_buffer1,13277);
     $13 = (_luaL_error($0,13310,$vararg_buffer1)|0);
     $$022$i = $13;
     break;
    }
   }
  } while(0);
  if ((label|0) == 9) {
   _lua_settop($0,-2);
   $$022$i = $$0$off0$i;
  }
  store4($2,$$022$i);
  $15 = (_lua_getfield($0,-1,13337)|0);
  $16 = (i64(_lua_tointegerx($0,-1,$1)));
  $17 = load4($1);
  $18 = ($17|0)==(0);
  do {
   if ($18) {
    $19 = ($15|0)==(0);
    if ($19) {
     $$0$off0$i20 = 0;
     label = 16;
    } else {
     store4($vararg_buffer4,13337);
     $20 = (_luaL_error($0,13281,$vararg_buffer4)|0);
     $$022$i21 = $20;
    }
   } else {
    $$off$i19 = i64_add($16,i64_const(1073741823,0));
    $21 = i64_ult($$off$i19,i64_const(2147483647,0));
    if ($21) {
     $23 = i64_trunc($16);
     $$0$off0$i20 = $23;
     label = 16;
     break;
    } else {
     store4($vararg_buffer7,13337);
     $22 = (_luaL_error($0,13310,$vararg_buffer7)|0);
     $$022$i21 = $22;
     break;
    }
   }
  } while(0);
  if ((label|0) == 16) {
   _lua_settop($0,-2);
   $$022$i21 = $$0$off0$i20;
  }
  $24 = ((($2)) + 4|0);
  store4($24,$$022$i21);
  $25 = (_lua_getfield($0,-1,13341)|0);
  $26 = (i64(_lua_tointegerx($0,-1,$1)));
  $27 = load4($1);
  $28 = ($27|0)==(0);
  do {
   if ($28) {
    $29 = ($25|0)==(0);
    if ($29) {
     $$0$off0$i24 = 12;
     label = 23;
    } else {
     store4($vararg_buffer10,13341);
     $30 = (_luaL_error($0,13281,$vararg_buffer10)|0);
     $$022$i25 = $30;
    }
   } else {
    $$off$i23 = i64_add($26,i64_const(1073741823,0));
    $31 = i64_ult($$off$i23,i64_const(2147483647,0));
    if ($31) {
     $33 = i64_trunc($26);
     $$0$off0$i24 = $33;
     label = 23;
     break;
    } else {
     store4($vararg_buffer13,13341);
     $32 = (_luaL_error($0,13310,$vararg_buffer13)|0);
     $$022$i25 = $32;
     break;
    }
   }
  } while(0);
  if ((label|0) == 23) {
   _lua_settop($0,-2);
   $$022$i25 = $$0$off0$i24;
  }
  $34 = ((($2)) + 8|0);
  store4($34,$$022$i25);
  $35 = (_getfield($0,13346,-1,0)|0);
  $36 = ((($2)) + 12|0);
  store4($36,$35);
  $37 = (_getfield($0,13350,-1,1)|0);
  $38 = ((($2)) + 16|0);
  store4($38,$37);
  $39 = (_getfield($0,13356,-1,1900)|0);
  $40 = ((($2)) + 20|0);
  store4($40,$39);
  $41 = (_lua_getfield($0,-1,13361)|0);
  $42 = ($41|0)==(0);
  if ($42) {
   $45 = -1;
  } else {
   $43 = (_lua_toboolean($0,-1)|0);
   $45 = $43;
  }
  _lua_settop($0,-2);
  $44 = ((($2)) + 32|0);
  store4($44,$45);
  $46 = (_mktime(($2|0))|0);
  _setallfields($0,$2);
  $$0 = $46;
 }
 $47 = ($$0|0)==(-1);
 if ($47) {
  $48 = (_luaL_error($0,13367,$vararg_buffer16)|0);
  $$018 = $48;
  STACKTOP = sp;return ($$018|0);
 } else {
  $49 = i64_sext($$0);
  _lua_pushinteger($0,$49);
  $$018 = 1;
  STACKTOP = sp;return ($$018|0);
 }
 return (0)|0;
}
function _os_tmpname($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp + 24|0;
 $1 = sp;
 $2 = (_tmpnam($1)|0);
 $3 = ($2|0)==(0|0);
 if ($3) {
  $4 = (_luaL_error($0,13240,$vararg_buffer)|0);
  $$0 = $4;
  STACKTOP = sp;return ($$0|0);
 } else {
  (_lua_pushstring($0,$1)|0);
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _getfield($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$off0 = 0, $$022 = 0, $$off = i64(), $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $4 = 0, $5 = 0, $6 = i64(), $7 = 0, $8 = 0, $9 = 0, $extract$t = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $4 = sp + 20|0;
 $5 = (_lua_getfield($0,-1,$1)|0);
 $6 = (i64(_lua_tointegerx($0,-1,$4)));
 $7 = load4($4);
 $8 = ($7|0)==(0);
 do {
  if ($8) {
   $9 = ($5|0)==(0);
   if (!($9)) {
    store4($vararg_buffer,$1);
    $10 = (_luaL_error($0,13281,$vararg_buffer)|0);
    $$022 = $10;
    STACKTOP = sp;return ($$022|0);
   }
   $11 = ($2|0)<(0);
   if ($11) {
    store4($vararg_buffer1,$1);
    $12 = (_luaL_error($0,13432,$vararg_buffer1)|0);
    $$022 = $12;
    STACKTOP = sp;return ($$022|0);
   } else {
    $$0$off0 = $2;
   }
  } else {
   $$off = i64_add($6,i64_const(1073741823,0));
   $13 = i64_ult($$off,i64_const(2147483647,0));
   if ($13) {
    $15 = i64_trunc($6);
    $extract$t = (($15) - ($3))|0;
    $$0$off0 = $extract$t;
    break;
   }
   store4($vararg_buffer4,$1);
   $14 = (_luaL_error($0,13310,$vararg_buffer4)|0);
   $$022 = $14;
   STACKTOP = sp;return ($$022|0);
  }
 } while(0);
 _lua_settop($0,-2);
 $$022 = $$0$off0;
 STACKTOP = sp;return ($$022|0);
}
function _setallfields($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = i64(), $13 = 0, $14 = 0, $15 = 0, $16 = i64(), $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = i64(), $21 = 0, $22 = 0, $23 = 0, $24 = i64(), $25 = 0, $26 = 0, $27 = 0, $28 = i64();
 var $29 = 0, $3 = i64(), $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = i64(), $7 = 0, $8 = 0, $9 = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $2 = load4($1);
 $3 = i64_sext($2);
 _lua_pushinteger($0,$3);
 _lua_setfield($0,-2,13277);
 $4 = ((($1)) + 4|0);
 $5 = load4($4);
 $6 = i64_sext($5);
 _lua_pushinteger($0,$6);
 _lua_setfield($0,-2,13337);
 $7 = ((($1)) + 8|0);
 $8 = load4($7);
 $9 = i64_sext($8);
 _lua_pushinteger($0,$9);
 _lua_setfield($0,-2,13341);
 $10 = ((($1)) + 12|0);
 $11 = load4($10);
 $12 = i64_sext($11);
 _lua_pushinteger($0,$12);
 _lua_setfield($0,-2,13346);
 $13 = ((($1)) + 16|0);
 $14 = load4($13);
 $15 = (($14) + 1)|0;
 $16 = i64_sext($15);
 _lua_pushinteger($0,$16);
 _lua_setfield($0,-2,13350);
 $17 = ((($1)) + 20|0);
 $18 = load4($17);
 $19 = (($18) + 1900)|0;
 $20 = i64_sext($19);
 _lua_pushinteger($0,$20);
 _lua_setfield($0,-2,13356);
 $21 = ((($1)) + 24|0);
 $22 = load4($21);
 $23 = (($22) + 1)|0;
 $24 = i64_sext($23);
 _lua_pushinteger($0,$24);
 _lua_setfield($0,-2,13422);
 $25 = ((($1)) + 28|0);
 $26 = load4($25);
 $27 = (($26) + 1)|0;
 $28 = i64_sext($27);
 _lua_pushinteger($0,$28);
 _lua_setfield($0,-2,13427);
 $29 = ((($1)) + 32|0);
 $30 = load4($29);
 $31 = ($30|0)<(0);
 if ($31) {
  return;
 }
 _lua_pushboolean($0,$30);
 _lua_setfield($0,-2,13361);
 return;
}
function _luaopen_string($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checkversion_($0,503.0,136);
 _lua_createtable($0,0,17);
 _luaL_setfuncs($0,3248,0);
 _lua_createtable($0,0,1);
 (_lua_pushstring($0,19032)|0);
 _lua_pushvalue($0,-2);
 (_lua_setmetatable($0,-2)|0);
 _lua_settop($0,-2);
 _lua_pushvalue($0,-2);
 _lua_setfield($0,-2,14857);
 _lua_settop($0,-2);
 return 1;
}
function _str_byte($0) {
 $0 = $0|0;
 var $$032 = 0, $$033 = i64(), $$037 = 0, $$pre = i64(), $$pre$phiZ2D = i64(), $1 = 0, $10 = 0, $11 = 0, $12 = i64(), $13 = i64(), $14 = 0, $15 = 0, $16 = i64(), $17 = i64(), $18 = i64(), $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = i64(), $25 = 0, $26 = i64(), $27 = 0, $28 = 0, $29 = 0, $3 = i64(), $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = i64(), $38 = 0, $39 = 0, $4 = 0, $5 = 0;
 var $6 = i64(), $7 = i64(), $8 = i64(), $9 = 0, $spec$select = i64(), $spec$select$i = i64(), $spec$select$i35 = i64(), $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = sp + 4|0;
 $2 = (_luaL_checklstring($0,1,$1)|0);
 $3 = (i64(_luaL_optinteger($0,2,i64_const(1,0))));
 $4 = load4($1);
 $5 = i64_sgt($3,i64_const(4294967295,4294967295));
 if ($5) {
  $12 = $3;
 } else {
  $6 = i64_add($3,i64_const(1,0));
  $7 = i64_zext($4>>>0);
  $8 = i64_add($6,$7);
  $9 = i64_trunc($3);
  $10 = (0 - ($9))|0;
  $11 = ($4>>>0)<($10>>>0);
  $spec$select$i = $11 ? i64_const(0,0) : $8;
  $12 = $spec$select$i;
 }
 $13 = (i64(_luaL_optinteger($0,3,$12)));
 $14 = load4($1);
 $15 = i64_sgt($13,i64_const(4294967295,4294967295));
 if ($15) {
  $$pre = i64_zext($14>>>0);
  $$pre$phiZ2D = $$pre;$24 = $13;
 } else {
  $16 = i64_add($13,i64_const(1,0));
  $17 = i64_zext($14>>>0);
  $18 = i64_add($16,$17);
  $19 = i64_trunc($13);
  $20 = (0 - ($19))|0;
  $21 = ($14>>>0)<($20>>>0);
  $spec$select$i35 = $21 ? i64_const(0,0) : $18;
  $$pre$phiZ2D = $17;$24 = $spec$select$i35;
 }
 $22 = i64_sgt($12,i64_const(1,0));
 $spec$select = $22 ? $12 : i64_const(1,0);
 $23 = i64_sgt($24,$$pre$phiZ2D);
 $$033 = $23 ? $$pre$phiZ2D : $24;
 $25 = i64_slt($$033,$spec$select);
 if ($25) {
  $$032 = 0;
  STACKTOP = sp;return ($$032|0);
 }
 $26 = i64_sub($$033,$spec$select);
 $27 = i64_sgt($26,i64_const(2147483646,0));
 if ($27) {
  $28 = (_luaL_error($0,15248,$vararg_buffer)|0);
  $$032 = $28;
  STACKTOP = sp;return ($$032|0);
 }
 $29 = i64_trunc($26);
 $30 = (($29) + 1)|0;
 _luaL_checkstack($0,$30,15248);
 $31 = ($29|0)<(0);
 if ($31) {
  $$032 = $30;
  STACKTOP = sp;return ($$032|0);
 }
 $32 = i64_trunc($spec$select);
 $33 = (($32) + -1)|0;
 $$037 = 0;
 while(1) {
  $34 = (($33) + ($$037))|0;
  $35 = (($2) + ($34)|0);
  $36 = load1($35);
  $37 = i64_zext($36&255);
  _lua_pushinteger($0,$37);
  $38 = (($$037) + 1)|0;
  $39 = ($$037|0)<($29|0);
  if ($39) {
   $$037 = $38;
  } else {
   $$032 = $30;
   break;
  }
 }
 STACKTOP = sp;return ($$032|0);
}
function _str_char($0) {
 $0 = $0|0;
 var $$022 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = i64(), $6 = 0, $7 = i64(), $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4112|0;
 $1 = sp;
 $2 = (_lua_gettop($0)|0);
 $3 = (_luaL_buffinitsize($0,$1,$2)|0);
 $4 = ($2|0)<(1);
 if ($4) {
  _luaL_pushresultsize($1,$2);
  STACKTOP = sp;return 1;
 }
 $$022 = 1;
 while(1) {
  $5 = (i64(_luaL_checkinteger($0,$$022)));
  $6 = i64_trunc($5)&255;
  $7 = i64_and($5,i64_const(255,0));
  $8 = i64_eq($7,$5);
  if (!($8)) {
   (_luaL_argerror($0,$$022,15213)|0);
  }
  $9 = (($$022) + -1)|0;
  $10 = (($3) + ($9)|0);
  store1($10,$6);
  $11 = (($$022) + 1)|0;
  $exitcond = ($$022|0)==($2|0);
  if ($exitcond) {
   break;
  } else {
   $$022 = $11;
  }
 }
 _luaL_pushresultsize($1,$2);
 STACKTOP = sp;return 1;
}
function _str_dump($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4128|0;
 $vararg_buffer = sp;
 $1 = sp + 8|0;
 $2 = (_lua_toboolean($0,2)|0);
 _luaL_checktype($0,1,6);
 _lua_settop($0,1);
 _luaL_buffinit($0,$1);
 $3 = (_lua_dump($0,3,$1,$2)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  _luaL_pushresult($1);
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 } else {
  $5 = (_luaL_error($0,14735,$vararg_buffer)|0);
  $$0 = $5;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _str_find($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_str_find_aux($0,1)|0);
 return ($1|0);
}
function _str_format($0) {
 $0 = $0|0;
 var $$0$i = 0, $$0$lcssa$i = 0, $$03536$i$i = 0, $$039$i = 0, $$06674 = 0, $$06873 = 0, $$070 = 0, $$167 = 0, $$169 = 0, $$171 = 0, $$2$i = 0, $$3 = 0, $$4$i = 0, $$in$i$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre38$i$i = 0, $$pre39$i$i = 0, $$pre40$i$i = 0;
 var $$pre41$i$i = 0, $$pre42$i = 0, $$pre42$i$i = 0, $$pre76 = 0, $$pre77 = 0, $$pre78 = 0, $$pre79 = 0, $1 = 0, $10 = 0, $100 = 0.0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0.0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = i64(), $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = i64(), $78 = 0, $79 = 0, $8 = 0;
 var $80 = i64(), $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0.0;
 var $99 = 0, $isdigit$i = 0, $isdigit$i$i = 0, $isdigit30$i = 0, $isdigit32$i = 0, $isdigit34$i = 0, $isdigit36$i = 0, $isdigittmp$i = 0, $isdigittmp$i$i = 0, $isdigittmp29$i = 0, $isdigittmp31$i = 0, $isdigittmp33$i = 0, $isdigittmp35$i = 0, $memchr$i = 0, $or$cond = 0, $spec$select$i = 0, $spec$select37$i = 0, $spec$select38$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0;
 var $vararg_buffer11 = 0, $vararg_buffer14 = 0, $vararg_buffer17 = 0, $vararg_buffer20 = 0, $vararg_buffer23 = 0, $vararg_buffer26 = 0, $vararg_buffer29 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4272|0;
 $vararg_buffer29 = sp + 120|0;
 $vararg_buffer26 = sp + 112|0;
 $vararg_buffer23 = sp + 104|0;
 $vararg_buffer20 = sp + 96|0;
 $vararg_buffer17 = sp + 88|0;
 $vararg_buffer14 = sp + 80|0;
 $vararg_buffer11 = sp + 72|0;
 $vararg_buffer8 = sp + 64|0;
 $vararg_buffer5 = sp + 56|0;
 $vararg_buffer3 = sp + 48|0;
 $vararg_buffer1 = sp + 40|0;
 $vararg_buffer = sp + 32|0;
 $1 = sp + 4248|0;
 $2 = sp + 4244|0;
 $3 = sp + 4240|0;
 $4 = sp + 128|0;
 $5 = sp;
 $6 = (_lua_gettop($0)|0);
 $7 = (_luaL_checklstring($0,1,$3)|0);
 $8 = load4($3);
 $9 = (($7) + ($8)|0);
 _luaL_buffinit($0,$4);
 $10 = ($8|0)>(0);
 L1: do {
  if ($10) {
   $11 = ((($4)) + 8|0);
   $12 = ((($4)) + 4|0);
   $13 = ((($5)) + 1|0);
   $14 = ((($5)) + 2|0);
   $$06674 = 1;$$06873 = $7;
   L3: while(1) {
    $15 = load1($$06873);
    $16 = ($15<<24>>24)==(37);
    do {
     if ($16) {
      $26 = ((($$06873)) + 1|0);
      $27 = load1($26);
      $28 = ($27<<24>>24)==(37);
      if ($28) {
       $29 = load4($11);
       $30 = load4($12);
       $31 = ($29>>>0)<($30>>>0);
       if ($31) {
        $35 = $29;$37 = 37;
       } else {
        (_luaL_prepbuffsize($4,1)|0);
        $$pre78 = load1($26);
        $$pre79 = load4($11);
        $35 = $$pre79;$37 = $$pre78;
       }
       $32 = ((($$06873)) + 2|0);
       $33 = load4($4);
       $34 = (($35) + 1)|0;
       store4($11,$34);
       $36 = (($33) + ($35)|0);
       store1($36,$37);
       $$167 = $$06674;$$169 = $32;
       break;
      }
      $38 = (_luaL_prepbuffsize($4,428)|0);
      $39 = (($$06674) + 1)|0;
      $40 = ($$06674|0)<($6|0);
      if (!($40)) {
       (_luaL_argerror($0,$39,14555)|0);
      }
      $41 = load1($26);
      $42 = ($41<<24>>24)==(0);
      L16: do {
       if ($42) {
        $$0$lcssa$i = $26;$194 = 0;
       } else {
        $$039$i = $26;$44 = $41;
        while(1) {
         $43 = $44 << 24 >> 24;
         $memchr$i = (_memchr(14564,$43,6)|0);
         $45 = ($memchr$i|0)==(0|0);
         if ($45) {
          $$0$lcssa$i = $$039$i;$194 = $44;
          break L16;
         }
         $46 = ((($$039$i)) + 1|0);
         $47 = load1($46);
         $48 = ($47<<24>>24)==(0);
         if ($48) {
          $$0$lcssa$i = $46;$194 = 0;
          break;
         } else {
          $$039$i = $46;$44 = $47;
         }
        }
       }
      } while(0);
      $49 = $$0$lcssa$i;
      $50 = $26;
      $51 = (($49) - ($50))|0;
      $52 = ($51>>>0)>(5);
      if ($52) {
       (_luaL_error($0,14570,$vararg_buffer)|0);
       $$pre$i = load1($$0$lcssa$i);
       $54 = $$pre$i;
      } else {
       $54 = $194;
      }
      $53 = $54&255;
      $isdigittmp$i = (($53) + -48)|0;
      $isdigit$i = ($isdigittmp$i>>>0)<(10);
      $55 = ((($$0$lcssa$i)) + 1|0);
      $spec$select$i = $isdigit$i ? $55 : $$0$lcssa$i;
      $56 = load1($spec$select$i);
      $57 = $56&255;
      $isdigittmp29$i = (($57) + -48)|0;
      $isdigit30$i = ($isdigittmp29$i>>>0)<(10);
      $58 = ((($spec$select$i)) + 1|0);
      $$2$i = $isdigit30$i ? $58 : $spec$select$i;
      $59 = load1($$2$i);
      $60 = ($59<<24>>24)==(46);
      if ($60) {
       $61 = ((($$2$i)) + 1|0);
       $62 = load1($61);
       $63 = $62&255;
       $isdigittmp33$i = (($63) + -48)|0;
       $isdigit34$i = ($isdigittmp33$i>>>0)<(10);
       $64 = ((($$2$i)) + 2|0);
       $spec$select37$i = $isdigit34$i ? $64 : $61;
       $65 = load1($spec$select37$i);
       $66 = $65&255;
       $isdigittmp35$i = (($66) + -48)|0;
       $isdigit36$i = ($isdigittmp35$i>>>0)<(10);
       $67 = ((($spec$select37$i)) + 1|0);
       $spec$select38$i = $isdigit36$i ? $67 : $spec$select37$i;
       $$pre42$i = load1($spec$select38$i);
       $$4$i = $spec$select38$i;$69 = $$pre42$i;
      } else {
       $$4$i = $$2$i;$69 = $59;
      }
      $68 = $69&255;
      $isdigittmp31$i = (($68) + -48)|0;
      $isdigit32$i = ($isdigittmp31$i>>>0)<(10);
      if ($isdigit32$i) {
       (_luaL_error($0,14602,$vararg_buffer1)|0);
      }
      store1($5,37);
      $70 = $$4$i;
      $71 = (($70) - ($50))|0;
      $72 = (($71) + 1)|0;
      _memcpy(($13|0),($26|0),($72|0))|0;
      $73 = (($13) + ($72)|0);
      store1($73,0);
      $74 = ((($$4$i)) + 1|0);
      $75 = load1($$4$i);
      $76 = $75 << 24 >> 24;
      L31: do {
       switch ($76|0) {
       case 99:  {
        $77 = (i64(_luaL_checkinteger($0,$39)));
        $78 = i64_trunc($77);
        store4($vararg_buffer3,$78);
        $79 = (_snprintf($38,428,$5,$vararg_buffer3)|0);
        $$171 = $79;
        break;
       }
       case 88: case 120: case 117: case 111: case 105: case 100:  {
        $80 = (i64(_luaL_checkinteger($0,$39)));
        $81 = (_strlen($5)|0);
        $82 = (($81) + -1)|0;
        $83 = (($5) + ($82)|0);
        $84 = load1($83);
        $85 = (($5) + ($81)|0);
        $86 = ((($85)) + -1|0);
        ; store2($86,load2(14647,1),1); store1($86+2 | 0,load1(14647+2 | 0,1),1);
        $87 = (($81) + 2)|0;
        $88 = (($81) + 1)|0;
        $89 = (($5) + ($88)|0);
        store1($89,$84);
        $90 = (($5) + ($87)|0);
        store1($90,0);
        store8($vararg_buffer5,$80);
        $91 = (_snprintf($38,428,$5,$vararg_buffer5)|0);
        $$171 = $91;
        break;
       }
       case 65: case 97:  {
        $92 = (_strlen($5)|0);
        $93 = (($92) + -1)|0;
        $94 = (($5) + ($93)|0);
        $95 = load1($94);
        $96 = (($5) + ($92)|0);
        $97 = ((($96)) + -1|0);
        store1($97,0);
        store1($94,$95);
        store1($96,0);
        $98 = (+_luaL_checknumber($0,$39));
        stored($vararg_buffer8,$98);
        $99 = (_snprintf($38,428,$5,$vararg_buffer8)|0);
        $$171 = $99;
        break;
       }
       case 71: case 103: case 102: case 69: case 101:  {
        $100 = (+_luaL_checknumber($0,$39));
        $101 = (_strlen($5)|0);
        $102 = (($101) + -1)|0;
        $103 = (($5) + ($102)|0);
        $104 = load1($103);
        $105 = (($5) + ($101)|0);
        $106 = ((($105)) + -1|0);
        store1($106,0);
        store1($103,$104);
        store1($105,0);
        stored($vararg_buffer11,$100);
        $107 = (_snprintf($38,428,$5,$vararg_buffer11)|0);
        $$171 = $107;
        break;
       }
       case 113:  {
        $108 = (_lua_type($0,$39)|0);
        switch ($108|0) {
        case 4:  {
         $109 = (_lua_tolstring($0,$39,$2)|0);
         $110 = load4($2);
         $111 = load4($11);
         $112 = load4($12);
         $113 = ($111>>>0)<($112>>>0);
         if ($113) {
          $116 = $111;
         } else {
          (_luaL_prepbuffsize($4,1)|0);
          $$pre$i$i = load4($11);
          $116 = $$pre$i$i;
         }
         $114 = load4($4);
         $115 = (($116) + 1)|0;
         store4($11,$115);
         $117 = (($114) + ($116)|0);
         store1($117,34);
         $118 = ($110|0)==(0);
         L43: do {
          if (!($118)) {
           $$03536$i$i = $109;$$in$i$i = $110;
           while(1) {
            $119 = (($$in$i$i) + -1)|0;
            $120 = load1($$03536$i$i);
            L47: do {
             switch ($120<<24>>24) {
             case 10: case 92: case 34:  {
              $121 = load4($11);
              $122 = load4($12);
              $123 = ($121>>>0)<($122>>>0);
              if ($123) {
               $126 = $121;
              } else {
               (_luaL_prepbuffsize($4,1)|0);
               $$pre38$i$i = load4($11);
               $126 = $$pre38$i$i;
              }
              $124 = load4($4);
              $125 = (($126) + 1)|0;
              store4($11,$125);
              $127 = (($124) + ($126)|0);
              store1($127,92);
              $128 = load4($11);
              $129 = load4($12);
              $130 = ($128>>>0)<($129>>>0);
              if ($130) {
               $134 = $128;
              } else {
               (_luaL_prepbuffsize($4,1)|0);
               $$pre39$i$i = load4($11);
               $134 = $$pre39$i$i;
              }
              $131 = load1($$03536$i$i);
              $132 = load4($4);
              $133 = (($134) + 1)|0;
              store4($11,$133);
              $135 = (($132) + ($134)|0);
              store1($135,$131);
              break;
             }
             default: {
              $136 = $120&255;
              $137 = (_iscntrl($136)|0);
              $138 = ($137|0)==(0);
              if ($138) {
               $142 = load4($11);
               $143 = load4($12);
               $144 = ($142>>>0)<($143>>>0);
               if ($144) {
                $147 = $142;$149 = $120;
               } else {
                (_luaL_prepbuffsize($4,1)|0);
                $$pre40$i$i = load1($$03536$i$i);
                $$pre41$i$i = load4($11);
                $147 = $$pre41$i$i;$149 = $$pre40$i$i;
               }
               $145 = load4($4);
               $146 = (($147) + 1)|0;
               store4($11,$146);
               $148 = (($145) + ($147)|0);
               store1($148,$149);
               break L47;
              }
              $139 = ((($$03536$i$i)) + 1|0);
              $140 = load1($139);
              $141 = $140&255;
              $isdigittmp$i$i = (($141) + -48)|0;
              $isdigit$i$i = ($isdigittmp$i$i>>>0)<(10);
              if ($isdigit$i$i) {
               store4($vararg_buffer17,$136);
               (_snprintf($1,10,14654,$vararg_buffer17)|0);
              } else {
               store4($vararg_buffer14,$136);
               (_snprintf($1,10,14650,$vararg_buffer14)|0);
              }
              _luaL_addstring($4,$1);
             }
             }
            } while(0);
            $150 = ((($$03536$i$i)) + 1|0);
            $151 = ($119|0)==(0);
            if ($151) {
             break L43;
            } else {
             $$03536$i$i = $150;$$in$i$i = $119;
            }
           }
          }
         } while(0);
         $152 = load4($11);
         $153 = load4($12);
         $154 = ($152>>>0)<($153>>>0);
         if ($154) {
          $157 = $152;
         } else {
          (_luaL_prepbuffsize($4,1)|0);
          $$pre42$i$i = load4($11);
          $157 = $$pre42$i$i;
         }
         $155 = load4($4);
         $156 = (($157) + 1)|0;
         store4($11,$156);
         $158 = (($155) + ($157)|0);
         store1($158,34);
         $$171 = 0;
         break L31;
         break;
        }
        case 3:  {
         $159 = (_luaL_prepbuffsize($4,428)|0);
         $160 = (_lua_isinteger($0,$39)|0);
         $161 = ($160|0)==(0);
         if ($161) {
          $162 = (+_lua_tonumberx($0,$39,0));
          stored($vararg_buffer20,$162);
          $163 = (_snprintf($159,428,14660,$vararg_buffer20)|0);
          $164 = (_memchr($159,46,$163)|0);
          $165 = ($164|0)==(0|0);
          if ($165) {
           $166 = (_localeconv()|0);
           $167 = load4($166);
           $168 = load1($167);
           $169 = $168 << 24 >> 24;
           $170 = (_memchr($159,$169,$163)|0);
           $171 = ($170|0)==(0|0);
           if ($171) {
            $$0$i = $163;
           } else {
            store1($170,46);
            $$0$i = $163;
           }
          } else {
           $$0$i = $163;
          }
         } else {
          $172 = (i64(_lua_tointegerx($0,$39,0)));
          $173 = i64_eq($172,i64_const(0,2147483648));
          $174 = $173 ? 14663 : 14670;
          store8($vararg_buffer23,$172);
          $175 = (_snprintf($159,428,$174,$vararg_buffer23)|0);
          $$0$i = $175;
         }
         $176 = load4($11);
         $177 = (($176) + ($$0$i))|0;
         store4($11,$177);
         $$171 = 0;
         break L31;
         break;
        }
        case 1: case 0:  {
         (_luaL_tolstring($0,$39,0)|0);
         _luaL_addvalue($4);
         $$171 = 0;
         break L31;
         break;
        }
        default: {
         (_luaL_argerror($0,$39,14675)|0);
         $$171 = 0;
         break L31;
        }
        }
        break;
       }
       case 115:  {
        $178 = (_luaL_tolstring($0,$39,$1)|0);
        $179 = load1($14);
        $180 = ($179<<24>>24)==(0);
        do {
         if ($180) {
          _luaL_addvalue($4);
          $$070 = 0;
         } else {
          $181 = load4($1);
          $182 = (_strlen($178)|0);
          $183 = ($181|0)==($182|0);
          if ($183) {
           $186 = $181;
          } else {
           (_luaL_argerror($0,$39,14132)|0);
           $$pre77 = load4($1);
           $186 = $$pre77;
          }
          $184 = (_strchr($5,46)|0);
          $185 = ($184|0)==(0|0);
          $187 = ($186>>>0)>(99);
          $or$cond = $185 & $187;
          if ($or$cond) {
           _luaL_addvalue($4);
           $$070 = 0;
           break;
          } else {
           store4($vararg_buffer26,$178);
           $188 = (_snprintf($38,428,$5,$vararg_buffer26)|0);
           _lua_settop($0,-2);
           $$070 = $188;
           break;
          }
         }
        } while(0);
        $$171 = $$070;
        break;
       }
       default: {
        break L3;
       }
       }
      } while(0);
      $189 = load4($11);
      $190 = (($189) + ($$171))|0;
      store4($11,$190);
      $$167 = $39;$$169 = $74;
     } else {
      $17 = load4($11);
      $18 = load4($12);
      $19 = ($17>>>0)<($18>>>0);
      if ($19) {
       $23 = $17;$25 = $15;
      } else {
       (_luaL_prepbuffsize($4,1)|0);
       $$pre = load1($$06873);
       $$pre76 = load4($11);
       $23 = $$pre76;$25 = $$pre;
      }
      $20 = ((($$06873)) + 1|0);
      $21 = load4($4);
      $22 = (($23) + 1)|0;
      store4($11,$22);
      $24 = (($21) + ($23)|0);
      store1($24,$25);
      $$167 = $$06674;$$169 = $20;
     }
    } while(0);
    $193 = ($$169>>>0)<($9>>>0);
    if ($193) {
     $$06674 = $$167;$$06873 = $$169;
    } else {
     break L1;
    }
   }
   $191 = $75 << 24 >> 24;
   store4($vararg_buffer29,$191);
   $192 = (_luaL_error($0,14701,$vararg_buffer29)|0);
   $$3 = $192;
   STACKTOP = sp;return ($$3|0);
  }
 } while(0);
 _luaL_pushresult($4);
 $$3 = 1;
 STACKTOP = sp;return ($$3|0);
}
function _gmatch($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (_luaL_checklstring($0,1,$1)|0);
 $4 = (_luaL_checklstring($0,2,$2)|0);
 _lua_settop($0,2);
 $5 = (_lua_newuserdata($0,292)|0);
 $6 = ((($5)) + 12|0);
 $7 = load4($1);
 $8 = load4($2);
 $9 = ((($5)) + 24|0);
 store4($9,$0);
 $10 = ((($5)) + 28|0);
 store4($10,200);
 store4($6,$3);
 $11 = (($3) + ($7)|0);
 $12 = ((($5)) + 16|0);
 store4($12,$11);
 $13 = (($4) + ($8)|0);
 $14 = ((($5)) + 20|0);
 store4($14,$13);
 store4($5,$3);
 $15 = ((($5)) + 4|0);
 store4($15,$4);
 $16 = ((($5)) + 8|0);
 store4($16,0);
 _lua_pushcclosure($0,171,3);
 STACKTOP = sp;return 1;
}
function _str_gsub($0) {
 $0 = $0|0;
 var $$016$i$i = 0, $$043$i$i = 0, $$05465 = 0, $$05564 = i64(), $$059 = 0, $$06063 = 0, $$1 = 0, $$1$i$i = 0, $$156 = i64(), $$161 = 0, $$3 = 0, $$358 = i64(), $$not = 0, $$pre = 0, $$pre$i$i = 0, $$pre44$i$i = 0, $$pre45$i$i = 0, $$pre76 = 0, $$pre77$pre = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = i64(), $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = i64(), $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = i64(), $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = i64(), $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $isdigit$i$i = 0, $isdigittmp$i$i = 0, $or$cond = 0, $or$cond$i$i = 0, $or$cond75 = 0, $spec$select$i$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4432|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = sp + 4424|0;
 $2 = sp + 4420|0;
 $3 = sp + 4416|0;
 $4 = sp + 4136|0;
 $5 = sp + 24|0;
 $6 = (_luaL_checklstring($0,1,$2)|0);
 $7 = (_luaL_checklstring($0,2,$3)|0);
 $8 = (_lua_type($0,3)|0);
 $9 = load4($2);
 $10 = (($9) + 1)|0;
 $11 = i64_zext($10>>>0);
 $12 = (i64(_luaL_optinteger($0,4,$11)));
 $13 = load1($7);
 $14 = ($13<<24>>24)==(94);
 $15 = (($8) + -3)|0;
 $16 = ($15>>>0)<(4);
 if (!($16)) {
  (_luaL_argerror($0,3,14449)|0);
 }
 _luaL_buffinit($0,$5);
 if ($14) {
  $17 = ((($7)) + 1|0);
  $18 = load4($3);
  $19 = (($18) + -1)|0;
  store4($3,$19);
  $$059 = $17;$26 = $19;
 } else {
  $$pre = load4($3);
  $$059 = $7;$26 = $$pre;
 }
 $20 = load4($2);
 $21 = ((($4)) + 12|0);
 store4($21,$0);
 $22 = ((($4)) + 16|0);
 store4($22,200);
 store4($4,$6);
 $23 = (($6) + ($20)|0);
 $24 = ((($4)) + 4|0);
 store4($24,$23);
 $25 = (($$059) + ($26)|0);
 $27 = ((($4)) + 8|0);
 store4($27,$25);
 $28 = i64_sgt($12,i64_const(0,0));
 if (!($28)) {
  $29 = $23;
  $$3 = $6;$$358 = i64_const(0,0);$125 = $29;
  $123 = $$3;
  $124 = (($125) - ($123))|0;
  _luaL_addlstring($5,$$3,$124);
  _luaL_pushresult($5);
  _lua_pushinteger($0,$$358);
  STACKTOP = sp;return 2;
 }
 $30 = ((($4)) + 20|0);
 $31 = ((($5)) + 8|0);
 $32 = ((($5)) + 4|0);
 $33 = ((($4)) + 28|0);
 $34 = ((($4)) + 24|0);
 $$not = $14 ^ 1;
 $$05465 = $6;$$05564 = i64_const(0,0);$$06063 = 0;
 L12: while(1) {
  store1($30,0);
  $35 = (_match($4,$$05465,$$059)|0);
  $36 = ($35|0)==(0|0);
  $37 = ($35|0)==($$06063|0);
  $or$cond = $36 | $37;
  L14: do {
   if ($or$cond) {
    $110 = load4($24);
    $111 = ($$05465>>>0)<($110>>>0);
    if (!($111)) {
     label = 46;
     break L12;
    }
    $113 = load4($31);
    $114 = load4($32);
    $115 = ($113>>>0)<($114>>>0);
    if ($115) {
     $120 = $113;
    } else {
     (_luaL_prepbuffsize($5,1)|0);
     $$pre76 = load4($31);
     $120 = $$pre76;
    }
    $116 = ((($$05465)) + 1|0);
    $117 = load1($$05465);
    $118 = load4($5);
    $119 = (($120) + 1)|0;
    store4($31,$119);
    $121 = (($118) + ($120)|0);
    store1($121,$117);
    $$1 = $116;$$156 = $$05564;$$161 = $$06063;
   } else {
    $38 = i64_add($$05564,i64_const(1,0));
    $39 = load4($21);
    switch ($8|0) {
    case 6:  {
     _lua_pushvalue($39,3);
     $40 = load1($30);
     $41 = ($40<<24>>24)==(0);
     $42 = ($$05465|0)!=(0|0);
     $or$cond$i$i = $42 & $41;
     $43 = $40&255;
     $spec$select$i$i = $or$cond$i$i ? 1 : $43;
     $44 = load4($21);
     _luaL_checkstack($44,$spec$select$i$i,14192);
     $45 = ($spec$select$i$i|0)==(0);
     if (!($45)) {
      $$016$i$i = 0;
      while(1) {
       _push_onecapture($4,$$016$i$i,$$05465,$35);
       $46 = (($$016$i$i) + 1)|0;
       $exitcond$i$i = ($46|0)==($spec$select$i$i|0);
       if ($exitcond$i$i) {
        break;
       } else {
        $$016$i$i = $46;
       }
      }
     }
     _lua_callk($39,$spec$select$i$i,1,0,0);
     break;
    }
    case 5:  {
     $47 = load1($30);
     $48 = ($47<<24>>24)==(0);
     do {
      if ($48) {
       $49 = $35;
       $50 = $$05465;
       $51 = (($49) - ($50))|0;
       (_lua_pushlstring($39,$$05465,$51)|0);
      } else {
       $52 = load4($33);
       $53 = ($52|0)==(-1);
       if ($53) {
        (_luaL_error($39,14237,$vararg_buffer)|0);
        $54 = load4($21);
        $55 = load4($34);
        $63 = $54;$64 = $55;
       } else {
        $56 = ($52|0)==(-2);
        $57 = load4($34);
        if ($56) {
         $58 = load4($4);
         $59 = $57;
         $60 = (($59) + 1)|0;
         $61 = (($60) - ($58))|0;
         $62 = i64_sext($61);
         _lua_pushinteger($39,$62);
         break;
        } else {
         $63 = $39;$64 = $57;
        }
       }
       (_lua_pushlstring($63,$64,$52)|0);
      }
     } while(0);
     (_lua_gettable($39,3)|0);
     break;
    }
    default: {
     $65 = (_lua_tolstring($39,3,$1)|0);
     $66 = load4($1);
     $67 = ($66|0)==(0);
     if (!($67)) {
      $68 = $35;
      $69 = $$05465;
      $70 = (($68) - ($69))|0;
      $$043$i$i = 0;
      while(1) {
       $71 = (($65) + ($$043$i$i)|0);
       $72 = load1($71);
       $73 = ($72<<24>>24)==(37);
       do {
        if ($73) {
         $82 = (($$043$i$i) + 1)|0;
         $83 = (($65) + ($82)|0);
         $84 = load1($83);
         $85 = $84&255;
         $isdigittmp$i$i = (($85) + -48)|0;
         $isdigit$i$i = ($isdigittmp$i$i>>>0)<(10);
         $86 = $84 << 24 >> 24;
         if ($isdigit$i$i) {
          $96 = ($84<<24>>24)==(48);
          if ($96) {
           _luaL_addlstring($5,$$05465,$70);
           $$1$i$i = $82;
           break;
          } else {
           $97 = (($86) + -49)|0;
           _push_onecapture($4,$97,$$05465,$35);
           (_luaL_tolstring($39,-1,0)|0);
           _lua_rotate($39,-2,-1);
           _lua_settop($39,-2);
           _luaL_addvalue($5);
           $$1$i$i = $82;
           break;
          }
         }
         $87 = ($84<<24>>24)==(37);
         if (!($87)) {
          store4($vararg_buffer1,37);
          (_luaL_error($39,14480,$vararg_buffer1)|0);
         }
         $88 = load4($31);
         $89 = load4($32);
         $90 = ($88>>>0)<($89>>>0);
         if ($90) {
          $94 = $88;
         } else {
          (_luaL_prepbuffsize($5,1)|0);
          $$pre45$i$i = load4($31);
          $94 = $$pre45$i$i;
         }
         $91 = load1($83);
         $92 = load4($5);
         $93 = (($94) + 1)|0;
         store4($31,$93);
         $95 = (($92) + ($94)|0);
         store1($95,$91);
         $$1$i$i = $82;
        } else {
         $74 = load4($31);
         $75 = load4($32);
         $76 = ($74>>>0)<($75>>>0);
         if ($76) {
          $79 = $74;$81 = $72;
         } else {
          (_luaL_prepbuffsize($5,1)|0);
          $$pre$i$i = load1($71);
          $$pre44$i$i = load4($31);
          $79 = $$pre44$i$i;$81 = $$pre$i$i;
         }
         $77 = load4($5);
         $78 = (($79) + 1)|0;
         store4($31,$78);
         $80 = (($77) + ($79)|0);
         store1($80,$81);
         $$1$i$i = $$043$i$i;
        }
       } while(0);
       $98 = (($$1$i$i) + 1)|0;
       $99 = load4($1);
       $100 = ($98>>>0)<($99>>>0);
       if ($100) {
        $$043$i$i = $98;
       } else {
        break;
       }
      }
     }
     $$1 = $35;$$156 = $38;$$161 = $35;
     break L14;
    }
    }
    $101 = (_lua_toboolean($39,-1)|0);
    $102 = ($101|0)==(0);
    if ($102) {
     _lua_settop($39,-2);
     $103 = $35;
     $104 = $$05465;
     $105 = (($103) - ($104))|0;
     (_lua_pushlstring($39,$$05465,$105)|0);
    } else {
     $106 = (_lua_isstring($39,-1)|0);
     $107 = ($106|0)==(0);
     if ($107) {
      $108 = (_lua_type($39,-1)|0);
      $109 = (_lua_typename($39,$108)|0);
      store4($vararg_buffer3,$109);
      (_luaL_error($39,14522,$vararg_buffer3)|0);
     }
    }
    _luaL_addvalue($5);
    $$1 = $35;$$156 = $38;$$161 = $35;
   }
  } while(0);
  $122 = i64_slt($$156,$12);
  $or$cond75 = $122 & $$not;
  if ($or$cond75) {
   $$05465 = $$1;$$05564 = $$156;$$06063 = $$161;
  } else {
   label = 51;
   break;
  }
 }
 if ((label|0) == 46) {
  $112 = $110;
  $$3 = $$05465;$$358 = $$05564;$125 = $112;
  $123 = $$3;
  $124 = (($125) - ($123))|0;
  _luaL_addlstring($5,$$3,$124);
  _luaL_pushresult($5);
  _lua_pushinteger($0,$$358);
  STACKTOP = sp;return 2;
 }
 else if ((label|0) == 51) {
  $$pre77$pre = load4($24);
  $$3 = $$1;$$358 = $$156;$125 = $$pre77$pre;
  $123 = $$3;
  $124 = (($125) - ($123))|0;
  _luaL_addlstring($5,$$3,$124);
  _luaL_pushresult($5);
  _lua_pushinteger($0,$$358);
  STACKTOP = sp;return 2;
 }
 return (0)|0;
}
function _str_len($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 (_luaL_checklstring($0,1,$1)|0);
 $2 = load4($1);
 $3 = i64_zext($2>>>0);
 _lua_pushinteger($0,$3);
 STACKTOP = sp;return 1;
}
function _str_lower($0) {
 $0 = $0|0;
 var $$012 = 0, $$lcssa = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4128|0;
 $1 = sp + 4112|0;
 $2 = sp;
 $3 = (_luaL_checklstring($0,1,$1)|0);
 $4 = load4($1);
 $5 = (_luaL_buffinitsize($0,$2,$4)|0);
 $6 = load4($1);
 $7 = ($6|0)==(0);
 if ($7) {
  $$lcssa = 0;
  _luaL_pushresultsize($2,$$lcssa);
  STACKTOP = sp;return 1;
 }
 $$012 = 0;
 while(1) {
  $8 = (($3) + ($$012)|0);
  $9 = load1($8);
  $10 = $9&255;
  $11 = (_tolower($10)|0);
  $12 = $11&255;
  $13 = (($5) + ($$012)|0);
  store1($13,$12);
  $14 = (($$012) + 1)|0;
  $15 = load4($1);
  $16 = ($14>>>0)<($15>>>0);
  if ($16) {
   $$012 = $14;
  } else {
   $$lcssa = $15;
   break;
  }
 }
 _luaL_pushresultsize($2,$$lcssa);
 STACKTOP = sp;return 1;
}
function _str_match($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_str_find_aux($0,0)|0);
 return ($1|0);
}
function _str_rep($0) {
 $0 = $0|0;
 var $$028 = 0, $$030 = 0, $$1 = 0, $$in = i64(), $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = i64(), $13 = i64(), $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = i64(), $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = i64(), $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4128|0;
 $vararg_buffer = sp;
 $1 = sp + 4124|0;
 $2 = sp + 4120|0;
 $3 = sp + 8|0;
 $4 = (_luaL_checklstring($0,1,$1)|0);
 $5 = (i64(_luaL_checkinteger($0,2)));
 $6 = (_luaL_optlstring($0,3,19032,$2)|0);
 $7 = i64_slt($5,i64_const(1,0));
 if ($7) {
  (_lua_pushstring($0,19032)|0);
  $$028 = 1;
  STACKTOP = sp;return ($$028|0);
 }
 $8 = load4($1);
 $9 = load4($2);
 $10 = (($9) + ($8))|0;
 $11 = ($10>>>0)<($8>>>0);
 if (!($11)) {
  $12 = i64_zext($10>>>0);
  $13 = i64_udiv(i64_const(2147483647,0),$5);
  $14 = i64_ult($13,$12);
  if (!($14)) {
   $16 = i64_trunc($5);
   $17 = Math_imul($8, $16)|0;
   $18 = (($16) + -1)|0;
   $19 = Math_imul($9, $18)|0;
   $20 = (($19) + ($17))|0;
   $21 = (_luaL_buffinitsize($0,$3,$20)|0);
   $22 = i64_sgt($5,i64_const(1,0));
   $23 = load4($1);
   _memcpy(($21|0),($4|0),($23|0))|0;
   if ($22) {
    $$030 = $21;$$in = $5;
    while(1) {
     $24 = i64_add($$in,i64_const(4294967295,4294967295));
     $25 = load4($1);
     $26 = (($$030) + ($25)|0);
     $27 = load4($2);
     $28 = ($27|0)==(0);
     if ($28) {
      $$1 = $26;$32 = $25;
     } else {
      _memcpy(($26|0),($6|0),($27|0))|0;
      $29 = load4($2);
      $30 = (($26) + ($29)|0);
      $$pre = load4($1);
      $$1 = $30;$32 = $$pre;
     }
     $31 = i64_sgt($$in,i64_const(2,0));
     _memcpy(($$1|0),($4|0),($32|0))|0;
     if ($31) {
      $$030 = $$1;$$in = $24;
     } else {
      break;
     }
    }
   }
   _luaL_pushresultsize($3,$20);
   $$028 = 1;
   STACKTOP = sp;return ($$028|0);
  }
 }
 $15 = (_luaL_error($0,14154,$vararg_buffer)|0);
 $$028 = $15;
 STACKTOP = sp;return ($$028|0);
}
function _str_reverse($0) {
 $0 = $0|0;
 var $$012 = 0, $$lcssa = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4128|0;
 $1 = sp + 4112|0;
 $2 = sp;
 $3 = (_luaL_checklstring($0,1,$1)|0);
 $4 = load4($1);
 $5 = (_luaL_buffinitsize($0,$2,$4)|0);
 $6 = load4($1);
 $7 = ($6|0)==(0);
 if ($7) {
  $$lcssa = 0;
  _luaL_pushresultsize($2,$$lcssa);
  STACKTOP = sp;return 1;
 }
 $$012 = 0;$10 = $6;
 while(1) {
  $8 = $$012 ^ -1;
  $9 = (($10) + ($8))|0;
  $11 = (($3) + ($9)|0);
  $12 = load1($11);
  $13 = (($5) + ($$012)|0);
  store1($13,$12);
  $14 = (($$012) + 1)|0;
  $15 = load4($1);
  $16 = ($15>>>0)>($14>>>0);
  if ($16) {
   $$012 = $14;$10 = $15;
  } else {
   $$lcssa = $15;
   break;
  }
 }
 _luaL_pushresultsize($2,$$lcssa);
 STACKTOP = sp;return 1;
}
function _str_sub($0) {
 $0 = $0|0;
 var $$0 = i64(), $$pre = i64(), $$pre$phiZ2D = i64(), $1 = 0, $10 = 0, $11 = 0, $12 = i64(), $13 = 0, $14 = 0, $15 = i64(), $16 = i64(), $17 = i64(), $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = i64(), $23 = 0, $24 = i64();
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = i64(), $3 = i64(), $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = i64(), $7 = i64(), $8 = i64(), $9 = 0, $spec$select = i64(), $spec$select$i = i64(), $spec$select$i17 = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = (_luaL_checklstring($0,1,$1)|0);
 $3 = (i64(_luaL_checkinteger($0,2)));
 $4 = load4($1);
 $5 = i64_sgt($3,i64_const(4294967295,4294967295));
 if ($5) {
  $22 = $3;
 } else {
  $6 = i64_add($3,i64_const(1,0));
  $7 = i64_zext($4>>>0);
  $8 = i64_add($6,$7);
  $9 = i64_trunc($3);
  $10 = (0 - ($9))|0;
  $11 = ($4>>>0)<($10>>>0);
  $spec$select$i = $11 ? i64_const(0,0) : $8;
  $22 = $spec$select$i;
 }
 $12 = (i64(_luaL_optinteger($0,3,i64_const(4294967295,4294967295))));
 $13 = load4($1);
 $14 = i64_sgt($12,i64_const(4294967295,4294967295));
 if ($14) {
  $$pre = i64_zext($13>>>0);
  $$pre$phiZ2D = $$pre;$24 = $12;
 } else {
  $15 = i64_add($12,i64_const(1,0));
  $16 = i64_zext($13>>>0);
  $17 = i64_add($15,$16);
  $18 = i64_trunc($12);
  $19 = (0 - ($18))|0;
  $20 = ($13>>>0)<($19>>>0);
  $spec$select$i17 = $20 ? i64_const(0,0) : $17;
  $$pre$phiZ2D = $16;$24 = $spec$select$i17;
 }
 $21 = i64_sgt($22,i64_const(1,0));
 $spec$select = $21 ? $22 : i64_const(1,0);
 $23 = i64_sgt($24,$$pre$phiZ2D);
 $$0 = $23 ? $$pre$phiZ2D : $24;
 $25 = i64_slt($$0,$spec$select);
 if ($25) {
  (_lua_pushstring($0,19032)|0);
  STACKTOP = sp;return 1;
 } else {
  $26 = i64_trunc($spec$select);
  $27 = (($2) + ($26)|0);
  $28 = ((($27)) + -1|0);
  $29 = i64_sub($$0,$spec$select);
  $30 = i64_trunc($29);
  $31 = (($30) + 1)|0;
  (_lua_pushlstring($0,$28,$31)|0);
  STACKTOP = sp;return 1;
 }
 return (0)|0;
}
function _str_upper($0) {
 $0 = $0|0;
 var $$012 = 0, $$lcssa = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4128|0;
 $1 = sp + 4112|0;
 $2 = sp;
 $3 = (_luaL_checklstring($0,1,$1)|0);
 $4 = load4($1);
 $5 = (_luaL_buffinitsize($0,$2,$4)|0);
 $6 = load4($1);
 $7 = ($6|0)==(0);
 if ($7) {
  $$lcssa = 0;
  _luaL_pushresultsize($2,$$lcssa);
  STACKTOP = sp;return 1;
 }
 $$012 = 0;
 while(1) {
  $8 = (($3) + ($$012)|0);
  $9 = load1($8);
  $10 = $9&255;
  $11 = (_toupper($10)|0);
  $12 = $11&255;
  $13 = (($5) + ($$012)|0);
  store1($13,$12);
  $14 = (($$012) + 1)|0;
  $15 = load4($1);
  $16 = ($14>>>0)<($15>>>0);
  if ($16) {
   $$012 = $14;
  } else {
   $$lcssa = $15;
   break;
  }
 }
 _luaL_pushresultsize($2,$$lcssa);
 STACKTOP = sp;return 1;
}
function _str_pack($0) {
 $0 = $0|0;
 var $$0101 = 0, $$01013$i = 0, $$015$i = 0, $$03133$i = i64(), $$03133$i76 = i64(), $$03133$i87 = i64(), $$03133$us$i = i64(), $$03133$us$i72 = i64(), $$03133$us$i83 = i64(), $$034$i = 0, $$034$i75 = 0, $$034$i86 = 0, $$034$us$i = 0, $$034$us$i71 = 0, $$034$us$i82 = 0, $$067100 = 0, $$0814$i = 0, $$1 = 0, $$11116$i = 0, $$118$i = 0;
 var $$168 = 0, $$1917$i = 0, $$pr96 = 0, $$pre = 0, $$pre109 = 0, $$pre110 = 0, $$pre111 = 0, $$pre112 = 0, $$pre113 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = i64(), $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = i64(), $144 = 0;
 var $145 = 0, $146 = 0, $147 = i64(), $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = i64(), $32 = 0, $33 = 0, $34 = 0, $35 = i64();
 var $36 = i64(), $37 = i64(), $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = i64(), $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = i64(), $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = i64(), $64 = 0, $65 = 0, $66 = i64(), $67 = i64(), $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = i64(), $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = i64(), $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0.0, $9 = 0;
 var $90 = 0, $91 = Math_fround(0), $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0, $exitcond$i73 = 0, $exitcond$i84 = 0, $exitcond38$i = 0, $exitcond38$i77 = 0, $exitcond38$i88 = 0, $or$cond = 0, $or$cond$i = 0, $scevgep$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4176|0;
 $1 = sp + 64|0;
 $2 = sp + 52|0;
 $3 = sp + 48|0;
 $4 = sp + 44|0;
 $5 = sp + 40|0;
 $6 = sp;
 $7 = (_luaL_checklstring($0,1,0)|0);
 store4($3,$7);
 store4($2,$0);
 $8 = ((($2)) + 4|0);
 store4($8,1);
 $9 = ((($2)) + 8|0);
 store4($9,1);
 _lua_pushnil($0);
 _luaL_buffinit($0,$1);
 $10 = load1($7);
 $11 = ($10<<24>>24)==(0);
 if ($11) {
  _luaL_pushresult($1);
  STACKTOP = sp;return 1;
 }
 $12 = ((($1)) + 8|0);
 $13 = ((($1)) + 4|0);
 $$0101 = 1;$$067100 = 0;
 while(1) {
  $14 = (_getdetails($2,$$067100,$3,$4,$5)|0);
  $15 = load4($5);
  $16 = load4($4);
  $17 = (($15) + ($$067100))|0;
  $18 = (($17) + ($16))|0;
  $19 = (($15) + -1)|0;
  store4($5,$19);
  $20 = ($15|0)>(0);
  if ($20) {
   $$pr96 = $19;
   while(1) {
    $21 = load4($12);
    $22 = load4($13);
    $23 = ($21>>>0)<($22>>>0);
    if ($23) {
     $26 = $21;
    } else {
     (_luaL_prepbuffsize($1,1)|0);
     $$pre = load4($12);
     $26 = $$pre;
    }
    $24 = load4($1);
    $25 = (($26) + 1)|0;
    store4($12,$25);
    $27 = (($24) + ($26)|0);
    store1($27,0);
    $28 = (($$pr96) + -1)|0;
    $29 = ($$pr96|0)>(0);
    if ($29) {
     $$pr96 = $28;
    } else {
     break;
    }
   }
   store4($5,$28);
  }
  $30 = (($$0101) + 1)|0;
  switch ($14|0) {
  case 0:  {
   $31 = (i64(_luaL_checkinteger($0,$30)));
   $32 = ($16|0)<(8);
   if ($32) {
    $33 = $16 << 3;
    $34 = (($33) + -1)|0;
    $35 = i64_zext($34>>>0);
    $36 = i64_shl(i64_const(1,0),$35);
    $37 = i64_sub(i64_const(0,0),$36);
    $38 = i64_sge($31,$37);
    $39 = i64_slt($31,$36);
    $or$cond = $38 & $39;
    if (!($or$cond)) {
     (_luaL_argerror($0,$30,14026)|0);
    }
   }
   $40 = load4($8);
   $41 = (_luaL_prepbuffsize($1,$16)|0);
   $42 = i64_trunc($31)&255;
   $43 = ($40|0)!=(0);
   $44 = (($16) + -1)|0;
   $45 = $43 ? 0 : $44;
   $46 = (($41) + ($45)|0);
   store1($46,$42);
   $47 = ($16|0)>(1);
   do {
    if ($47) {
     if ($43) {
      $$03133$us$i72 = $31;$$034$us$i71 = 1;
      while(1) {
       $48 = i64_lshr($$03133$us$i72,i64_const(8,0));
       $49 = i64_trunc($48)&255;
       $50 = (($41) + ($$034$us$i71)|0);
       store1($50,$49);
       $51 = (($$034$us$i71) + 1)|0;
       $exitcond$i73 = ($51|0)==($16|0);
       if ($exitcond$i73) {
        break;
       } else {
        $$03133$us$i72 = $48;$$034$us$i71 = $51;
       }
      }
     } else {
      $$03133$i76 = $31;$$034$i75 = 1;
      while(1) {
       $52 = i64_lshr($$03133$i76,i64_const(8,0));
       $53 = i64_trunc($52)&255;
       $54 = (($44) - ($$034$i75))|0;
       $55 = (($41) + ($54)|0);
       store1($55,$53);
       $56 = (($$034$i75) + 1)|0;
       $exitcond38$i77 = ($56|0)==($16|0);
       if ($exitcond38$i77) {
        break;
       } else {
        $$03133$i76 = $52;$$034$i75 = $56;
       }
      }
     }
     $57 = i64_slt($31,i64_const(0,0));
     $58 = ($16|0)>(8);
     $or$cond$i = $58 & $57;
     if ($or$cond$i) {
      if ($43) {
       $scevgep$i = ((($41)) + 8|0);
       $59 = (($16) + -8)|0;
       _memset(($scevgep$i|0),-1,($59|0))|0;
       break;
      } else {
       $60 = (($16) + -8)|0;
       _memset(($41|0),-1,($60|0))|0;
       break;
      }
     }
    }
   } while(0);
   $61 = load4($12);
   $62 = (($61) + ($16))|0;
   store4($12,$62);
   $$1 = $30;$$168 = $18;
   break;
  }
  case 1:  {
   $63 = (i64(_luaL_checkinteger($0,$30)));
   $64 = ($16|0)<(8);
   if ($64) {
    $65 = $16 << 3;
    $66 = i64_zext($65>>>0);
    $67 = i64_shl(i64_const(1,0),$66);
    $68 = i64_ult($63,$67);
    if (!($68)) {
     (_luaL_argerror($0,$30,14043)|0);
    }
   }
   $69 = load4($8);
   $70 = (_luaL_prepbuffsize($1,$16)|0);
   $71 = i64_trunc($63)&255;
   $72 = ($69|0)!=(0);
   $73 = (($16) + -1)|0;
   $74 = $72 ? 0 : $73;
   $75 = (($70) + ($74)|0);
   store1($75,$71);
   $76 = ($16|0)>(1);
   if ($76) {
    if ($72) {
     $$03133$us$i83 = $63;$$034$us$i82 = 1;
     while(1) {
      $77 = i64_lshr($$03133$us$i83,i64_const(8,0));
      $78 = i64_trunc($77)&255;
      $79 = (($70) + ($$034$us$i82)|0);
      store1($79,$78);
      $80 = (($$034$us$i82) + 1)|0;
      $exitcond$i84 = ($80|0)==($16|0);
      if ($exitcond$i84) {
       break;
      } else {
       $$03133$us$i83 = $77;$$034$us$i82 = $80;
      }
     }
    } else {
     $$03133$i87 = $63;$$034$i86 = 1;
     while(1) {
      $81 = i64_lshr($$03133$i87,i64_const(8,0));
      $82 = i64_trunc($81)&255;
      $83 = (($73) - ($$034$i86))|0;
      $84 = (($70) + ($83)|0);
      store1($84,$82);
      $85 = (($$034$i86) + 1)|0;
      $exitcond38$i88 = ($85|0)==($16|0);
      if ($exitcond38$i88) {
       break;
      } else {
       $$03133$i87 = $81;$$034$i86 = $85;
      }
     }
    }
   }
   $86 = load4($12);
   $87 = (($86) + ($16))|0;
   store4($12,$87);
   $$1 = $30;$$168 = $18;
   break;
  }
  case 2:  {
   $88 = (_luaL_prepbuffsize($1,$16)|0);
   $89 = (+_luaL_checknumber($0,$30));
   $90 = ($16|0)==(4);
   if ($90) {
    $91 = Math_fround($89);
    storef($6,$91);
   } else {
    stored($6,$89);
   }
   $92 = load4($8);
   $93 = ($92|0)==(1);
   $94 = ($16|0)==(0);
   if ($93) {
    if (!($94)) {
     $$01013$i = $6;$$015$i = $88;$$0814$i = $16;
     while(1) {
      $95 = (($$0814$i) + -1)|0;
      $96 = ((($$01013$i)) + 1|0);
      $97 = load1($$01013$i);
      $98 = ((($$015$i)) + 1|0);
      store1($$015$i,$97);
      $99 = ($95|0)==(0);
      if ($99) {
       break;
      } else {
       $$01013$i = $96;$$015$i = $98;$$0814$i = $95;
      }
     }
    }
   } else {
    if (!($94)) {
     $100 = (($16) + -1)|0;
     $101 = (($88) + ($100)|0);
     $$11116$i = $6;$$118$i = $101;$$1917$i = $16;
     while(1) {
      $102 = (($$1917$i) + -1)|0;
      $103 = ((($$11116$i)) + 1|0);
      $104 = load1($$11116$i);
      $105 = ((($$118$i)) + -1|0);
      store1($$118$i,$104);
      $106 = ($102|0)==(0);
      if ($106) {
       break;
      } else {
       $$11116$i = $103;$$118$i = $105;$$1917$i = $102;
      }
     }
    }
   }
   $107 = load4($4);
   $108 = load4($12);
   $109 = (($108) + ($107))|0;
   store4($12,$109);
   $$1 = $30;$$168 = $18;
   break;
  }
  case 3:  {
   $110 = (_luaL_checklstring($0,$30,$6)|0);
   $111 = load4($6);
   $112 = ($111>>>0)>($16>>>0);
   if ($112) {
    (_luaL_argerror($0,$30,14061)|0);
    $$pre112 = load4($6);
    $113 = $$pre112;
   } else {
    $113 = $111;
   }
   _luaL_addlstring($1,$110,$113);
   $114 = load4($6);
   $115 = (($114) + 1)|0;
   store4($6,$115);
   $116 = ($114>>>0)<($16>>>0);
   if ($116) {
    while(1) {
     $117 = load4($12);
     $118 = load4($13);
     $119 = ($117>>>0)<($118>>>0);
     if ($119) {
      $122 = $117;
     } else {
      (_luaL_prepbuffsize($1,1)|0);
      $$pre113 = load4($12);
      $122 = $$pre113;
     }
     $120 = load4($1);
     $121 = (($122) + 1)|0;
     store4($12,$121);
     $123 = (($120) + ($122)|0);
     store1($123,0);
     $124 = load4($6);
     $125 = (($124) + 1)|0;
     store4($6,$125);
     $126 = ($124>>>0)<($16>>>0);
     if (!($126)) {
      break;
     }
    }
   }
   $$1 = $30;$$168 = $18;
   break;
  }
  case 4:  {
   $127 = (_luaL_checklstring($0,$30,$6)|0);
   $128 = ($16|0)>(3);
   if (!($128)) {
    $129 = load4($6);
    $130 = $16 << 3;
    $131 = 1 << $130;
    $132 = ($129>>>0)<($131>>>0);
    if (!($132)) {
     (_luaL_argerror($0,$30,14091)|0);
    }
   }
   $133 = load4($6);
   $134 = i64_zext($133>>>0);
   $135 = load4($8);
   $136 = (_luaL_prepbuffsize($1,$16)|0);
   $137 = $133&255;
   $138 = ($135|0)!=(0);
   $139 = (($16) + -1)|0;
   $140 = $138 ? 0 : $139;
   $141 = (($136) + ($140)|0);
   store1($141,$137);
   $142 = ($16|0)>(1);
   if ($142) {
    if ($138) {
     $$03133$us$i = $134;$$034$us$i = 1;
     while(1) {
      $143 = i64_lshr($$03133$us$i,i64_const(8,0));
      $144 = i64_trunc($143)&255;
      $145 = (($136) + ($$034$us$i)|0);
      store1($145,$144);
      $146 = (($$034$us$i) + 1)|0;
      $exitcond$i = ($146|0)==($16|0);
      if ($exitcond$i) {
       break;
      } else {
       $$03133$us$i = $143;$$034$us$i = $146;
      }
     }
    } else {
     $$03133$i = $134;$$034$i = 1;
     while(1) {
      $147 = i64_lshr($$03133$i,i64_const(8,0));
      $148 = i64_trunc($147)&255;
      $149 = (($139) - ($$034$i))|0;
      $150 = (($136) + ($149)|0);
      store1($150,$148);
      $151 = (($$034$i) + 1)|0;
      $exitcond38$i = ($151|0)==($16|0);
      if ($exitcond38$i) {
       break;
      } else {
       $$03133$i = $147;$$034$i = $151;
      }
     }
    }
   }
   $152 = load4($12);
   $153 = (($152) + ($16))|0;
   store4($12,$153);
   $154 = load4($6);
   _luaL_addlstring($1,$127,$154);
   $155 = load4($6);
   $156 = (($155) + ($18))|0;
   $$1 = $30;$$168 = $156;
   break;
  }
  case 5:  {
   $157 = (_luaL_checklstring($0,$30,$6)|0);
   $158 = (_strlen($157)|0);
   $159 = load4($6);
   $160 = ($158|0)==($159|0);
   if ($160) {
    $161 = $158;
   } else {
    (_luaL_argerror($0,$30,14132)|0);
    $$pre110 = load4($6);
    $161 = $$pre110;
   }
   _luaL_addlstring($1,$157,$161);
   $162 = load4($12);
   $163 = load4($13);
   $164 = ($162>>>0)<($163>>>0);
   if ($164) {
    $167 = $162;
   } else {
    (_luaL_prepbuffsize($1,1)|0);
    $$pre111 = load4($12);
    $167 = $$pre111;
   }
   $165 = load4($1);
   $166 = (($167) + 1)|0;
   store4($12,$166);
   $168 = (($165) + ($167)|0);
   store1($168,0);
   $169 = load4($6);
   $170 = (($18) + 1)|0;
   $171 = (($170) + ($169))|0;
   $$1 = $30;$$168 = $171;
   break;
  }
  case 6:  {
   $172 = load4($12);
   $173 = load4($13);
   $174 = ($172>>>0)<($173>>>0);
   if ($174) {
    $177 = $172;
   } else {
    (_luaL_prepbuffsize($1,1)|0);
    $$pre109 = load4($12);
    $177 = $$pre109;
   }
   $175 = load4($1);
   $176 = (($177) + 1)|0;
   store4($12,$176);
   $178 = (($175) + ($177)|0);
   store1($178,0);
   label = 71;
   break;
  }
  case 8: case 7:  {
   label = 71;
   break;
  }
  default: {
   $$1 = $30;$$168 = $18;
  }
  }
  if ((label|0) == 71) {
   label = 0;
   $$1 = $$0101;$$168 = $18;
  }
  $179 = load4($3);
  $180 = load1($179);
  $181 = ($180<<24>>24)==(0);
  if ($181) {
   break;
  } else {
   $$0101 = $$1;$$067100 = $$168;
  }
 }
 _luaL_pushresult($1);
 STACKTOP = sp;return 1;
}
function _str_packsize($0) {
 $0 = $0|0;
 var $$0$lcssa = i64(), $$012 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $phitmp = i64(), $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $1 = sp + 12|0;
 $2 = sp + 8|0;
 $3 = sp + 4|0;
 $4 = sp;
 $5 = (_luaL_checklstring($0,1,0)|0);
 store4($2,$5);
 store4($1,$0);
 $6 = ((($1)) + 4|0);
 store4($6,1);
 $7 = ((($1)) + 8|0);
 store4($7,1);
 $8 = load1($5);
 $9 = ($8<<24>>24)==(0);
 if ($9) {
  $$0$lcssa = i64_const(0,0);
  _lua_pushinteger($0,$$0$lcssa);
  STACKTOP = sp;return 1;
 }
 $$012 = 0;
 while(1) {
  $10 = (_getdetails($1,$$012,$2,$3,$4)|0);
  $11 = load4($4);
  $12 = load4($3);
  $13 = (($12) + ($11))|0;
  store4($3,$13);
  $14 = (2147483647 - ($13))|0;
  $15 = ($$012>>>0)>($14>>>0);
  if ($15) {
   (_luaL_argerror($0,1,13979)|0);
  }
  $16 = (($13) + ($$012))|0;
  $17 = $10 & -2;
  $switch = ($17|0)==(4);
  if ($switch) {
   (_luaL_argerror($0,1,14003)|0);
  }
  $18 = load4($2);
  $19 = load1($18);
  $20 = ($19<<24>>24)==(0);
  if ($20) {
   break;
  } else {
   $$012 = $16;
  }
 }
 $phitmp = i64_zext($16>>>0);
 $$0$lcssa = $phitmp;
 _lua_pushinteger($0,$$0$lcssa);
 STACKTOP = sp;return 1;
}
function _str_unpack($0) {
 $0 = $0|0;
 var $$0$lcssa = 0, $$01013$i = 0, $$015$i = 0, $$066$lcssa = 0, $$06671 = 0, $$068 = 0.0, $$072 = 0, $$0814$i = 0, $$1 = 0, $$11116$i = 0, $$118$i = 0, $$167 = 0, $$1917$i = 0, $$off0 = 0, $$pre76 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = i64(), $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = Math_fround(0), $56 = 0.0, $57 = 0.0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = i64(), $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = i64(), $79 = 0, $8 = 0, $9 = i64(), $extract$t = 0, $extract$t69 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $1 = sp + 56|0;
 $2 = sp + 52|0;
 $3 = sp + 48|0;
 $4 = sp + 44|0;
 $5 = sp + 40|0;
 $6 = sp;
 $7 = (_luaL_checklstring($0,1,0)|0);
 store4($2,$7);
 $8 = (_luaL_checklstring($0,2,$3)|0);
 $9 = (i64(_luaL_optinteger($0,3,i64_const(1,0))));
 $10 = load4($3);
 $11 = i64_sgt($9,i64_const(4294967295,4294967295));
 $extract$t69 = i64_trunc($9);
 if ($11) {
  $$off0 = $extract$t69;
 } else {
  $12 = (0 - ($extract$t69))|0;
  $13 = ($10>>>0)<($12>>>0);
  $14 = (($extract$t69) + 1)|0;
  $15 = (($14) + ($10))|0;
  $extract$t = $13 ? 0 : $15;
  $$off0 = $extract$t;
 }
 $16 = (($$off0) + -1)|0;
 $17 = ($16>>>0)>($10>>>0);
 if ($17) {
  (_luaL_argerror($0,3,15153)|0);
 }
 store4($1,$0);
 $18 = ((($1)) + 4|0);
 store4($18,1);
 $19 = ((($1)) + 8|0);
 store4($19,1);
 $20 = load1($7);
 $21 = ($20<<24>>24)==(0);
 if ($21) {
  $$0$lcssa = $16;$$066$lcssa = 0;
  $77 = (($$0$lcssa) + 1)|0;
  $78 = i64_zext($77>>>0);
  _lua_pushinteger($0,$78);
  $79 = (($$066$lcssa) + 1)|0;
  STACKTOP = sp;return ($79|0);
 }
 $$06671 = 0;$$072 = $16;
 while(1) {
  $22 = (_getdetails($1,$$072,$2,$4,$5)|0);
  $23 = load4($5);
  $24 = load4($4);
  $25 = (($24) + ($23))|0;
  $26 = $$072 ^ -1;
  $27 = ($25>>>0)>($26>>>0);
  $$pre76 = (($23) + ($$072))|0;
  if ($27) {
   label = 9;
  } else {
   $28 = (($$pre76) + ($24))|0;
   $29 = load4($3);
   $30 = ($28>>>0)>($29>>>0);
   if ($30) {
    label = 9;
   }
  }
  if ((label|0) == 9) {
   label = 0;
   (_luaL_argerror($0,2,13716)|0);
  }
  _luaL_checkstack($0,2,13738);
  $31 = (($$06671) + 1)|0;
  switch ($22|0) {
  case 1: case 0:  {
   $32 = (($8) + ($$pre76)|0);
   $33 = load4($18);
   $34 = ($22|0)==(0);
   $35 = $34&1;
   $36 = (i64(_unpackint($0,$32,$33,$24,$35)));
   _lua_pushinteger($0,$36);
   $$1 = $$pre76;$$167 = $31;$73 = $24;
   break;
  }
  case 2:  {
   $37 = (($8) + ($$pre76)|0);
   $38 = load4($18);
   $39 = ($38|0)==(1);
   $40 = ($24|0)==(0);
   if ($39) {
    if (!($40)) {
     $$01013$i = $37;$$015$i = $6;$$0814$i = $24;
     while(1) {
      $41 = (($$0814$i) + -1)|0;
      $42 = ((($$01013$i)) + 1|0);
      $43 = load1($$01013$i);
      $44 = ((($$015$i)) + 1|0);
      store1($$015$i,$43);
      $45 = ($41|0)==(0);
      if ($45) {
       break;
      } else {
       $$01013$i = $42;$$015$i = $44;$$0814$i = $41;
      }
     }
    }
   } else {
    if (!($40)) {
     $46 = (($24) + -1)|0;
     $47 = (($6) + ($46)|0);
     $$11116$i = $37;$$118$i = $47;$$1917$i = $24;
     while(1) {
      $48 = (($$1917$i) + -1)|0;
      $49 = ((($$11116$i)) + 1|0);
      $50 = load1($$11116$i);
      $51 = ((($$118$i)) + -1|0);
      store1($$118$i,$50);
      $52 = ($48|0)==(0);
      if ($52) {
       break;
      } else {
       $$11116$i = $49;$$118$i = $51;$$1917$i = $48;
      }
     }
    }
   }
   $53 = load4($4);
   $54 = ($53|0)==(4);
   if ($54) {
    $55 = loadf($6);
    $56 = +$55;
    $$068 = $56;
   } else {
    $57 = loadd($6);
    $$068 = $57;
   }
   _lua_pushnumber($0,$$068);
   $$1 = $$pre76;$$167 = $31;$73 = $53;
   break;
  }
  case 3:  {
   $58 = (($8) + ($$pre76)|0);
   (_lua_pushlstring($0,$58,$24)|0);
   $$1 = $$pre76;$$167 = $31;$73 = $24;
   break;
  }
  case 4:  {
   $59 = (($8) + ($$pre76)|0);
   $60 = load4($18);
   $61 = (i64(_unpackint($0,$59,$60,$24,0)));
   $62 = i64_trunc($61);
   $63 = (($$pre76) + ($62))|0;
   $64 = (($63) + ($24))|0;
   $65 = load4($3);
   $66 = ($64>>>0)>($65>>>0);
   if ($66) {
    (_luaL_argerror($0,2,13716)|0);
   }
   $67 = (($59) + ($24)|0);
   (_lua_pushlstring($0,$67,$62)|0);
   $$1 = $63;$$167 = $31;$73 = $24;
   break;
  }
  case 5:  {
   $68 = (($8) + ($$pre76)|0);
   $69 = (_strlen($68)|0);
   (_lua_pushlstring($0,$68,$69)|0);
   $70 = (($$pre76) + 1)|0;
   $71 = (($70) + ($69))|0;
   $$1 = $71;$$167 = $31;$73 = $24;
   break;
  }
  case 8: case 6: case 7:  {
   $$1 = $$pre76;$$167 = $$06671;$73 = $24;
   break;
  }
  default: {
   $$1 = $$pre76;$$167 = $31;$73 = $24;
  }
  }
  $72 = (($73) + ($$1))|0;
  $74 = load4($2);
  $75 = load1($74);
  $76 = ($75<<24>>24)==(0);
  if ($76) {
   $$0$lcssa = $72;$$066$lcssa = $$167;
   break;
  } else {
   $$06671 = $$167;$$072 = $72;
  }
 }
 $77 = (($$0$lcssa) + 1)|0;
 $78 = i64_zext($77>>>0);
 _lua_pushinteger($0,$78);
 $79 = (($$066$lcssa) + 1)|0;
 STACKTOP = sp;return ($79|0);
}
function _getdetails($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $5 = sp;
 $6 = (_getoption($0,$2,$3)|0);
 $7 = load4($3);
 store4($5,$7);
 $8 = ($6|0)==(7);
 do {
  if ($8) {
   $9 = load4($2);
   $10 = load1($9);
   $11 = ($10<<24>>24)==(0);
   if ($11) {
    $31 = $7;
   } else {
    $12 = (_getoption($0,$2,$5)|0);
    $13 = ($12|0)==(3);
    $14 = load4($5);
    $15 = ($14|0)==(0);
    $or$cond = $13 | $15;
    if ($or$cond) {
     $31 = $14;
    } else {
     $17 = $14;
     break;
    }
   }
   $16 = load4($0);
   (_luaL_argerror($16,1,13801)|0);
   $17 = $31;
  } else {
   $17 = $7;
  }
 } while(0);
 $18 = ($17|0)<(2);
 $19 = ($6|0)==(3);
 $or$cond3 = $19 | $18;
 if ($or$cond3) {
  $storemerge = 0;
  store4($4,$storemerge);
  STACKTOP = sp;return ($6|0);
 }
 $20 = ((($0)) + 8|0);
 $21 = load4($20);
 $22 = ($17|0)>($21|0);
 if ($22) {
  store4($5,$21);
  $24 = $21;
 } else {
  $24 = $17;
 }
 $23 = (($24) + -1)|0;
 $25 = $23 & $24;
 $26 = ($25|0)==(0);
 if (!($26)) {
  $27 = load4($0);
  (_luaL_argerror($27,1,13836)|0);
 }
 $28 = $23 & $1;
 $29 = (($24) - ($28))|0;
 $30 = $29 & $23;
 $storemerge = $30;
 store4($4,$storemerge);
 STACKTOP = sp;return ($6|0);
}
function _unpackint($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$lcssa = i64(), $$042 = 0, $$042$us = 0, $$04245 = 0, $$04247 = 0, $$04247$us = 0, $$046 = i64(), $$046$us = i64(), $$14344 = 0, $$14344$us = 0, $$op = 0, $10 = 0, $11 = 0, $12 = i64(), $13 = i64(), $14 = 0, $15 = i64(), $16 = 0, $17 = 0, $18 = i64();
 var $19 = i64(), $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = i64(), $25 = i64(), $26 = i64(), $27 = i64(), $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = i64(), $9 = 0, $exitcond = 0, $exitcond52 = 0, $spec$select = i64(), $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $5 = ($3|0)<(8);
 $$op = (($3) + -1)|0;
 $$04245 = $5 ? $$op : 7;
 $6 = ($3|0)>(0);
 if ($6) {
  $7 = ($2|0)==(0);
  if ($7) {
   $$04247$us = $$04245;$$046$us = i64_const(0,0);
   while(1) {
    $8 = i64_shl($$046$us,i64_const(8,0));
    $9 = (($$op) - ($$04247$us))|0;
    $10 = (($1) + ($9)|0);
    $11 = load1($10);
    $12 = i64_zext($11&255);
    $13 = i64_or($8,$12);
    $$042$us = (($$04247$us) + -1)|0;
    $14 = ($$04247$us|0)>(0);
    if ($14) {
     $$04247$us = $$042$us;$$046$us = $13;
    } else {
     $$0$lcssa = $13;
     break;
    }
   }
  } else {
   $$04247 = $$04245;$$046 = i64_const(0,0);
   while(1) {
    $15 = i64_shl($$046,i64_const(8,0));
    $16 = (($1) + ($$04247)|0);
    $17 = load1($16);
    $18 = i64_zext($17&255);
    $19 = i64_or($15,$18);
    $$042 = (($$04247) + -1)|0;
    $20 = ($$04247|0)>(0);
    if ($20) {
     $$04247 = $$042;$$046 = $19;
    } else {
     $$0$lcssa = $19;
     break;
    }
   }
  }
 } else {
  $$0$lcssa = i64_const(0,0);
 }
 if ($5) {
  $21 = ($4|0)==(0);
  $22 = $3 << 3;
  $23 = (($22) + -1)|0;
  $24 = i64_zext($23>>>0);
  $25 = i64_shl(i64_const(1,0),$24);
  $26 = i64_xor($$0$lcssa,$25);
  $27 = i64_sub($26,$25);
  $spec$select = $21 ? $$0$lcssa : $27;
  STACKTOP = sp;return (i64($spec$select));
 }
 $28 = ($3|0)==(8);
 if ($28) {
  STACKTOP = sp;return (i64($$0$lcssa));
 }
 $29 = ($4|0)==(0);
 $30 = i64_sgt($$0$lcssa,i64_const(4294967295,4294967295));
 $31 = $29 | $30;
 $32 = $31 ? 0 : 255;
 $33 = ($2|0)==(0);
 if ($33) {
  $$14344$us = 8;
  while(1) {
   $34 = (($$op) - ($$14344$us))|0;
   $35 = (($1) + ($34)|0);
   $36 = load1($35);
   $37 = $36&255;
   $38 = ($32|0)==($37|0);
   if (!($38)) {
    store4($vararg_buffer,$3);
    (_luaL_error($0,13755,$vararg_buffer)|0);
   }
   $39 = (($$14344$us) + 1)|0;
   $exitcond = ($39|0)==($3|0);
   if ($exitcond) {
    break;
   } else {
    $$14344$us = $39;
   }
  }
  STACKTOP = sp;return (i64($$0$lcssa));
 } else {
  $$14344 = 8;
  while(1) {
   $40 = (($1) + ($$14344)|0);
   $41 = load1($40);
   $42 = $41&255;
   $43 = ($32|0)==($42|0);
   if (!($43)) {
    store4($vararg_buffer1,$3);
    (_luaL_error($0,13755,$vararg_buffer1)|0);
   }
   $44 = (($$14344) + 1)|0;
   $exitcond52 = ($44|0)==($3|0);
   if ($exitcond52) {
    break;
   } else {
    $$14344 = $44;
   }
  }
  STACKTOP = sp;return (i64($$0$lcssa));
 }
 return i64((i64(0)));
}
function _getoption($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i39 = 0, $$0$i$i47 = 0, $$0$i$i56 = 0, $$0$i44 = 0, $$0$i52 = 0, $$0$i54 = 0, $$0$i61 = 0, $$off$i = 0, $$off$i$i = 0, $$off$i$i$i = 0, $$off$i$i$i38 = 0, $$off$i$i$i46 = 0, $$off$i$i$i55 = 0, $$off$i42 = 0, $$off$i50 = 0, $$off$i59 = 0, $$off$i9$i = 0;
 var $$off$i9$i$i = 0, $$off$i9$i$i40 = 0, $$off$i9$i$i48 = 0, $$off$i9$i$i57 = 0, $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer12 = 0, $vararg_buffer16 = 0, $vararg_buffer2 = 0, $vararg_buffer6 = 0, $vararg_ptr1 = 0, $vararg_ptr15 = 0, $vararg_ptr5 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer16 = sp + 40|0;
 $vararg_buffer12 = sp + 32|0;
 $vararg_buffer10 = sp + 24|0;
 $vararg_buffer6 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = load4($1);
 $4 = ((($3)) + 1|0);
 store4($1,$4);
 $5 = load1($3);
 $6 = $5 << 24 >> 24;
 store4($2,0);
 do {
  switch ($6|0) {
  case 98:  {
   store4($2,1);
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 66:  {
   store4($2,1);
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 104:  {
   store4($2,2);
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 72:  {
   store4($2,2);
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 108:  {
   store4($2,4);
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 76:  {
   store4($2,4);
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 106:  {
   store4($2,8);
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 74:  {
   store4($2,8);
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 84:  {
   store4($2,4);
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 102:  {
   store4($2,4);
   $$0 = 2;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 100:  {
   store4($2,8);
   $$0 = 2;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 110:  {
   store4($2,8);
   $$0 = 2;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 105:  {
   $7 = load1($4);
   $8 = $7 << 24 >> 24;
   $$off$i$i$i = (($8) + -48)|0;
   $9 = ($$off$i$i$i>>>0)>(9);
   if ($9) {
    $$0$i = 4;
   } else {
    $$0$i$i = 0;$12 = $4;
    while(1) {
     $10 = ($$0$i$i*10)|0;
     $11 = ((($12)) + 1|0);
     store4($1,$11);
     $13 = load1($12);
     $14 = $13 << 24 >> 24;
     $15 = (($10) + -48)|0;
     $16 = (($15) + ($14))|0;
     $17 = load1($11);
     $18 = $17 << 24 >> 24;
     $$off$i9$i$i = (($18) + -48)|0;
     $19 = ($$off$i9$i$i>>>0)<(10);
     $20 = ($16|0)<(214748364);
     $21 = $20 & $19;
     if ($21) {
      $$0$i$i = $16;$12 = $11;
     } else {
      break;
     }
    }
    $$off$i = (($16) + -1)|0;
    $22 = ($$off$i>>>0)>(15);
    if ($22) {
     $23 = load4($0);
     store4($vararg_buffer,$16);
     $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
     store4($vararg_ptr1,16);
     $24 = (_luaL_error($23,13877,$vararg_buffer)|0);
     $$0$i = $24;
    } else {
     $$0$i = $16;
    }
   }
   store4($2,$$0$i);
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 73:  {
   $25 = load1($4);
   $26 = $25 << 24 >> 24;
   $$off$i$i$i38 = (($26) + -48)|0;
   $27 = ($$off$i$i$i38>>>0)>(9);
   if ($27) {
    $$0$i44 = 4;
   } else {
    $$0$i$i39 = 0;$30 = $4;
    while(1) {
     $28 = ($$0$i$i39*10)|0;
     $29 = ((($30)) + 1|0);
     store4($1,$29);
     $31 = load1($30);
     $32 = $31 << 24 >> 24;
     $33 = (($28) + -48)|0;
     $34 = (($33) + ($32))|0;
     $35 = load1($29);
     $36 = $35 << 24 >> 24;
     $$off$i9$i$i40 = (($36) + -48)|0;
     $37 = ($$off$i9$i$i40>>>0)<(10);
     $38 = ($34|0)<(214748364);
     $39 = $38 & $37;
     if ($39) {
      $$0$i$i39 = $34;$30 = $29;
     } else {
      break;
     }
    }
    $$off$i42 = (($34) + -1)|0;
    $40 = ($$off$i42>>>0)>(15);
    if ($40) {
     $41 = load4($0);
     store4($vararg_buffer2,$34);
     $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
     store4($vararg_ptr5,16);
     $42 = (_luaL_error($41,13877,$vararg_buffer2)|0);
     $$0$i44 = $42;
    } else {
     $$0$i44 = $34;
    }
   }
   store4($2,$$0$i44);
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 115:  {
   $43 = load1($4);
   $44 = $43 << 24 >> 24;
   $$off$i$i$i46 = (($44) + -48)|0;
   $45 = ($$off$i$i$i46>>>0)>(9);
   if ($45) {
    $$0$i52 = 4;
   } else {
    $$0$i$i47 = 0;$48 = $4;
    while(1) {
     $46 = ($$0$i$i47*10)|0;
     $47 = ((($48)) + 1|0);
     store4($1,$47);
     $49 = load1($48);
     $50 = $49 << 24 >> 24;
     $51 = (($46) + -48)|0;
     $52 = (($51) + ($50))|0;
     $53 = load1($47);
     $54 = $53 << 24 >> 24;
     $$off$i9$i$i48 = (($54) + -48)|0;
     $55 = ($$off$i9$i$i48>>>0)<(10);
     $56 = ($52|0)<(214748364);
     $57 = $56 & $55;
     if ($57) {
      $$0$i$i47 = $52;$48 = $47;
     } else {
      break;
     }
    }
    $$off$i50 = (($52) + -1)|0;
    $58 = ($$off$i50>>>0)>(15);
    if ($58) {
     $59 = load4($0);
     store4($vararg_buffer6,$52);
     $vararg_ptr9 = ((($vararg_buffer6)) + 4|0);
     store4($vararg_ptr9,16);
     $60 = (_luaL_error($59,13877,$vararg_buffer6)|0);
     $$0$i52 = $60;
    } else {
     $$0$i52 = $52;
    }
   }
   store4($2,$$0$i52);
   $$0 = 4;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 99:  {
   $61 = load1($4);
   $62 = $61 << 24 >> 24;
   $$off$i$i = (($62) + -48)|0;
   $63 = ($$off$i$i>>>0)>(9);
   if ($63) {
    store4($2,-1);
   } else {
    $$0$i54 = 0;$66 = $4;
    while(1) {
     $64 = ($$0$i54*10)|0;
     $65 = ((($66)) + 1|0);
     store4($1,$65);
     $67 = load1($66);
     $68 = $67 << 24 >> 24;
     $69 = (($64) + -48)|0;
     $70 = (($69) + ($68))|0;
     $71 = load1($65);
     $72 = $71 << 24 >> 24;
     $$off$i9$i = (($72) + -48)|0;
     $73 = ($$off$i9$i>>>0)<(10);
     $74 = ($70|0)<(214748364);
     $75 = $74 & $73;
     if ($75) {
      $$0$i54 = $70;$66 = $65;
     } else {
      break;
     }
    }
    store4($2,$70);
    $76 = ($70|0)==(-1);
    if (!($76)) {
     $$0 = 3;
     STACKTOP = sp;return ($$0|0);
    }
   }
   $77 = load4($0);
   (_luaL_error($77,13917,$vararg_buffer10)|0);
   $$0 = 3;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 120:  {
   store4($2,1);
   $$0 = 6;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 88:  {
   $$0 = 7;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 32:  {
   break;
  }
  case 60:  {
   $78 = ((($0)) + 4|0);
   store4($78,1);
   break;
  }
  case 62:  {
   $79 = ((($0)) + 4|0);
   store4($79,0);
   break;
  }
  case 61:  {
   $80 = ((($0)) + 4|0);
   store4($80,1);
   break;
  }
  case 33:  {
   $81 = load1($4);
   $82 = $81 << 24 >> 24;
   $$off$i$i$i55 = (($82) + -48)|0;
   $83 = ($$off$i$i$i55>>>0)>(9);
   if ($83) {
    $$0$i61 = 8;
   } else {
    $$0$i$i56 = 0;$86 = $4;
    while(1) {
     $84 = ($$0$i$i56*10)|0;
     $85 = ((($86)) + 1|0);
     store4($1,$85);
     $87 = load1($86);
     $88 = $87 << 24 >> 24;
     $89 = (($84) + -48)|0;
     $90 = (($89) + ($88))|0;
     $91 = load1($85);
     $92 = $91 << 24 >> 24;
     $$off$i9$i$i57 = (($92) + -48)|0;
     $93 = ($$off$i9$i$i57>>>0)<(10);
     $94 = ($90|0)<(214748364);
     $95 = $94 & $93;
     if ($95) {
      $$0$i$i56 = $90;$86 = $85;
     } else {
      break;
     }
    }
    $$off$i59 = (($90) + -1)|0;
    $96 = ($$off$i59>>>0)>(15);
    if ($96) {
     $97 = load4($0);
     store4($vararg_buffer12,$90);
     $vararg_ptr15 = ((($vararg_buffer12)) + 4|0);
     store4($vararg_ptr15,16);
     $98 = (_luaL_error($97,13877,$vararg_buffer12)|0);
     $$0$i61 = $98;
    } else {
     $$0$i61 = $90;
    }
   }
   $99 = ((($0)) + 8|0);
   store4($99,$$0$i61);
   break;
  }
  case 122:  {
   $$0 = 5;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  default: {
   $100 = load4($0);
   store4($vararg_buffer16,$6);
   (_luaL_error($100,13952,$vararg_buffer16)|0);
  }
  }
 } while(0);
 $$0 = 8;
 STACKTOP = sp;return ($$0|0);
}
function _str_find_aux($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$016$i = 0, $$016$i70 = 0, $$02023$i = 0, $$02122$i = 0, $$060 = 0, $$061$lcssa = 0, $$061101 = 0, $$062$off0 = 0, $$1$i = 0, $$2$ph = 0, $$3 = 0, $$lcssa = 0, $$pre = 0, $10 = i64(), $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $11 = i64(), $12 = i64(), $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = i64(), $18 = i64(), $19 = i64(), $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = i64(), $6 = 0, $60 = 0, $61 = 0, $62 = i64();
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = i64(), $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = i64(), $88 = 0, $89 = 0, $9 = 0, $90 = i64(), $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $exitcond$i = 0, $exitcond$i71 = 0, $extract$t = 0, $spec$select$i67 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288|0;
 $2 = sp + 284|0;
 $3 = sp + 280|0;
 $4 = sp;
 $5 = (_luaL_checklstring($0,1,$2)|0);
 $6 = (_luaL_checklstring($0,2,$3)|0);
 $7 = (i64(_luaL_optinteger($0,3,i64_const(1,0))));
 $8 = load4($2);
 $9 = i64_sgt($7,i64_const(4294967295,4294967295));
 if ($9) {
  $17 = $7;
  label = 3;
 } else {
  $10 = i64_add($7,i64_const(1,0));
  $11 = i64_zext($8>>>0);
  $12 = i64_add($10,$11);
  $13 = i64_trunc($7);
  $14 = (0 - ($13))|0;
  $15 = ($8>>>0)<($14>>>0);
  if ($15) {
   $$062$off0 = 1;
  } else {
   $17 = $12;
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $16 = i64_slt($17,i64_const(1,0));
  if ($16) {
   $$062$off0 = 1;
  } else {
   $18 = i64_zext($8>>>0);
   $19 = i64_add($18,i64_const(1,0));
   $20 = i64_sgt($17,$19);
   $extract$t = i64_trunc($17);
   if ($20) {
    _lua_pushnil($0);
    $$3 = 1;
    STACKTOP = sp;return ($$3|0);
   } else {
    $$062$off0 = $extract$t;
   }
  }
 }
 $21 = ($1|0)!=(0);
 L9: do {
  if ($21) {
   $22 = (_lua_toboolean($0,4)|0);
   $23 = ($22|0)==(0);
   $24 = load4($3);
   if ($23) {
    $$0$i = 0;
    while(1) {
     $25 = (($6) + ($$0$i)|0);
     $26 = (_strpbrk($25,14181)|0);
     $27 = ($26|0)==(0|0);
     if (!($27)) {
      label = 19;
      break L9;
     }
     $28 = (_strlen($25)|0);
     $29 = (($$0$i) + 1)|0;
     $30 = (($29) + ($28))|0;
     $31 = ($30>>>0)>($24>>>0);
     if ($31) {
      break;
     } else {
      $$0$i = $30;
     }
    }
   }
   $32 = (($5) + ($$062$off0)|0);
   $33 = ((($32)) + -1|0);
   $34 = load4($2);
   $35 = (($34) - ($$062$off0))|0;
   $36 = (($35) + 1)|0;
   $37 = ($24|0)==(0);
   L17: do {
    if ($37) {
     $$1$i = $33;
    } else {
     $38 = ($24>>>0)>($36>>>0);
     if ($38) {
      break L9;
     }
     $39 = (($24) + -1)|0;
     $40 = (($36) - ($39))|0;
     $41 = ($40|0)==(0);
     if ($41) {
      break L9;
     }
     $42 = load1($6);
     $43 = $42 << 24 >> 24;
     $44 = ((($6)) + 1|0);
     $$02023$i = $40;$$02122$i = $33;
     while(1) {
      $45 = (_memchr($$02122$i,$43,$$02023$i)|0);
      $46 = ($45|0)==(0|0);
      if ($46) {
       break L9;
      }
      $47 = ((($45)) + 1|0);
      $48 = (_memcmp($47,$44,$39)|0);
      $49 = ($48|0)==(0);
      if ($49) {
       $$1$i = $45;
       break L17;
      }
      $50 = $47;
      $51 = $$02122$i;
      $52 = (($$02023$i) + ($51))|0;
      $53 = (($52) - ($50))|0;
      $54 = ($53|0)==(0);
      if ($54) {
       break L9;
      } else {
       $$02023$i = $53;$$02122$i = $47;
      }
     }
    }
   } while(0);
   $55 = $$1$i;
   $56 = $5;
   $57 = (($55) - ($56))|0;
   $58 = (($57) + 1)|0;
   $59 = i64_sext($58);
   _lua_pushinteger($0,$59);
   $60 = load4($3);
   $61 = (($57) + ($60))|0;
   $62 = i64_zext($61>>>0);
   _lua_pushinteger($0,$62);
   $$3 = 2;
   STACKTOP = sp;return ($$3|0);
  } else {
   label = 19;
  }
 } while(0);
 do {
  if ((label|0) == 19) {
   $63 = (($5) + ($$062$off0)|0);
   $64 = ((($63)) + -1|0);
   $65 = load1($6);
   $66 = ($65<<24>>24)==(94);
   if ($66) {
    $67 = ((($6)) + 1|0);
    $68 = load4($3);
    $69 = (($68) + -1)|0;
    store4($3,$69);
    $$060 = $67;$76 = $69;
   } else {
    $$pre = load4($3);
    $$060 = $6;$76 = $$pre;
   }
   $70 = load4($2);
   $71 = ((($4)) + 12|0);
   store4($71,$0);
   $72 = ((($4)) + 16|0);
   store4($72,200);
   store4($4,$5);
   $73 = (($5) + ($70)|0);
   $74 = ((($4)) + 4|0);
   store4($74,$73);
   $75 = (($$060) + ($76)|0);
   $77 = ((($4)) + 8|0);
   store4($77,$75);
   $78 = ((($4)) + 20|0);
   store1($78,0);
   L33: do {
    if ($66) {
     $79 = (_match($4,$64,$$060)|0);
     $80 = ($79|0)==(0|0);
     if ($80) {
      label = 36;
     } else {
      $$061$lcssa = $64;$$lcssa = $79;
     }
    } else {
     $81 = (_match($4,$64,$$060)|0);
     $82 = ($81|0)==(0|0);
     if ($82) {
      $$061101 = $64;
      while(1) {
       $103 = load4($74);
       $104 = ($$061101>>>0)<($103>>>0);
       if (!($104)) {
        label = 36;
        break L33;
       }
       $105 = ((($$061101)) + 1|0);
       store1($78,0);
       $106 = (_match($4,$105,$$060)|0);
       $107 = ($106|0)==(0|0);
       if ($107) {
        $$061101 = $105;
       } else {
        $$061$lcssa = $105;$$lcssa = $106;
        break;
       }
      }
     } else {
      $$061$lcssa = $64;$$lcssa = $81;
     }
    }
   } while(0);
   if ((label|0) == 36) {
    break;
   }
   if ($21) {
    $83 = $$061$lcssa;
    $84 = $5;
    $85 = (1 - ($84))|0;
    $86 = (($85) + ($83))|0;
    $87 = i64_sext($86);
    _lua_pushinteger($0,$87);
    $88 = $$lcssa;
    $89 = (($88) - ($84))|0;
    $90 = i64_sext($89);
    _lua_pushinteger($0,$90);
    $91 = load1($78);
    $92 = $91&255;
    $93 = load4($71);
    _luaL_checkstack($93,$92,14192);
    $94 = ($91<<24>>24)==(0);
    if (!($94)) {
     $$016$i70 = 0;
     while(1) {
      _push_onecapture($4,$$016$i70,0,0);
      $95 = (($$016$i70) + 1)|0;
      $exitcond$i71 = ($95|0)==($92|0);
      if ($exitcond$i71) {
       break;
      } else {
       $$016$i70 = $95;
      }
     }
    }
    $96 = (($92) + 2)|0;
    $$2$ph = $96;
   } else {
    $97 = load1($78);
    $98 = ($97<<24>>24)==(0);
    $99 = $97&255;
    $spec$select$i67 = $98 ? 1 : $99;
    $100 = load4($71);
    _luaL_checkstack($100,$spec$select$i67,14192);
    $101 = ($spec$select$i67|0)==(0);
    if ($101) {
     $$2$ph = 0;
    } else {
     $$016$i = 0;
     while(1) {
      _push_onecapture($4,$$016$i,$$061$lcssa,$$lcssa);
      $102 = (($$016$i) + 1)|0;
      $exitcond$i = ($102|0)==($spec$select$i67|0);
      if ($exitcond$i) {
       $$2$ph = $spec$select$i67;
       break;
      } else {
       $$016$i = $102;
      }
     }
    }
   }
   $$3 = $$2$ph;
   STACKTOP = sp;return ($$3|0);
  }
 } while(0);
 _lua_pushnil($0);
 $$3 = 1;
 STACKTOP = sp;return ($$3|0);
}
function _match($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i$i = 0, $$0$ph$be = 0, $$0$ph249 = 0, $$010$i$i = 0, $$010$in$i$i = 0, $$013$i215 = 0, $$018$i = 0, $$018$i105 = 0, $$019$i$lcssa = 0, $$019$i$lcssa301 = 0, $$019$i223 = 0, $$019$i223$us228 = 0, $$022$i = 0, $$022$i99 = 0, $$02229$i = 0, $$02528$i = 0, $$02528$i$phi = 0, $$07$i$i = 0, $$080$ph$be = 0, $$080$ph248 = 0;
 var $$080211 = 0, $$1$i = 0, $$1$i$i = 0, $$1$i$i116 = 0, $$1$i102 = 0, $$1$i109 = 0, $$1$i88 = 0, $$120$i242 = 0, $$125$i = 0, $$125$i125 = 0, $$125$i134 = 0, $$125$i143 = 0, $$125$i96 = 0, $$2$i = 0, $$2$i104 = 0, $$2$i126 = 0, $$2$i135 = 0, $$2$i144 = 0, $$2$i91 = 0, $$2$i97 = 0;
 var $$221$i = 0, $$3 = 0, $$3296 = 0, $$6 = 0, $$idx = 0, $$idx$val = 0, $$idx$val$i115 = 0, $$phi$trans$insert$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phiZ2D = 0, $$pre298 = 0, $$pre299 = 0, $$pre300 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;
 var $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0;
 var $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0;
 var $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0;
 var $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0;
 var $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0;
 var $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0;
 var $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0;
 var $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0;
 var $359 = 0, $36 = 0, $360 = 0, $361 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond163 = 0, $not$$i122 = 0, $not$$i131 = 0, $not$$i140 = 0, $not$$i93 = 0, $or$cond = 0, $spec$select$i = 0;
 var $spec$select$i101 = 0, $spec$select$i108 = 0, $spec$select$i117157 = 0, $spec$select$i121 = 0, $spec$select$i130 = 0, $spec$select$i139 = 0, $spec$select$i92 = 0, $spec$select19$i = 0, $spec$select19$i103 = 0, $spec$select24$i123 = 0, $spec$select24$i132 = 0, $spec$select24$i141 = 0, $spec$select24$i94 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer13 = 0, $vararg_buffer15 = 0, $vararg_buffer17 = 0, $vararg_buffer19 = 0;
 var $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $vararg_buffer19 = sp + 80|0;
 $vararg_buffer17 = sp + 72|0;
 $vararg_buffer15 = sp + 64|0;
 $vararg_buffer13 = sp + 56|0;
 $vararg_buffer11 = sp + 48|0;
 $vararg_buffer9 = sp + 40|0;
 $vararg_buffer7 = sp + 32|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = ((($0)) + 16|0);
 $4 = load4($3);
 $5 = (($4) + -1)|0;
 store4($3,$5);
 $6 = ($4|0)==(0);
 if ($6) {
  $7 = ((($0)) + 12|0);
  $8 = load4($7);
  (_luaL_error($8,14256,$vararg_buffer)|0);
 }
 $9 = ((($0)) + 8|0);
 $10 = load4($9);
 $11 = ($10|0)==($2|0);
 if ($11) {
  $$6 = $1;
  $359 = load4($3);
  $360 = (($359) + 1)|0;
  store4($3,$360);
  STACKTOP = sp;return ($$6|0);
 }
 $12 = ((($0)) + 12|0);
 $$idx = ((($0)) + 4|0);
 $13 = ((($0)) + 20|0);
 $$0$ph249 = $1;$$080$ph248 = $2;$361 = $10;
 L7: while(1) {
  $14 = ((($$0$ph249)) + -1|0);
  $$080211 = $$080$ph248;$65 = $361;
  L9: while(1) {
   $17 = load1($$080211);
   $18 = $17 << 24 >> 24;
   switch ($18|0) {
   case 40:  {
    label = 8;
    break L7;
    break;
   }
   case 41:  {
    label = 17;
    break L7;
    break;
   }
   case 36:  {
    label = 24;
    break L9;
    break;
   }
   case 37:  {
    break;
   }
   default: {
    label = 84;
    break L9;
   }
   }
   $69 = ((($$080211)) + 1|0);
   $70 = load1($69);
   $71 = $70 << 24 >> 24;
   switch ($71|0) {
   case 98:  {
    label = 28;
    break L9;
    break;
   }
   case 57: case 56: case 55: case 54: case 53: case 52: case 51: case 50: case 49: case 48:  {
    label = 77;
    break L9;
    break;
   }
   case 102:  {
    break;
   }
   default: {
    label = 27;
    break L9;
   }
   }
   $97 = ((($$080211)) + 2|0);
   $98 = load1($97);
   $99 = ($98<<24>>24)==(91);
   if ($99) {
    $103 = 91;
   } else {
    $100 = load4($12);
    (_luaL_error($100,14347,$vararg_buffer9)|0);
    $$pre = load1($97);
    $103 = $$pre;
   }
   $101 = ((($$080211)) + 3|0);
   $102 = $103 << 24 >> 24;
   switch ($102|0) {
   case 37:  {
    $104 = load4($9);
    $105 = ($101|0)==($104|0);
    if ($105) {
     $106 = load4($12);
     (_luaL_error($106,14382,$vararg_buffer11)|0);
    }
    $107 = ((($$080211)) + 4|0);
    $$018$i105 = $107;
    break;
   }
   case 91:  {
    $108 = load1($101);
    $109 = ($108<<24>>24)==(94);
    $110 = ((($$080211)) + 4|0);
    $spec$select$i101 = $109 ? $110 : $101;
    $$1$i102 = $spec$select$i101;
    while(1) {
     $111 = load4($9);
     $112 = ($$1$i102|0)==($111|0);
     if ($112) {
      $113 = load4($12);
      (_luaL_error($113,14417,$vararg_buffer13)|0);
     }
     $114 = ((($$1$i102)) + 1|0);
     $115 = load1($$1$i102);
     $116 = ($115<<24>>24)==(37);
     if ($116) {
      $117 = load4($9);
      $118 = ($114>>>0)<($117>>>0);
      $119 = ((($$1$i102)) + 2|0);
      $spec$select19$i103 = $118 ? $119 : $114;
      $$2$i104 = $spec$select19$i103;
     } else {
      $$2$i104 = $114;
     }
     $120 = load1($$2$i104);
     $121 = ($120<<24>>24)==(93);
     if ($121) {
      break;
     } else {
      $$1$i102 = $$2$i104;
     }
    }
    $122 = ((($$2$i104)) + 1|0);
    $$018$i105 = $122;
    break;
   }
   default: {
    $$018$i105 = $101;
   }
   }
   $123 = load4($0);
   $124 = ($$0$ph249|0)==($123|0);
   if ($124) {
    $128 = 0;
   } else {
    $125 = load1($14);
    $126 = $125 << 24 >> 24;
    $128 = $126;
   }
   $127 = $128 & 255;
   $129 = ((($$018$i105)) + -1|0);
   $130 = load1($101);
   $131 = ($130<<24>>24)==(94);
   $spec$select$i92 = $131 ? $101 : $97;
   $not$$i93 = $131 ^ 1;
   $spec$select24$i94 = $not$$i93&1;
   $132 = ((($spec$select$i92)) + 1|0);
   $133 = ($132>>>0)<($129>>>0);
   L35: do {
    if ($133) {
     $134 = $128&255;
     $$125$i96 = $spec$select$i92;$136 = $132;
     while(1) {
      $135 = load1($136);
      $137 = ($135<<24>>24)==(37);
      $138 = ((($$125$i96)) + 2|0);
      $139 = load1($138);
      do {
       if ($137) {
        $140 = $139&255;
        $141 = (_match_class($127,$140)|0);
        $142 = ($141|0)==(0);
        if ($142) {
         $$2$i97 = $138;
        } else {
         $$022$i99 = $spec$select24$i94;
         break L35;
        }
       } else {
        $143 = ($139<<24>>24)==(45);
        if ($143) {
         $144 = ((($$125$i96)) + 3|0);
         $145 = ($144>>>0)<($129>>>0);
         if ($145) {
          $146 = $135&255;
          $147 = ($127>>>0)<($146>>>0);
          if ($147) {
           $$2$i97 = $144;
           break;
          }
          $148 = load1($144);
          $149 = $148&255;
          $150 = ($127>>>0)>($149>>>0);
          if ($150) {
           $$2$i97 = $144;
           break;
          } else {
           $$022$i99 = $spec$select24$i94;
           break L35;
          }
         }
        }
        $151 = ($135<<24>>24)==($134<<24>>24);
        if ($151) {
         $$022$i99 = $spec$select24$i94;
         break L35;
        } else {
         $$2$i97 = $136;
        }
       }
      } while(0);
      $152 = ((($$2$i97)) + 1|0);
      $153 = ($152>>>0)<($129>>>0);
      if ($153) {
       $$125$i96 = $$2$i97;$136 = $152;
      } else {
       label = 63;
       break;
      }
     }
    } else {
     label = 63;
    }
   } while(0);
   if ((label|0) == 63) {
    label = 0;
    $154 = $spec$select24$i94 ^ 1;
    $$022$i99 = $154;
   }
   $155 = ($$022$i99|0)==(0);
   if (!($155)) {
    $$6 = 0;
    label = 165;
    break L7;
   }
   $156 = load1($$0$ph249);
   $157 = $156&255;
   L52: do {
    if ($133) {
     $$125$i = $spec$select$i92;$159 = $132;
     while(1) {
      $158 = load1($159);
      $160 = ($158<<24>>24)==(37);
      $161 = ((($$125$i)) + 2|0);
      $162 = load1($161);
      do {
       if ($160) {
        $163 = $162&255;
        $164 = (_match_class($157,$163)|0);
        $165 = ($164|0)==(0);
        if ($165) {
         $$2$i91 = $161;
        } else {
         $$022$i = $spec$select24$i94;
         break L52;
        }
       } else {
        $166 = ($162<<24>>24)==(45);
        if ($166) {
         $167 = ((($$125$i)) + 3|0);
         $168 = ($167>>>0)<($129>>>0);
         if ($168) {
          $169 = ($158&255)>($156&255);
          if ($169) {
           $$2$i91 = $167;
           break;
          }
          $170 = load1($167);
          $171 = ($170&255)<($156&255);
          if ($171) {
           $$2$i91 = $167;
           break;
          } else {
           $$022$i = $spec$select24$i94;
           break L52;
          }
         }
        }
        $172 = ($158<<24>>24)==($156<<24>>24);
        if ($172) {
         $$022$i = $spec$select24$i94;
         break L52;
        } else {
         $$2$i91 = $159;
        }
       }
      } while(0);
      $173 = ((($$2$i91)) + 1|0);
      $174 = ($173>>>0)<($129>>>0);
      if ($174) {
       $$125$i = $$2$i91;$159 = $173;
      } else {
       label = 75;
       break;
      }
     }
    } else {
     label = 75;
    }
   } while(0);
   if ((label|0) == 75) {
    label = 0;
    $175 = $spec$select24$i94 ^ 1;
    $$022$i = $175;
   }
   $176 = ($$022$i|0)==(0);
   if ($176) {
    $$6 = 0;
    label = 165;
    break L7;
   }
   $15 = load4($9);
   $16 = ($$018$i105|0)==($15|0);
   if ($16) {
    $$6 = $$0$ph249;
    label = 165;
    break L7;
   } else {
    $$080211 = $$018$i105;$65 = $15;
   }
  }
  if ((label|0) == 24) {
   label = 0;
   $63 = ((($$080211)) + 1|0);
   $64 = ($63|0)==($65|0);
   if ($64) {
    label = 25;
    break;
   } else {
    $$018$i = $63;$227 = $63;
    label = 95;
   }
  }
  else if ((label|0) == 27) {
   label = 0;
   $72 = ((($$080211)) + 1|0);
   $73 = ($72|0)==($65|0);
   if ($73) {
    $202 = load4($12);
    (_luaL_error($202,14382,$vararg_buffer17)|0);
   }
   $203 = ((($$080211)) + 2|0);
   $$018$i = $203;$227 = $72;
   label = 95;
  }
  else if ((label|0) == 28) {
   label = 0;
   $74 = ((($$080211)) + 2|0);
   $75 = ((($65)) + -1|0);
   $76 = ($75>>>0)>($74>>>0);
   if (!($76)) {
    $77 = load4($12);
    (_luaL_error($77,14300,$vararg_buffer7)|0);
   }
   $78 = load1($$0$ph249);
   $79 = load1($74);
   $80 = ($78<<24>>24)==($79<<24>>24);
   if (!($80)) {
    $$6 = 0;
    label = 165;
    break;
   }
   $81 = ((($$080211)) + 3|0);
   $82 = load1($81);
   $83 = ((($$0$ph249)) + 1|0);
   $84 = load4($$idx);
   $85 = ($83>>>0)<($84>>>0);
   if (!($85)) {
    $$6 = 0;
    label = 165;
    break;
   }
   $$02229$i = 1;$$02528$i = $$0$ph249;$87 = $83;
   while(1) {
    $86 = load1($87);
    $88 = ($86<<24>>24)==($82<<24>>24);
    if ($88) {
     $89 = (($$02229$i) + -1)|0;
     $90 = ($89|0)==(0);
     if ($90) {
      break;
     } else {
      $$1$i109 = $89;
     }
    } else {
     $91 = ($86<<24>>24)==($78<<24>>24);
     $92 = $91&1;
     $spec$select$i108 = (($$02229$i) + ($92))|0;
     $$1$i109 = $spec$select$i108;
    }
    $93 = ((($87)) + 1|0);
    $94 = ($93>>>0)<($84>>>0);
    if ($94) {
     $$02528$i$phi = $87;$$02229$i = $$1$i109;$87 = $93;$$02528$i = $$02528$i$phi;
    } else {
     $$6 = 0;
     label = 165;
     break L7;
    }
   }
   $95 = ((($$02528$i)) + 2|0);
   $96 = ((($$080211)) + 4|0);
   $$0$ph$be = $95;$$080$ph$be = $96;
  }
  else if ((label|0) == 77) {
   label = 0;
   $177 = $70&255;
   $178 = (($177) + -49)|0;
   $179 = ($70&255)<(49);
   if ($179) {
    label = 80;
   } else {
    $180 = load1($13);
    $181 = $180&255;
    $182 = ($178|0)<($181|0);
    if ($182) {
     $183 = (((((($0)) + 24|0) + ($178<<3)|0)) + 4|0);
     $184 = load4($183);
     $185 = ($184|0)==(-1);
     if ($185) {
      label = 80;
     } else {
      $$0$i$i = $178;$193 = $184;
     }
    } else {
     label = 80;
    }
   }
   if ((label|0) == 80) {
    label = 0;
    $186 = load4($12);
    $187 = (($177) + -48)|0;
    store4($vararg_buffer15,$187);
    $188 = (_luaL_error($186,14210,$vararg_buffer15)|0);
    $$phi$trans$insert$i = (((((($0)) + 24|0) + ($188<<3)|0)) + 4|0);
    $$pre$i = load4($$phi$trans$insert$i);
    $$0$i$i = $188;$193 = $$pre$i;
   }
   $189 = load4($$idx);
   $190 = $$0$ph249;
   $191 = (($189) - ($190))|0;
   $192 = ($191>>>0)<($193>>>0);
   $194 = (($$0$ph249) + ($193)|0);
   if ($192) {
    $$6 = 0;
    label = 165;
    break;
   }
   $195 = (((($0)) + 24|0) + ($$0$i$i<<3)|0);
   $196 = load4($195);
   $197 = (_memcmp($196,$$0$ph249,$193)|0);
   $198 = ($197|0)!=(0);
   $199 = ($194|0)==(0|0);
   $or$cond = $199 | $198;
   if ($or$cond) {
    $$6 = 0;
    label = 165;
    break;
   }
   $200 = ((($$080211)) + 2|0);
   $$0$ph$be = $194;$$080$ph$be = $200;
  }
  else if ((label|0) == 84) {
   label = 0;
   $201 = ((($$080211)) + 1|0);
   $cond163 = ($17<<24>>24)==(91);
   if ($cond163) {
    $204 = load1($201);
    $205 = ($204<<24>>24)==(94);
    $206 = ((($$080211)) + 2|0);
    $spec$select$i = $205 ? $206 : $201;
    $$1$i88 = $spec$select$i;$208 = $65;
    while(1) {
     $207 = ($$1$i88|0)==($208|0);
     if ($207) {
      $209 = load4($12);
      (_luaL_error($209,14417,$vararg_buffer19)|0);
     }
     $210 = ((($$1$i88)) + 1|0);
     $211 = load1($$1$i88);
     $212 = ($211<<24>>24)==(37);
     if ($212) {
      $213 = load4($9);
      $214 = ($210>>>0)<($213>>>0);
      $215 = ((($$1$i88)) + 2|0);
      $spec$select19$i = $214 ? $215 : $210;
      $$2$i = $spec$select19$i;
     } else {
      $$2$i = $210;
     }
     $216 = load1($$2$i);
     $217 = ($216<<24>>24)==(93);
     if ($217) {
      break;
     }
     $$pre298 = load4($9);
     $$1$i88 = $$2$i;$208 = $$pre298;
    }
    $218 = ((($$2$i)) + 1|0);
    $$018$i = $218;$227 = $201;
    label = 95;
   } else {
    $$018$i = $201;$227 = $201;
    label = 95;
   }
  }
  L109: do {
   if ((label|0) == 95) {
    label = 0;
    $$idx$val = load4($$idx);
    $219 = ($$idx$val>>>0)>($$0$ph249>>>0);
    do {
     if ($219) {
      $221 = load1($$0$ph249);
      $222 = $221&255;
      $223 = load1($$080211);
      $224 = $223 << 24 >> 24;
      L113: do {
       switch ($224|0) {
       case 46:  {
        $225 = load1($$018$i);
        $260 = $225;
        break;
       }
       case 37:  {
        $226 = load1($227);
        $228 = $226&255;
        $229 = (_match_class($222,$228)|0);
        $$1$i = $229;
        label = 112;
        break;
       }
       case 91:  {
        $230 = ((($$018$i)) + -1|0);
        $231 = load1($227);
        $232 = ($231<<24>>24)==(94);
        $spec$select$i121 = $232 ? $227 : $$080211;
        $not$$i122 = $232 ^ 1;
        $spec$select24$i123 = $not$$i122&1;
        $233 = ((($spec$select$i121)) + 1|0);
        $234 = ($233>>>0)<($230>>>0);
        if ($234) {
         $$125$i125 = $spec$select$i121;$236 = $233;
         while(1) {
          $235 = load1($236);
          $237 = ($235<<24>>24)==(37);
          $238 = ((($$125$i125)) + 2|0);
          $239 = load1($238);
          do {
           if ($237) {
            $240 = $239&255;
            $241 = (_match_class($222,$240)|0);
            $242 = ($241|0)==(0);
            if ($242) {
             $$2$i126 = $238;
            } else {
             $$1$i = $spec$select24$i123;
             label = 112;
             break L113;
            }
           } else {
            $243 = ($239<<24>>24)==(45);
            if ($243) {
             $244 = ((($$125$i125)) + 3|0);
             $245 = ($244>>>0)<($230>>>0);
             if ($245) {
              $246 = ($235&255)>($221&255);
              if ($246) {
               $$2$i126 = $244;
               break;
              }
              $247 = load1($244);
              $248 = ($247&255)<($221&255);
              if ($248) {
               $$2$i126 = $244;
               break;
              } else {
               $$1$i = $spec$select24$i123;
               label = 112;
               break L113;
              }
             }
            }
            $249 = ($235<<24>>24)==($221<<24>>24);
            if ($249) {
             $$1$i = $spec$select24$i123;
             label = 112;
             break L113;
            } else {
             $$2$i126 = $236;
            }
           }
          } while(0);
          $250 = ((($$2$i126)) + 1|0);
          $251 = ($250>>>0)<($230>>>0);
          if ($251) {
           $$125$i125 = $$2$i126;$236 = $250;
          } else {
           break;
          }
         }
        }
        $252 = $spec$select24$i123 ^ 1;
        $$1$i = $252;
        label = 112;
        break;
       }
       default: {
        $253 = ($223<<24>>24)==($221<<24>>24);
        $254 = $253&1;
        $$1$i = $254;
        label = 112;
       }
       }
      } while(0);
      if ((label|0) == 112) {
       label = 0;
       $255 = ($$1$i|0)==(0);
       $256 = load1($$018$i);
       if ($255) {
        $257 = $256;
        break;
       } else {
        $260 = $256;
       }
      }
      $259 = $260 << 24 >> 24;
      switch ($259|0) {
      case 43:  {
       label = 117;
       break L7;
       break;
      }
      case 42:  {
       $$3 = $$0$ph249;
       break L7;
       break;
      }
      case 45:  {
       label = 144;
       break L7;
       break;
      }
      case 63:  {
       $261 = ((($$0$ph249)) + 1|0);
       $262 = ((($$018$i)) + 1|0);
       $263 = (_match($0,$261,$262)|0);
       $264 = ($263|0)==(0|0);
       if ($264) {
        $$0$ph$be = $$0$ph249;$$080$ph$be = $262;
        break L109;
       } else {
        $$6 = $263;
        label = 165;
        break L7;
       }
       break;
      }
      default: {
       $356 = ((($$0$ph249)) + 1|0);
       $$0$ph$be = $356;$$080$ph$be = $$018$i;
       break L109;
      }
      }
     } else {
      $220 = load1($$018$i);
      $257 = $220;
     }
    } while(0);
    switch ($257<<24>>24) {
    case 45: case 63: case 42:  {
     break;
    }
    default: {
     $$6 = 0;
     label = 165;
     break L7;
    }
    }
    $258 = ((($$018$i)) + 1|0);
    $$0$ph$be = $$0$ph249;$$080$ph$be = $258;
   }
  } while(0);
  $357 = load4($9);
  $358 = ($$080$ph$be|0)==($357|0);
  if ($358) {
   $$6 = $$0$ph$be;
   label = 165;
   break;
  } else {
   $$0$ph249 = $$0$ph$be;$$080$ph248 = $$080$ph$be;$361 = $357;
  }
 }
 if ((label|0) == 8) {
  $19 = ((($$080211)) + 1|0);
  $20 = load1($19);
  $21 = ($20<<24>>24)==(41);
  if ($21) {
   $22 = ((($$080211)) + 2|0);
   $23 = load1($13);
   $24 = $23&255;
   $25 = ($23&255)>(31);
   if ($25) {
    $26 = load4($12);
    (_luaL_error($26,14192,$vararg_buffer1)|0);
   }
   $27 = (((($0)) + 24|0) + ($24<<3)|0);
   store4($27,$$0$ph249);
   $28 = (((((($0)) + 24|0) + ($24<<3)|0)) + 4|0);
   store4($28,-2);
   $29 = (($24) + 1)|0;
   $30 = $29&255;
   store1($13,$30);
   $31 = (_match($0,$$0$ph249,$22)|0);
   $32 = ($31|0)==(0|0);
   if (!($32)) {
    $$6 = $31;
    $359 = load4($3);
    $360 = (($359) + 1)|0;
    store4($3,$360);
    STACKTOP = sp;return ($$6|0);
   }
   $33 = load1($13);
   $34 = (($33) + -1)<<24>>24;
   store1($13,$34);
   $$6 = 0;
   $359 = load4($3);
   $360 = (($359) + 1)|0;
   store4($3,$360);
   STACKTOP = sp;return ($$6|0);
  } else {
   $35 = load1($13);
   $36 = $35&255;
   $37 = ($35&255)>(31);
   if ($37) {
    $38 = load4($12);
    (_luaL_error($38,14192,$vararg_buffer3)|0);
   }
   $39 = (((($0)) + 24|0) + ($36<<3)|0);
   store4($39,$$0$ph249);
   $40 = (((((($0)) + 24|0) + ($36<<3)|0)) + 4|0);
   store4($40,-1);
   $41 = (($36) + 1)|0;
   $42 = $41&255;
   store1($13,$42);
   $43 = (_match($0,$$0$ph249,$19)|0);
   $44 = ($43|0)==(0|0);
   if (!($44)) {
    $$6 = $43;
    $359 = load4($3);
    $360 = (($359) + 1)|0;
    store4($3,$360);
    STACKTOP = sp;return ($$6|0);
   }
   $45 = load1($13);
   $46 = (($45) + -1)<<24>>24;
   store1($13,$46);
   $$6 = 0;
   $359 = load4($3);
   $360 = (($359) + 1)|0;
   store4($3,$360);
   STACKTOP = sp;return ($$6|0);
  }
 }
 else if ((label|0) == 17) {
  $47 = ((($$080211)) + 1|0);
  $48 = load1($13);
  $49 = ($48<<24>>24)==(0);
  L205: do {
   if ($49) {
    label = 21;
   } else {
    $50 = $48&255;
    $$010$in$i$i = $50;
    while(1) {
     $$010$i$i = (($$010$in$i$i) + -1)|0;
     $52 = (((((($0)) + 24|0) + ($$010$i$i<<3)|0)) + 4|0);
     $53 = load4($52);
     $54 = ($53|0)==(-1);
     if ($54) {
      $$07$i$i = $$010$i$i;$$pre$phiZ2D = $52;
      break L205;
     }
     $51 = ($$010$in$i$i|0)>(1);
     if ($51) {
      $$010$in$i$i = $$010$i$i;
     } else {
      label = 21;
      break;
     }
    }
   }
  } while(0);
  if ((label|0) == 21) {
   $55 = load4($12);
   $56 = (_luaL_error($55,14276,$vararg_buffer5)|0);
   $$pre300 = (((((($0)) + 24|0) + ($56<<3)|0)) + 4|0);
   $$07$i$i = $56;$$pre$phiZ2D = $$pre300;
  }
  $57 = (((($0)) + 24|0) + ($$07$i$i<<3)|0);
  $58 = load4($57);
  $59 = $$0$ph249;
  $60 = (($59) - ($58))|0;
  store4($$pre$phiZ2D,$60);
  $61 = (_match($0,$$0$ph249,$47)|0);
  $62 = ($61|0)==(0|0);
  if (!($62)) {
   $$6 = $61;
   $359 = load4($3);
   $360 = (($359) + 1)|0;
   store4($3,$360);
   STACKTOP = sp;return ($$6|0);
  }
  store4($$pre$phiZ2D,-1);
  $$6 = 0;
  $359 = load4($3);
  $360 = (($359) + 1)|0;
  store4($3,$360);
  STACKTOP = sp;return ($$6|0);
 }
 else if ((label|0) == 25) {
  $66 = load4($$idx);
  $67 = ($$0$ph249|0)==($66|0);
  $68 = $67 ? $$0$ph249 : 0;
  $$6 = $68;
  $359 = load4($3);
  $360 = (($359) + 1)|0;
  store4($3,$360);
  STACKTOP = sp;return ($$6|0);
 }
 else if ((label|0) == 117) {
  $265 = ((($$0$ph249)) + 1|0);
  $$3 = $265;
 }
 else if ((label|0) == 144) {
  $317 = ((($$018$i)) + 1|0);
  $318 = (_match($0,$$0$ph249,$317)|0);
  $319 = ($318|0)==(0|0);
  if (!($319)) {
   $$6 = $318;
   $359 = load4($3);
   $360 = (($359) + 1)|0;
   store4($3,$360);
   STACKTOP = sp;return ($$6|0);
  }
  $320 = ((($$018$i)) + -1|0);
  $$013$i215 = $$0$ph249;
  while(1) {
   $$idx$val$i115 = load4($$idx);
   $321 = ($$idx$val$i115>>>0)>($$013$i215>>>0);
   if (!($321)) {
    $$6 = 0;
    label = 165;
    break;
   }
   $322 = load1($$013$i215);
   $323 = $322&255;
   $324 = load1($$080211);
   $325 = $324 << 24 >> 24;
   L155: do {
    switch ($325|0) {
    case 46:  {
     break;
    }
    case 37:  {
     $326 = load1($227);
     $327 = $326&255;
     $328 = (_match_class($323,$327)|0);
     $$1$i$i116 = $328;
     label = 161;
     break;
    }
    case 91:  {
     $329 = load1($227);
     $330 = ($329<<24>>24)==(94);
     $spec$select$i139 = $330 ? $227 : $$080211;
     $not$$i140 = $330 ^ 1;
     $spec$select24$i141 = $not$$i140&1;
     $331 = ((($spec$select$i139)) + 1|0);
     $332 = ($331>>>0)<($320>>>0);
     if ($332) {
      $$125$i143 = $spec$select$i139;$334 = $331;
      while(1) {
       $333 = load1($334);
       $335 = ($333<<24>>24)==(37);
       $336 = ((($$125$i143)) + 2|0);
       $337 = load1($336);
       do {
        if ($335) {
         $338 = $337&255;
         $339 = (_match_class($323,$338)|0);
         $340 = ($339|0)==(0);
         if ($340) {
          $$2$i144 = $336;
         } else {
          $$1$i$i116 = $spec$select24$i141;
          label = 161;
          break L155;
         }
        } else {
         $341 = ($337<<24>>24)==(45);
         if ($341) {
          $342 = ((($$125$i143)) + 3|0);
          $343 = ($342>>>0)<($320>>>0);
          if ($343) {
           $344 = ($333&255)>($322&255);
           if ($344) {
            $$2$i144 = $342;
            break;
           }
           $345 = load1($342);
           $346 = ($345&255)<($322&255);
           if ($346) {
            $$2$i144 = $342;
            break;
           } else {
            $$1$i$i116 = $spec$select24$i141;
            label = 161;
            break L155;
           }
          }
         }
         $347 = ($333<<24>>24)==($322<<24>>24);
         if ($347) {
          $$1$i$i116 = $spec$select24$i141;
          label = 161;
          break L155;
         } else {
          $$2$i144 = $334;
         }
        }
       } while(0);
       $348 = ((($$2$i144)) + 1|0);
       $349 = ($348>>>0)<($320>>>0);
       if ($349) {
        $$125$i143 = $$2$i144;$334 = $348;
       } else {
        break;
       }
      }
     }
     $350 = $spec$select24$i141 ^ 1;
     $$1$i$i116 = $350;
     label = 161;
     break;
    }
    default: {
     $351 = ($324<<24>>24)==($322<<24>>24);
     $352 = $351&1;
     $$1$i$i116 = $352;
     label = 161;
    }
    }
   } while(0);
   if ((label|0) == 161) {
    label = 0;
    $353 = ($$1$i$i116|0)==(0);
    if ($353) {
     $$6 = 0;
     label = 165;
     break;
    }
   }
   $spec$select$i117157 = ((($$013$i215)) + 1|0);
   $354 = (_match($0,$spec$select$i117157,$317)|0);
   $355 = ($354|0)==(0|0);
   if ($355) {
    $$013$i215 = $spec$select$i117157;
   } else {
    $$6 = $354;
    label = 165;
    break;
   }
  }
  if ((label|0) == 165) {
   $359 = load4($3);
   $360 = (($359) + 1)|0;
   store4($3,$360);
   STACKTOP = sp;return ($$6|0);
  }
 }
 else if ((label|0) == 165) {
  $359 = load4($3);
  $360 = (($359) + 1)|0;
  store4($3,$360);
  STACKTOP = sp;return ($$6|0);
 }
 $$3296 = $$3;
 $266 = ($$idx$val>>>0)>($$3>>>0);
 if ($266) {
  $267 = ((($$018$i)) + -1|0);
  L223: do {
   switch ($224|0) {
   case 46:  {
    $268 = $$idx$val;
    $269 = (($268) - ($$3296))|0;
    $$019$i$lcssa = $269;
    break;
   }
   case 37:  {
    $$pre299 = load1($227);
    $270 = $$pre299&255;
    $$019$i223$us228 = 0;$272 = $$3;
    while(1) {
     $271 = load1($272);
     $273 = $271&255;
     $274 = (_match_class($273,$270)|0);
     $275 = ($274|0)==(0);
     if ($275) {
      $$019$i$lcssa = $$019$i223$us228;
      break L223;
     }
     $276 = (($$019$i223$us228) + 1)|0;
     $277 = (($$3) + ($276)|0);
     $278 = ($$idx$val>>>0)>($277>>>0);
     if ($278) {
      $$019$i223$us228 = $276;$272 = $277;
     } else {
      $$019$i$lcssa = $276;
      break;
     }
    }
    break;
   }
   default: {
    $$019$i223 = 0;$280 = $$3;
    while(1) {
     $279 = load1($280);
     $281 = $279&255;
     L227: do {
      switch ($224|0) {
      case 46:  {
       break;
      }
      case 91:  {
       $282 = load1($227);
       $283 = ($282<<24>>24)==(94);
       $spec$select$i130 = $283 ? $227 : $$080211;
       $not$$i131 = $283 ^ 1;
       $spec$select24$i132 = $not$$i131&1;
       $284 = ((($spec$select$i130)) + 1|0);
       $285 = ($284>>>0)<($267>>>0);
       if ($285) {
        $$125$i134 = $spec$select$i130;$287 = $284;
        while(1) {
         $286 = load1($287);
         $288 = ($286<<24>>24)==(37);
         $289 = ((($$125$i134)) + 2|0);
         $290 = load1($289);
         do {
          if ($288) {
           $291 = $290&255;
           $292 = (_match_class($281,$291)|0);
           $293 = ($292|0)==(0);
           if ($293) {
            $$2$i135 = $289;
           } else {
            $$1$i$i = $spec$select24$i132;
            label = 138;
            break L227;
           }
          } else {
           $294 = ($290<<24>>24)==(45);
           if ($294) {
            $295 = ((($$125$i134)) + 3|0);
            $296 = ($295>>>0)<($267>>>0);
            if ($296) {
             $297 = ($286&255)>($279&255);
             if ($297) {
              $$2$i135 = $295;
              break;
             }
             $298 = load1($295);
             $299 = ($298&255)<($279&255);
             if ($299) {
              $$2$i135 = $295;
              break;
             } else {
              $$1$i$i = $spec$select24$i132;
              label = 138;
              break L227;
             }
            }
           }
           $300 = ($286<<24>>24)==($279<<24>>24);
           if ($300) {
            $$1$i$i = $spec$select24$i132;
            label = 138;
            break L227;
           } else {
            $$2$i135 = $287;
           }
          }
         } while(0);
         $301 = ((($$2$i135)) + 1|0);
         $302 = ($301>>>0)<($267>>>0);
         if ($302) {
          $$125$i134 = $$2$i135;$287 = $301;
         } else {
          break;
         }
        }
       }
       $303 = $spec$select24$i132 ^ 1;
       $$1$i$i = $303;
       label = 138;
       break;
      }
      default: {
       $304 = ($223<<24>>24)==($279<<24>>24);
       $305 = $304&1;
       $$1$i$i = $305;
       label = 138;
      }
      }
     } while(0);
     if ((label|0) == 138) {
      label = 0;
      $306 = ($$1$i$i|0)==(0);
      if ($306) {
       $$019$i$lcssa = $$019$i223;
       break L223;
      }
     }
     $307 = (($$019$i223) + 1)|0;
     $308 = (($$3) + ($307)|0);
     $309 = ($$idx$val>>>0)>($308>>>0);
     if ($309) {
      $$019$i223 = $307;$280 = $308;
     } else {
      $$019$i$lcssa = $307;
      break L223;
     }
    }
   }
   }
  } while(0);
  $310 = ($$019$i$lcssa|0)>(-1);
  if ($310) {
   $$019$i$lcssa301 = $$019$i$lcssa;
  } else {
   $$6 = 0;
   $359 = load4($3);
   $360 = (($359) + 1)|0;
   store4($3,$360);
   STACKTOP = sp;return ($$6|0);
  }
 } else {
  $$019$i$lcssa301 = 0;
 }
 $311 = ((($$018$i)) + 1|0);
 $$120$i242 = $$019$i$lcssa301;
 while(1) {
  $313 = (($$3) + ($$120$i242)|0);
  $314 = (_match($0,$313,$311)|0);
  $315 = ($314|0)==(0|0);
  $316 = $315 << 31 >> 31;
  $$221$i = (($$120$i242) + ($316))|0;
  if (!($315)) {
   $$6 = $314;
   label = 165;
   break;
  }
  $312 = ($$221$i|0)>(-1);
  if ($312) {
   $$120$i242 = $$221$i;
  } else {
   $$6 = 0;
   label = 165;
   break;
  }
 }
 if ((label|0) == 165) {
  $359 = load4($3);
  $360 = (($359) + 1)|0;
  store4($3,$360);
  STACKTOP = sp;return ($$6|0);
 }
 return (0)|0;
}
function _push_onecapture($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = i64(), $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $4 = ((($0)) + 20|0);
 $5 = load1($4);
 $6 = $5&255;
 $7 = ($6|0)>($1|0);
 if (!($7)) {
  $8 = ($1|0)==(0);
  $9 = ((($0)) + 12|0);
  $10 = load4($9);
  if ($8) {
   $11 = $3;
   $12 = $2;
   $13 = (($11) - ($12))|0;
   (_lua_pushlstring($10,$2,$13)|0);
   STACKTOP = sp;return;
  } else {
   $14 = (($1) + 1)|0;
   store4($vararg_buffer,$14);
   (_luaL_error($10,14210,$vararg_buffer)|0);
   STACKTOP = sp;return;
  }
 }
 $15 = (((((($0)) + 24|0) + ($1<<3)|0)) + 4|0);
 $16 = load4($15);
 $17 = ($16|0)==(-1);
 if ($17) {
  $18 = ((($0)) + 12|0);
  $19 = load4($18);
  (_luaL_error($19,14237,$vararg_buffer1)|0);
  $20 = load4($18);
  $21 = (((($0)) + 24|0) + ($1<<3)|0);
  $22 = load4($21);
  $33 = $20;$34 = $22;
 } else {
  $23 = ($16|0)==(-2);
  $24 = ((($0)) + 12|0);
  $25 = load4($24);
  $26 = (((($0)) + 24|0) + ($1<<3)|0);
  $27 = load4($26);
  if ($23) {
   $28 = load4($0);
   $29 = $27;
   $30 = (($29) + 1)|0;
   $31 = (($30) - ($28))|0;
   $32 = i64_sext($31);
   _lua_pushinteger($25,$32);
   STACKTOP = sp;return;
  } else {
   $33 = $25;$34 = $27;
  }
 }
 (_lua_pushlstring($33,$34,$16)|0);
 STACKTOP = sp;return;
}
function _match_class($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$018 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_tolower($1)|0);
 do {
  switch ($2|0) {
  case 97:  {
   $3 = (_isalpha($0)|0);
   $$0 = $3;
   break;
  }
  case 99:  {
   $4 = (_iscntrl($0)|0);
   $$0 = $4;
   break;
  }
  case 100:  {
   $isdigittmp = (($0) + -48)|0;
   $isdigit = ($isdigittmp>>>0)<(10);
   $5 = $isdigit&1;
   $$0 = $5;
   break;
  }
  case 103:  {
   $6 = (_isgraph($0)|0);
   $$0 = $6;
   break;
  }
  case 108:  {
   $7 = (_islower($0)|0);
   $$0 = $7;
   break;
  }
  case 112:  {
   $8 = (_ispunct($0)|0);
   $$0 = $8;
   break;
  }
  case 115:  {
   $9 = (_isspace($0)|0);
   $$0 = $9;
   break;
  }
  case 117:  {
   $10 = (_isupper($0)|0);
   $$0 = $10;
   break;
  }
  case 119:  {
   $11 = (_isalnum($0)|0);
   $$0 = $11;
   break;
  }
  case 120:  {
   $12 = (_isxdigit($0)|0);
   $$0 = $12;
   break;
  }
  case 122:  {
   $13 = ($0|0)==(0);
   $14 = $13&1;
   $$0 = $14;
   break;
  }
  default: {
   $15 = ($1|0)==($0|0);
   $16 = $15&1;
   $$018 = $16;
   return ($$018|0);
  }
  }
 } while(0);
 $17 = (_islower($1)|0);
 $18 = ($17|0)==(0);
 $19 = ($$0|0)==(0);
 $20 = $19&1;
 $21 = $18 ? $20 : $$0;
 $$018 = $21;
 return ($$018|0);
}
function _gmatch_aux($0) {
 $0 = $0|0;
 var $$016$i = 0, $$02632 = 0, $$2 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i = 0, $or$cond$i = 0, $spec$select$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_touserdata($0,-1001003)|0);
 $2 = ((($1)) + 12|0);
 $3 = ((($1)) + 24|0);
 store4($3,$0);
 $4 = load4($1);
 $5 = ((($1)) + 16|0);
 $6 = load4($5);
 $7 = ($4>>>0)>($6>>>0);
 if ($7) {
  $$2 = 0;
  return ($$2|0);
 }
 $8 = ((($1)) + 32|0);
 $9 = ((($1)) + 4|0);
 $10 = ((($1)) + 8|0);
 $$02632 = $4;
 while(1) {
  store1($8,0);
  $11 = load4($9);
  $12 = (_match($2,$$02632,$11)|0);
  $13 = ($12|0)==(0|0);
  if (!($13)) {
   $14 = load4($10);
   $15 = ($12|0)==($14|0);
   if (!($15)) {
    break;
   }
  }
  $23 = ((($$02632)) + 1|0);
  $24 = load4($5);
  $25 = ($23>>>0)>($24>>>0);
  if ($25) {
   $$2 = 0;
   label = 9;
   break;
  } else {
   $$02632 = $23;
  }
 }
 if ((label|0) == 9) {
  return ($$2|0);
 }
 store4($10,$12);
 store4($1,$12);
 $16 = load1($8);
 $17 = ($16<<24>>24)==(0);
 $18 = ($$02632|0)!=(0|0);
 $or$cond$i = $18 & $17;
 $19 = $16&255;
 $spec$select$i = $or$cond$i ? 1 : $19;
 $20 = load4($3);
 _luaL_checkstack($20,$spec$select$i,14192);
 $21 = ($spec$select$i|0)==(0);
 if ($21) {
  $$2 = 0;
  return ($$2|0);
 }
 $$016$i = 0;
 while(1) {
  _push_onecapture($2,$$016$i,$$02632,$12);
  $22 = (($$016$i) + 1)|0;
  $exitcond$i = ($22|0)==($spec$select$i|0);
  if ($exitcond$i) {
   $$2 = $spec$select$i;
   break;
  } else {
   $$016$i = $22;
  }
 }
 return ($$2|0);
}
function _writer($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_addlstring($3,$1,$2);
 return 0;
}
function _luaopen_table($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checkversion_($0,503.0,136);
 _lua_createtable($0,0,7);
 _luaL_setfuncs($0,3392,0);
 return 1;
}
function _tconcat($0) {
 $0 = $0|0;
 var $$022 = i64(), $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = i64(), $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = i64(), $4 = 0, $5 = i64(), $6 = i64(), $7 = 0, $8 = 0, $9 = 0;
 var $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4160|0;
 $vararg_buffer2 = sp + 16|0;
 $vararg_buffer = sp;
 $1 = sp + 40|0;
 $2 = sp + 32|0;
 _checktab($0,1,5);
 $3 = (i64(_luaL_len($0,1)));
 $4 = (_luaL_optlstring($0,2,19032,$2)|0);
 $5 = (i64(_luaL_optinteger($0,3,i64_const(1,0))));
 $6 = (i64(_luaL_optinteger($0,4,$3)));
 _luaL_buffinit($0,$1);
 $7 = i64_slt($5,$6);
 if ($7) {
  $$022 = $5;
  while(1) {
   (_lua_geti($0,1,$$022)|0);
   $8 = (_lua_isstring($0,-1)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    $10 = (_lua_type($0,-1)|0);
    $11 = (_lua_typename($0,$10)|0);
    store4($vararg_buffer,$11);
    $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
    store8($vararg_ptr1,$$022);
    (_luaL_error($0,15022,$vararg_buffer)|0);
   }
   _luaL_addvalue($1);
   $12 = load4($2);
   _luaL_addlstring($1,$4,$12);
   $13 = i64_add($$022,i64_const(1,0));
   $14 = i64_slt($13,$6);
   if ($14) {
    $$022 = $13;
   } else {
    break;
   }
  }
 } else {
  $15 = i64_eq($5,$6);
  if (!($15)) {
   _luaL_pushresult($1);
   STACKTOP = sp;return 1;
  }
 }
 (_lua_geti($0,1,$6)|0);
 $16 = (_lua_isstring($0,-1)|0);
 $17 = ($16|0)==(0);
 if ($17) {
  $18 = (_lua_type($0,-1)|0);
  $19 = (_lua_typename($0,$18)|0);
  store4($vararg_buffer2,$19);
  $vararg_ptr5 = ((($vararg_buffer2)) + 8|0);
  store8($vararg_ptr5,$6);
  (_luaL_error($0,15022,$vararg_buffer2)|0);
 }
 _luaL_addvalue($1);
 _luaL_pushresult($1);
 STACKTOP = sp;return 1;
}
function _tinsert($0) {
 $0 = $0|0;
 var $$025 = i64(), $$026 = 0, $$027 = i64(), $1 = i64(), $10 = 0, $2 = i64(), $3 = 0, $4 = i64(), $5 = 0, $6 = 0, $7 = 0, $8 = i64(), $9 = 0, $or$cond = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 _checktab($0,1,7);
 $1 = (i64(_luaL_len($0,1)));
 $2 = i64_add($1,i64_const(1,0));
 $3 = (_lua_gettop($0)|0);
 switch ($3|0) {
 case 2:  {
  $$025 = $2;
  break;
 }
 case 3:  {
  label = 2;
  break;
 }
 default: {
  $10 = (_luaL_error($0,14984,$vararg_buffer)|0);
  $$026 = $10;
  STACKTOP = sp;return ($$026|0);
 }
 }
 if ((label|0) == 2) {
  $4 = (i64(_luaL_checkinteger($0,2)));
  $5 = i64_slt($4,i64_const(1,0));
  $6 = i64_sgt($4,$2);
  $or$cond = $5 | $6;
  if ($or$cond) {
   (_luaL_argerror($0,2,14932)|0);
  }
  $7 = i64_slt($1,$4);
  if ($7) {
   $$025 = $4;
  } else {
   $$027 = $2;
   while(1) {
    $8 = i64_add($$027,i64_const(4294967295,4294967295));
    (_lua_geti($0,1,$8)|0);
    _lua_seti($0,1,$$027);
    $9 = i64_sgt($8,$4);
    if ($9) {
     $$027 = $8;
    } else {
     $$025 = $4;
     break;
    }
   }
  }
 }
 _lua_seti($0,1,$$025);
 $$026 = 0;
 STACKTOP = sp;return ($$026|0);
}
function _pack($0) {
 $0 = $0|0;
 var $$013 = 0, $1 = 0, $2 = 0, $3 = i64(), $4 = 0, $5 = 0, $6 = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_lua_gettop($0)|0);
 _lua_createtable($0,$1,1);
 _lua_rotate($0,1,1);
 $2 = ($1|0)>(0);
 if ($2) {
  $$013 = $1;
  while(1) {
   $3 = i64_sext($$013);
   _lua_seti($0,1,$3);
   $4 = (($$013) + -1)|0;
   $5 = ($$013|0)>(1);
   if ($5) {
    $$013 = $4;
   } else {
    break;
   }
  }
 }
 $6 = i64_sext($1);
 _lua_pushinteger($0,$6);
 _lua_setfield($0,1,14982);
 return 1;
}
function _unpack($0) {
 $0 = $0|0;
 var $$0 = 0, $$02324 = i64(), $1 = i64(), $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = i64(), $17 = 0, $2 = 0, $3 = 0, $4 = i64(), $5 = i64(), $6 = 0, $7 = i64(), $8 = i64(), $9 = 0, $vararg_buffer = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = (i64(_luaL_optinteger($0,2,i64_const(1,0))));
 $2 = (_lua_type($0,3)|0);
 $3 = ($2|0)<(1);
 if ($3) {
  $4 = (i64(_luaL_len($0,1)));
  $7 = $4;
 } else {
  $5 = (i64(_luaL_checkinteger($0,3)));
  $7 = $5;
 }
 $6 = i64_slt($7,$1);
 if ($6) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $8 = i64_sub($7,$1);
 $9 = i64_ugt($8,i64_const(2147483646,0));
 if (!($9)) {
  $10 = i64_trunc($8);
  $11 = (($10) + 1)|0;
  $12 = (_lua_checkstack($0,$11)|0);
  $13 = ($12|0)==(0);
  if (!($13)) {
   $15 = i64_sgt($7,$1);
   if ($15) {
    $$02324 = $1;
    while(1) {
     (_lua_geti($0,1,$$02324)|0);
     $16 = i64_add($$02324,i64_const(1,0));
     $17 = i64_slt($16,$7);
     if ($17) {
      $$02324 = $16;
     } else {
      break;
     }
    }
   }
   (_lua_geti($0,1,$7)|0);
   $$0 = $11;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $14 = (_luaL_error($0,14955,$vararg_buffer)|0);
 $$0 = $14;
 STACKTOP = sp;return ($$0|0);
}
function _tremove($0) {
 $0 = $0|0;
 var $$0$lcssa = i64(), $$024 = i64(), $1 = i64(), $2 = i64(), $3 = 0, $4 = 0, $5 = i64(), $6 = 0, $7 = 0, $8 = i64(), $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _checktab($0,1,7);
 $1 = (i64(_luaL_len($0,1)));
 $2 = (i64(_luaL_optinteger($0,2,$1)));
 $3 = i64_eq($2,$1);
 if (!($3)) {
  $4 = i64_slt($2,i64_const(1,0));
  $5 = i64_add($1,i64_const(1,0));
  $6 = i64_sgt($2,$5);
  $or$cond = $4 | $6;
  if ($or$cond) {
   (_luaL_argerror($0,1,14932)|0);
  }
 }
 (_lua_geti($0,1,$2)|0);
 $7 = i64_slt($2,$1);
 if (!($7)) {
  $$0$lcssa = $2;
  _lua_pushnil($0);
  _lua_seti($0,1,$$0$lcssa);
  return 1;
 }
 $$024 = $2;
 while(1) {
  $8 = i64_add($$024,i64_const(1,0));
  (_lua_geti($0,1,$8)|0);
  _lua_seti($0,1,$$024);
  $9 = i64_slt($8,$1);
  if ($9) {
   $$024 = $8;
  } else {
   $$0$lcssa = $1;
   break;
  }
 }
 _lua_pushnil($0);
 _lua_seti($0,1,$$0$lcssa);
 return 1;
}
function _tmove($0) {
 $0 = $0|0;
 var $$061 = i64(), $$162 = i64(), $1 = i64(), $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = i64(), $20 = 0, $21 = i64(), $22 = 0, $23 = i64(), $24 = i64(), $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = i64(), $30 = 0, $31 = i64(), $32 = i64(), $33 = i64(), $34 = 0, $35 = 0, $36 = i64(), $37 = i64(), $38 = i64(), $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, $or$cond58 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (i64(_luaL_checkinteger($0,2)));
 $2 = (i64(_luaL_checkinteger($0,3)));
 $3 = (i64(_luaL_checkinteger($0,4)));
 $4 = (_lua_type($0,5)|0);
 $5 = ($4|0)>(0);
 $6 = $5 ? 5 : 1;
 $7 = (_lua_type($0,1)|0);
 $8 = ($7|0)==(5);
 do {
  if (!($8)) {
   $9 = (_lua_getmetatable($0,1)|0);
   $10 = ($9|0)==(0);
   if (!($10)) {
    (_lua_pushstring($0,14857)|0);
    $11 = (_lua_rawget($0,-2)|0);
    $12 = ($11|0)==(0);
    if (!($12)) {
     _lua_settop($0,-3);
     break;
    }
   }
   _luaL_checktype($0,1,5);
  }
 } while(0);
 $13 = (_lua_type($0,$6)|0);
 $14 = ($13|0)==(5);
 do {
  if (!($14)) {
   $15 = (_lua_getmetatable($0,$6)|0);
   $16 = ($15|0)==(0);
   if (!($16)) {
    (_lua_pushstring($0,14865)|0);
    $17 = (_lua_rawget($0,-2)|0);
    $18 = ($17|0)==(0);
    if (!($18)) {
     _lua_settop($0,-3);
     break;
    }
   }
   _luaL_checktype($0,$6,5);
  }
 } while(0);
 $19 = i64_slt($2,$1);
 if ($19) {
  _lua_pushvalue($0,$6);
  return 1;
 }
 $20 = i64_sgt($1,i64_const(0,0));
 $21 = i64_add($1,i64_const(4294967295,2147483647));
 $22 = i64_slt($2,$21);
 $or$cond = $20 | $22;
 if (!($or$cond)) {
  (_luaL_argerror($0,3,14882)|0);
 }
 $23 = i64_sub($2,$1);
 $24 = i64_sub(i64_const(4294967295,2147483647),$23);
 $25 = i64_sgt($3,$24);
 if ($25) {
  (_luaL_argerror($0,4,14908)|0);
 }
 $26 = i64_sle($3,$2);
 $27 = i64_sgt($3,$1);
 $or$cond58 = $26 & $27;
 do {
  if ($or$cond58) {
   if ($5) {
    $28 = (_lua_compare($0,1,$6,0)|0);
    $29 = ($28|0)==(0);
    if ($29) {
     break;
    }
   }
   $35 = i64_sgt($23,i64_const(4294967295,4294967295));
   if (!($35)) {
    _lua_pushvalue($0,$6);
    return 1;
   }
   $$162 = $23;
   while(1) {
    $36 = i64_add($$162,$1);
    (_lua_geti($0,1,$36)|0);
    $37 = i64_add($$162,$3);
    _lua_seti($0,$6,$37);
    $38 = i64_add($$162,i64_const(4294967295,4294967295));
    $39 = i64_sgt($$162,i64_const(0,0));
    if ($39) {
     $$162 = $38;
    } else {
     break;
    }
   }
   _lua_pushvalue($0,$6);
   return 1;
  }
 } while(0);
 $30 = i64_slt($23,i64_const(0,0));
 if ($30) {
  _lua_pushvalue($0,$6);
  return 1;
 }
 $$061 = i64_const(0,0);
 while(1) {
  $31 = i64_add($$061,$1);
  (_lua_geti($0,1,$31)|0);
  $32 = i64_add($$061,$3);
  _lua_seti($0,$6,$32);
  $33 = i64_add($$061,i64_const(1,0));
  $34 = i64_slt($$061,$23);
  if ($34) {
   $$061 = $33;
  } else {
   break;
  }
 }
 _lua_pushvalue($0,$6);
 return 1;
}
function _sort($0) {
 $0 = $0|0;
 var $1 = i64(), $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _checktab($0,1,7);
 $1 = (i64(_luaL_len($0,1)));
 $2 = i64_sgt($1,i64_const(1,0));
 if (!($2)) {
  return 0;
 }
 $3 = i64_slt($1,i64_const(2147483647,0));
 if (!($3)) {
  (_luaL_argerror($0,1,14808)|0);
 }
 $4 = (_lua_type($0,2)|0);
 $5 = ($4|0)<(1);
 if (!($5)) {
  _luaL_checktype($0,2,6);
 }
 _lua_settop($0,2);
 $6 = i64_trunc($1);
 _auxsort($0,1,$6,0);
 return 0;
}
function _checktab($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_lua_type($0,$1)|0);
 $4 = ($3|0)==(5);
 if ($4) {
  return;
 }
 $5 = (_lua_getmetatable($0,$1)|0);
 $6 = ($5|0)==(0);
 do {
  if (!($6)) {
   $7 = $2 & 1;
   $8 = ($7|0)==(0);
   if ($8) {
    $$0 = 1;
   } else {
    (_lua_pushstring($0,14857)|0);
    $9 = (_lua_rawget($0,-2)|0);
    $10 = ($9|0)==(0);
    if ($10) {
     break;
    } else {
     $$0 = 2;
    }
   }
   $11 = $2 & 2;
   $12 = ($11|0)==(0);
   if ($12) {
    $$1 = $$0;
   } else {
    $13 = (($$0) + 1)|0;
    (_lua_pushstring($0,14865)|0);
    $14 = $$0 ^ -1;
    $15 = (_lua_rawget($0,$14)|0);
    $16 = ($15|0)==(0);
    if ($16) {
     break;
    } else {
     $$1 = $13;
    }
   }
   $17 = $2 & 4;
   $18 = ($17|0)==(0);
   if ($18) {
    $$2 = $$1;
   } else {
    $19 = (($$1) + 1)|0;
    (_lua_pushstring($0,14876)|0);
    $20 = $$1 ^ -1;
    $21 = (_lua_rawget($0,$20)|0);
    $22 = ($21|0)==(0);
    if ($22) {
     break;
    } else {
     $$2 = $19;
    }
   }
   $23 = $$2 ^ -1;
   _lua_settop($0,$23);
   return;
  }
 } while(0);
 _luaL_checktype($0,$1,5);
 return;
}
function _auxsort($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$i = 0, $$025$i = 0, $$069 = 0, $$070 = 0, $$07187 = 0, $$07286 = 0, $$07585 = 0, $$173 = 0, $$176 = 0, $$2$ph = 0, $$lcssa$i = i64(), $$lcssa27$i = 0, $$lcssa28$i = 0, $$lcssa29$i = i64(), $$lcssa30$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = i64(), $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = i64(), $28 = 0, $29 = i64(), $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = i64(), $36 = 0, $37 = 0, $38 = 0, $39 = i64(), $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = i64(), $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = i64(), $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = i64(), $60 = 0, $61 = 0, $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $4 = ($2>>>0)>($1>>>0);
 if (!($4)) {
  STACKTOP = sp;return;
 }
 $$07187 = $3;$$07286 = $2;$$07585 = $1;
 while(1) {
  $5 = i64_zext($$07585>>>0);
  (_lua_geti($0,1,$5)|0);
  $6 = i64_zext($$07286>>>0);
  (_lua_geti($0,1,$6)|0);
  $7 = (_sort_comp($0,-1,-2)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   _lua_settop($0,-3);
  } else {
   _lua_seti($0,1,$5);
   _lua_seti($0,1,$6);
  }
  $9 = (($$07286) - ($$07585))|0;
  $10 = ($9|0)==(1);
  if ($10) {
   label = 35;
   break;
  }
  $11 = ($9>>>0)<(100);
  $12 = ($$07187|0)==(0);
  $or$cond = $11 | $12;
  if ($or$cond) {
   $13 = (($$07286) + ($$07585))|0;
   $14 = $13 >>> 1;
   $$070 = $14;
  } else {
   $15 = $9 >>> 2;
   $16 = $15 << 1;
   $17 = (($$07187>>>0) % ($16>>>0))&-1;
   $18 = (($15) + ($$07585))|0;
   $19 = (($18) + ($17))|0;
   $$070 = $19;
  }
  $20 = i64_zext($$070>>>0);
  (_lua_geti($0,1,$20)|0);
  (_lua_geti($0,1,$5)|0);
  $21 = (_sort_comp($0,-2,-1)|0);
  $22 = ($21|0)==(0);
  do {
   if ($22) {
    _lua_settop($0,-2);
    (_lua_geti($0,1,$6)|0);
    $23 = (_sort_comp($0,-1,-2)|0);
    $24 = ($23|0)==(0);
    if ($24) {
     _lua_settop($0,-3);
     break;
    } else {
     _lua_seti($0,1,$20);
     _lua_seti($0,1,$6);
     break;
    }
   } else {
    _lua_seti($0,1,$20);
    _lua_seti($0,1,$5);
   }
  } while(0);
  $25 = ($9|0)==(2);
  if ($25) {
   label = 35;
   break;
  }
  (_lua_geti($0,1,$20)|0);
  _lua_pushvalue($0,-1);
  $26 = (($$07286) + -1)|0;
  $27 = i64_zext($26>>>0);
  (_lua_geti($0,1,$27)|0);
  _lua_seti($0,1,$20);
  _lua_seti($0,1,$27);
  $$0$i = $26;$$025$i = $$07585;
  while(1) {
   $28 = (($$025$i) + 1)|0;
   $29 = i64_zext($28>>>0);
   (_lua_geti($0,1,$29)|0);
   $30 = (_sort_comp($0,-1,-2)|0);
   $31 = ($30|0)==(0);
   if ($31) {
    $$lcssa$i = $29;$$lcssa27$i = $28;
   } else {
    $32 = $28;
    while(1) {
     $33 = ($32|0)==($26|0);
     if ($33) {
      (_luaL_error($0,14822,$vararg_buffer)|0);
     }
     _lua_settop($0,-2);
     $34 = (($32) + 1)|0;
     $35 = i64_zext($34>>>0);
     (_lua_geti($0,1,$35)|0);
     $36 = (_sort_comp($0,-1,-2)|0);
     $37 = ($36|0)==(0);
     if ($37) {
      $$lcssa$i = $35;$$lcssa27$i = $34;
      break;
     } else {
      $32 = $34;
     }
    }
   }
   $38 = (($$0$i) + -1)|0;
   $39 = i64_zext($38>>>0);
   (_lua_geti($0,1,$39)|0);
   $40 = (_sort_comp($0,-3,-1)|0);
   $41 = ($40|0)==(0);
   $42 = ($38>>>0)<($$lcssa27$i>>>0);
   if ($41) {
    $$lcssa28$i = $42;$$lcssa29$i = $39;$$lcssa30$i = $38;
   } else {
    $44 = $38;$63 = $42;
    while(1) {
     if ($63) {
      (_luaL_error($0,14822,$vararg_buffer1)|0);
     }
     _lua_settop($0,-2);
     $43 = (($44) + -1)|0;
     $45 = i64_zext($43>>>0);
     (_lua_geti($0,1,$45)|0);
     $46 = (_sort_comp($0,-3,-1)|0);
     $47 = ($46|0)==(0);
     $48 = ($43>>>0)<($$lcssa27$i>>>0);
     if ($47) {
      $$lcssa28$i = $48;$$lcssa29$i = $45;$$lcssa30$i = $43;
      break;
     } else {
      $44 = $43;$63 = $48;
     }
    }
   }
   if ($$lcssa28$i) {
    break;
   }
   _lua_seti($0,1,$$lcssa$i);
   _lua_seti($0,1,$$lcssa29$i);
   $$0$i = $$lcssa30$i;$$025$i = $$lcssa27$i;
  }
  _lua_settop($0,-2);
  _lua_seti($0,1,$27);
  _lua_seti($0,1,$$lcssa$i);
  $49 = (($$lcssa27$i) - ($$07585))|0;
  $50 = (($$07286) - ($$lcssa27$i))|0;
  $51 = ($49>>>0)<($50>>>0);
  if ($51) {
   $52 = (($$lcssa27$i) + -1)|0;
   _auxsort($0,$$07585,$52,$$07187);
   $53 = (($$lcssa27$i) + 1)|0;
   $$069 = $49;$$173 = $$07286;$$176 = $53;
  } else {
   $54 = (($$lcssa27$i) + 1)|0;
   _auxsort($0,$54,$$07286,$$07187);
   $55 = (($$lcssa27$i) + -1)|0;
   $$069 = $50;$$173 = $55;$$176 = $$07585;
  }
  $56 = (($$173) - ($$176))|0;
  $57 = $56 >>> 7;
  $58 = ($57>>>0)>($$069>>>0);
  if ($58) {
   $59 = (_clock()|0);
   $60 = (_time((0|0))|0);
   $61 = (($60) + ($59))|0;
   $$2$ph = $61;
  } else {
   $$2$ph = $$07187;
  }
  $62 = ($$173>>>0)>($$176>>>0);
  if ($62) {
   $$07187 = $$2$ph;$$07286 = $$173;$$07585 = $$176;
  } else {
   label = 35;
   break;
  }
 }
 if ((label|0) == 35) {
  STACKTOP = sp;return;
 }
}
function _sort_comp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_lua_type($0,2)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  $5 = (_lua_compare($0,$1,$2,1)|0);
  $$0 = $5;
  return ($$0|0);
 } else {
  _lua_pushvalue($0,2);
  $6 = (($1) + -1)|0;
  _lua_pushvalue($0,$6);
  $7 = (($2) + -2)|0;
  _lua_pushvalue($0,$7);
  _lua_callk($0,2,1,0,0);
  $8 = (_lua_toboolean($0,-1)|0);
  _lua_settop($0,-2);
  $$0 = $8;
  return ($$0|0);
 }
 return (0)|0;
}
function _luaopen_utf8($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _luaL_checkversion_($0,503.0,136);
 _lua_createtable($0,0,6);
 _luaL_setfuncs($0,3456,0);
 (_lua_pushlstring($0,15075,14)|0);
 _lua_setfield($0,-2,15090);
 return 1;
}
function _byteoffset($0) {
 $0 = $0|0;
 var $$0 = i64(), $$04151 = i64(), $$044 = 0, $$1 = i64(), $$142 = i64(), $$14256 = i64(), $$14258 = i64(), $$243 = i64(), $$248 = i64(), $$352 = i64(), $$4 = i64(), $$557 = i64(), $$6 = i64(), $$7 = i64(), $$770 = i64(), $1 = 0, $10 = 0, $11 = 0, $12 = i64(), $13 = i64();
 var $14 = i64(), $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = i64(), $2 = 0, $20 = i64(), $21 = i64(), $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = i64(), $30 = i64(), $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = i64(), $41 = 0, $42 = i64(), $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = i64(), $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = i64(), $54 = 0, $55 = i64(), $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = i64(), $7 = i64(), $8 = i64(), $9 = i64(), $vararg_buffer = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = sp + 4|0;
 $2 = (_luaL_checklstring($0,1,$1)|0);
 $3 = (i64(_luaL_checkinteger($0,2)));
 $4 = i64_sgt($3,i64_const(4294967295,4294967295));
 $5 = load4($1);
 $6 = (($5) + 1)|0;
 $7 = i64_zext($6>>>0);
 $8 = $4 ? i64_const(1,0) : $7;
 $9 = (i64(_luaL_optinteger($0,3,$8)));
 $10 = load4($1);
 $11 = i64_sgt($9,i64_const(4294967295,4294967295));
 if ($11) {
  $19 = $9;
  label = 3;
 } else {
  $12 = i64_add($9,i64_const(1,0));
  $13 = i64_zext($10>>>0);
  $14 = i64_add($12,$13);
  $15 = i64_trunc($9);
  $16 = (0 - ($15))|0;
  $17 = ($10>>>0)<($16>>>0);
  if ($17) {
   $$0 = i64_const(0,0);
   label = 5;
  } else {
   $19 = $14;
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $18 = i64_sgt($19,i64_const(0,0));
  if ($18) {
   $20 = i64_add($19,i64_const(4294967295,4294967295));
   $21 = i64_zext($10>>>0);
   $22 = i64_sgt($20,$21);
   if ($22) {
    $$0 = $20;
    label = 5;
   } else {
    $$1 = $20;
   }
  } else {
   $$0 = $19;
   label = 5;
  }
 }
 if ((label|0) == 5) {
  (_luaL_argerror($0,3,15270)|0);
  $$1 = $$0;
 }
 $23 = i64_eq($3,i64_const(0,0));
 L9: do {
  if ($23) {
   $24 = i64_sgt($$1,i64_const(0,0));
   if ($24) {
    $$248 = $$1;
    while(1) {
     $25 = i64_trunc($$248);
     $26 = (($2) + ($25)|0);
     $27 = load1($26);
     $28 = $27 & -64;
     $29 = ($28<<24>>24)==(-128);
     if (!($29)) {
      $$770 = $$248;
      break L9;
     }
     $30 = i64_add($$248,i64_const(4294967295,4294967295));
     $31 = i64_sgt($$248,i64_const(1,0));
     if ($31) {
      $$248 = $30;
     } else {
      $$770 = $30;
      break;
     }
    }
   } else {
    $$770 = $$1;
   }
  } else {
   $32 = i64_trunc($$1);
   $33 = (($2) + ($32)|0);
   $34 = load1($33);
   $35 = $34 & -64;
   $36 = ($35<<24>>24)==(-128);
   if ($36) {
    $37 = (_luaL_error($0,15292,$vararg_buffer)|0);
    $$044 = $37;
    STACKTOP = sp;return ($$044|0);
   }
   $38 = i64_slt($3,i64_const(0,0));
   L20: do {
    if ($38) {
     $39 = i64_sgt($$1,i64_const(0,0));
     if ($39) {
      $$04151 = $3;$$352 = $$1;
      L23: while(1) {
       $$4 = $$352;
       while(1) {
        $40 = i64_add($$4,i64_const(4294967295,4294967295));
        $41 = i64_sgt($$4,i64_const(1,0));
        if (!($41)) {
         break L23;
        }
        $43 = i64_trunc($40);
        $44 = (($2) + ($43)|0);
        $45 = load1($44);
        $46 = $45 & -64;
        $47 = ($46<<24>>24)==(-128);
        if ($47) {
         $$4 = $40;
        } else {
         break;
        }
       }
       $48 = i64_add($$04151,i64_const(1,0));
       $49 = i64_slt($$04151,i64_const(4294967295,4294967295));
       $50 = $49 & $41;
       if ($50) {
        $$04151 = $48;$$352 = $40;
       } else {
        $$243 = $48;$$7 = $40;
        label = 27;
        break L20;
       }
      }
      $42 = i64_add($$04151,i64_const(1,0));
      $$243 = $42;$$7 = $40;
      label = 27;
     }
    } else {
     $$14256 = i64_add($3,i64_const(4294967295,4294967295));
     $51 = i64_sgt($3,i64_const(1,0));
     if ($51) {
      $52 = load4($1);
      $53 = i64_zext($52>>>0);
      $$14258 = $$14256;$$557 = $$1;
      while(1) {
       $54 = i64_slt($$557,$53);
       if (!($54)) {
        $$243 = $$14258;$$7 = $$557;
        label = 27;
        break L20;
       }
       $$6 = $$557;
       while(1) {
        $55 = i64_add($$6,i64_const(1,0));
        $56 = i64_trunc($55);
        $57 = (($2) + ($56)|0);
        $58 = load1($57);
        $59 = $58 & -64;
        $60 = ($59<<24>>24)==(-128);
        if ($60) {
         $$6 = $55;
        } else {
         break;
        }
       }
       $$142 = i64_add($$14258,i64_const(4294967295,4294967295));
       $61 = i64_sgt($$14258,i64_const(1,0));
       if ($61) {
        $$14258 = $$142;$$557 = $55;
       } else {
        $$243 = $$142;$$7 = $55;
        label = 27;
        break;
       }
      }
     } else {
      $$243 = $$14256;$$7 = $$1;
      label = 27;
     }
    }
   } while(0);
   if ((label|0) == 27) {
    $62 = i64_eq($$243,i64_const(0,0));
    if ($62) {
     $$770 = $$7;
     break;
    }
   }
   _lua_pushnil($0);
   $$044 = 1;
   STACKTOP = sp;return ($$044|0);
  }
 } while(0);
 $63 = i64_add($$770,i64_const(1,0));
 _lua_pushinteger($0,$63);
 $$044 = 1;
 STACKTOP = sp;return ($$044|0);
}
function _codepoint($0) {
 $0 = $0|0;
 var $$039$lcssa$i = 0, $$03958$i = 0, $$03963 = 0, $$040$lcssa$i = 0, $$04057$i = 0, $$04162 = 0, $$044$lcssa$i = 0, $$04456$i = 0, $$147$i = 0, $$2 = 0, $$343$i = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = i64(), $13 = i64(), $14 = 0, $15 = 0, $16 = i64();
 var $17 = i64(), $18 = i64(), $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = i64(), $24 = 0, $25 = 0, $26 = i64(), $27 = 0, $28 = i64(), $29 = 0, $3 = i64(), $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = i64(), $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = i64(), $69 = 0, $7 = i64(), $70 = 0;
 var $8 = i64(), $9 = 0, $or$cond$i = 0, $spec$select$i = i64(), $spec$select$i42 = i64(), $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = sp + 12|0;
 $2 = (_luaL_checklstring($0,1,$1)|0);
 $3 = (i64(_luaL_optinteger($0,2,i64_const(1,0))));
 $4 = load4($1);
 $5 = i64_sgt($3,i64_const(4294967295,4294967295));
 if ($5) {
  $12 = $3;
 } else {
  $6 = i64_add($3,i64_const(1,0));
  $7 = i64_zext($4>>>0);
  $8 = i64_add($6,$7);
  $9 = i64_trunc($3);
  $10 = (0 - ($9))|0;
  $11 = ($4>>>0)<($10>>>0);
  $spec$select$i = $11 ? i64_const(0,0) : $8;
  $12 = $spec$select$i;
 }
 $13 = (i64(_luaL_optinteger($0,3,$12)));
 $14 = load4($1);
 $15 = i64_sgt($13,i64_const(4294967295,4294967295));
 if ($15) {
  $26 = $13;
 } else {
  $16 = i64_add($13,i64_const(1,0));
  $17 = i64_zext($14>>>0);
  $18 = i64_add($16,$17);
  $19 = i64_trunc($13);
  $20 = (0 - ($19))|0;
  $21 = ($14>>>0)<($20>>>0);
  $spec$select$i42 = $21 ? i64_const(0,0) : $18;
  $26 = $spec$select$i42;
 }
 $22 = i64_sgt($12,i64_const(0,0));
 if ($22) {
  $24 = $14;
 } else {
  (_luaL_argerror($0,2,15235)|0);
  $$pre = load4($1);
  $24 = $$pre;
 }
 $23 = i64_zext($24>>>0);
 $25 = i64_sgt($26,$23);
 if ($25) {
  (_luaL_argerror($0,3,15235)|0);
 }
 $27 = i64_slt($26,$12);
 if ($27) {
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 $28 = i64_sub($26,$12);
 $29 = i64_sgt($28,i64_const(2147483646,0));
 if ($29) {
  $30 = (_luaL_error($0,15248,$vararg_buffer)|0);
  $$2 = $30;
  STACKTOP = sp;return ($$2|0);
 }
 $31 = i64_trunc($28);
 $32 = (($31) + 1)|0;
 _luaL_checkstack($0,$32,15248);
 $33 = i64_trunc($26);
 $34 = (($2) + ($33)|0);
 $35 = i64_trunc($12);
 $36 = (($35) + -1)|0;
 $37 = ($36|0)<($33|0);
 if (!($37)) {
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 $38 = (($2) + ($36)|0);
 $$03963 = 0;$$04162 = $38;
 L23: while(1) {
  $39 = load1($$04162);
  $40 = $39&255;
  $41 = ($39<<24>>24)>(-1);
  if ($41) {
   $$147$i = $$04162;$$343$i = $40;
  } else {
   $42 = $40 & 64;
   $43 = ($42|0)==(0);
   if ($43) {
    $$039$lcssa$i = 0;$$040$lcssa$i = 0;$$044$lcssa$i = $40;
   } else {
    $$03958$i = 0;$$04057$i = 0;$$04456$i = $40;
    while(1) {
     $44 = (($$03958$i) + 1)|0;
     $45 = (($$04162) + ($44)|0);
     $46 = load1($45);
     $47 = $46&255;
     $48 = $47 & 192;
     $49 = ($48|0)==(128);
     if (!($49)) {
      break L23;
     }
     $50 = $$04456$i << 1;
     $51 = $$04057$i << 6;
     $52 = $47 & 63;
     $53 = $52 | $51;
     $54 = $$04456$i & 32;
     $55 = ($54|0)==(0);
     if ($55) {
      $$039$lcssa$i = $44;$$040$lcssa$i = $53;$$044$lcssa$i = $50;
      break;
     } else {
      $$03958$i = $44;$$04057$i = $53;$$04456$i = $50;
     }
    }
   }
   $56 = $$044$lcssa$i & 127;
   $57 = ($$039$lcssa$i*5)|0;
   $58 = $56 << $57;
   $59 = $58 | $$040$lcssa$i;
   $60 = ($$039$lcssa$i>>>0)>(3);
   $61 = ($59>>>0)>(1114111);
   $or$cond$i = $60 | $61;
   if ($or$cond$i) {
    break;
   }
   $62 = (($$04162) + ($$039$lcssa$i)|0);
   $63 = (3520 + ($$039$lcssa$i<<2)|0);
   $64 = load4($63);
   $65 = ($59>>>0)>($64>>>0);
   if ($65) {
    $$147$i = $62;$$343$i = $59;
   } else {
    break;
   }
  }
  $67 = ((($$147$i)) + 1|0);
  $68 = i64_sext($$343$i);
  _lua_pushinteger($0,$68);
  $69 = (($$03963) + 1)|0;
  $70 = ($67>>>0)<($34>>>0);
  if ($70) {
   $$03963 = $69;$$04162 = $67;
  } else {
   $$2 = $69;
   label = 23;
   break;
  }
 }
 if ((label|0) == 23) {
  STACKTOP = sp;return ($$2|0);
 }
 $66 = (_luaL_error($0,15134,$vararg_buffer1)|0);
 $$2 = $66;
 STACKTOP = sp;return ($$2|0);
}
function _utfchar($0) {
 $0 = $0|0;
 var $$012 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = i64(), $5 = 0, $6 = 0, $7 = 0, $8 = i64(), $9 = 0, $exitcond = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4128|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = sp + 16|0;
 $2 = (_lua_gettop($0)|0);
 $3 = ($2|0)==(1);
 if ($3) {
  $4 = (i64(_luaL_checkinteger($0,1)));
  $5 = i64_ult($4,i64_const(1114112,0));
  if (!($5)) {
   (_luaL_argerror($0,1,15213)|0);
  }
  $6 = i64_trunc($4);
  store4($vararg_buffer,$6);
  (_lua_pushfstring($0,15232,$vararg_buffer)|0);
  STACKTOP = sp;return 1;
 }
 _luaL_buffinit($0,$1);
 $7 = ($2|0)<(1);
 if (!($7)) {
  $$012 = 1;
  while(1) {
   $8 = (i64(_luaL_checkinteger($0,$$012)));
   $9 = i64_ult($8,i64_const(1114112,0));
   if (!($9)) {
    (_luaL_argerror($0,$$012,15213)|0);
   }
   $10 = i64_trunc($8);
   store4($vararg_buffer1,$10);
   (_lua_pushfstring($0,15232,$vararg_buffer1)|0);
   _luaL_addvalue($1);
   $11 = (($$012) + 1)|0;
   $exitcond = ($$012|0)==($2|0);
   if ($exitcond) {
    break;
   } else {
    $$012 = $11;
   }
  }
 }
 _luaL_pushresult($1);
 STACKTOP = sp;return 1;
}
function _utflen($0) {
 $0 = $0|0;
 var $$032 = i64(), $$035$lcssa = i64(), $$03550 = 0, $$039$lcssa$i = 0, $$03958$i = 0, $$040$lcssa$i = 0, $$04057$i = 0, $$044$lcssa$i = 0, $$04456$i = 0, $$133 = i64(), $$147$i = 0, $$2 = 0, $$23451 = i64(), $$pre = 0, $$pre$phiZ2D = i64(), $$pre59 = i64(), $1 = 0, $10 = 0, $11 = 0, $12 = i64();
 var $13 = 0, $14 = 0, $15 = i64(), $16 = i64(), $17 = i64(), $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = i64(), $23 = i64(), $24 = i64(), $25 = 0, $26 = 0, $27 = i64(), $28 = 0, $29 = 0, $3 = i64(), $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = i64(), $6 = i64(), $60 = 0, $61 = 0, $62 = 0, $63 = i64(), $64 = 0, $65 = 0, $7 = i64(), $8 = i64();
 var $9 = 0, $or$cond$i = 0, $phitmp = i64(), $spec$select$i = i64(), $spec$select$i37 = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = (_luaL_checklstring($0,1,$1)|0);
 $3 = (i64(_luaL_optinteger($0,2,i64_const(1,0))));
 $4 = load4($1);
 $5 = i64_sgt($3,i64_const(4294967295,4294967295));
 if ($5) {
  $22 = $3;
 } else {
  $6 = i64_add($3,i64_const(1,0));
  $7 = i64_zext($4>>>0);
  $8 = i64_add($6,$7);
  $9 = i64_trunc($3);
  $10 = (0 - ($9))|0;
  $11 = ($4>>>0)<($10>>>0);
  $spec$select$i = $11 ? i64_const(0,0) : $8;
  $22 = $spec$select$i;
 }
 $12 = (i64(_luaL_optinteger($0,3,i64_const(4294967295,4294967295))));
 $13 = load4($1);
 $14 = i64_sgt($12,i64_const(4294967295,4294967295));
 if ($14) {
  $27 = $12;
 } else {
  $15 = i64_add($12,i64_const(1,0));
  $16 = i64_zext($13>>>0);
  $17 = i64_add($15,$16);
  $18 = i64_trunc($12);
  $19 = (0 - ($18))|0;
  $20 = ($13>>>0)<($19>>>0);
  $spec$select$i37 = $20 ? i64_const(0,0) : $17;
  $27 = $spec$select$i37;
 }
 $21 = i64_sgt($22,i64_const(0,0));
 if ($21) {
  $23 = i64_add($22,i64_const(4294967295,4294967295));
  $24 = i64_zext($13>>>0);
  $25 = i64_sgt($23,$24);
  if ($25) {
   $$032 = $23;
   label = 7;
  } else {
   $$133 = $23;$$pre$phiZ2D = $24;
  }
 } else {
  $$032 = $22;
  label = 7;
 }
 if ((label|0) == 7) {
  (_luaL_argerror($0,2,15153)|0);
  $$pre = load4($1);
  $$pre59 = i64_zext($$pre>>>0);
  $$133 = $$032;$$pre$phiZ2D = $$pre59;
 }
 $26 = i64_sgt($27,$$pre$phiZ2D);
 if ($26) {
  (_luaL_argerror($0,3,15184)|0);
 }
 $28 = i64_slt($$133,$27);
 do {
  if ($28) {
   $29 = $2;
   $$03550 = 0;$$23451 = $$133;
   L17: while(1) {
    $30 = i64_trunc($$23451);
    $31 = (($2) + ($30)|0);
    $32 = load1($31);
    $33 = $32&255;
    $34 = ($32<<24>>24)>(-1);
    if ($34) {
     $$147$i = $31;
    } else {
     $35 = $33 & 64;
     $36 = ($35|0)==(0);
     if ($36) {
      $$039$lcssa$i = 0;$$040$lcssa$i = 0;$$044$lcssa$i = $33;
     } else {
      $$03958$i = 0;$$04057$i = 0;$$04456$i = $33;
      while(1) {
       $37 = (($$03958$i) + 1)|0;
       $38 = (($31) + ($37)|0);
       $39 = load1($38);
       $40 = $39&255;
       $41 = $40 & 192;
       $42 = ($41|0)==(128);
       if (!($42)) {
        break L17;
       }
       $43 = $$04456$i << 1;
       $44 = $$04057$i << 6;
       $45 = $40 & 63;
       $46 = $45 | $44;
       $47 = $$04456$i & 32;
       $48 = ($47|0)==(0);
       if ($48) {
        $$039$lcssa$i = $37;$$040$lcssa$i = $46;$$044$lcssa$i = $43;
        break;
       } else {
        $$03958$i = $37;$$04057$i = $46;$$04456$i = $43;
       }
      }
     }
     $49 = $$044$lcssa$i & 127;
     $50 = ($$039$lcssa$i*5)|0;
     $51 = $49 << $50;
     $52 = $51 | $$040$lcssa$i;
     $53 = ($$039$lcssa$i>>>0)>(3);
     $54 = ($52>>>0)>(1114111);
     $or$cond$i = $53 | $54;
     if ($or$cond$i) {
      break;
     }
     $55 = (($31) + ($$039$lcssa$i)|0);
     $56 = (3520 + ($$039$lcssa$i<<2)|0);
     $57 = load4($56);
     $58 = ($52>>>0)>($57>>>0);
     if ($58) {
      $$147$i = $55;
     } else {
      break;
     }
    }
    $60 = ((($$147$i)) + 1|0);
    $61 = $60;
    $62 = (($61) - ($29))|0;
    $63 = i64_sext($62);
    $64 = (($$03550) + 1)|0;
    $65 = i64_sgt($27,$63);
    if ($65) {
     $$03550 = $64;$$23451 = $63;
    } else {
     label = 21;
     break;
    }
   }
   if ((label|0) == 21) {
    $phitmp = i64_zext($64>>>0);
    $$035$lcssa = $phitmp;
    break;
   }
   _lua_pushnil($0);
   $59 = i64_add($$23451,i64_const(1,0));
   _lua_pushinteger($0,$59);
   $$2 = 2;
   STACKTOP = sp;return ($$2|0);
  } else {
   $$035$lcssa = i64_const(0,0);
  }
 } while(0);
 _lua_pushinteger($0,$$035$lcssa);
 $$2 = 1;
 STACKTOP = sp;return ($$2|0);
}
function _iter_codes($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (_luaL_checklstring($0,1,0)|0);
 _lua_pushcclosure($0,172,0);
 _lua_pushvalue($0,1);
 _lua_pushinteger($0,i64_const(0,0));
 return 3;
}
function _iter_aux($0) {
 $0 = $0|0;
 var $$022 = i64(), $$039$lcssa$i = 0, $$03958$i = 0, $$040$lcssa$i = 0, $$04057$i = 0, $$044$lcssa$i = 0, $$04456$i = 0, $$1 = 0, $$123 = i64(), $$147$i = 0, $$343$i = 0, $$pre = 0, $$pre$phiZ2D = i64(), $$pre32 = i64(), $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = i64();
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = i64(), $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = i64(), $50 = i64();
 var $51 = i64(), $6 = 0, $7 = i64(), $8 = 0, $9 = 0, $or$cond$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = sp + 4|0;
 $2 = (_luaL_checklstring($0,1,$1)|0);
 $3 = (i64(_lua_tointegerx($0,2,0)));
 $4 = i64_slt($3,i64_const(1,0));
 if ($4) {
  $$pre = load4($1);
  $$pre32 = i64_zext($$pre>>>0);
  $$123 = i64_const(0,0);$$pre$phiZ2D = $$pre32;
 } else {
  $5 = i64_add($3,i64_const(4294967295,4294967295));
  $6 = load4($1);
  $7 = i64_zext($6>>>0);
  $8 = i64_sgt($3,$7);
  if ($8) {
   $$123 = $5;$$pre$phiZ2D = $7;
  } else {
   $$022 = $3;
   while(1) {
    $9 = i64_trunc($$022);
    $10 = (($2) + ($9)|0);
    $11 = load1($10);
    $12 = $11 & -64;
    $13 = ($12<<24>>24)==(-128);
    $14 = i64_add($$022,i64_const(1,0));
    if ($13) {
     $$022 = $14;
    } else {
     $$123 = $$022;$$pre$phiZ2D = $7;
     break;
    }
   }
  }
 }
 $15 = i64_slt($$123,$$pre$phiZ2D);
 if (!($15)) {
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 $16 = i64_trunc($$123);
 $17 = (($2) + ($16)|0);
 $18 = load1($17);
 $19 = $18&255;
 $20 = ($18<<24>>24)>(-1);
 L11: do {
  if ($20) {
   $$147$i = $17;$$343$i = $19;
   label = 14;
  } else {
   $21 = $19 & 64;
   $22 = ($21|0)==(0);
   if ($22) {
    $$039$lcssa$i = 0;$$040$lcssa$i = 0;$$044$lcssa$i = $19;
   } else {
    $$03958$i = 0;$$04057$i = 0;$$04456$i = $19;
    while(1) {
     $23 = (($$03958$i) + 1)|0;
     $24 = (($17) + ($23)|0);
     $25 = load1($24);
     $26 = $25&255;
     $27 = $26 & 192;
     $28 = ($27|0)==(128);
     if (!($28)) {
      break L11;
     }
     $29 = $$04456$i << 1;
     $30 = $$04057$i << 6;
     $31 = $26 & 63;
     $32 = $31 | $30;
     $33 = $$04456$i & 32;
     $34 = ($33|0)==(0);
     if ($34) {
      $$039$lcssa$i = $23;$$040$lcssa$i = $32;$$044$lcssa$i = $29;
      break;
     } else {
      $$03958$i = $23;$$04057$i = $32;$$04456$i = $29;
     }
    }
   }
   $35 = $$044$lcssa$i & 127;
   $36 = ($$039$lcssa$i*5)|0;
   $37 = $35 << $36;
   $38 = $37 | $$040$lcssa$i;
   $39 = ($$039$lcssa$i>>>0)>(3);
   $40 = ($38>>>0)>(1114111);
   $or$cond$i = $39 | $40;
   if (!($or$cond$i)) {
    $41 = (($17) + ($$039$lcssa$i)|0);
    $42 = (3520 + ($$039$lcssa$i<<2)|0);
    $43 = load4($42);
    $44 = ($38>>>0)>($43>>>0);
    if ($44) {
     $$147$i = $41;$$343$i = $38;
     label = 14;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  $45 = ((($$147$i)) + 1|0);
  $46 = load1($45);
  $47 = $46 & -64;
  $48 = ($47<<24>>24)==(-128);
  if (!($48)) {
   $50 = i64_add($$123,i64_const(1,0));
   _lua_pushinteger($0,$50);
   $51 = i64_sext($$343$i);
   _lua_pushinteger($0,$51);
   $$1 = 2;
   STACKTOP = sp;return ($$1|0);
  }
 }
 $49 = (_luaL_error($0,15134,$vararg_buffer)|0);
 $$1 = $49;
 STACKTOP = sp;return ($$1|0);
}
function _luaopen_package($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _lua_createtable($0,0,0);
 _lua_createtable($0,0,1);
 _lua_pushcclosure($0,173,0);
 _lua_setfield($0,-2,15332);
 (_lua_setmetatable($0,-2)|0);
 _lua_rawsetp($0,-1001000,18404);
 _luaL_checkversion_($0,503.0,136);
 _lua_createtable($0,0,7);
 _luaL_setfuncs($0,3536,0);
 _lua_createtable($0,4,0);
 _lua_pushvalue($0,-2);
 _lua_pushcclosure($0,174,1);
 _lua_rawseti($0,-2,i64_const(1,0));
 _lua_pushvalue($0,-2);
 _lua_pushcclosure($0,175,1);
 _lua_rawseti($0,-2,i64_const(2,0));
 _lua_pushvalue($0,-2);
 _lua_pushcclosure($0,176,1);
 _lua_rawseti($0,-2,i64_const(3,0));
 _lua_pushvalue($0,-2);
 _lua_pushcclosure($0,177,1);
 _lua_rawseti($0,-2,i64_const(4,0));
 _lua_setfield($0,-2,15337);
 _setpath($0,15347,15352,15361);
 _setpath($0,15512,15518,15528);
 (_lua_pushstring($0,15597)|0);
 _lua_setfield($0,-2,15608);
 (_luaL_getsubtable($0,-1001000,15615)|0);
 _lua_setfield($0,-2,15623);
 (_luaL_getsubtable($0,-1001000,15630)|0);
 _lua_setfield($0,-2,15639);
 (_lua_rawgeti($0,-1001000,i64_const(2,0))|0);
 _lua_pushvalue($0,-2);
 _luaL_setfuncs($0,3600,1);
 _lua_settop($0,-2);
 return 1;
}
function _gctm($0) {
 $0 = $0|0;
 var $$07 = i64(), $1 = i64(), $2 = 0, $3 = i64(), $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (i64(_luaL_len($0,1)));
 $2 = i64_sgt($1,i64_const(0,0));
 if (!($2)) {
  return 0;
 }
 $$07 = $1;
 while(1) {
  (_lua_rawgeti($0,1,$$07)|0);
  _lua_settop($0,-2);
  $3 = i64_add($$07,i64_const(4294967295,4294967295));
  $4 = i64_sgt($$07,i64_const(1,0));
  if ($4) {
   $$07 = $3;
  } else {
   break;
  }
 }
 return 0;
}
function _searcher_preload($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = (_luaL_checklstring($0,1,0)|0);
 (_lua_getfield($0,-1001000,15630)|0);
 $2 = (_lua_getfield($0,-1,$1)|0);
 $3 = ($2|0)==(0);
 if (!($3)) {
  STACKTOP = sp;return 1;
 }
 store4($vararg_buffer,$1);
 (_lua_pushfstring($0,15944,$vararg_buffer)|0);
 STACKTOP = sp;return 1;
}
function _searcher_Lua($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phi$call$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = (_luaL_checklstring($0,1,0)|0);
 (_lua_getfield($0,-1001001,15347)|0);
 $2 = (_lua_tolstring($0,-1,0)|0);
 $3 = ($2|0)==(0|0);
 if ($3) {
  store4($vararg_buffer,15347);
  (_luaL_error($0,15745,$vararg_buffer)|0);
  $4 = (_searchpath($0,$1,0,16069,15775)|0);
  $phi$call$i = $4;
 } else {
  $5 = (_searchpath($0,$1,$2,16069,15775)|0);
  $phi$call$i = $5;
 }
 $6 = ($phi$call$i|0)==(0|0);
 if ($6) {
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $7 = (_luaL_loadfilex($0,$phi$call$i,0)|0);
 $8 = ($7|0)==(0);
 if ($8) {
  (_lua_pushstring($0,$phi$call$i)|0);
  $$0 = 2;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = (_lua_tolstring($0,1,0)|0);
  $10 = (_lua_tolstring($0,-1,0)|0);
  store4($vararg_buffer1,$9);
  $vararg_ptr4 = ((($vararg_buffer1)) + 4|0);
  store4($vararg_ptr4,$phi$call$i);
  $vararg_ptr5 = ((($vararg_buffer1)) + 8|0);
  store4($vararg_ptr5,$10);
  $11 = (_luaL_error($0,15777,$vararg_buffer1)|0);
  $$0 = $11;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _searcher_C($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phi$call$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = (_luaL_checklstring($0,1,0)|0);
 (_lua_getfield($0,-1001001,15512)|0);
 $2 = (_lua_tolstring($0,-1,0)|0);
 $3 = ($2|0)==(0|0);
 if ($3) {
  store4($vararg_buffer,15512);
  (_luaL_error($0,15745,$vararg_buffer)|0);
  $4 = (_searchpath($0,$1,0,16069,15775)|0);
  $phi$call$i = $4;
 } else {
  $5 = (_searchpath($0,$1,$2,16069,15775)|0);
  $phi$call$i = $5;
 }
 $6 = ($phi$call$i|0)==(0|0);
 if ($6) {
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $7 = (_loadfunc($0,$phi$call$i,$1)|0);
 $8 = ($7|0)==(0);
 if ($8) {
  (_lua_pushstring($0,$phi$call$i)|0);
  $$0 = 2;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = (_lua_tolstring($0,1,0)|0);
  $10 = (_lua_tolstring($0,-1,0)|0);
  store4($vararg_buffer1,$9);
  $vararg_ptr4 = ((($vararg_buffer1)) + 4|0);
  store4($vararg_ptr4,$phi$call$i);
  $vararg_ptr5 = ((($vararg_buffer1)) + 8|0);
  store4($vararg_ptr5,$10);
  $11 = (_luaL_error($0,15777,$vararg_buffer1)|0);
  $$0 = $11;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _searcher_Croot($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phi$call$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0;
 var $vararg_buffer6 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer6 = sp + 24|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = (_luaL_checklstring($0,1,0)|0);
 $2 = (_strchr($1,46)|0);
 $3 = ($2|0)==(0|0);
 if ($3) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $4 = $2;
 $5 = $1;
 $6 = (($4) - ($5))|0;
 (_lua_pushlstring($0,$1,$6)|0);
 $7 = (_lua_tolstring($0,-1,0)|0);
 (_lua_getfield($0,-1001001,15512)|0);
 $8 = (_lua_tolstring($0,-1,0)|0);
 $9 = ($8|0)==(0|0);
 if ($9) {
  store4($vararg_buffer,15512);
  (_luaL_error($0,15745,$vararg_buffer)|0);
  $10 = (_searchpath($0,$7,0,16069,15775)|0);
  $phi$call$i = $10;
 } else {
  $11 = (_searchpath($0,$7,$8,16069,15775)|0);
  $phi$call$i = $11;
 }
 $12 = ($phi$call$i|0)==(0|0);
 if ($12) {
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $13 = (_loadfunc($0,$phi$call$i,$1)|0);
 switch ($13|0) {
 case 0:  {
  (_lua_pushstring($0,$phi$call$i)|0);
  $$0 = 2;
  STACKTOP = sp;return ($$0|0);
  break;
 }
 case 2:  {
  store4($vararg_buffer6,$1);
  $vararg_ptr9 = ((($vararg_buffer6)) + 4|0);
  store4($vararg_ptr9,$phi$call$i);
  (_lua_pushfstring($0,15823,$vararg_buffer6)|0);
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
  break;
 }
 default: {
  $14 = (_lua_tolstring($0,1,0)|0);
  $15 = (_lua_tolstring($0,-1,0)|0);
  store4($vararg_buffer1,$14);
  $vararg_ptr4 = ((($vararg_buffer1)) + 4|0);
  store4($vararg_ptr4,$phi$call$i);
  $vararg_ptr5 = ((($vararg_buffer1)) + 8|0);
  store4($vararg_ptr5,$15);
  $16 = (_luaL_error($0,15777,$vararg_buffer1)|0);
  $$0 = $16;
  STACKTOP = sp;return ($$0|0);
 }
 }
 return (0)|0;
}
function _setpath($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$022 = 0, $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 store4($vararg_buffer,$2);
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 store4($vararg_ptr1,15721);
 $4 = (_lua_pushfstring($0,15716,$vararg_buffer)|0);
 $5 = (_getenv(($4|0))|0);
 $6 = ($5|0)==(0|0);
 if ($6) {
  $7 = (_getenv(($2|0))|0);
  $8 = ($7|0)==(0|0);
  if (!($8)) {
   $$022 = $7;
   label = 3;
  }
 } else {
  $$022 = $5;
  label = 3;
 }
 if ((label|0) == 3) {
  (_lua_getfield($0,-1001000,15726)|0);
  $9 = (_lua_toboolean($0,-1)|0);
  _lua_settop($0,-2);
  $10 = ($9|0)==(0);
  if ($10) {
   $11 = (_luaL_gsub($0,$$022,15736,15739)|0);
   (_luaL_gsub($0,$11,15743,$3)|0);
   _lua_rotate($0,-2,-1);
   _lua_settop($0,-2);
   _lua_setfield($0,-3,$1);
   _lua_settop($0,-2);
   STACKTOP = sp;return;
  }
 }
 (_lua_pushstring($0,$3)|0);
 _lua_setfield($0,-3,$1);
 _lua_settop($0,-2);
 STACKTOP = sp;return;
}
function _ll_require($0) {
 $0 = $0|0;
 var $$0$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = i64(), $8 = 0, $9 = 0;
 var $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_ptr3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4128|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = sp + 16|0;
 $2 = (_luaL_checklstring($0,1,0)|0);
 _lua_settop($0,1);
 (_lua_getfield($0,-1001000,15615)|0);
 (_lua_getfield($0,2,$2)|0);
 $3 = (_lua_toboolean($0,-1)|0);
 $4 = ($3|0)==(0);
 if (!($4)) {
  STACKTOP = sp;return 1;
 }
 _lua_settop($0,-2);
 _luaL_buffinit($0,$1);
 $5 = (_lua_getfield($0,-1001001,15337)|0);
 $6 = ($5|0)==(5);
 if (!($6)) {
  (_luaL_error($0,15655,$vararg_buffer)|0);
 }
 $$0$i = 1;
 while(1) {
  $7 = i64_zext($$0$i>>>0);
  $8 = (_lua_rawgeti($0,3,$7)|0);
  $9 = ($8|0)==(0);
  if ($9) {
   _lua_settop($0,-2);
   _luaL_pushresult($1);
   $10 = (_lua_tolstring($0,-1,0)|0);
   store4($vararg_buffer1,$2);
   $vararg_ptr3 = ((($vararg_buffer1)) + 4|0);
   store4($vararg_ptr3,$10);
   (_luaL_error($0,15691,$vararg_buffer1)|0);
  }
  (_lua_pushstring($0,$2)|0);
  _lua_callk($0,1,2,0,0);
  $11 = (_lua_type($0,-2)|0);
  $12 = ($11|0)==(6);
  if ($12) {
   break;
  }
  $13 = (_lua_isstring($0,-2)|0);
  $14 = ($13|0)==(0);
  if ($14) {
   _lua_settop($0,-3);
  } else {
   _lua_settop($0,-2);
   _luaL_addvalue($1);
  }
  $15 = (($$0$i) + 1)|0;
  $$0$i = $15;
 }
 (_lua_pushstring($0,$2)|0);
 _lua_rotate($0,-2,1);
 _lua_callk($0,2,1,0,0);
 $16 = (_lua_type($0,-1)|0);
 $17 = ($16|0)==(0);
 if (!($17)) {
  _lua_setfield($0,2,$2);
 }
 $18 = (_lua_getfield($0,2,$2)|0);
 $19 = ($18|0)==(0);
 if (!($19)) {
  STACKTOP = sp;return 1;
 }
 _lua_pushboolean($0,1);
 _lua_pushvalue($0,-1);
 _lua_setfield($0,2,$2);
 STACKTOP = sp;return 1;
}
function _searchpath($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$i = 0, $$013$i = 0, $$013$i$be = 0, $$022 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4128|0;
 $vararg_buffer = sp;
 $5 = sp + 8|0;
 _luaL_buffinit($0,$5);
 $6 = load1($3);
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $$022 = $1;
 } else {
  $8 = (_luaL_gsub($0,$1,$3,$4)|0);
  $$022 = $8;
 }
 $$013$i = $2;
 L4: while(1) {
  $9 = load1($$013$i);
  switch ($9<<24>>24) {
  case 0:  {
   label = 13;
   break L4;
   break;
  }
  case 59:  {
   $10 = ((($$013$i)) + 1|0);
   $$013$i$be = $10;
   break;
  }
  default: {
   $11 = (_strchr($$013$i,59)|0);
   $12 = ($11|0)==(0|0);
   if ($12) {
    $13 = (_strlen($$013$i)|0);
    $14 = (($$013$i) + ($13)|0);
    $$0$i = $14;
   } else {
    $$0$i = $11;
   }
   $15 = $$0$i;
   $16 = $$013$i;
   $17 = (($15) - ($16))|0;
   (_lua_pushlstring($0,$$013$i,$17)|0);
   $18 = ($$0$i|0)==(0|0);
   if ($18) {
    label = 13;
    break L4;
   }
   $19 = (_lua_tolstring($0,-1,0)|0);
   $20 = (_luaL_gsub($0,$19,15925,$$022)|0);
   _lua_rotate($0,-2,-1);
   _lua_settop($0,-2);
   $21 = (_fopen($20,15927)|0);
   $22 = ($21|0)==(0|0);
   if (!($22)) {
    label = 11;
    break L4;
   }
   store4($vararg_buffer,$20);
   (_lua_pushfstring($0,15929,$vararg_buffer)|0);
   _lua_rotate($0,-2,-1);
   _lua_settop($0,-2);
   _luaL_addvalue($5);
   $$013$i$be = $$0$i;
  }
  }
  $$013$i = $$013$i$be;
 }
 if ((label|0) == 11) {
  (_fclose($21)|0);
  $$2 = $20;
  STACKTOP = sp;return ($$2|0);
 }
 else if ((label|0) == 13) {
  _luaL_pushresult($5);
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 return (0)|0;
}
function _loadfunc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1 = 0, $$129 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = (_luaL_gsub($0,$2,16069,15853)|0);
 $4 = (_strchr($3,45)|0);
 $5 = ($4|0)==(0|0);
 if ($5) {
  $$129 = $3;
 } else {
  $6 = $4;
  $7 = $3;
  $8 = (($6) - ($7))|0;
  $9 = (_lua_pushlstring($0,$3,$8)|0);
  store4($vararg_buffer,$9);
  $10 = (_lua_pushfstring($0,15855,$vararg_buffer)|0);
  $11 = (_lookforfunc($0,$1,$10)|0);
  $12 = ($11|0)==(2);
  $13 = ((($4)) + 1|0);
  if ($12) {
   $$129 = $13;
  } else {
   $$1 = $11;
   STACKTOP = sp;return ($$1|0);
  }
 }
 store4($vararg_buffer1,$$129);
 $14 = (_lua_pushfstring($0,15855,$vararg_buffer1)|0);
 $15 = (_lookforfunc($0,$1,$14)|0);
 $$1 = $15;
 STACKTOP = sp;return ($$1|0);
}
function _lookforfunc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (_lua_rawgetp($0,-1001000,18404)|0);
 (_lua_getfield($0,-1,$1)|0);
 $3 = (_lua_touserdata($0,-1)|0);
 _lua_settop($0,-3);
 $4 = ($3|0)==(0|0);
 if ($4) {
  (_lua_pushstring($0,15866)|0);
  $$1 = 1;
  return ($$1|0);
 }
 $5 = load1($2);
 $6 = ($5<<24>>24)==(42);
 if ($6) {
  _lua_pushboolean($0,1);
  $$1 = 0;
  return ($$1|0);
 } else {
  (_lua_pushstring($0,15866)|0);
  $$1 = 2;
  return ($$1|0);
 }
 return (0)|0;
}
function _ll_loadlib($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_luaL_checklstring($0,1,0)|0);
 $2 = (_luaL_checklstring($0,2,0)|0);
 $3 = (_lookforfunc($0,$1,$2)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  $$0 = 1;
  return ($$0|0);
 }
 $5 = ($3|0)==(1);
 $6 = $5 ? 15996 : 16003;
 _lua_pushnil($0);
 _lua_rotate($0,-2,1);
 (_lua_pushstring($0,$6)|0);
 $$0 = 3;
 return ($$0|0);
}
function _ll_searchpath($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_luaL_checklstring($0,1,0)|0);
 $2 = (_luaL_checklstring($0,2,0)|0);
 $3 = (_luaL_optlstring($0,3,16069,0)|0);
 $4 = (_luaL_optlstring($0,4,15775,0)|0);
 $5 = (_searchpath($0,$1,$2,$3,$4)|0);
 $6 = ($5|0)==(0|0);
 if (!($6)) {
  $$0 = 1;
  return ($$0|0);
 }
 _lua_pushnil($0);
 _lua_rotate($0,-2,1);
 $$0 = 2;
 return ($$0|0);
}
function _malloc($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i20$i = 0, $$0169$i = 0, $$0170$i = 0, $$0171$i = 0, $$0192 = 0, $$0194 = 0, $$02014$i$i = 0, $$0202$lcssa$i$i = 0, $$02023$i$i = 0, $$0206$i$i = 0, $$0207$i$i = 0, $$024372$i = 0, $$0259$i$i = 0, $$02604$i$i = 0, $$0261$lcssa$i$i = 0, $$02613$i$i = 0;
 var $$0267$i$i = 0, $$0268$i$i = 0, $$0318$i = 0, $$032012$i = 0, $$0321$lcssa$i = 0, $$032111$i = 0, $$0323$i = 0, $$0329$i = 0, $$0335$i = 0, $$0336$i = 0, $$0338$i = 0, $$0339$i = 0, $$0344$i = 0, $$1174$i = 0, $$1174$i$be = 0, $$1174$i$ph = 0, $$1176$i = 0, $$1176$i$be = 0, $$1176$i$ph = 0, $$124471$i = 0;
 var $$1263$i$i = 0, $$1263$i$i$be = 0, $$1263$i$i$ph = 0, $$1265$i$i = 0, $$1265$i$i$be = 0, $$1265$i$i$ph = 0, $$1319$i = 0, $$1324$i = 0, $$1340$i = 0, $$1346$i = 0, $$1346$i$be = 0, $$1346$i$ph = 0, $$1350$i = 0, $$1350$i$be = 0, $$1350$i$ph = 0, $$2234243136$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2331$i = 0, $$3$i = 0;
 var $$3$i$i = 0, $$3$i198 = 0, $$3$i198211 = 0, $$3326$i = 0, $$3348$i = 0, $$4$lcssa$i = 0, $$415$i = 0, $$415$i$ph = 0, $$4236$i = 0, $$4327$lcssa$i = 0, $$432714$i = 0, $$432714$i$ph = 0, $$4333$i = 0, $$533413$i = 0, $$533413$i$ph = 0, $$723947$i = 0, $$748$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0;
 var $$pre$i16$i = 0, $$pre$i195 = 0, $$pre$i204 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i17$iZ2D = 0, $$pre$phi$i205Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink320 = 0, $$sink321 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0;
 var $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0;
 var $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0;
 var $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0;
 var $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0;
 var $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0;
 var $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0;
 var $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0;
 var $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0;
 var $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0;
 var $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0;
 var $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0;
 var $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0;
 var $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0;
 var $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0;
 var $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0;
 var $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0;
 var $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0;
 var $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0;
 var $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0;
 var $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0;
 var $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0;
 var $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0;
 var $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0;
 var $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0;
 var $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0;
 var $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0;
 var $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0;
 var $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0;
 var $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0;
 var $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0;
 var $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0;
 var $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0;
 var $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0;
 var $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0;
 var $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0;
 var $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0;
 var $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0;
 var $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0;
 var $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $99 = 0, $cond$i = 0, $cond$i$i = 0, $cond$i203 = 0, $not$$i = 0, $or$cond$i = 0, $or$cond$i199 = 0, $or$cond1$i = 0, $or$cond1$i197 = 0, $or$cond11$i = 0, $or$cond2$i = 0;
 var $or$cond5$i = 0, $or$cond50$i = 0, $or$cond51$i = 0, $or$cond6$i = 0, $or$cond7$i = 0, $or$cond8$i = 0, $or$cond8$not$i = 0, $spec$select$i = 0, $spec$select$i201 = 0, $spec$select1$i = 0, $spec$select2$i = 0, $spec$select4$i = 0, $spec$select49$i = 0, $spec$select9$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = ($0>>>0)<(245);
 do {
  if ($2) {
   $3 = ($0>>>0)<(11);
   $4 = (($0) + 11)|0;
   $5 = $4 & -8;
   $6 = $3 ? 16 : $5;
   $7 = $6 >>> 3;
   $8 = load4(18408);
   $9 = $8 >>> $7;
   $10 = $9 & 3;
   $11 = ($10|0)==(0);
   if (!($11)) {
    $12 = $9 & 1;
    $13 = $12 ^ 1;
    $14 = (($13) + ($7))|0;
    $15 = $14 << 1;
    $16 = (18448 + ($15<<2)|0);
    $17 = ((($16)) + 8|0);
    $18 = load4($17);
    $19 = ((($18)) + 8|0);
    $20 = load4($19);
    $21 = ($20|0)==($16|0);
    if ($21) {
     $22 = 1 << $14;
     $23 = $22 ^ -1;
     $24 = $8 & $23;
     store4(18408,$24);
    } else {
     $25 = ((($20)) + 12|0);
     store4($25,$16);
     store4($17,$20);
    }
    $26 = $14 << 3;
    $27 = $26 | 3;
    $28 = ((($18)) + 4|0);
    store4($28,$27);
    $29 = (($18) + ($26)|0);
    $30 = ((($29)) + 4|0);
    $31 = load4($30);
    $32 = $31 | 1;
    store4($30,$32);
    $$0 = $19;
    STACKTOP = sp;return ($$0|0);
   }
   $33 = load4((18416));
   $34 = ($6>>>0)>($33>>>0);
   if ($34) {
    $35 = ($9|0)==(0);
    if (!($35)) {
     $36 = $9 << $7;
     $37 = 2 << $7;
     $38 = (0 - ($37))|0;
     $39 = $37 | $38;
     $40 = $36 & $39;
     $41 = (0 - ($40))|0;
     $42 = $40 & $41;
     $43 = (($42) + -1)|0;
     $44 = $43 >>> 12;
     $45 = $44 & 16;
     $46 = $43 >>> $45;
     $47 = $46 >>> 5;
     $48 = $47 & 8;
     $49 = $48 | $45;
     $50 = $46 >>> $48;
     $51 = $50 >>> 2;
     $52 = $51 & 4;
     $53 = $49 | $52;
     $54 = $50 >>> $52;
     $55 = $54 >>> 1;
     $56 = $55 & 2;
     $57 = $53 | $56;
     $58 = $54 >>> $56;
     $59 = $58 >>> 1;
     $60 = $59 & 1;
     $61 = $57 | $60;
     $62 = $58 >>> $60;
     $63 = (($61) + ($62))|0;
     $64 = $63 << 1;
     $65 = (18448 + ($64<<2)|0);
     $66 = ((($65)) + 8|0);
     $67 = load4($66);
     $68 = ((($67)) + 8|0);
     $69 = load4($68);
     $70 = ($69|0)==($65|0);
     if ($70) {
      $71 = 1 << $63;
      $72 = $71 ^ -1;
      $73 = $8 & $72;
      store4(18408,$73);
      $90 = $73;
     } else {
      $74 = ((($69)) + 12|0);
      store4($74,$65);
      store4($66,$69);
      $90 = $8;
     }
     $75 = $63 << 3;
     $76 = (($75) - ($6))|0;
     $77 = $6 | 3;
     $78 = ((($67)) + 4|0);
     store4($78,$77);
     $79 = (($67) + ($6)|0);
     $80 = $76 | 1;
     $81 = ((($79)) + 4|0);
     store4($81,$80);
     $82 = (($67) + ($75)|0);
     store4($82,$76);
     $83 = ($33|0)==(0);
     if (!($83)) {
      $84 = load4((18428));
      $85 = $33 >>> 3;
      $86 = $85 << 1;
      $87 = (18448 + ($86<<2)|0);
      $88 = 1 << $85;
      $89 = $90 & $88;
      $91 = ($89|0)==(0);
      if ($91) {
       $92 = $90 | $88;
       store4(18408,$92);
       $$pre = ((($87)) + 8|0);
       $$0194 = $87;$$pre$phiZ2D = $$pre;
      } else {
       $93 = ((($87)) + 8|0);
       $94 = load4($93);
       $$0194 = $94;$$pre$phiZ2D = $93;
      }
      store4($$pre$phiZ2D,$84);
      $95 = ((($$0194)) + 12|0);
      store4($95,$84);
      $96 = ((($84)) + 8|0);
      store4($96,$$0194);
      $97 = ((($84)) + 12|0);
      store4($97,$87);
     }
     store4((18416),$76);
     store4((18428),$79);
     $$0 = $68;
     STACKTOP = sp;return ($$0|0);
    }
    $98 = load4((18412));
    $99 = ($98|0)==(0);
    if ($99) {
     $$0192 = $6;
    } else {
     $100 = (0 - ($98))|0;
     $101 = $98 & $100;
     $102 = (($101) + -1)|0;
     $103 = $102 >>> 12;
     $104 = $103 & 16;
     $105 = $102 >>> $104;
     $106 = $105 >>> 5;
     $107 = $106 & 8;
     $108 = $107 | $104;
     $109 = $105 >>> $107;
     $110 = $109 >>> 2;
     $111 = $110 & 4;
     $112 = $108 | $111;
     $113 = $109 >>> $111;
     $114 = $113 >>> 1;
     $115 = $114 & 2;
     $116 = $112 | $115;
     $117 = $113 >>> $115;
     $118 = $117 >>> 1;
     $119 = $118 & 1;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = (($120) + ($121))|0;
     $123 = (18712 + ($122<<2)|0);
     $124 = load4($123);
     $125 = ((($124)) + 4|0);
     $126 = load4($125);
     $127 = $126 & -8;
     $128 = (($127) - ($6))|0;
     $$0169$i = $124;$$0170$i = $124;$$0171$i = $128;
     while(1) {
      $129 = ((($$0169$i)) + 16|0);
      $130 = load4($129);
      $131 = ($130|0)==(0|0);
      if ($131) {
       $132 = ((($$0169$i)) + 20|0);
       $133 = load4($132);
       $134 = ($133|0)==(0|0);
       if ($134) {
        break;
       } else {
        $136 = $133;
       }
      } else {
       $136 = $130;
      }
      $135 = ((($136)) + 4|0);
      $137 = load4($135);
      $138 = $137 & -8;
      $139 = (($138) - ($6))|0;
      $140 = ($139>>>0)<($$0171$i>>>0);
      $spec$select$i = $140 ? $139 : $$0171$i;
      $spec$select1$i = $140 ? $136 : $$0170$i;
      $$0169$i = $136;$$0170$i = $spec$select1$i;$$0171$i = $spec$select$i;
     }
     $141 = (($$0170$i) + ($6)|0);
     $142 = ($141>>>0)>($$0170$i>>>0);
     if ($142) {
      $143 = ((($$0170$i)) + 24|0);
      $144 = load4($143);
      $145 = ((($$0170$i)) + 12|0);
      $146 = load4($145);
      $147 = ($146|0)==($$0170$i|0);
      do {
       if ($147) {
        $152 = ((($$0170$i)) + 20|0);
        $153 = load4($152);
        $154 = ($153|0)==(0|0);
        if ($154) {
         $155 = ((($$0170$i)) + 16|0);
         $156 = load4($155);
         $157 = ($156|0)==(0|0);
         if ($157) {
          $$3$i = 0;
          break;
         } else {
          $$1174$i$ph = $156;$$1176$i$ph = $155;
         }
        } else {
         $$1174$i$ph = $153;$$1176$i$ph = $152;
        }
        $$1174$i = $$1174$i$ph;$$1176$i = $$1176$i$ph;
        while(1) {
         $158 = ((($$1174$i)) + 20|0);
         $159 = load4($158);
         $160 = ($159|0)==(0|0);
         if ($160) {
          $161 = ((($$1174$i)) + 16|0);
          $162 = load4($161);
          $163 = ($162|0)==(0|0);
          if ($163) {
           break;
          } else {
           $$1174$i$be = $162;$$1176$i$be = $161;
          }
         } else {
          $$1174$i$be = $159;$$1176$i$be = $158;
         }
         $$1174$i = $$1174$i$be;$$1176$i = $$1176$i$be;
        }
        store4($$1176$i,0);
        $$3$i = $$1174$i;
       } else {
        $148 = ((($$0170$i)) + 8|0);
        $149 = load4($148);
        $150 = ((($149)) + 12|0);
        store4($150,$146);
        $151 = ((($146)) + 8|0);
        store4($151,$149);
        $$3$i = $146;
       }
      } while(0);
      $164 = ($144|0)==(0|0);
      do {
       if (!($164)) {
        $165 = ((($$0170$i)) + 28|0);
        $166 = load4($165);
        $167 = (18712 + ($166<<2)|0);
        $168 = load4($167);
        $169 = ($$0170$i|0)==($168|0);
        if ($169) {
         store4($167,$$3$i);
         $cond$i = ($$3$i|0)==(0|0);
         if ($cond$i) {
          $170 = 1 << $166;
          $171 = $170 ^ -1;
          $172 = $98 & $171;
          store4((18412),$172);
          break;
         }
        } else {
         $173 = ((($144)) + 16|0);
         $174 = load4($173);
         $175 = ($174|0)==($$0170$i|0);
         $176 = ((($144)) + 20|0);
         $$sink = $175 ? $173 : $176;
         store4($$sink,$$3$i);
         $177 = ($$3$i|0)==(0|0);
         if ($177) {
          break;
         }
        }
        $178 = ((($$3$i)) + 24|0);
        store4($178,$144);
        $179 = ((($$0170$i)) + 16|0);
        $180 = load4($179);
        $181 = ($180|0)==(0|0);
        if (!($181)) {
         $182 = ((($$3$i)) + 16|0);
         store4($182,$180);
         $183 = ((($180)) + 24|0);
         store4($183,$$3$i);
        }
        $184 = ((($$0170$i)) + 20|0);
        $185 = load4($184);
        $186 = ($185|0)==(0|0);
        if (!($186)) {
         $187 = ((($$3$i)) + 20|0);
         store4($187,$185);
         $188 = ((($185)) + 24|0);
         store4($188,$$3$i);
        }
       }
      } while(0);
      $189 = ($$0171$i>>>0)<(16);
      if ($189) {
       $190 = (($$0171$i) + ($6))|0;
       $191 = $190 | 3;
       $192 = ((($$0170$i)) + 4|0);
       store4($192,$191);
       $193 = (($$0170$i) + ($190)|0);
       $194 = ((($193)) + 4|0);
       $195 = load4($194);
       $196 = $195 | 1;
       store4($194,$196);
      } else {
       $197 = $6 | 3;
       $198 = ((($$0170$i)) + 4|0);
       store4($198,$197);
       $199 = $$0171$i | 1;
       $200 = ((($141)) + 4|0);
       store4($200,$199);
       $201 = (($141) + ($$0171$i)|0);
       store4($201,$$0171$i);
       $202 = ($33|0)==(0);
       if (!($202)) {
        $203 = load4((18428));
        $204 = $33 >>> 3;
        $205 = $204 << 1;
        $206 = (18448 + ($205<<2)|0);
        $207 = 1 << $204;
        $208 = $207 & $8;
        $209 = ($208|0)==(0);
        if ($209) {
         $210 = $207 | $8;
         store4(18408,$210);
         $$pre$i = ((($206)) + 8|0);
         $$0$i = $206;$$pre$phi$iZ2D = $$pre$i;
        } else {
         $211 = ((($206)) + 8|0);
         $212 = load4($211);
         $$0$i = $212;$$pre$phi$iZ2D = $211;
        }
        store4($$pre$phi$iZ2D,$203);
        $213 = ((($$0$i)) + 12|0);
        store4($213,$203);
        $214 = ((($203)) + 8|0);
        store4($214,$$0$i);
        $215 = ((($203)) + 12|0);
        store4($215,$206);
       }
       store4((18416),$$0171$i);
       store4((18428),$141);
      }
      $216 = ((($$0170$i)) + 8|0);
      $$0 = $216;
      STACKTOP = sp;return ($$0|0);
     } else {
      $$0192 = $6;
     }
    }
   } else {
    $$0192 = $6;
   }
  } else {
   $217 = ($0>>>0)>(4294967231);
   if ($217) {
    $$0192 = -1;
   } else {
    $218 = (($0) + 11)|0;
    $219 = $218 & -8;
    $220 = load4((18412));
    $221 = ($220|0)==(0);
    if ($221) {
     $$0192 = $219;
    } else {
     $222 = (0 - ($219))|0;
     $223 = $218 >>> 8;
     $224 = ($223|0)==(0);
     if ($224) {
      $$0335$i = 0;
     } else {
      $225 = ($219>>>0)>(16777215);
      if ($225) {
       $$0335$i = 31;
      } else {
       $226 = (($223) + 1048320)|0;
       $227 = $226 >>> 16;
       $228 = $227 & 8;
       $229 = $223 << $228;
       $230 = (($229) + 520192)|0;
       $231 = $230 >>> 16;
       $232 = $231 & 4;
       $233 = $232 | $228;
       $234 = $229 << $232;
       $235 = (($234) + 245760)|0;
       $236 = $235 >>> 16;
       $237 = $236 & 2;
       $238 = $233 | $237;
       $239 = (14 - ($238))|0;
       $240 = $234 << $237;
       $241 = $240 >>> 15;
       $242 = (($239) + ($241))|0;
       $243 = $242 << 1;
       $244 = (($242) + 7)|0;
       $245 = $219 >>> $244;
       $246 = $245 & 1;
       $247 = $246 | $243;
       $$0335$i = $247;
      }
     }
     $248 = (18712 + ($$0335$i<<2)|0);
     $249 = load4($248);
     $250 = ($249|0)==(0|0);
     L79: do {
      if ($250) {
       $$2331$i = 0;$$3$i198 = 0;$$3326$i = $222;
       label = 61;
      } else {
       $251 = ($$0335$i|0)==(31);
       $252 = $$0335$i >>> 1;
       $253 = (25 - ($252))|0;
       $254 = $251 ? 0 : $253;
       $255 = $219 << $254;
       $$0318$i = 0;$$0323$i = $222;$$0329$i = $249;$$0336$i = $255;$$0339$i = 0;
       while(1) {
        $256 = ((($$0329$i)) + 4|0);
        $257 = load4($256);
        $258 = $257 & -8;
        $259 = (($258) - ($219))|0;
        $260 = ($259>>>0)<($$0323$i>>>0);
        if ($260) {
         $261 = ($259|0)==(0);
         if ($261) {
          $$415$i$ph = $$0329$i;$$432714$i$ph = 0;$$533413$i$ph = $$0329$i;
          label = 65;
          break L79;
         } else {
          $$1319$i = $$0329$i;$$1324$i = $259;
         }
        } else {
         $$1319$i = $$0318$i;$$1324$i = $$0323$i;
        }
        $262 = ((($$0329$i)) + 20|0);
        $263 = load4($262);
        $264 = $$0336$i >>> 31;
        $265 = (((($$0329$i)) + 16|0) + ($264<<2)|0);
        $266 = load4($265);
        $267 = ($263|0)==(0|0);
        $268 = ($263|0)==($266|0);
        $or$cond1$i197 = $267 | $268;
        $$1340$i = $or$cond1$i197 ? $$0339$i : $263;
        $269 = ($266|0)==(0|0);
        $spec$select4$i = $$0336$i << 1;
        if ($269) {
         $$2331$i = $$1340$i;$$3$i198 = $$1319$i;$$3326$i = $$1324$i;
         label = 61;
         break;
        } else {
         $$0318$i = $$1319$i;$$0323$i = $$1324$i;$$0329$i = $266;$$0336$i = $spec$select4$i;$$0339$i = $$1340$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 61) {
      $270 = ($$2331$i|0)==(0|0);
      $271 = ($$3$i198|0)==(0|0);
      $or$cond$i199 = $270 & $271;
      if ($or$cond$i199) {
       $272 = 2 << $$0335$i;
       $273 = (0 - ($272))|0;
       $274 = $272 | $273;
       $275 = $274 & $220;
       $276 = ($275|0)==(0);
       if ($276) {
        $$0192 = $219;
        break;
       }
       $277 = (0 - ($275))|0;
       $278 = $275 & $277;
       $279 = (($278) + -1)|0;
       $280 = $279 >>> 12;
       $281 = $280 & 16;
       $282 = $279 >>> $281;
       $283 = $282 >>> 5;
       $284 = $283 & 8;
       $285 = $284 | $281;
       $286 = $282 >>> $284;
       $287 = $286 >>> 2;
       $288 = $287 & 4;
       $289 = $285 | $288;
       $290 = $286 >>> $288;
       $291 = $290 >>> 1;
       $292 = $291 & 2;
       $293 = $289 | $292;
       $294 = $290 >>> $292;
       $295 = $294 >>> 1;
       $296 = $295 & 1;
       $297 = $293 | $296;
       $298 = $294 >>> $296;
       $299 = (($297) + ($298))|0;
       $300 = (18712 + ($299<<2)|0);
       $301 = load4($300);
       $$3$i198211 = 0;$$4333$i = $301;
      } else {
       $$3$i198211 = $$3$i198;$$4333$i = $$2331$i;
      }
      $302 = ($$4333$i|0)==(0|0);
      if ($302) {
       $$4$lcssa$i = $$3$i198211;$$4327$lcssa$i = $$3326$i;
      } else {
       $$415$i$ph = $$3$i198211;$$432714$i$ph = $$3326$i;$$533413$i$ph = $$4333$i;
       label = 65;
      }
     }
     if ((label|0) == 65) {
      $$415$i = $$415$i$ph;$$432714$i = $$432714$i$ph;$$533413$i = $$533413$i$ph;
      while(1) {
       $303 = ((($$533413$i)) + 4|0);
       $304 = load4($303);
       $305 = $304 & -8;
       $306 = (($305) - ($219))|0;
       $307 = ($306>>>0)<($$432714$i>>>0);
       $spec$select$i201 = $307 ? $306 : $$432714$i;
       $spec$select2$i = $307 ? $$533413$i : $$415$i;
       $308 = ((($$533413$i)) + 16|0);
       $309 = load4($308);
       $310 = ($309|0)==(0|0);
       if ($310) {
        $311 = ((($$533413$i)) + 20|0);
        $312 = load4($311);
        $313 = $312;
       } else {
        $313 = $309;
       }
       $314 = ($313|0)==(0|0);
       if ($314) {
        $$4$lcssa$i = $spec$select2$i;$$4327$lcssa$i = $spec$select$i201;
        break;
       } else {
        $$415$i = $spec$select2$i;$$432714$i = $spec$select$i201;$$533413$i = $313;
       }
      }
     }
     $315 = ($$4$lcssa$i|0)==(0|0);
     if ($315) {
      $$0192 = $219;
     } else {
      $316 = load4((18416));
      $317 = (($316) - ($219))|0;
      $318 = ($$4327$lcssa$i>>>0)<($317>>>0);
      if ($318) {
       $319 = (($$4$lcssa$i) + ($219)|0);
       $320 = ($319>>>0)>($$4$lcssa$i>>>0);
       if ($320) {
        $321 = ((($$4$lcssa$i)) + 24|0);
        $322 = load4($321);
        $323 = ((($$4$lcssa$i)) + 12|0);
        $324 = load4($323);
        $325 = ($324|0)==($$4$lcssa$i|0);
        do {
         if ($325) {
          $330 = ((($$4$lcssa$i)) + 20|0);
          $331 = load4($330);
          $332 = ($331|0)==(0|0);
          if ($332) {
           $333 = ((($$4$lcssa$i)) + 16|0);
           $334 = load4($333);
           $335 = ($334|0)==(0|0);
           if ($335) {
            $$3348$i = 0;
            break;
           } else {
            $$1346$i$ph = $334;$$1350$i$ph = $333;
           }
          } else {
           $$1346$i$ph = $331;$$1350$i$ph = $330;
          }
          $$1346$i = $$1346$i$ph;$$1350$i = $$1350$i$ph;
          while(1) {
           $336 = ((($$1346$i)) + 20|0);
           $337 = load4($336);
           $338 = ($337|0)==(0|0);
           if ($338) {
            $339 = ((($$1346$i)) + 16|0);
            $340 = load4($339);
            $341 = ($340|0)==(0|0);
            if ($341) {
             break;
            } else {
             $$1346$i$be = $340;$$1350$i$be = $339;
            }
           } else {
            $$1346$i$be = $337;$$1350$i$be = $336;
           }
           $$1346$i = $$1346$i$be;$$1350$i = $$1350$i$be;
          }
          store4($$1350$i,0);
          $$3348$i = $$1346$i;
         } else {
          $326 = ((($$4$lcssa$i)) + 8|0);
          $327 = load4($326);
          $328 = ((($327)) + 12|0);
          store4($328,$324);
          $329 = ((($324)) + 8|0);
          store4($329,$327);
          $$3348$i = $324;
         }
        } while(0);
        $342 = ($322|0)==(0|0);
        do {
         if ($342) {
          $425 = $220;
         } else {
          $343 = ((($$4$lcssa$i)) + 28|0);
          $344 = load4($343);
          $345 = (18712 + ($344<<2)|0);
          $346 = load4($345);
          $347 = ($$4$lcssa$i|0)==($346|0);
          if ($347) {
           store4($345,$$3348$i);
           $cond$i203 = ($$3348$i|0)==(0|0);
           if ($cond$i203) {
            $348 = 1 << $344;
            $349 = $348 ^ -1;
            $350 = $220 & $349;
            store4((18412),$350);
            $425 = $350;
            break;
           }
          } else {
           $351 = ((($322)) + 16|0);
           $352 = load4($351);
           $353 = ($352|0)==($$4$lcssa$i|0);
           $354 = ((($322)) + 20|0);
           $$sink320 = $353 ? $351 : $354;
           store4($$sink320,$$3348$i);
           $355 = ($$3348$i|0)==(0|0);
           if ($355) {
            $425 = $220;
            break;
           }
          }
          $356 = ((($$3348$i)) + 24|0);
          store4($356,$322);
          $357 = ((($$4$lcssa$i)) + 16|0);
          $358 = load4($357);
          $359 = ($358|0)==(0|0);
          if (!($359)) {
           $360 = ((($$3348$i)) + 16|0);
           store4($360,$358);
           $361 = ((($358)) + 24|0);
           store4($361,$$3348$i);
          }
          $362 = ((($$4$lcssa$i)) + 20|0);
          $363 = load4($362);
          $364 = ($363|0)==(0|0);
          if ($364) {
           $425 = $220;
          } else {
           $365 = ((($$3348$i)) + 20|0);
           store4($365,$363);
           $366 = ((($363)) + 24|0);
           store4($366,$$3348$i);
           $425 = $220;
          }
         }
        } while(0);
        $367 = ($$4327$lcssa$i>>>0)<(16);
        L128: do {
         if ($367) {
          $368 = (($$4327$lcssa$i) + ($219))|0;
          $369 = $368 | 3;
          $370 = ((($$4$lcssa$i)) + 4|0);
          store4($370,$369);
          $371 = (($$4$lcssa$i) + ($368)|0);
          $372 = ((($371)) + 4|0);
          $373 = load4($372);
          $374 = $373 | 1;
          store4($372,$374);
         } else {
          $375 = $219 | 3;
          $376 = ((($$4$lcssa$i)) + 4|0);
          store4($376,$375);
          $377 = $$4327$lcssa$i | 1;
          $378 = ((($319)) + 4|0);
          store4($378,$377);
          $379 = (($319) + ($$4327$lcssa$i)|0);
          store4($379,$$4327$lcssa$i);
          $380 = $$4327$lcssa$i >>> 3;
          $381 = ($$4327$lcssa$i>>>0)<(256);
          if ($381) {
           $382 = $380 << 1;
           $383 = (18448 + ($382<<2)|0);
           $384 = load4(18408);
           $385 = 1 << $380;
           $386 = $384 & $385;
           $387 = ($386|0)==(0);
           if ($387) {
            $388 = $384 | $385;
            store4(18408,$388);
            $$pre$i204 = ((($383)) + 8|0);
            $$0344$i = $383;$$pre$phi$i205Z2D = $$pre$i204;
           } else {
            $389 = ((($383)) + 8|0);
            $390 = load4($389);
            $$0344$i = $390;$$pre$phi$i205Z2D = $389;
           }
           store4($$pre$phi$i205Z2D,$319);
           $391 = ((($$0344$i)) + 12|0);
           store4($391,$319);
           $392 = ((($319)) + 8|0);
           store4($392,$$0344$i);
           $393 = ((($319)) + 12|0);
           store4($393,$383);
           break;
          }
          $394 = $$4327$lcssa$i >>> 8;
          $395 = ($394|0)==(0);
          if ($395) {
           $$0338$i = 0;
          } else {
           $396 = ($$4327$lcssa$i>>>0)>(16777215);
           if ($396) {
            $$0338$i = 31;
           } else {
            $397 = (($394) + 1048320)|0;
            $398 = $397 >>> 16;
            $399 = $398 & 8;
            $400 = $394 << $399;
            $401 = (($400) + 520192)|0;
            $402 = $401 >>> 16;
            $403 = $402 & 4;
            $404 = $403 | $399;
            $405 = $400 << $403;
            $406 = (($405) + 245760)|0;
            $407 = $406 >>> 16;
            $408 = $407 & 2;
            $409 = $404 | $408;
            $410 = (14 - ($409))|0;
            $411 = $405 << $408;
            $412 = $411 >>> 15;
            $413 = (($410) + ($412))|0;
            $414 = $413 << 1;
            $415 = (($413) + 7)|0;
            $416 = $$4327$lcssa$i >>> $415;
            $417 = $416 & 1;
            $418 = $417 | $414;
            $$0338$i = $418;
           }
          }
          $419 = (18712 + ($$0338$i<<2)|0);
          $420 = ((($319)) + 28|0);
          store4($420,$$0338$i);
          $421 = ((($319)) + 16|0);
          $422 = ((($421)) + 4|0);
          store4($422,0);
          store4($421,0);
          $423 = 1 << $$0338$i;
          $424 = $425 & $423;
          $426 = ($424|0)==(0);
          if ($426) {
           $427 = $425 | $423;
           store4((18412),$427);
           store4($419,$319);
           $428 = ((($319)) + 24|0);
           store4($428,$419);
           $429 = ((($319)) + 12|0);
           store4($429,$319);
           $430 = ((($319)) + 8|0);
           store4($430,$319);
           break;
          }
          $431 = load4($419);
          $432 = ((($431)) + 4|0);
          $433 = load4($432);
          $434 = $433 & -8;
          $435 = ($434|0)==($$4327$lcssa$i|0);
          L145: do {
           if ($435) {
            $$0321$lcssa$i = $431;
           } else {
            $436 = ($$0338$i|0)==(31);
            $437 = $$0338$i >>> 1;
            $438 = (25 - ($437))|0;
            $439 = $436 ? 0 : $438;
            $440 = $$4327$lcssa$i << $439;
            $$032012$i = $440;$$032111$i = $431;
            while(1) {
             $447 = $$032012$i >>> 31;
             $448 = (((($$032111$i)) + 16|0) + ($447<<2)|0);
             $443 = load4($448);
             $449 = ($443|0)==(0|0);
             if ($449) {
              break;
             }
             $441 = $$032012$i << 1;
             $442 = ((($443)) + 4|0);
             $444 = load4($442);
             $445 = $444 & -8;
             $446 = ($445|0)==($$4327$lcssa$i|0);
             if ($446) {
              $$0321$lcssa$i = $443;
              break L145;
             } else {
              $$032012$i = $441;$$032111$i = $443;
             }
            }
            store4($448,$319);
            $450 = ((($319)) + 24|0);
            store4($450,$$032111$i);
            $451 = ((($319)) + 12|0);
            store4($451,$319);
            $452 = ((($319)) + 8|0);
            store4($452,$319);
            break L128;
           }
          } while(0);
          $453 = ((($$0321$lcssa$i)) + 8|0);
          $454 = load4($453);
          $455 = ((($454)) + 12|0);
          store4($455,$319);
          store4($453,$319);
          $456 = ((($319)) + 8|0);
          store4($456,$454);
          $457 = ((($319)) + 12|0);
          store4($457,$$0321$lcssa$i);
          $458 = ((($319)) + 24|0);
          store4($458,0);
         }
        } while(0);
        $459 = ((($$4$lcssa$i)) + 8|0);
        $$0 = $459;
        STACKTOP = sp;return ($$0|0);
       } else {
        $$0192 = $219;
       }
      } else {
       $$0192 = $219;
      }
     }
    }
   }
  }
 } while(0);
 $460 = load4((18416));
 $461 = ($460>>>0)<($$0192>>>0);
 if (!($461)) {
  $462 = (($460) - ($$0192))|0;
  $463 = load4((18428));
  $464 = ($462>>>0)>(15);
  if ($464) {
   $465 = (($463) + ($$0192)|0);
   store4((18428),$465);
   store4((18416),$462);
   $466 = $462 | 1;
   $467 = ((($465)) + 4|0);
   store4($467,$466);
   $468 = (($463) + ($460)|0);
   store4($468,$462);
   $469 = $$0192 | 3;
   $470 = ((($463)) + 4|0);
   store4($470,$469);
  } else {
   store4((18416),0);
   store4((18428),0);
   $471 = $460 | 3;
   $472 = ((($463)) + 4|0);
   store4($472,$471);
   $473 = (($463) + ($460)|0);
   $474 = ((($473)) + 4|0);
   $475 = load4($474);
   $476 = $475 | 1;
   store4($474,$476);
  }
  $477 = ((($463)) + 8|0);
  $$0 = $477;
  STACKTOP = sp;return ($$0|0);
 }
 $478 = load4((18420));
 $479 = ($478>>>0)>($$0192>>>0);
 if ($479) {
  $480 = (($478) - ($$0192))|0;
  store4((18420),$480);
  $481 = load4((18432));
  $482 = (($481) + ($$0192)|0);
  store4((18432),$482);
  $483 = $480 | 1;
  $484 = ((($482)) + 4|0);
  store4($484,$483);
  $485 = $$0192 | 3;
  $486 = ((($481)) + 4|0);
  store4($486,$485);
  $487 = ((($481)) + 8|0);
  $$0 = $487;
  STACKTOP = sp;return ($$0|0);
 }
 $488 = load4(18880);
 $489 = ($488|0)==(0);
 if ($489) {
  store4((18888),4096);
  store4((18884),4096);
  store4((18892),-1);
  store4((18896),-1);
  store4((18900),0);
  store4((18852),0);
  $490 = $1;
  $491 = $490 & -16;
  $492 = $491 ^ 1431655768;
  store4(18880,$492);
  $496 = 4096;
 } else {
  $$pre$i195 = load4((18888));
  $496 = $$pre$i195;
 }
 $493 = (($$0192) + 48)|0;
 $494 = (($$0192) + 47)|0;
 $495 = (($496) + ($494))|0;
 $497 = (0 - ($496))|0;
 $498 = $495 & $497;
 $499 = ($498>>>0)>($$0192>>>0);
 if (!($499)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $500 = load4((18848));
 $501 = ($500|0)==(0);
 if (!($501)) {
  $502 = load4((18840));
  $503 = (($502) + ($498))|0;
  $504 = ($503>>>0)<=($502>>>0);
  $505 = ($503>>>0)>($500>>>0);
  $or$cond1$i = $504 | $505;
  if ($or$cond1$i) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $506 = load4((18852));
 $507 = $506 & 4;
 $508 = ($507|0)==(0);
 L178: do {
  if ($508) {
   $509 = load4((18432));
   $510 = ($509|0)==(0|0);
   L180: do {
    if ($510) {
     label = 128;
    } else {
     $$0$i20$i = (18856);
     while(1) {
      $511 = load4($$0$i20$i);
      $512 = ($511>>>0)>($509>>>0);
      if (!($512)) {
       $513 = ((($$0$i20$i)) + 4|0);
       $514 = load4($513);
       $515 = (($511) + ($514)|0);
       $516 = ($515>>>0)>($509>>>0);
       if ($516) {
        break;
       }
      }
      $517 = ((($$0$i20$i)) + 8|0);
      $518 = load4($517);
      $519 = ($518|0)==(0|0);
      if ($519) {
       label = 128;
       break L180;
      } else {
       $$0$i20$i = $518;
      }
     }
     $542 = (($495) - ($478))|0;
     $543 = $542 & $497;
     $544 = ($543>>>0)<(2147483647);
     if ($544) {
      $545 = ((($$0$i20$i)) + 4|0);
      $546 = (_sbrk(($543|0))|0);
      $547 = load4($$0$i20$i);
      $548 = load4($545);
      $549 = (($547) + ($548)|0);
      $550 = ($546|0)==($549|0);
      if ($550) {
       $551 = ($546|0)==((-1)|0);
       if ($551) {
        $$2234243136$i = $543;
       } else {
        $$723947$i = $543;$$748$i = $546;
        label = 145;
        break L178;
       }
      } else {
       $$2247$ph$i = $546;$$2253$ph$i = $543;
       label = 136;
      }
     } else {
      $$2234243136$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 128) {
     $520 = (_sbrk(0)|0);
     $521 = ($520|0)==((-1)|0);
     if ($521) {
      $$2234243136$i = 0;
     } else {
      $522 = $520;
      $523 = load4((18884));
      $524 = (($523) + -1)|0;
      $525 = $524 & $522;
      $526 = ($525|0)==(0);
      $527 = (($524) + ($522))|0;
      $528 = (0 - ($523))|0;
      $529 = $527 & $528;
      $530 = (($529) - ($522))|0;
      $531 = $526 ? 0 : $530;
      $spec$select49$i = (($531) + ($498))|0;
      $532 = load4((18840));
      $533 = (($spec$select49$i) + ($532))|0;
      $534 = ($spec$select49$i>>>0)>($$0192>>>0);
      $535 = ($spec$select49$i>>>0)<(2147483647);
      $or$cond$i = $534 & $535;
      if ($or$cond$i) {
       $536 = load4((18848));
       $537 = ($536|0)==(0);
       if (!($537)) {
        $538 = ($533>>>0)<=($532>>>0);
        $539 = ($533>>>0)>($536>>>0);
        $or$cond2$i = $538 | $539;
        if ($or$cond2$i) {
         $$2234243136$i = 0;
         break;
        }
       }
       $540 = (_sbrk(($spec$select49$i|0))|0);
       $541 = ($540|0)==($520|0);
       if ($541) {
        $$723947$i = $spec$select49$i;$$748$i = $520;
        label = 145;
        break L178;
       } else {
        $$2247$ph$i = $540;$$2253$ph$i = $spec$select49$i;
        label = 136;
       }
      } else {
       $$2234243136$i = 0;
      }
     }
    }
   } while(0);
   do {
    if ((label|0) == 136) {
     $552 = (0 - ($$2253$ph$i))|0;
     $553 = ($$2247$ph$i|0)!=((-1)|0);
     $554 = ($$2253$ph$i>>>0)<(2147483647);
     $or$cond7$i = $554 & $553;
     $555 = ($493>>>0)>($$2253$ph$i>>>0);
     $or$cond6$i = $555 & $or$cond7$i;
     if (!($or$cond6$i)) {
      $565 = ($$2247$ph$i|0)==((-1)|0);
      if ($565) {
       $$2234243136$i = 0;
       break;
      } else {
       $$723947$i = $$2253$ph$i;$$748$i = $$2247$ph$i;
       label = 145;
       break L178;
      }
     }
     $556 = load4((18888));
     $557 = (($494) - ($$2253$ph$i))|0;
     $558 = (($557) + ($556))|0;
     $559 = (0 - ($556))|0;
     $560 = $558 & $559;
     $561 = ($560>>>0)<(2147483647);
     if (!($561)) {
      $$723947$i = $$2253$ph$i;$$748$i = $$2247$ph$i;
      label = 145;
      break L178;
     }
     $562 = (_sbrk(($560|0))|0);
     $563 = ($562|0)==((-1)|0);
     if ($563) {
      (_sbrk(($552|0))|0);
      $$2234243136$i = 0;
      break;
     } else {
      $564 = (($560) + ($$2253$ph$i))|0;
      $$723947$i = $564;$$748$i = $$2247$ph$i;
      label = 145;
      break L178;
     }
    }
   } while(0);
   $566 = load4((18852));
   $567 = $566 | 4;
   store4((18852),$567);
   $$4236$i = $$2234243136$i;
   label = 143;
  } else {
   $$4236$i = 0;
   label = 143;
  }
 } while(0);
 if ((label|0) == 143) {
  $568 = ($498>>>0)<(2147483647);
  if ($568) {
   $569 = (_sbrk(($498|0))|0);
   $570 = (_sbrk(0)|0);
   $571 = ($569|0)!=((-1)|0);
   $572 = ($570|0)!=((-1)|0);
   $or$cond5$i = $571 & $572;
   $573 = ($569>>>0)<($570>>>0);
   $or$cond8$i = $573 & $or$cond5$i;
   $574 = $570;
   $575 = $569;
   $576 = (($574) - ($575))|0;
   $577 = (($$0192) + 40)|0;
   $578 = ($576>>>0)>($577>>>0);
   $spec$select9$i = $578 ? $576 : $$4236$i;
   $or$cond8$not$i = $or$cond8$i ^ 1;
   $579 = ($569|0)==((-1)|0);
   $not$$i = $578 ^ 1;
   $580 = $579 | $not$$i;
   $or$cond50$i = $580 | $or$cond8$not$i;
   if (!($or$cond50$i)) {
    $$723947$i = $spec$select9$i;$$748$i = $569;
    label = 145;
   }
  }
 }
 if ((label|0) == 145) {
  $581 = load4((18840));
  $582 = (($581) + ($$723947$i))|0;
  store4((18840),$582);
  $583 = load4((18844));
  $584 = ($582>>>0)>($583>>>0);
  if ($584) {
   store4((18844),$582);
  }
  $585 = load4((18432));
  $586 = ($585|0)==(0|0);
  L215: do {
   if ($586) {
    $587 = load4((18424));
    $588 = ($587|0)==(0|0);
    $589 = ($$748$i>>>0)<($587>>>0);
    $or$cond11$i = $588 | $589;
    if ($or$cond11$i) {
     store4((18424),$$748$i);
    }
    store4((18856),$$748$i);
    store4((18860),$$723947$i);
    store4((18868),0);
    $590 = load4(18880);
    store4((18444),$590);
    store4((18440),-1);
    store4((18460),(18448));
    store4((18456),(18448));
    store4((18468),(18456));
    store4((18464),(18456));
    store4((18476),(18464));
    store4((18472),(18464));
    store4((18484),(18472));
    store4((18480),(18472));
    store4((18492),(18480));
    store4((18488),(18480));
    store4((18500),(18488));
    store4((18496),(18488));
    store4((18508),(18496));
    store4((18504),(18496));
    store4((18516),(18504));
    store4((18512),(18504));
    store4((18524),(18512));
    store4((18520),(18512));
    store4((18532),(18520));
    store4((18528),(18520));
    store4((18540),(18528));
    store4((18536),(18528));
    store4((18548),(18536));
    store4((18544),(18536));
    store4((18556),(18544));
    store4((18552),(18544));
    store4((18564),(18552));
    store4((18560),(18552));
    store4((18572),(18560));
    store4((18568),(18560));
    store4((18580),(18568));
    store4((18576),(18568));
    store4((18588),(18576));
    store4((18584),(18576));
    store4((18596),(18584));
    store4((18592),(18584));
    store4((18604),(18592));
    store4((18600),(18592));
    store4((18612),(18600));
    store4((18608),(18600));
    store4((18620),(18608));
    store4((18616),(18608));
    store4((18628),(18616));
    store4((18624),(18616));
    store4((18636),(18624));
    store4((18632),(18624));
    store4((18644),(18632));
    store4((18640),(18632));
    store4((18652),(18640));
    store4((18648),(18640));
    store4((18660),(18648));
    store4((18656),(18648));
    store4((18668),(18656));
    store4((18664),(18656));
    store4((18676),(18664));
    store4((18672),(18664));
    store4((18684),(18672));
    store4((18680),(18672));
    store4((18692),(18680));
    store4((18688),(18680));
    store4((18700),(18688));
    store4((18696),(18688));
    store4((18708),(18696));
    store4((18704),(18696));
    $591 = (($$723947$i) + -40)|0;
    $592 = ((($$748$i)) + 8|0);
    $593 = $592;
    $594 = $593 & 7;
    $595 = ($594|0)==(0);
    $596 = (0 - ($593))|0;
    $597 = $596 & 7;
    $598 = $595 ? 0 : $597;
    $599 = (($$748$i) + ($598)|0);
    $600 = (($591) - ($598))|0;
    store4((18432),$599);
    store4((18420),$600);
    $601 = $600 | 1;
    $602 = ((($599)) + 4|0);
    store4($602,$601);
    $603 = (($$748$i) + ($591)|0);
    $604 = ((($603)) + 4|0);
    store4($604,40);
    $605 = load4((18896));
    store4((18436),$605);
   } else {
    $$024372$i = (18856);
    while(1) {
     $606 = load4($$024372$i);
     $607 = ((($$024372$i)) + 4|0);
     $608 = load4($607);
     $609 = (($606) + ($608)|0);
     $610 = ($$748$i|0)==($609|0);
     if ($610) {
      label = 154;
      break;
     }
     $611 = ((($$024372$i)) + 8|0);
     $612 = load4($611);
     $613 = ($612|0)==(0|0);
     if ($613) {
      break;
     } else {
      $$024372$i = $612;
     }
    }
    if ((label|0) == 154) {
     $614 = ((($$024372$i)) + 4|0);
     $615 = ((($$024372$i)) + 12|0);
     $616 = load4($615);
     $617 = $616 & 8;
     $618 = ($617|0)==(0);
     if ($618) {
      $619 = ($606>>>0)<=($585>>>0);
      $620 = ($$748$i>>>0)>($585>>>0);
      $or$cond51$i = $620 & $619;
      if ($or$cond51$i) {
       $621 = (($608) + ($$723947$i))|0;
       store4($614,$621);
       $622 = load4((18420));
       $623 = (($622) + ($$723947$i))|0;
       $624 = ((($585)) + 8|0);
       $625 = $624;
       $626 = $625 & 7;
       $627 = ($626|0)==(0);
       $628 = (0 - ($625))|0;
       $629 = $628 & 7;
       $630 = $627 ? 0 : $629;
       $631 = (($585) + ($630)|0);
       $632 = (($623) - ($630))|0;
       store4((18432),$631);
       store4((18420),$632);
       $633 = $632 | 1;
       $634 = ((($631)) + 4|0);
       store4($634,$633);
       $635 = (($585) + ($623)|0);
       $636 = ((($635)) + 4|0);
       store4($636,40);
       $637 = load4((18896));
       store4((18436),$637);
       break;
      }
     }
    }
    $638 = load4((18424));
    $639 = ($$748$i>>>0)<($638>>>0);
    if ($639) {
     store4((18424),$$748$i);
    }
    $640 = (($$748$i) + ($$723947$i)|0);
    $$124471$i = (18856);
    while(1) {
     $641 = load4($$124471$i);
     $642 = ($641|0)==($640|0);
     if ($642) {
      label = 162;
      break;
     }
     $643 = ((($$124471$i)) + 8|0);
     $644 = load4($643);
     $645 = ($644|0)==(0|0);
     if ($645) {
      break;
     } else {
      $$124471$i = $644;
     }
    }
    if ((label|0) == 162) {
     $646 = ((($$124471$i)) + 12|0);
     $647 = load4($646);
     $648 = $647 & 8;
     $649 = ($648|0)==(0);
     if ($649) {
      store4($$124471$i,$$748$i);
      $650 = ((($$124471$i)) + 4|0);
      $651 = load4($650);
      $652 = (($651) + ($$723947$i))|0;
      store4($650,$652);
      $653 = ((($$748$i)) + 8|0);
      $654 = $653;
      $655 = $654 & 7;
      $656 = ($655|0)==(0);
      $657 = (0 - ($654))|0;
      $658 = $657 & 7;
      $659 = $656 ? 0 : $658;
      $660 = (($$748$i) + ($659)|0);
      $661 = ((($640)) + 8|0);
      $662 = $661;
      $663 = $662 & 7;
      $664 = ($663|0)==(0);
      $665 = (0 - ($662))|0;
      $666 = $665 & 7;
      $667 = $664 ? 0 : $666;
      $668 = (($640) + ($667)|0);
      $669 = $668;
      $670 = $660;
      $671 = (($669) - ($670))|0;
      $672 = (($660) + ($$0192)|0);
      $673 = (($671) - ($$0192))|0;
      $674 = $$0192 | 3;
      $675 = ((($660)) + 4|0);
      store4($675,$674);
      $676 = ($585|0)==($668|0);
      L238: do {
       if ($676) {
        $677 = load4((18420));
        $678 = (($677) + ($673))|0;
        store4((18420),$678);
        store4((18432),$672);
        $679 = $678 | 1;
        $680 = ((($672)) + 4|0);
        store4($680,$679);
       } else {
        $681 = load4((18428));
        $682 = ($681|0)==($668|0);
        if ($682) {
         $683 = load4((18416));
         $684 = (($683) + ($673))|0;
         store4((18416),$684);
         store4((18428),$672);
         $685 = $684 | 1;
         $686 = ((($672)) + 4|0);
         store4($686,$685);
         $687 = (($672) + ($684)|0);
         store4($687,$684);
         break;
        }
        $688 = ((($668)) + 4|0);
        $689 = load4($688);
        $690 = $689 & 3;
        $691 = ($690|0)==(1);
        if ($691) {
         $692 = $689 & -8;
         $693 = $689 >>> 3;
         $694 = ($689>>>0)<(256);
         L246: do {
          if ($694) {
           $695 = ((($668)) + 8|0);
           $696 = load4($695);
           $697 = ((($668)) + 12|0);
           $698 = load4($697);
           $699 = ($698|0)==($696|0);
           if ($699) {
            $700 = 1 << $693;
            $701 = $700 ^ -1;
            $702 = load4(18408);
            $703 = $702 & $701;
            store4(18408,$703);
            break;
           } else {
            $704 = ((($696)) + 12|0);
            store4($704,$698);
            $705 = ((($698)) + 8|0);
            store4($705,$696);
            break;
           }
          } else {
           $706 = ((($668)) + 24|0);
           $707 = load4($706);
           $708 = ((($668)) + 12|0);
           $709 = load4($708);
           $710 = ($709|0)==($668|0);
           do {
            if ($710) {
             $715 = ((($668)) + 16|0);
             $716 = ((($715)) + 4|0);
             $717 = load4($716);
             $718 = ($717|0)==(0|0);
             if ($718) {
              $719 = load4($715);
              $720 = ($719|0)==(0|0);
              if ($720) {
               $$3$i$i = 0;
               break;
              } else {
               $$1263$i$i$ph = $719;$$1265$i$i$ph = $715;
              }
             } else {
              $$1263$i$i$ph = $717;$$1265$i$i$ph = $716;
             }
             $$1263$i$i = $$1263$i$i$ph;$$1265$i$i = $$1265$i$i$ph;
             while(1) {
              $721 = ((($$1263$i$i)) + 20|0);
              $722 = load4($721);
              $723 = ($722|0)==(0|0);
              if ($723) {
               $724 = ((($$1263$i$i)) + 16|0);
               $725 = load4($724);
               $726 = ($725|0)==(0|0);
               if ($726) {
                break;
               } else {
                $$1263$i$i$be = $725;$$1265$i$i$be = $724;
               }
              } else {
               $$1263$i$i$be = $722;$$1265$i$i$be = $721;
              }
              $$1263$i$i = $$1263$i$i$be;$$1265$i$i = $$1265$i$i$be;
             }
             store4($$1265$i$i,0);
             $$3$i$i = $$1263$i$i;
            } else {
             $711 = ((($668)) + 8|0);
             $712 = load4($711);
             $713 = ((($712)) + 12|0);
             store4($713,$709);
             $714 = ((($709)) + 8|0);
             store4($714,$712);
             $$3$i$i = $709;
            }
           } while(0);
           $727 = ($707|0)==(0|0);
           if ($727) {
            break;
           }
           $728 = ((($668)) + 28|0);
           $729 = load4($728);
           $730 = (18712 + ($729<<2)|0);
           $731 = load4($730);
           $732 = ($731|0)==($668|0);
           do {
            if ($732) {
             store4($730,$$3$i$i);
             $cond$i$i = ($$3$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $733 = 1 << $729;
             $734 = $733 ^ -1;
             $735 = load4((18412));
             $736 = $735 & $734;
             store4((18412),$736);
             break L246;
            } else {
             $737 = ((($707)) + 16|0);
             $738 = load4($737);
             $739 = ($738|0)==($668|0);
             $740 = ((($707)) + 20|0);
             $$sink321 = $739 ? $737 : $740;
             store4($$sink321,$$3$i$i);
             $741 = ($$3$i$i|0)==(0|0);
             if ($741) {
              break L246;
             }
            }
           } while(0);
           $742 = ((($$3$i$i)) + 24|0);
           store4($742,$707);
           $743 = ((($668)) + 16|0);
           $744 = load4($743);
           $745 = ($744|0)==(0|0);
           if (!($745)) {
            $746 = ((($$3$i$i)) + 16|0);
            store4($746,$744);
            $747 = ((($744)) + 24|0);
            store4($747,$$3$i$i);
           }
           $748 = ((($743)) + 4|0);
           $749 = load4($748);
           $750 = ($749|0)==(0|0);
           if ($750) {
            break;
           }
           $751 = ((($$3$i$i)) + 20|0);
           store4($751,$749);
           $752 = ((($749)) + 24|0);
           store4($752,$$3$i$i);
          }
         } while(0);
         $753 = (($668) + ($692)|0);
         $754 = (($692) + ($673))|0;
         $$0$i$i = $753;$$0259$i$i = $754;
        } else {
         $$0$i$i = $668;$$0259$i$i = $673;
        }
        $755 = ((($$0$i$i)) + 4|0);
        $756 = load4($755);
        $757 = $756 & -2;
        store4($755,$757);
        $758 = $$0259$i$i | 1;
        $759 = ((($672)) + 4|0);
        store4($759,$758);
        $760 = (($672) + ($$0259$i$i)|0);
        store4($760,$$0259$i$i);
        $761 = $$0259$i$i >>> 3;
        $762 = ($$0259$i$i>>>0)<(256);
        if ($762) {
         $763 = $761 << 1;
         $764 = (18448 + ($763<<2)|0);
         $765 = load4(18408);
         $766 = 1 << $761;
         $767 = $765 & $766;
         $768 = ($767|0)==(0);
         if ($768) {
          $769 = $765 | $766;
          store4(18408,$769);
          $$pre$i16$i = ((($764)) + 8|0);
          $$0267$i$i = $764;$$pre$phi$i17$iZ2D = $$pre$i16$i;
         } else {
          $770 = ((($764)) + 8|0);
          $771 = load4($770);
          $$0267$i$i = $771;$$pre$phi$i17$iZ2D = $770;
         }
         store4($$pre$phi$i17$iZ2D,$672);
         $772 = ((($$0267$i$i)) + 12|0);
         store4($772,$672);
         $773 = ((($672)) + 8|0);
         store4($773,$$0267$i$i);
         $774 = ((($672)) + 12|0);
         store4($774,$764);
         break;
        }
        $775 = $$0259$i$i >>> 8;
        $776 = ($775|0)==(0);
        do {
         if ($776) {
          $$0268$i$i = 0;
         } else {
          $777 = ($$0259$i$i>>>0)>(16777215);
          if ($777) {
           $$0268$i$i = 31;
           break;
          }
          $778 = (($775) + 1048320)|0;
          $779 = $778 >>> 16;
          $780 = $779 & 8;
          $781 = $775 << $780;
          $782 = (($781) + 520192)|0;
          $783 = $782 >>> 16;
          $784 = $783 & 4;
          $785 = $784 | $780;
          $786 = $781 << $784;
          $787 = (($786) + 245760)|0;
          $788 = $787 >>> 16;
          $789 = $788 & 2;
          $790 = $785 | $789;
          $791 = (14 - ($790))|0;
          $792 = $786 << $789;
          $793 = $792 >>> 15;
          $794 = (($791) + ($793))|0;
          $795 = $794 << 1;
          $796 = (($794) + 7)|0;
          $797 = $$0259$i$i >>> $796;
          $798 = $797 & 1;
          $799 = $798 | $795;
          $$0268$i$i = $799;
         }
        } while(0);
        $800 = (18712 + ($$0268$i$i<<2)|0);
        $801 = ((($672)) + 28|0);
        store4($801,$$0268$i$i);
        $802 = ((($672)) + 16|0);
        $803 = ((($802)) + 4|0);
        store4($803,0);
        store4($802,0);
        $804 = load4((18412));
        $805 = 1 << $$0268$i$i;
        $806 = $804 & $805;
        $807 = ($806|0)==(0);
        if ($807) {
         $808 = $804 | $805;
         store4((18412),$808);
         store4($800,$672);
         $809 = ((($672)) + 24|0);
         store4($809,$800);
         $810 = ((($672)) + 12|0);
         store4($810,$672);
         $811 = ((($672)) + 8|0);
         store4($811,$672);
         break;
        }
        $812 = load4($800);
        $813 = ((($812)) + 4|0);
        $814 = load4($813);
        $815 = $814 & -8;
        $816 = ($815|0)==($$0259$i$i|0);
        L291: do {
         if ($816) {
          $$0261$lcssa$i$i = $812;
         } else {
          $817 = ($$0268$i$i|0)==(31);
          $818 = $$0268$i$i >>> 1;
          $819 = (25 - ($818))|0;
          $820 = $817 ? 0 : $819;
          $821 = $$0259$i$i << $820;
          $$02604$i$i = $821;$$02613$i$i = $812;
          while(1) {
           $828 = $$02604$i$i >>> 31;
           $829 = (((($$02613$i$i)) + 16|0) + ($828<<2)|0);
           $824 = load4($829);
           $830 = ($824|0)==(0|0);
           if ($830) {
            break;
           }
           $822 = $$02604$i$i << 1;
           $823 = ((($824)) + 4|0);
           $825 = load4($823);
           $826 = $825 & -8;
           $827 = ($826|0)==($$0259$i$i|0);
           if ($827) {
            $$0261$lcssa$i$i = $824;
            break L291;
           } else {
            $$02604$i$i = $822;$$02613$i$i = $824;
           }
          }
          store4($829,$672);
          $831 = ((($672)) + 24|0);
          store4($831,$$02613$i$i);
          $832 = ((($672)) + 12|0);
          store4($832,$672);
          $833 = ((($672)) + 8|0);
          store4($833,$672);
          break L238;
         }
        } while(0);
        $834 = ((($$0261$lcssa$i$i)) + 8|0);
        $835 = load4($834);
        $836 = ((($835)) + 12|0);
        store4($836,$672);
        store4($834,$672);
        $837 = ((($672)) + 8|0);
        store4($837,$835);
        $838 = ((($672)) + 12|0);
        store4($838,$$0261$lcssa$i$i);
        $839 = ((($672)) + 24|0);
        store4($839,0);
       }
      } while(0);
      $968 = ((($660)) + 8|0);
      $$0 = $968;
      STACKTOP = sp;return ($$0|0);
     }
    }
    $$0$i$i$i = (18856);
    while(1) {
     $840 = load4($$0$i$i$i);
     $841 = ($840>>>0)>($585>>>0);
     if (!($841)) {
      $842 = ((($$0$i$i$i)) + 4|0);
      $843 = load4($842);
      $844 = (($840) + ($843)|0);
      $845 = ($844>>>0)>($585>>>0);
      if ($845) {
       break;
      }
     }
     $846 = ((($$0$i$i$i)) + 8|0);
     $847 = load4($846);
     $$0$i$i$i = $847;
    }
    $848 = ((($844)) + -47|0);
    $849 = ((($848)) + 8|0);
    $850 = $849;
    $851 = $850 & 7;
    $852 = ($851|0)==(0);
    $853 = (0 - ($850))|0;
    $854 = $853 & 7;
    $855 = $852 ? 0 : $854;
    $856 = (($848) + ($855)|0);
    $857 = ((($585)) + 16|0);
    $858 = ($856>>>0)<($857>>>0);
    $859 = $858 ? $585 : $856;
    $860 = ((($859)) + 8|0);
    $861 = ((($859)) + 24|0);
    $862 = (($$723947$i) + -40)|0;
    $863 = ((($$748$i)) + 8|0);
    $864 = $863;
    $865 = $864 & 7;
    $866 = ($865|0)==(0);
    $867 = (0 - ($864))|0;
    $868 = $867 & 7;
    $869 = $866 ? 0 : $868;
    $870 = (($$748$i) + ($869)|0);
    $871 = (($862) - ($869))|0;
    store4((18432),$870);
    store4((18420),$871);
    $872 = $871 | 1;
    $873 = ((($870)) + 4|0);
    store4($873,$872);
    $874 = (($$748$i) + ($862)|0);
    $875 = ((($874)) + 4|0);
    store4($875,40);
    $876 = load4((18896));
    store4((18436),$876);
    $877 = ((($859)) + 4|0);
    store4($877,27);
    ; store8($860,load8((18856),4),4); store8($860+8 | 0,load8((18856)+8 | 0,4),4);
    store4((18856),$$748$i);
    store4((18860),$$723947$i);
    store4((18868),0);
    store4((18864),$860);
    $879 = $861;
    while(1) {
     $878 = ((($879)) + 4|0);
     store4($878,7);
     $880 = ((($879)) + 8|0);
     $881 = ($880>>>0)<($844>>>0);
     if ($881) {
      $879 = $878;
     } else {
      break;
     }
    }
    $882 = ($859|0)==($585|0);
    if (!($882)) {
     $883 = $859;
     $884 = $585;
     $885 = (($883) - ($884))|0;
     $886 = load4($877);
     $887 = $886 & -2;
     store4($877,$887);
     $888 = $885 | 1;
     $889 = ((($585)) + 4|0);
     store4($889,$888);
     store4($859,$885);
     $890 = $885 >>> 3;
     $891 = ($885>>>0)<(256);
     if ($891) {
      $892 = $890 << 1;
      $893 = (18448 + ($892<<2)|0);
      $894 = load4(18408);
      $895 = 1 << $890;
      $896 = $894 & $895;
      $897 = ($896|0)==(0);
      if ($897) {
       $898 = $894 | $895;
       store4(18408,$898);
       $$pre$i$i = ((($893)) + 8|0);
       $$0206$i$i = $893;$$pre$phi$i$iZ2D = $$pre$i$i;
      } else {
       $899 = ((($893)) + 8|0);
       $900 = load4($899);
       $$0206$i$i = $900;$$pre$phi$i$iZ2D = $899;
      }
      store4($$pre$phi$i$iZ2D,$585);
      $901 = ((($$0206$i$i)) + 12|0);
      store4($901,$585);
      $902 = ((($585)) + 8|0);
      store4($902,$$0206$i$i);
      $903 = ((($585)) + 12|0);
      store4($903,$893);
      break;
     }
     $904 = $885 >>> 8;
     $905 = ($904|0)==(0);
     if ($905) {
      $$0207$i$i = 0;
     } else {
      $906 = ($885>>>0)>(16777215);
      if ($906) {
       $$0207$i$i = 31;
      } else {
       $907 = (($904) + 1048320)|0;
       $908 = $907 >>> 16;
       $909 = $908 & 8;
       $910 = $904 << $909;
       $911 = (($910) + 520192)|0;
       $912 = $911 >>> 16;
       $913 = $912 & 4;
       $914 = $913 | $909;
       $915 = $910 << $913;
       $916 = (($915) + 245760)|0;
       $917 = $916 >>> 16;
       $918 = $917 & 2;
       $919 = $914 | $918;
       $920 = (14 - ($919))|0;
       $921 = $915 << $918;
       $922 = $921 >>> 15;
       $923 = (($920) + ($922))|0;
       $924 = $923 << 1;
       $925 = (($923) + 7)|0;
       $926 = $885 >>> $925;
       $927 = $926 & 1;
       $928 = $927 | $924;
       $$0207$i$i = $928;
      }
     }
     $929 = (18712 + ($$0207$i$i<<2)|0);
     $930 = ((($585)) + 28|0);
     store4($930,$$0207$i$i);
     $931 = ((($585)) + 20|0);
     store4($931,0);
     store4($857,0);
     $932 = load4((18412));
     $933 = 1 << $$0207$i$i;
     $934 = $932 & $933;
     $935 = ($934|0)==(0);
     if ($935) {
      $936 = $932 | $933;
      store4((18412),$936);
      store4($929,$585);
      $937 = ((($585)) + 24|0);
      store4($937,$929);
      $938 = ((($585)) + 12|0);
      store4($938,$585);
      $939 = ((($585)) + 8|0);
      store4($939,$585);
      break;
     }
     $940 = load4($929);
     $941 = ((($940)) + 4|0);
     $942 = load4($941);
     $943 = $942 & -8;
     $944 = ($943|0)==($885|0);
     L325: do {
      if ($944) {
       $$0202$lcssa$i$i = $940;
      } else {
       $945 = ($$0207$i$i|0)==(31);
       $946 = $$0207$i$i >>> 1;
       $947 = (25 - ($946))|0;
       $948 = $945 ? 0 : $947;
       $949 = $885 << $948;
       $$02014$i$i = $949;$$02023$i$i = $940;
       while(1) {
        $956 = $$02014$i$i >>> 31;
        $957 = (((($$02023$i$i)) + 16|0) + ($956<<2)|0);
        $952 = load4($957);
        $958 = ($952|0)==(0|0);
        if ($958) {
         break;
        }
        $950 = $$02014$i$i << 1;
        $951 = ((($952)) + 4|0);
        $953 = load4($951);
        $954 = $953 & -8;
        $955 = ($954|0)==($885|0);
        if ($955) {
         $$0202$lcssa$i$i = $952;
         break L325;
        } else {
         $$02014$i$i = $950;$$02023$i$i = $952;
        }
       }
       store4($957,$585);
       $959 = ((($585)) + 24|0);
       store4($959,$$02023$i$i);
       $960 = ((($585)) + 12|0);
       store4($960,$585);
       $961 = ((($585)) + 8|0);
       store4($961,$585);
       break L215;
      }
     } while(0);
     $962 = ((($$0202$lcssa$i$i)) + 8|0);
     $963 = load4($962);
     $964 = ((($963)) + 12|0);
     store4($964,$585);
     store4($962,$585);
     $965 = ((($585)) + 8|0);
     store4($965,$963);
     $966 = ((($585)) + 12|0);
     store4($966,$$0202$lcssa$i$i);
     $967 = ((($585)) + 24|0);
     store4($967,0);
    }
   }
  } while(0);
  $969 = load4((18420));
  $970 = ($969>>>0)>($$0192>>>0);
  if ($970) {
   $971 = (($969) - ($$0192))|0;
   store4((18420),$971);
   $972 = load4((18432));
   $973 = (($972) + ($$0192)|0);
   store4((18432),$973);
   $974 = $971 | 1;
   $975 = ((($973)) + 4|0);
   store4($975,$974);
   $976 = $$0192 | 3;
   $977 = ((($972)) + 4|0);
   store4($977,$976);
   $978 = ((($972)) + 8|0);
   $$0 = $978;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $979 = (___errno_location()|0);
 store4($979,12);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _free($0) {
 $0 = $0|0;
 var $$0194$i = 0, $$0194$in$i = 0, $$0346381 = 0, $$0347$lcssa = 0, $$0347380 = 0, $$0359 = 0, $$0366 = 0, $$1 = 0, $$1345 = 0, $$1350 = 0, $$1350$be = 0, $$1350$ph = 0, $$1353 = 0, $$1353$be = 0, $$1353$ph = 0, $$1361 = 0, $$1361$be = 0, $$1361$ph = 0, $$1365 = 0, $$1365$be = 0;
 var $$1365$ph = 0, $$2 = 0, $$3 = 0, $$3363 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink395 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond371 = 0, $cond372 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($0)) + -8|0);
 $3 = load4((18424));
 $4 = ((($0)) + -4|0);
 $5 = load4($4);
 $6 = $5 & -8;
 $7 = (($2) + ($6)|0);
 $8 = $5 & 1;
 $9 = ($8|0)==(0);
 do {
  if ($9) {
   $10 = load4($2);
   $11 = $5 & 3;
   $12 = ($11|0)==(0);
   if ($12) {
    return;
   }
   $13 = (0 - ($10))|0;
   $14 = (($2) + ($13)|0);
   $15 = (($10) + ($6))|0;
   $16 = ($14>>>0)<($3>>>0);
   if ($16) {
    return;
   }
   $17 = load4((18428));
   $18 = ($17|0)==($14|0);
   if ($18) {
    $79 = ((($7)) + 4|0);
    $80 = load4($79);
    $81 = $80 & 3;
    $82 = ($81|0)==(3);
    if (!($82)) {
     $$1 = $14;$$1345 = $15;$87 = $14;
     break;
    }
    $83 = (($14) + ($15)|0);
    $84 = ((($14)) + 4|0);
    $85 = $15 | 1;
    $86 = $80 & -2;
    store4((18416),$15);
    store4($79,$86);
    store4($84,$85);
    store4($83,$15);
    return;
   }
   $19 = $10 >>> 3;
   $20 = ($10>>>0)<(256);
   if ($20) {
    $21 = ((($14)) + 8|0);
    $22 = load4($21);
    $23 = ((($14)) + 12|0);
    $24 = load4($23);
    $25 = ($24|0)==($22|0);
    if ($25) {
     $26 = 1 << $19;
     $27 = $26 ^ -1;
     $28 = load4(18408);
     $29 = $28 & $27;
     store4(18408,$29);
     $$1 = $14;$$1345 = $15;$87 = $14;
     break;
    } else {
     $30 = ((($22)) + 12|0);
     store4($30,$24);
     $31 = ((($24)) + 8|0);
     store4($31,$22);
     $$1 = $14;$$1345 = $15;$87 = $14;
     break;
    }
   }
   $32 = ((($14)) + 24|0);
   $33 = load4($32);
   $34 = ((($14)) + 12|0);
   $35 = load4($34);
   $36 = ($35|0)==($14|0);
   do {
    if ($36) {
     $41 = ((($14)) + 16|0);
     $42 = ((($41)) + 4|0);
     $43 = load4($42);
     $44 = ($43|0)==(0|0);
     if ($44) {
      $45 = load4($41);
      $46 = ($45|0)==(0|0);
      if ($46) {
       $$3 = 0;
       break;
      } else {
       $$1350$ph = $45;$$1353$ph = $41;
      }
     } else {
      $$1350$ph = $43;$$1353$ph = $42;
     }
     $$1350 = $$1350$ph;$$1353 = $$1353$ph;
     while(1) {
      $47 = ((($$1350)) + 20|0);
      $48 = load4($47);
      $49 = ($48|0)==(0|0);
      if ($49) {
       $50 = ((($$1350)) + 16|0);
       $51 = load4($50);
       $52 = ($51|0)==(0|0);
       if ($52) {
        break;
       } else {
        $$1350$be = $51;$$1353$be = $50;
       }
      } else {
       $$1350$be = $48;$$1353$be = $47;
      }
      $$1350 = $$1350$be;$$1353 = $$1353$be;
     }
     store4($$1353,0);
     $$3 = $$1350;
    } else {
     $37 = ((($14)) + 8|0);
     $38 = load4($37);
     $39 = ((($38)) + 12|0);
     store4($39,$35);
     $40 = ((($35)) + 8|0);
     store4($40,$38);
     $$3 = $35;
    }
   } while(0);
   $53 = ($33|0)==(0|0);
   if ($53) {
    $$1 = $14;$$1345 = $15;$87 = $14;
   } else {
    $54 = ((($14)) + 28|0);
    $55 = load4($54);
    $56 = (18712 + ($55<<2)|0);
    $57 = load4($56);
    $58 = ($57|0)==($14|0);
    if ($58) {
     store4($56,$$3);
     $cond371 = ($$3|0)==(0|0);
     if ($cond371) {
      $59 = 1 << $55;
      $60 = $59 ^ -1;
      $61 = load4((18412));
      $62 = $61 & $60;
      store4((18412),$62);
      $$1 = $14;$$1345 = $15;$87 = $14;
      break;
     }
    } else {
     $63 = ((($33)) + 16|0);
     $64 = load4($63);
     $65 = ($64|0)==($14|0);
     $66 = ((($33)) + 20|0);
     $$sink = $65 ? $63 : $66;
     store4($$sink,$$3);
     $67 = ($$3|0)==(0|0);
     if ($67) {
      $$1 = $14;$$1345 = $15;$87 = $14;
      break;
     }
    }
    $68 = ((($$3)) + 24|0);
    store4($68,$33);
    $69 = ((($14)) + 16|0);
    $70 = load4($69);
    $71 = ($70|0)==(0|0);
    if (!($71)) {
     $72 = ((($$3)) + 16|0);
     store4($72,$70);
     $73 = ((($70)) + 24|0);
     store4($73,$$3);
    }
    $74 = ((($69)) + 4|0);
    $75 = load4($74);
    $76 = ($75|0)==(0|0);
    if ($76) {
     $$1 = $14;$$1345 = $15;$87 = $14;
    } else {
     $77 = ((($$3)) + 20|0);
     store4($77,$75);
     $78 = ((($75)) + 24|0);
     store4($78,$$3);
     $$1 = $14;$$1345 = $15;$87 = $14;
    }
   }
  } else {
   $$1 = $2;$$1345 = $6;$87 = $2;
  }
 } while(0);
 $88 = ($87>>>0)<($7>>>0);
 if (!($88)) {
  return;
 }
 $89 = ((($7)) + 4|0);
 $90 = load4($89);
 $91 = $90 & 1;
 $92 = ($91|0)==(0);
 if ($92) {
  return;
 }
 $93 = $90 & 2;
 $94 = ($93|0)==(0);
 if ($94) {
  $95 = load4((18432));
  $96 = ($95|0)==($7|0);
  if ($96) {
   $97 = load4((18420));
   $98 = (($97) + ($$1345))|0;
   store4((18420),$98);
   store4((18432),$$1);
   $99 = $98 | 1;
   $100 = ((($$1)) + 4|0);
   store4($100,$99);
   $101 = load4((18428));
   $102 = ($$1|0)==($101|0);
   if (!($102)) {
    return;
   }
   store4((18428),0);
   store4((18416),0);
   return;
  }
  $103 = load4((18428));
  $104 = ($103|0)==($7|0);
  if ($104) {
   $105 = load4((18416));
   $106 = (($105) + ($$1345))|0;
   store4((18416),$106);
   store4((18428),$87);
   $107 = $106 | 1;
   $108 = ((($$1)) + 4|0);
   store4($108,$107);
   $109 = (($87) + ($106)|0);
   store4($109,$106);
   return;
  }
  $110 = $90 & -8;
  $111 = (($110) + ($$1345))|0;
  $112 = $90 >>> 3;
  $113 = ($90>>>0)<(256);
  do {
   if ($113) {
    $114 = ((($7)) + 8|0);
    $115 = load4($114);
    $116 = ((($7)) + 12|0);
    $117 = load4($116);
    $118 = ($117|0)==($115|0);
    if ($118) {
     $119 = 1 << $112;
     $120 = $119 ^ -1;
     $121 = load4(18408);
     $122 = $121 & $120;
     store4(18408,$122);
     break;
    } else {
     $123 = ((($115)) + 12|0);
     store4($123,$117);
     $124 = ((($117)) + 8|0);
     store4($124,$115);
     break;
    }
   } else {
    $125 = ((($7)) + 24|0);
    $126 = load4($125);
    $127 = ((($7)) + 12|0);
    $128 = load4($127);
    $129 = ($128|0)==($7|0);
    do {
     if ($129) {
      $134 = ((($7)) + 16|0);
      $135 = ((($134)) + 4|0);
      $136 = load4($135);
      $137 = ($136|0)==(0|0);
      if ($137) {
       $138 = load4($134);
       $139 = ($138|0)==(0|0);
       if ($139) {
        $$3363 = 0;
        break;
       } else {
        $$1361$ph = $138;$$1365$ph = $134;
       }
      } else {
       $$1361$ph = $136;$$1365$ph = $135;
      }
      $$1361 = $$1361$ph;$$1365 = $$1365$ph;
      while(1) {
       $140 = ((($$1361)) + 20|0);
       $141 = load4($140);
       $142 = ($141|0)==(0|0);
       if ($142) {
        $143 = ((($$1361)) + 16|0);
        $144 = load4($143);
        $145 = ($144|0)==(0|0);
        if ($145) {
         break;
        } else {
         $$1361$be = $144;$$1365$be = $143;
        }
       } else {
        $$1361$be = $141;$$1365$be = $140;
       }
       $$1361 = $$1361$be;$$1365 = $$1365$be;
      }
      store4($$1365,0);
      $$3363 = $$1361;
     } else {
      $130 = ((($7)) + 8|0);
      $131 = load4($130);
      $132 = ((($131)) + 12|0);
      store4($132,$128);
      $133 = ((($128)) + 8|0);
      store4($133,$131);
      $$3363 = $128;
     }
    } while(0);
    $146 = ($126|0)==(0|0);
    if (!($146)) {
     $147 = ((($7)) + 28|0);
     $148 = load4($147);
     $149 = (18712 + ($148<<2)|0);
     $150 = load4($149);
     $151 = ($150|0)==($7|0);
     if ($151) {
      store4($149,$$3363);
      $cond372 = ($$3363|0)==(0|0);
      if ($cond372) {
       $152 = 1 << $148;
       $153 = $152 ^ -1;
       $154 = load4((18412));
       $155 = $154 & $153;
       store4((18412),$155);
       break;
      }
     } else {
      $156 = ((($126)) + 16|0);
      $157 = load4($156);
      $158 = ($157|0)==($7|0);
      $159 = ((($126)) + 20|0);
      $$sink395 = $158 ? $156 : $159;
      store4($$sink395,$$3363);
      $160 = ($$3363|0)==(0|0);
      if ($160) {
       break;
      }
     }
     $161 = ((($$3363)) + 24|0);
     store4($161,$126);
     $162 = ((($7)) + 16|0);
     $163 = load4($162);
     $164 = ($163|0)==(0|0);
     if (!($164)) {
      $165 = ((($$3363)) + 16|0);
      store4($165,$163);
      $166 = ((($163)) + 24|0);
      store4($166,$$3363);
     }
     $167 = ((($162)) + 4|0);
     $168 = load4($167);
     $169 = ($168|0)==(0|0);
     if (!($169)) {
      $170 = ((($$3363)) + 20|0);
      store4($170,$168);
      $171 = ((($168)) + 24|0);
      store4($171,$$3363);
     }
    }
   }
  } while(0);
  $172 = $111 | 1;
  $173 = ((($$1)) + 4|0);
  store4($173,$172);
  $174 = (($87) + ($111)|0);
  store4($174,$111);
  $175 = load4((18428));
  $176 = ($$1|0)==($175|0);
  if ($176) {
   store4((18416),$111);
   return;
  } else {
   $$2 = $111;
  }
 } else {
  $177 = $90 & -2;
  store4($89,$177);
  $178 = $$1345 | 1;
  $179 = ((($$1)) + 4|0);
  store4($179,$178);
  $180 = (($87) + ($$1345)|0);
  store4($180,$$1345);
  $$2 = $$1345;
 }
 $181 = $$2 >>> 3;
 $182 = ($$2>>>0)<(256);
 if ($182) {
  $183 = $181 << 1;
  $184 = (18448 + ($183<<2)|0);
  $185 = load4(18408);
  $186 = 1 << $181;
  $187 = $185 & $186;
  $188 = ($187|0)==(0);
  if ($188) {
   $189 = $185 | $186;
   store4(18408,$189);
   $$pre = ((($184)) + 8|0);
   $$0366 = $184;$$pre$phiZ2D = $$pre;
  } else {
   $190 = ((($184)) + 8|0);
   $191 = load4($190);
   $$0366 = $191;$$pre$phiZ2D = $190;
  }
  store4($$pre$phiZ2D,$$1);
  $192 = ((($$0366)) + 12|0);
  store4($192,$$1);
  $193 = ((($$1)) + 8|0);
  store4($193,$$0366);
  $194 = ((($$1)) + 12|0);
  store4($194,$184);
  return;
 }
 $195 = $$2 >>> 8;
 $196 = ($195|0)==(0);
 if ($196) {
  $$0359 = 0;
 } else {
  $197 = ($$2>>>0)>(16777215);
  if ($197) {
   $$0359 = 31;
  } else {
   $198 = (($195) + 1048320)|0;
   $199 = $198 >>> 16;
   $200 = $199 & 8;
   $201 = $195 << $200;
   $202 = (($201) + 520192)|0;
   $203 = $202 >>> 16;
   $204 = $203 & 4;
   $205 = $204 | $200;
   $206 = $201 << $204;
   $207 = (($206) + 245760)|0;
   $208 = $207 >>> 16;
   $209 = $208 & 2;
   $210 = $205 | $209;
   $211 = (14 - ($210))|0;
   $212 = $206 << $209;
   $213 = $212 >>> 15;
   $214 = (($211) + ($213))|0;
   $215 = $214 << 1;
   $216 = (($214) + 7)|0;
   $217 = $$2 >>> $216;
   $218 = $217 & 1;
   $219 = $218 | $215;
   $$0359 = $219;
  }
 }
 $220 = (18712 + ($$0359<<2)|0);
 $221 = ((($$1)) + 28|0);
 store4($221,$$0359);
 $222 = ((($$1)) + 16|0);
 $223 = ((($$1)) + 20|0);
 store4($223,0);
 store4($222,0);
 $224 = load4((18412));
 $225 = 1 << $$0359;
 $226 = $224 & $225;
 $227 = ($226|0)==(0);
 L112: do {
  if ($227) {
   $228 = $224 | $225;
   store4((18412),$228);
   store4($220,$$1);
   $229 = ((($$1)) + 24|0);
   store4($229,$220);
   $230 = ((($$1)) + 12|0);
   store4($230,$$1);
   $231 = ((($$1)) + 8|0);
   store4($231,$$1);
  } else {
   $232 = load4($220);
   $233 = ((($232)) + 4|0);
   $234 = load4($233);
   $235 = $234 & -8;
   $236 = ($235|0)==($$2|0);
   L115: do {
    if ($236) {
     $$0347$lcssa = $232;
    } else {
     $237 = ($$0359|0)==(31);
     $238 = $$0359 >>> 1;
     $239 = (25 - ($238))|0;
     $240 = $237 ? 0 : $239;
     $241 = $$2 << $240;
     $$0346381 = $241;$$0347380 = $232;
     while(1) {
      $248 = $$0346381 >>> 31;
      $249 = (((($$0347380)) + 16|0) + ($248<<2)|0);
      $244 = load4($249);
      $250 = ($244|0)==(0|0);
      if ($250) {
       break;
      }
      $242 = $$0346381 << 1;
      $243 = ((($244)) + 4|0);
      $245 = load4($243);
      $246 = $245 & -8;
      $247 = ($246|0)==($$2|0);
      if ($247) {
       $$0347$lcssa = $244;
       break L115;
      } else {
       $$0346381 = $242;$$0347380 = $244;
      }
     }
     store4($249,$$1);
     $251 = ((($$1)) + 24|0);
     store4($251,$$0347380);
     $252 = ((($$1)) + 12|0);
     store4($252,$$1);
     $253 = ((($$1)) + 8|0);
     store4($253,$$1);
     break L112;
    }
   } while(0);
   $254 = ((($$0347$lcssa)) + 8|0);
   $255 = load4($254);
   $256 = ((($255)) + 12|0);
   store4($256,$$1);
   store4($254,$$1);
   $257 = ((($$1)) + 8|0);
   store4($257,$255);
   $258 = ((($$1)) + 12|0);
   store4($258,$$0347$lcssa);
   $259 = ((($$1)) + 24|0);
   store4($259,0);
  }
 } while(0);
 $260 = load4((18440));
 $261 = (($260) + -1)|0;
 store4((18440),$261);
 $262 = ($261|0)==(0);
 if (!($262)) {
  return;
 }
 $$0194$in$i = (18864);
 while(1) {
  $$0194$i = load4($$0194$in$i);
  $263 = ($$0194$i|0)==(0|0);
  $264 = ((($$0194$i)) + 8|0);
  if ($263) {
   break;
  } else {
   $$0194$in$i = $264;
  }
 }
 store4((18440),-1);
 return;
}
function _realloc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $3 = (_malloc($1)|0);
  $$1 = $3;
  return ($$1|0);
 }
 $4 = ($1>>>0)>(4294967231);
 if ($4) {
  $5 = (___errno_location()|0);
  store4($5,12);
  $$1 = 0;
  return ($$1|0);
 }
 $6 = ($1>>>0)<(11);
 $7 = (($1) + 11)|0;
 $8 = $7 & -8;
 $9 = $6 ? 16 : $8;
 $10 = ((($0)) + -8|0);
 $11 = (_try_realloc_chunk($10,$9)|0);
 $12 = ($11|0)==(0|0);
 if (!($12)) {
  $13 = ((($11)) + 8|0);
  $$1 = $13;
  return ($$1|0);
 }
 $14 = (_malloc($1)|0);
 $15 = ($14|0)==(0|0);
 if ($15) {
  $$1 = 0;
  return ($$1|0);
 }
 $16 = ((($0)) + -4|0);
 $17 = load4($16);
 $18 = $17 & -8;
 $19 = $17 & 3;
 $20 = ($19|0)==(0);
 $21 = $20 ? 8 : 4;
 $22 = (($18) - ($21))|0;
 $23 = ($22>>>0)<($1>>>0);
 $24 = $23 ? $22 : $1;
 (_memcpy(($14|0),($0|0),($24|0))|0);
 _free($0);
 $$1 = $14;
 return ($$1|0);
}
function _try_realloc_chunk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1245 = 0, $$1245$be = 0, $$1245$ph = 0, $$1248 = 0, $$1248$be = 0, $$1248$ph = 0, $$2 = 0, $$3 = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, $storemerge = 0, $storemerge1 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = load4($2);
 $4 = $3 & -8;
 $5 = (($0) + ($4)|0);
 $6 = $3 & 3;
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = ($1>>>0)<(256);
  if ($8) {
   $$2 = 0;
   return ($$2|0);
  }
  $9 = (($1) + 4)|0;
  $10 = ($4>>>0)<($9>>>0);
  if (!($10)) {
   $11 = (($4) - ($1))|0;
   $12 = load4((18888));
   $13 = $12 << 1;
   $14 = ($11>>>0)>($13>>>0);
   if (!($14)) {
    $$2 = $0;
    return ($$2|0);
   }
  }
  $$2 = 0;
  return ($$2|0);
 }
 $15 = ($4>>>0)<($1>>>0);
 if (!($15)) {
  $16 = (($4) - ($1))|0;
  $17 = ($16>>>0)>(15);
  if (!($17)) {
   $$2 = $0;
   return ($$2|0);
  }
  $18 = (($0) + ($1)|0);
  $19 = $3 & 1;
  $20 = $19 | $1;
  $21 = $20 | 2;
  store4($2,$21);
  $22 = ((($18)) + 4|0);
  $23 = $16 | 3;
  store4($22,$23);
  $24 = ((($5)) + 4|0);
  $25 = load4($24);
  $26 = $25 | 1;
  store4($24,$26);
  _dispose_chunk($18,$16);
  $$2 = $0;
  return ($$2|0);
 }
 $27 = load4((18432));
 $28 = ($27|0)==($5|0);
 if ($28) {
  $29 = load4((18420));
  $30 = (($29) + ($4))|0;
  $31 = ($30>>>0)>($1>>>0);
  $32 = (($30) - ($1))|0;
  $33 = (($0) + ($1)|0);
  if (!($31)) {
   $$2 = 0;
   return ($$2|0);
  }
  $34 = $32 | 1;
  $35 = ((($33)) + 4|0);
  $36 = $3 & 1;
  $37 = $36 | $1;
  $38 = $37 | 2;
  store4($2,$38);
  store4($35,$34);
  store4((18432),$33);
  store4((18420),$32);
  $$2 = $0;
  return ($$2|0);
 }
 $39 = load4((18428));
 $40 = ($39|0)==($5|0);
 if ($40) {
  $41 = load4((18416));
  $42 = (($41) + ($4))|0;
  $43 = ($42>>>0)<($1>>>0);
  if ($43) {
   $$2 = 0;
   return ($$2|0);
  }
  $44 = (($42) - ($1))|0;
  $45 = ($44>>>0)>(15);
  if ($45) {
   $46 = (($0) + ($1)|0);
   $47 = (($0) + ($42)|0);
   $48 = $3 & 1;
   $49 = $48 | $1;
   $50 = $49 | 2;
   store4($2,$50);
   $51 = ((($46)) + 4|0);
   $52 = $44 | 1;
   store4($51,$52);
   store4($47,$44);
   $53 = ((($47)) + 4|0);
   $54 = load4($53);
   $55 = $54 & -2;
   store4($53,$55);
   $storemerge = $46;$storemerge1 = $44;
  } else {
   $56 = $3 & 1;
   $57 = $56 | $42;
   $58 = $57 | 2;
   store4($2,$58);
   $59 = (($0) + ($42)|0);
   $60 = ((($59)) + 4|0);
   $61 = load4($60);
   $62 = $61 | 1;
   store4($60,$62);
   $storemerge = 0;$storemerge1 = 0;
  }
  store4((18416),$storemerge1);
  store4((18428),$storemerge);
  $$2 = $0;
  return ($$2|0);
 }
 $63 = ((($5)) + 4|0);
 $64 = load4($63);
 $65 = $64 & 2;
 $66 = ($65|0)==(0);
 if (!($66)) {
  $$2 = 0;
  return ($$2|0);
 }
 $67 = $64 & -8;
 $68 = (($67) + ($4))|0;
 $69 = ($68>>>0)<($1>>>0);
 if ($69) {
  $$2 = 0;
  return ($$2|0);
 }
 $70 = (($68) - ($1))|0;
 $71 = $64 >>> 3;
 $72 = ($64>>>0)<(256);
 do {
  if ($72) {
   $73 = ((($5)) + 8|0);
   $74 = load4($73);
   $75 = ((($5)) + 12|0);
   $76 = load4($75);
   $77 = ($76|0)==($74|0);
   if ($77) {
    $78 = 1 << $71;
    $79 = $78 ^ -1;
    $80 = load4(18408);
    $81 = $80 & $79;
    store4(18408,$81);
    break;
   } else {
    $82 = ((($74)) + 12|0);
    store4($82,$76);
    $83 = ((($76)) + 8|0);
    store4($83,$74);
    break;
   }
  } else {
   $84 = ((($5)) + 24|0);
   $85 = load4($84);
   $86 = ((($5)) + 12|0);
   $87 = load4($86);
   $88 = ($87|0)==($5|0);
   do {
    if ($88) {
     $93 = ((($5)) + 16|0);
     $94 = ((($93)) + 4|0);
     $95 = load4($94);
     $96 = ($95|0)==(0|0);
     if ($96) {
      $97 = load4($93);
      $98 = ($97|0)==(0|0);
      if ($98) {
       $$3 = 0;
       break;
      } else {
       $$1245$ph = $97;$$1248$ph = $93;
      }
     } else {
      $$1245$ph = $95;$$1248$ph = $94;
     }
     $$1245 = $$1245$ph;$$1248 = $$1248$ph;
     while(1) {
      $99 = ((($$1245)) + 20|0);
      $100 = load4($99);
      $101 = ($100|0)==(0|0);
      if ($101) {
       $102 = ((($$1245)) + 16|0);
       $103 = load4($102);
       $104 = ($103|0)==(0|0);
       if ($104) {
        break;
       } else {
        $$1245$be = $103;$$1248$be = $102;
       }
      } else {
       $$1245$be = $100;$$1248$be = $99;
      }
      $$1245 = $$1245$be;$$1248 = $$1248$be;
     }
     store4($$1248,0);
     $$3 = $$1245;
    } else {
     $89 = ((($5)) + 8|0);
     $90 = load4($89);
     $91 = ((($90)) + 12|0);
     store4($91,$87);
     $92 = ((($87)) + 8|0);
     store4($92,$90);
     $$3 = $87;
    }
   } while(0);
   $105 = ($85|0)==(0|0);
   if (!($105)) {
    $106 = ((($5)) + 28|0);
    $107 = load4($106);
    $108 = (18712 + ($107<<2)|0);
    $109 = load4($108);
    $110 = ($109|0)==($5|0);
    if ($110) {
     store4($108,$$3);
     $cond = ($$3|0)==(0|0);
     if ($cond) {
      $111 = 1 << $107;
      $112 = $111 ^ -1;
      $113 = load4((18412));
      $114 = $113 & $112;
      store4((18412),$114);
      break;
     }
    } else {
     $115 = ((($85)) + 16|0);
     $116 = load4($115);
     $117 = ($116|0)==($5|0);
     $118 = ((($85)) + 20|0);
     $$sink = $117 ? $115 : $118;
     store4($$sink,$$3);
     $119 = ($$3|0)==(0|0);
     if ($119) {
      break;
     }
    }
    $120 = ((($$3)) + 24|0);
    store4($120,$85);
    $121 = ((($5)) + 16|0);
    $122 = load4($121);
    $123 = ($122|0)==(0|0);
    if (!($123)) {
     $124 = ((($$3)) + 16|0);
     store4($124,$122);
     $125 = ((($122)) + 24|0);
     store4($125,$$3);
    }
    $126 = ((($121)) + 4|0);
    $127 = load4($126);
    $128 = ($127|0)==(0|0);
    if (!($128)) {
     $129 = ((($$3)) + 20|0);
     store4($129,$127);
     $130 = ((($127)) + 24|0);
     store4($130,$$3);
    }
   }
  }
 } while(0);
 $131 = ($70>>>0)<(16);
 if ($131) {
  $132 = $3 & 1;
  $133 = $132 | $68;
  $134 = $133 | 2;
  store4($2,$134);
  $135 = (($0) + ($68)|0);
  $136 = ((($135)) + 4|0);
  $137 = load4($136);
  $138 = $137 | 1;
  store4($136,$138);
  $$2 = $0;
  return ($$2|0);
 } else {
  $139 = (($0) + ($1)|0);
  $140 = $3 & 1;
  $141 = $140 | $1;
  $142 = $141 | 2;
  store4($2,$142);
  $143 = ((($139)) + 4|0);
  $144 = $70 | 3;
  store4($143,$144);
  $145 = (($0) + ($68)|0);
  $146 = ((($145)) + 4|0);
  $147 = load4($146);
  $148 = $147 | 1;
  store4($146,$148);
  _dispose_chunk($139,$70);
  $$2 = $0;
  return ($$2|0);
 }
 return (0)|0;
}
function _dispose_chunk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$03649 = 0, $$0365$lcssa = 0, $$03658 = 0, $$0376 = 0, $$0383 = 0, $$1 = 0, $$1363 = 0, $$1371 = 0, $$1371$be = 0, $$1371$ph = 0, $$1374 = 0, $$1374$be = 0, $$1374$ph = 0, $$1378 = 0, $$1378$be = 0, $$1378$ph = 0, $$1382 = 0, $$1382$be = 0, $$1382$ph = 0, $$2 = 0;
 var $$3 = 0, $$3380 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink24 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, $cond4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($0) + ($1)|0);
 $3 = ((($0)) + 4|0);
 $4 = load4($3);
 $5 = $4 & 1;
 $6 = ($5|0)==(0);
 do {
  if ($6) {
   $7 = load4($0);
   $8 = $4 & 3;
   $9 = ($8|0)==(0);
   if ($9) {
    return;
   }
   $10 = (0 - ($7))|0;
   $11 = (($0) + ($10)|0);
   $12 = (($7) + ($1))|0;
   $13 = load4((18428));
   $14 = ($13|0)==($11|0);
   if ($14) {
    $75 = ((($2)) + 4|0);
    $76 = load4($75);
    $77 = $76 & 3;
    $78 = ($77|0)==(3);
    if (!($78)) {
     $$1 = $11;$$1363 = $12;
     break;
    }
    $79 = ((($11)) + 4|0);
    $80 = $12 | 1;
    $81 = $76 & -2;
    store4((18416),$12);
    store4($75,$81);
    store4($79,$80);
    store4($2,$12);
    return;
   }
   $15 = $7 >>> 3;
   $16 = ($7>>>0)<(256);
   if ($16) {
    $17 = ((($11)) + 8|0);
    $18 = load4($17);
    $19 = ((($11)) + 12|0);
    $20 = load4($19);
    $21 = ($20|0)==($18|0);
    if ($21) {
     $22 = 1 << $15;
     $23 = $22 ^ -1;
     $24 = load4(18408);
     $25 = $24 & $23;
     store4(18408,$25);
     $$1 = $11;$$1363 = $12;
     break;
    } else {
     $26 = ((($18)) + 12|0);
     store4($26,$20);
     $27 = ((($20)) + 8|0);
     store4($27,$18);
     $$1 = $11;$$1363 = $12;
     break;
    }
   }
   $28 = ((($11)) + 24|0);
   $29 = load4($28);
   $30 = ((($11)) + 12|0);
   $31 = load4($30);
   $32 = ($31|0)==($11|0);
   do {
    if ($32) {
     $37 = ((($11)) + 16|0);
     $38 = ((($37)) + 4|0);
     $39 = load4($38);
     $40 = ($39|0)==(0|0);
     if ($40) {
      $41 = load4($37);
      $42 = ($41|0)==(0|0);
      if ($42) {
       $$3 = 0;
       break;
      } else {
       $$1371$ph = $41;$$1374$ph = $37;
      }
     } else {
      $$1371$ph = $39;$$1374$ph = $38;
     }
     $$1371 = $$1371$ph;$$1374 = $$1374$ph;
     while(1) {
      $43 = ((($$1371)) + 20|0);
      $44 = load4($43);
      $45 = ($44|0)==(0|0);
      if ($45) {
       $46 = ((($$1371)) + 16|0);
       $47 = load4($46);
       $48 = ($47|0)==(0|0);
       if ($48) {
        break;
       } else {
        $$1371$be = $47;$$1374$be = $46;
       }
      } else {
       $$1371$be = $44;$$1374$be = $43;
      }
      $$1371 = $$1371$be;$$1374 = $$1374$be;
     }
     store4($$1374,0);
     $$3 = $$1371;
    } else {
     $33 = ((($11)) + 8|0);
     $34 = load4($33);
     $35 = ((($34)) + 12|0);
     store4($35,$31);
     $36 = ((($31)) + 8|0);
     store4($36,$34);
     $$3 = $31;
    }
   } while(0);
   $49 = ($29|0)==(0|0);
   if ($49) {
    $$1 = $11;$$1363 = $12;
   } else {
    $50 = ((($11)) + 28|0);
    $51 = load4($50);
    $52 = (18712 + ($51<<2)|0);
    $53 = load4($52);
    $54 = ($53|0)==($11|0);
    if ($54) {
     store4($52,$$3);
     $cond = ($$3|0)==(0|0);
     if ($cond) {
      $55 = 1 << $51;
      $56 = $55 ^ -1;
      $57 = load4((18412));
      $58 = $57 & $56;
      store4((18412),$58);
      $$1 = $11;$$1363 = $12;
      break;
     }
    } else {
     $59 = ((($29)) + 16|0);
     $60 = load4($59);
     $61 = ($60|0)==($11|0);
     $62 = ((($29)) + 20|0);
     $$sink = $61 ? $59 : $62;
     store4($$sink,$$3);
     $63 = ($$3|0)==(0|0);
     if ($63) {
      $$1 = $11;$$1363 = $12;
      break;
     }
    }
    $64 = ((($$3)) + 24|0);
    store4($64,$29);
    $65 = ((($11)) + 16|0);
    $66 = load4($65);
    $67 = ($66|0)==(0|0);
    if (!($67)) {
     $68 = ((($$3)) + 16|0);
     store4($68,$66);
     $69 = ((($66)) + 24|0);
     store4($69,$$3);
    }
    $70 = ((($65)) + 4|0);
    $71 = load4($70);
    $72 = ($71|0)==(0|0);
    if ($72) {
     $$1 = $11;$$1363 = $12;
    } else {
     $73 = ((($$3)) + 20|0);
     store4($73,$71);
     $74 = ((($71)) + 24|0);
     store4($74,$$3);
     $$1 = $11;$$1363 = $12;
    }
   }
  } else {
   $$1 = $0;$$1363 = $1;
  }
 } while(0);
 $82 = ((($2)) + 4|0);
 $83 = load4($82);
 $84 = $83 & 2;
 $85 = ($84|0)==(0);
 if ($85) {
  $86 = load4((18432));
  $87 = ($86|0)==($2|0);
  if ($87) {
   $88 = load4((18420));
   $89 = (($88) + ($$1363))|0;
   store4((18420),$89);
   store4((18432),$$1);
   $90 = $89 | 1;
   $91 = ((($$1)) + 4|0);
   store4($91,$90);
   $92 = load4((18428));
   $93 = ($$1|0)==($92|0);
   if (!($93)) {
    return;
   }
   store4((18428),0);
   store4((18416),0);
   return;
  }
  $94 = load4((18428));
  $95 = ($94|0)==($2|0);
  if ($95) {
   $96 = load4((18416));
   $97 = (($96) + ($$1363))|0;
   store4((18416),$97);
   store4((18428),$$1);
   $98 = $97 | 1;
   $99 = ((($$1)) + 4|0);
   store4($99,$98);
   $100 = (($$1) + ($97)|0);
   store4($100,$97);
   return;
  }
  $101 = $83 & -8;
  $102 = (($101) + ($$1363))|0;
  $103 = $83 >>> 3;
  $104 = ($83>>>0)<(256);
  do {
   if ($104) {
    $105 = ((($2)) + 8|0);
    $106 = load4($105);
    $107 = ((($2)) + 12|0);
    $108 = load4($107);
    $109 = ($108|0)==($106|0);
    if ($109) {
     $110 = 1 << $103;
     $111 = $110 ^ -1;
     $112 = load4(18408);
     $113 = $112 & $111;
     store4(18408,$113);
     break;
    } else {
     $114 = ((($106)) + 12|0);
     store4($114,$108);
     $115 = ((($108)) + 8|0);
     store4($115,$106);
     break;
    }
   } else {
    $116 = ((($2)) + 24|0);
    $117 = load4($116);
    $118 = ((($2)) + 12|0);
    $119 = load4($118);
    $120 = ($119|0)==($2|0);
    do {
     if ($120) {
      $125 = ((($2)) + 16|0);
      $126 = ((($125)) + 4|0);
      $127 = load4($126);
      $128 = ($127|0)==(0|0);
      if ($128) {
       $129 = load4($125);
       $130 = ($129|0)==(0|0);
       if ($130) {
        $$3380 = 0;
        break;
       } else {
        $$1378$ph = $129;$$1382$ph = $125;
       }
      } else {
       $$1378$ph = $127;$$1382$ph = $126;
      }
      $$1378 = $$1378$ph;$$1382 = $$1382$ph;
      while(1) {
       $131 = ((($$1378)) + 20|0);
       $132 = load4($131);
       $133 = ($132|0)==(0|0);
       if ($133) {
        $134 = ((($$1378)) + 16|0);
        $135 = load4($134);
        $136 = ($135|0)==(0|0);
        if ($136) {
         break;
        } else {
         $$1378$be = $135;$$1382$be = $134;
        }
       } else {
        $$1378$be = $132;$$1382$be = $131;
       }
       $$1378 = $$1378$be;$$1382 = $$1382$be;
      }
      store4($$1382,0);
      $$3380 = $$1378;
     } else {
      $121 = ((($2)) + 8|0);
      $122 = load4($121);
      $123 = ((($122)) + 12|0);
      store4($123,$119);
      $124 = ((($119)) + 8|0);
      store4($124,$122);
      $$3380 = $119;
     }
    } while(0);
    $137 = ($117|0)==(0|0);
    if (!($137)) {
     $138 = ((($2)) + 28|0);
     $139 = load4($138);
     $140 = (18712 + ($139<<2)|0);
     $141 = load4($140);
     $142 = ($141|0)==($2|0);
     if ($142) {
      store4($140,$$3380);
      $cond4 = ($$3380|0)==(0|0);
      if ($cond4) {
       $143 = 1 << $139;
       $144 = $143 ^ -1;
       $145 = load4((18412));
       $146 = $145 & $144;
       store4((18412),$146);
       break;
      }
     } else {
      $147 = ((($117)) + 16|0);
      $148 = load4($147);
      $149 = ($148|0)==($2|0);
      $150 = ((($117)) + 20|0);
      $$sink24 = $149 ? $147 : $150;
      store4($$sink24,$$3380);
      $151 = ($$3380|0)==(0|0);
      if ($151) {
       break;
      }
     }
     $152 = ((($$3380)) + 24|0);
     store4($152,$117);
     $153 = ((($2)) + 16|0);
     $154 = load4($153);
     $155 = ($154|0)==(0|0);
     if (!($155)) {
      $156 = ((($$3380)) + 16|0);
      store4($156,$154);
      $157 = ((($154)) + 24|0);
      store4($157,$$3380);
     }
     $158 = ((($153)) + 4|0);
     $159 = load4($158);
     $160 = ($159|0)==(0|0);
     if (!($160)) {
      $161 = ((($$3380)) + 20|0);
      store4($161,$159);
      $162 = ((($159)) + 24|0);
      store4($162,$$3380);
     }
    }
   }
  } while(0);
  $163 = $102 | 1;
  $164 = ((($$1)) + 4|0);
  store4($164,$163);
  $165 = (($$1) + ($102)|0);
  store4($165,$102);
  $166 = load4((18428));
  $167 = ($$1|0)==($166|0);
  if ($167) {
   store4((18416),$102);
   return;
  } else {
   $$2 = $102;
  }
 } else {
  $168 = $83 & -2;
  store4($82,$168);
  $169 = $$1363 | 1;
  $170 = ((($$1)) + 4|0);
  store4($170,$169);
  $171 = (($$1) + ($$1363)|0);
  store4($171,$$1363);
  $$2 = $$1363;
 }
 $172 = $$2 >>> 3;
 $173 = ($$2>>>0)<(256);
 if ($173) {
  $174 = $172 << 1;
  $175 = (18448 + ($174<<2)|0);
  $176 = load4(18408);
  $177 = 1 << $172;
  $178 = $176 & $177;
  $179 = ($178|0)==(0);
  if ($179) {
   $180 = $176 | $177;
   store4(18408,$180);
   $$pre = ((($175)) + 8|0);
   $$0383 = $175;$$pre$phiZ2D = $$pre;
  } else {
   $181 = ((($175)) + 8|0);
   $182 = load4($181);
   $$0383 = $182;$$pre$phiZ2D = $181;
  }
  store4($$pre$phiZ2D,$$1);
  $183 = ((($$0383)) + 12|0);
  store4($183,$$1);
  $184 = ((($$1)) + 8|0);
  store4($184,$$0383);
  $185 = ((($$1)) + 12|0);
  store4($185,$175);
  return;
 }
 $186 = $$2 >>> 8;
 $187 = ($186|0)==(0);
 if ($187) {
  $$0376 = 0;
 } else {
  $188 = ($$2>>>0)>(16777215);
  if ($188) {
   $$0376 = 31;
  } else {
   $189 = (($186) + 1048320)|0;
   $190 = $189 >>> 16;
   $191 = $190 & 8;
   $192 = $186 << $191;
   $193 = (($192) + 520192)|0;
   $194 = $193 >>> 16;
   $195 = $194 & 4;
   $196 = $195 | $191;
   $197 = $192 << $195;
   $198 = (($197) + 245760)|0;
   $199 = $198 >>> 16;
   $200 = $199 & 2;
   $201 = $196 | $200;
   $202 = (14 - ($201))|0;
   $203 = $197 << $200;
   $204 = $203 >>> 15;
   $205 = (($202) + ($204))|0;
   $206 = $205 << 1;
   $207 = (($205) + 7)|0;
   $208 = $$2 >>> $207;
   $209 = $208 & 1;
   $210 = $209 | $206;
   $$0376 = $210;
  }
 }
 $211 = (18712 + ($$0376<<2)|0);
 $212 = ((($$1)) + 28|0);
 store4($212,$$0376);
 $213 = ((($$1)) + 16|0);
 $214 = ((($$1)) + 20|0);
 store4($214,0);
 store4($213,0);
 $215 = load4((18412));
 $216 = 1 << $$0376;
 $217 = $215 & $216;
 $218 = ($217|0)==(0);
 if ($218) {
  $219 = $215 | $216;
  store4((18412),$219);
  store4($211,$$1);
  $220 = ((($$1)) + 24|0);
  store4($220,$211);
  $221 = ((($$1)) + 12|0);
  store4($221,$$1);
  $222 = ((($$1)) + 8|0);
  store4($222,$$1);
  return;
 }
 $223 = load4($211);
 $224 = ((($223)) + 4|0);
 $225 = load4($224);
 $226 = $225 & -8;
 $227 = ($226|0)==($$2|0);
 L104: do {
  if ($227) {
   $$0365$lcssa = $223;
  } else {
   $228 = ($$0376|0)==(31);
   $229 = $$0376 >>> 1;
   $230 = (25 - ($229))|0;
   $231 = $228 ? 0 : $230;
   $232 = $$2 << $231;
   $$03649 = $232;$$03658 = $223;
   while(1) {
    $239 = $$03649 >>> 31;
    $240 = (((($$03658)) + 16|0) + ($239<<2)|0);
    $235 = load4($240);
    $241 = ($235|0)==(0|0);
    if ($241) {
     break;
    }
    $233 = $$03649 << 1;
    $234 = ((($235)) + 4|0);
    $236 = load4($234);
    $237 = $236 & -8;
    $238 = ($237|0)==($$2|0);
    if ($238) {
     $$0365$lcssa = $235;
     break L104;
    } else {
     $$03649 = $233;$$03658 = $235;
    }
   }
   store4($240,$$1);
   $242 = ((($$1)) + 24|0);
   store4($242,$$03658);
   $243 = ((($$1)) + 12|0);
   store4($243,$$1);
   $244 = ((($$1)) + 8|0);
   store4($244,$$1);
   return;
  }
 } while(0);
 $245 = ((($$0365$lcssa)) + 8|0);
 $246 = load4($245);
 $247 = ((($246)) + 12|0);
 store4($247,$$1);
 store4($245,$$1);
 $248 = ((($$1)) + 8|0);
 store4($248,$246);
 $249 = ((($$1)) + 12|0);
 store4($249,$$0365$lcssa);
 $250 = ((($$1)) + 24|0);
 store4($250,0);
 return;
}
function ___stdio_close($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = ((($0)) + 60|0);
 $2 = load4($1);
 $3 = (_dummy_731($2)|0);
 store4($vararg_buffer,$3);
 $4 = (___syscall6(6,($vararg_buffer|0))|0);
 $5 = (___syscall_ret($4)|0);
 STACKTOP = sp;return ($5|0);
}
function ___stdio_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$04756 = 0, $$04855 = 0, $$04954 = 0, $$051 = 0, $$1 = 0, $$150 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0;
 var $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer3 = sp + 32|0;
 $vararg_buffer = sp + 16|0;
 $3 = sp;
 $4 = ((($0)) + 28|0);
 $5 = load4($4);
 store4($3,$5);
 $6 = ((($3)) + 4|0);
 $7 = ((($0)) + 20|0);
 $8 = load4($7);
 $9 = (($8) - ($5))|0;
 store4($6,$9);
 $10 = ((($3)) + 8|0);
 store4($10,$1);
 $11 = ((($3)) + 12|0);
 store4($11,$2);
 $12 = (($9) + ($2))|0;
 $13 = ((($0)) + 60|0);
 $14 = load4($13);
 $15 = $3;
 store4($vararg_buffer,$14);
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 store4($vararg_ptr1,$15);
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 store4($vararg_ptr2,2);
 $16 = (___syscall146(146,($vararg_buffer|0))|0);
 $17 = (___syscall_ret($16)|0);
 $18 = ($12|0)==($17|0);
 L1: do {
  if ($18) {
   label = 3;
  } else {
   $$04756 = 2;$$04855 = $12;$$04954 = $3;$26 = $17;
   while(1) {
    $27 = ($26|0)<(0);
    if ($27) {
     break;
    }
    $35 = (($$04855) - ($26))|0;
    $36 = ((($$04954)) + 4|0);
    $37 = load4($36);
    $38 = ($26>>>0)>($37>>>0);
    $39 = ((($$04954)) + 8|0);
    $$150 = $38 ? $39 : $$04954;
    $40 = $38 << 31 >> 31;
    $$1 = (($$04756) + ($40))|0;
    $41 = $38 ? $37 : 0;
    $$0 = (($26) - ($41))|0;
    $42 = load4($$150);
    $43 = (($42) + ($$0)|0);
    store4($$150,$43);
    $44 = ((($$150)) + 4|0);
    $45 = load4($44);
    $46 = (($45) - ($$0))|0;
    store4($44,$46);
    $47 = load4($13);
    $48 = $$150;
    store4($vararg_buffer3,$47);
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    store4($vararg_ptr6,$48);
    $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
    store4($vararg_ptr7,$$1);
    $49 = (___syscall146(146,($vararg_buffer3|0))|0);
    $50 = (___syscall_ret($49)|0);
    $51 = ($35|0)==($50|0);
    if ($51) {
     label = 3;
     break L1;
    } else {
     $$04756 = $$1;$$04855 = $35;$$04954 = $$150;$26 = $50;
    }
   }
   $28 = ((($0)) + 16|0);
   store4($28,0);
   store4($4,0);
   store4($7,0);
   $29 = load4($0);
   $30 = $29 | 32;
   store4($0,$30);
   $31 = ($$04756|0)==(2);
   if ($31) {
    $$051 = 0;
   } else {
    $32 = ((($$04954)) + 4|0);
    $33 = load4($32);
    $34 = (($2) - ($33))|0;
    $$051 = $34;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $19 = ((($0)) + 44|0);
  $20 = load4($19);
  $21 = ((($0)) + 48|0);
  $22 = load4($21);
  $23 = (($20) + ($22)|0);
  $24 = ((($0)) + 16|0);
  store4($24,$23);
  $25 = $20;
  store4($4,$25);
  store4($7,$25);
  $$051 = $2;
 }
 STACKTOP = sp;return ($$051|0);
}
function ___stdio_seek($0,$1,$2) {
 $0 = $0|0;
 $1 = i64($1);
 $2 = $2|0;
 var $$pre = i64(), $10 = 0, $11 = 0, $12 = 0, $13 = i64(), $3 = 0, $4 = 0, $5 = 0, $6 = i64(), $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp + 8|0;
 $3 = sp;
 $4 = ((($0)) + 60|0);
 $5 = load4($4);
 $6 = i64_lshr($1,i64_const(32,0));
 $7 = i64_trunc($6);
 $8 = i64_trunc($1);
 $9 = $3;
 store4($vararg_buffer,$5);
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 store4($vararg_ptr1,$7);
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 store4($vararg_ptr2,$8);
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 store4($vararg_ptr3,$9);
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 store4($vararg_ptr4,$2);
 $10 = (___syscall140(140,($vararg_buffer|0))|0);
 $11 = (___syscall_ret($10)|0);
 $12 = ($11|0)<(0);
 if ($12) {
  store8($3,i64_const(4294967295,4294967295));
  $13 = i64_const(4294967295,4294967295);
 } else {
  $$pre = load8($3);
  $13 = $$pre;
 }
 STACKTOP = sp;return (i64($13));
}
function ___syscall_ret($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(4294963200);
 if ($1) {
  $2 = (0 - ($0))|0;
  $3 = (___errno_location()|0);
  store4($3,$2);
  $$0 = -1;
 } else {
  $$0 = $0;
 }
 return ($$0|0);
}
function ___errno_location() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (18968|0);
}
function _dummy_731($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($0|0);
}
function ___stdio_read($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$cast = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp + 16|0;
 $3 = sp;
 store4($3,$1);
 $4 = ((($3)) + 4|0);
 $5 = ((($0)) + 48|0);
 $6 = load4($5);
 $7 = ($6|0)!=(0);
 $8 = $7&1;
 $9 = (($2) - ($8))|0;
 store4($4,$9);
 $10 = ((($3)) + 8|0);
 $11 = ((($0)) + 44|0);
 $12 = load4($11);
 store4($10,$12);
 $13 = ((($3)) + 12|0);
 store4($13,$6);
 $14 = ((($0)) + 60|0);
 $15 = load4($14);
 $16 = $3;
 store4($vararg_buffer,$15);
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 store4($vararg_ptr1,$16);
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 store4($vararg_ptr2,2);
 $17 = (___syscall145(145,($vararg_buffer|0))|0);
 $18 = (___syscall_ret($17)|0);
 $19 = ($18|0)<(1);
 if ($19) {
  $20 = $18 & 48;
  $21 = $20 ^ 16;
  $22 = load4($0);
  $23 = $22 | $21;
  store4($0,$23);
  $$0 = $18;
 } else {
  $24 = load4($4);
  $25 = ($18>>>0)>($24>>>0);
  if ($25) {
   $26 = (($18) - ($24))|0;
   $27 = load4($11);
   $28 = ((($0)) + 4|0);
   store4($28,$27);
   $$cast = $27;
   $29 = (($$cast) + ($26)|0);
   $30 = ((($0)) + 8|0);
   store4($30,$29);
   $31 = load4($5);
   $32 = ($31|0)==(0);
   if ($32) {
    $$0 = $2;
   } else {
    $33 = ((($$cast)) + 1|0);
    store4($28,$33);
    $34 = load1($$cast);
    $35 = (($2) + -1)|0;
    $36 = (($1) + ($35)|0);
    store1($36,$34);
    $$0 = $2;
   }
  } else {
   $$0 = $18;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___stdout_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $3 = sp + 16|0;
 $4 = ((($0)) + 36|0);
 store4($4,1);
 $5 = load4($0);
 $6 = $5 & 64;
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = ((($0)) + 60|0);
  $9 = load4($8);
  $10 = $3;
  store4($vararg_buffer,$9);
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  store4($vararg_ptr1,21523);
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  store4($vararg_ptr2,$10);
  $11 = (___syscall54(54,($vararg_buffer|0))|0);
  $12 = ($11|0)==(0);
  if (!($12)) {
   $13 = ((($0)) + 75|0);
   store1($13,-1);
  }
 }
 $14 = (___stdio_write($0,$1,$2)|0);
 STACKTOP = sp;return ($14|0);
}
function _tolower($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_isupper($0)|0);
 $2 = ($1|0)==(0);
 $3 = $0 | 32;
 $$0 = $2 ? $0 : $3;
 return ($$0|0);
}
function _isupper($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -65)|0;
 $2 = ($1>>>0)<(26);
 $3 = $2&1;
 return ($3|0);
}
function ___shlim($0,$1) {
 $0 = $0|0;
 $1 = i64($1);
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = i64(), $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 112|0);
 store8($2,$1);
 $3 = ((($0)) + 8|0);
 $4 = load4($3);
 $5 = ((($0)) + 4|0);
 $6 = load4($5);
 $7 = (($4) - ($6))|0;
 $8 = i64_sext($7);
 $9 = ((($0)) + 120|0);
 store8($9,$8);
 $10 = i64_ne($1,i64_const(0,0));
 $11 = i64_sgt($8,$1);
 $or$cond = $10 & $11;
 if ($or$cond) {
  $12 = $6;
  $13 = i64_trunc($1);
  $14 = (($12) + ($13)|0);
  $15 = ((($0)) + 104|0);
  store4($15,$14);
 } else {
  $16 = ((($0)) + 104|0);
  store4($16,$4);
 }
 return;
}
function ___shgetc($0) {
 $0 = $0|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert28 = 0, $$pre = 0, $$pre29 = 0, $1 = 0, $10 = i64(), $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = i64(), $18 = 0, $19 = i64(), $2 = i64(), $20 = i64(), $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = i64(), $35 = 0, $36 = i64(), $37 = i64(), $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = i64(), $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 112|0);
 $2 = load8($1);
 $3 = i64_eq($2,i64_const(0,0));
 if ($3) {
  label = 3;
 } else {
  $4 = ((($0)) + 120|0);
  $5 = load8($4);
  $6 = i64_slt($5,$2);
  if ($6) {
   label = 3;
  } else {
   label = 4;
  }
 }
 if ((label|0) == 3) {
  $7 = (___uflow($0)|0);
  $8 = ($7|0)<(0);
  if ($8) {
   label = 4;
  } else {
   $10 = load8($1);
   $11 = i64_eq($10,i64_const(0,0));
   $$phi$trans$insert = ((($0)) + 8|0);
   $$pre = load4($$phi$trans$insert);
   if ($11) {
    $12 = $$pre;
    $45 = $12;
    label = 9;
   } else {
    $13 = ((($0)) + 4|0);
    $14 = load4($13);
    $15 = $14;
    $16 = (($$pre) - ($15))|0;
    $17 = i64_sext($16);
    $18 = ((($0)) + 120|0);
    $19 = load8($18);
    $20 = i64_sub($10,$19);
    $21 = i64_sgt($20,$17);
    $22 = $$pre;
    if ($21) {
     $45 = $22;
     label = 9;
    } else {
     $23 = i64_trunc($20);
     $24 = (($23) + -1)|0;
     $25 = (($14) + ($24)|0);
     $26 = ((($0)) + 104|0);
     store4($26,$25);
     $28 = $22;
    }
   }
   if ((label|0) == 9) {
    $27 = ((($0)) + 104|0);
    store4($27,$$pre);
    $28 = $45;
   }
   $29 = ($28|0)==(0|0);
   $$phi$trans$insert28 = ((($0)) + 4|0);
   if ($29) {
    $$pre29 = load4($$phi$trans$insert28);
    $40 = $$pre29;
   } else {
    $30 = load4($$phi$trans$insert28);
    $31 = $28;
    $32 = (($31) + 1)|0;
    $33 = (($32) - ($30))|0;
    $34 = i64_sext($33);
    $35 = ((($0)) + 120|0);
    $36 = load8($35);
    $37 = i64_add($36,$34);
    store8($35,$37);
    $38 = $30;
    $40 = $38;
   }
   $39 = ((($40)) + -1|0);
   $41 = load1($39);
   $42 = $41&255;
   $43 = ($7|0)==($42|0);
   if ($43) {
    $$0 = $7;
   } else {
    $44 = $7&255;
    store1($39,$44);
    $$0 = $7;
   }
  }
 }
 if ((label|0) == 4) {
  $9 = ((($0)) + 104|0);
  store4($9,0);
  $$0 = -1;
 }
 return ($$0|0);
}
function _isspace($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $narrow = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(32);
 $2 = (($0) + -9)|0;
 $3 = ($2>>>0)<(5);
 $narrow = $1 | $3;
 $4 = $narrow&1;
 return ($4|0);
}
function ___uflow($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = (___toread($0)|0);
 $3 = ($2|0)==(0);
 if ($3) {
  $4 = ((($0)) + 32|0);
  $5 = load4($4);
  $6 = (FUNCTION_TABLE_iiii[$5 & 15]($0,$1,1)|0);
  $7 = ($6|0)==(1);
  if ($7) {
   $8 = load1($1);
   $9 = $8&255;
   $$0 = $9;
  } else {
   $$0 = -1;
  }
 } else {
  $$0 = -1;
 }
 STACKTOP = sp;return ($$0|0);
}
function ___toread($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 74|0);
 $2 = load1($1);
 $3 = $2 << 24 >> 24;
 $4 = (($3) + 255)|0;
 $5 = $4 | $3;
 $6 = $5&255;
 store1($1,$6);
 $7 = ((($0)) + 20|0);
 $8 = load4($7);
 $9 = ((($0)) + 28|0);
 $10 = load4($9);
 $11 = ($8>>>0)>($10>>>0);
 if ($11) {
  $12 = ((($0)) + 36|0);
  $13 = load4($12);
  (FUNCTION_TABLE_iiii[$13 & 15]($0,0,0)|0);
 }
 $14 = ((($0)) + 16|0);
 store4($14,0);
 store4($9,0);
 store4($7,0);
 $15 = load4($0);
 $16 = $15 & 4;
 $17 = ($16|0)==(0);
 if ($17) {
  $19 = ((($0)) + 44|0);
  $20 = load4($19);
  $21 = ((($0)) + 48|0);
  $22 = load4($21);
  $23 = (($20) + ($22)|0);
  $24 = ((($0)) + 8|0);
  store4($24,$23);
  $25 = ((($0)) + 4|0);
  store4($25,$23);
  $26 = $15 << 27;
  $sext = $26 >> 31;
  $$0 = $sext;
 } else {
  $18 = $15 | 32;
  store4($0,$18);
  $$0 = -1;
 }
 return ($$0|0);
}
function _toupper($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_islower($0)|0);
 $2 = ($1|0)==(0);
 $3 = $0 & 95;
 $$0 = $2 ? $0 : $3;
 return ($$0|0);
}
function _islower($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -97)|0;
 $2 = ($1>>>0)<(26);
 $3 = $2&1;
 return ($3|0);
}
function _copysign($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $2 = i64(), $3 = i64(), $4 = i64(), $5 = i64(), $6 = i64(), $7 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = i64_bc2i($0);
 $3 = i64_bc2i($1);
 $4 = i64_and($2,i64_const(4294967295,2147483647));
 $5 = i64_and($3,i64_const(0,2147483648));
 $6 = i64_or($5,$4);
 $7 = i64_bc2d($6);
 return (+$7);
}
function _cosh($0) {
 $0 = +$0;
 var $$0 = 0.0, $1 = i64(), $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = i64(), $3 = 0.0, $4 = i64(), $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = i64_bc2i($0);
 $2 = i64_and($1,i64_const(4294967295,2147483647));
 $3 = i64_bc2d($2);
 $4 = i64_lshr($2,i64_const(32,0));
 $5 = i64_trunc($4);
 $6 = ($5>>>0)<(1072049730);
 do {
  if ($6) {
   $7 = ($5>>>0)<(1045430272);
   if ($7) {
    $$0 = 1.0;
   } else {
    $8 = (+_expm1($3));
    $9 = $8 * $8;
    $10 = $8 + 1.0;
    $11 = $10 * 2.0;
    $12 = $9 / $11;
    $13 = $12 + 1.0;
    $$0 = $13;
   }
  } else {
   $14 = ($5>>>0)<(1082535490);
   if ($14) {
    $15 = (+_exp($3));
    $16 = 1.0 / $15;
    $17 = $15 + $16;
    $18 = $17 * 0.5;
    $$0 = $18;
    break;
   } else {
    $19 = (+___expo2($3));
    $$0 = $19;
    break;
   }
  }
 } while(0);
 return (+$$0);
}
function _sinh($0) {
 $0 = +$0;
 var $$0 = 0.0, $1 = i64(), $10 = 0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $3 = i64(), $4 = 0.0, $5 = i64();
 var $6 = 0, $7 = 0, $8 = 0.0, $9 = 0, $spec$select = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = i64_bc2i($0);
 $2 = i64_slt($1,i64_const(0,0));
 $spec$select = $2 ? -0.5 : 0.5;
 $3 = i64_and($1,i64_const(4294967295,2147483647));
 $4 = i64_bc2d($3);
 $5 = i64_lshr($3,i64_const(32,0));
 $6 = i64_trunc($5);
 $7 = ($6>>>0)<(1082535490);
 do {
  if ($7) {
   $8 = (+_expm1($4));
   $9 = ($6>>>0)<(1072693248);
   if (!($9)) {
    $17 = $8 + 1.0;
    $18 = $8 / $17;
    $19 = $8 + $18;
    $20 = $spec$select * $19;
    $$0 = $20;
    break;
   }
   $10 = ($6>>>0)<(1045430272);
   if ($10) {
    $$0 = $0;
   } else {
    $11 = $8 * 2.0;
    $12 = $8 * $8;
    $13 = $8 + 1.0;
    $14 = $12 / $13;
    $15 = $11 - $14;
    $16 = $spec$select * $15;
    $$0 = $16;
   }
  } else {
   $21 = $spec$select * 2.0;
   $22 = (+___expo2($4));
   $23 = $21 * $22;
   $$0 = $23;
  }
 } while(0);
 return (+$$0);
}
function _expm1($0) {
 $0 = +$0;
 var $$0 = 0.0, $$0105 = 0, $$0106 = 0.0, $$0107 = 0.0, $$0109 = 0.0, $$0110 = 0.0, $$0111 = 0.0, $$1 = 0, $$1108 = 0.0, $$sink = 0.0, $$sink113 = 0.0, $1 = i64(), $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0;
 var $18 = 0.0, $19 = 0.0, $2 = i64(), $20 = 0, $21 = 0.0, $22 = 0.0, $23 = 0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0;
 var $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = i64(), $50 = 0.0, $51 = 0, $52 = 0.0, $53 = 0.0;
 var $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0, $7 = 0, $70 = i64(), $71 = i64();
 var $72 = 0.0, $73 = 0, $74 = 0.0, $75 = 0.0, $76 = 0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = i64(), $80 = 0.0, $81 = 0, $82 = i64(), $83 = i64(), $84 = 0, $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = i64();
 var $90 = 0.0, $91 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = i64_bc2i($0);
 $2 = i64_lshr($1,i64_const(32,0));
 $3 = i64_trunc($2);
 $4 = $3 & 2147483647;
 $5 = i64_lshr($1,i64_const(63,0));
 $6 = i64_trunc($5);
 $7 = ($4>>>0)>(1078159481);
 do {
  if ($7) {
   $8 = (i64(___DOUBLE_BITS_261($0)));
   $9 = i64_and($8,i64_const(4294967295,2147483647));
   $10 = i64_ugt($9,i64_const(0,2146435072));
   if ($10) {
    $$0 = $0;
   } else {
    $11 = ($6|0)==(0);
    if ($11) {
     $12 = $0 > 709.78271289338397;
     if ($12) {
      $13 = $0 * 8.9884656743115795E+307;
      $$0 = $13;
     } else {
      label = 11;
     }
    } else {
     $$0 = -1.0;
    }
   }
  } else {
   $14 = ($4>>>0)>(1071001154);
   if (!($14)) {
    $31 = ($4>>>0)<(1016070144);
    if ($31) {
     $$0 = $0;
     break;
    } else {
     $$0106 = $0;$$0111 = 0.0;$$1 = 0;
     label = 14;
     break;
    }
   }
   $15 = ($4>>>0)<(1072734898);
   if ($15) {
    $16 = ($6|0)==(0);
    if ($16) {
     $17 = $0 + -0.69314718036912382;
     $$0105 = 1;$$0109 = $17;$$0110 = 1.9082149292705877E-10;
     label = 12;
     break;
    } else {
     $18 = $0 + 0.69314718036912382;
     $$0105 = -1;$$0109 = $18;$$0110 = -1.9082149292705877E-10;
     label = 12;
     break;
    }
   } else {
    label = 11;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  $19 = $0 * 1.4426950408889634;
  $20 = ($6|0)==(0);
  $21 = $20 ? 0.5 : -0.5;
  $22 = $19 + $21;
  $23 = (~~(($22)));
  $24 = (+($23|0));
  $25 = $24 * 0.69314718036912382;
  $26 = $0 - $25;
  $27 = $24 * 1.9082149292705877E-10;
  $$0105 = $23;$$0109 = $26;$$0110 = $27;
  label = 12;
 }
 if ((label|0) == 12) {
  $28 = $$0109 - $$0110;
  $29 = $$0109 - $28;
  $30 = $29 - $$0110;
  $$0106 = $28;$$0111 = $30;$$1 = $$0105;
  label = 14;
 }
 L18: do {
  if ((label|0) == 14) {
   $32 = $$0106 * 0.5;
   $33 = $$0106 * $32;
   $34 = $33 * 2.0109921818362437E-7;
   $35 = 4.0082178273293624E-6 - $34;
   $36 = $33 * $35;
   $37 = $36 + -7.9365075786748794E-5;
   $38 = $33 * $37;
   $39 = $38 + 0.0015873015872548146;
   $40 = $33 * $39;
   $41 = $40 + -0.033333333333333132;
   $42 = $33 * $41;
   $43 = $42 + 1.0;
   $44 = $32 * $43;
   $45 = 3.0 - $44;
   $46 = $43 - $45;
   $47 = $$0106 * $45;
   $48 = 6.0 - $47;
   $49 = $46 / $48;
   $50 = $33 * $49;
   $51 = ($$1|0)==(0);
   if ($51) {
    $52 = $$0106 * $50;
    $53 = $52 - $33;
    $54 = $$0106 - $53;
    $$0 = $54;
    break;
   }
   $55 = $50 - $$0111;
   $56 = $$0106 * $55;
   $57 = $56 - $$0111;
   $58 = $57 - $33;
   switch ($$1|0) {
   case -1:  {
    $59 = $$0106 - $58;
    $60 = $59 * 0.5;
    $61 = $60 + -0.5;
    $$0 = $61;
    break L18;
    break;
   }
   case 1:  {
    $62 = $$0106 < -0.25;
    if ($62) {
     $63 = $$0106 + 0.5;
     $64 = $58 - $63;
     $65 = $64 * -2.0;
     $$0 = $65;
     break L18;
    } else {
     $66 = $$0106 - $58;
     $67 = $66 * 2.0;
     $68 = $67 + 1.0;
     $$0 = $68;
     break L18;
    }
    break;
   }
   default: {
    $69 = (($$1) + 1023)|0;
    $70 = i64_zext($69>>>0);
    $71 = i64_shl($70,i64_const(52,0));
    $72 = i64_bc2d($71);
    $73 = ($$1>>>0)>(56);
    if ($73) {
     $74 = $$0106 - $58;
     $75 = $74 + 1.0;
     $76 = ($$1|0)==(1024);
     $77 = $75 * 2.0;
     $78 = $77 * 8.9884656743115795E+307;
     $79 = $75 * $72;
     $$0107 = $76 ? $78 : $79;
     $80 = $$0107 + -1.0;
     $$0 = $80;
     break L18;
    }
    $81 = (1023 - ($$1))|0;
    $82 = i64_zext($81>>>0);
    $83 = i64_shl($82,i64_const(52,0));
    $84 = ($$1|0)<(20);
    if ($84) {
     $85 = $$0106 - $58;
     $86 = i64_bc2d($83);
     $87 = 1.0 - $86;
     $$sink = $87;$$sink113 = $85;
    } else {
     $88 = i64_bc2d($83);
     $89 = $58 + $88;
     $90 = $$0106 - $89;
     $$sink = $90;$$sink113 = 1.0;
    }
    $91 = $$sink + $$sink113;
    $$1108 = $91 * $72;
    $$0 = $$1108;
    break L18;
   }
   }
  }
 } while(0);
 return (+$$0);
}
function ___expo2($0) {
 $0 = +$0;
 var $1 = 0.0, $2 = 0.0, $3 = 0.0, $4 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0 + -1416.0996898839683;
 $2 = (+_exp($1));
 $3 = $2 * 2.2471164185778949E+307;
 $4 = $3 * 2.2471164185778949E+307;
 return (+$4);
}
function ___DOUBLE_BITS_261($0) {
 $0 = +$0;
 var $1 = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $1 = i64_bc2i($0);
 return (i64($1));
}
function _strcmp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$011 = 0, $$0710 = 0, $$lcssa = 0, $$lcssa8 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = load1($0);
 $3 = load1($1);
 $4 = ($2<<24>>24)!=($3<<24>>24);
 $5 = ($2<<24>>24)==(0);
 $or$cond9 = $5 | $4;
 if ($or$cond9) {
  $$lcssa = $3;$$lcssa8 = $2;
 } else {
  $$011 = $1;$$0710 = $0;
  while(1) {
   $6 = ((($$0710)) + 1|0);
   $7 = ((($$011)) + 1|0);
   $8 = load1($6);
   $9 = load1($7);
   $10 = ($8<<24>>24)!=($9<<24>>24);
   $11 = ($8<<24>>24)==(0);
   $or$cond = $11 | $10;
   if ($or$cond) {
    $$lcssa = $9;$$lcssa8 = $8;
    break;
   } else {
    $$011 = $7;$$0710 = $6;
   }
  }
 }
 $12 = $$lcssa8&255;
 $13 = $$lcssa&255;
 $14 = (($12) - ($13))|0;
 return ($14|0);
}
function _memcmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$01318 = 0, $$01417 = 0, $$019 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $14 = 0;
  } else {
   $$01318 = $0;$$01417 = $2;$$019 = $1;
   while(1) {
    $4 = load1($$01318);
    $5 = load1($$019);
    $6 = ($4<<24>>24)==($5<<24>>24);
    if (!($6)) {
     break;
    }
    $7 = (($$01417) + -1)|0;
    $8 = ((($$01318)) + 1|0);
    $9 = ((($$019)) + 1|0);
    $10 = ($7|0)==(0);
    if ($10) {
     $14 = 0;
     break L1;
    } else {
     $$01318 = $8;$$01417 = $7;$$019 = $9;
    }
   }
   $11 = $4&255;
   $12 = $5&255;
   $13 = (($11) - ($12))|0;
   $14 = $13;
  }
 } while(0);
 return ($14|0);
}
function _strncmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$01823 = 0, $$01925 = 0, $$01925$in = 0, $$020 = 0, $$024 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond21 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if ($3) {
  $$020 = 0;
 } else {
  $4 = load1($0);
  $5 = ($4<<24>>24)==(0);
  L3: do {
   if ($5) {
    $$0$lcssa = $1;$$lcssa = 0;
   } else {
    $$01823 = $0;$$01925$in = $2;$$024 = $1;$9 = $4;
    while(1) {
     $$01925 = (($$01925$in) + -1)|0;
     $6 = load1($$024);
     $7 = ($6<<24>>24)!=(0);
     $8 = ($$01925|0)!=(0);
     $or$cond = $8 & $7;
     $10 = ($9<<24>>24)==($6<<24>>24);
     $or$cond21 = $10 & $or$cond;
     if (!($or$cond21)) {
      $$0$lcssa = $$024;$$lcssa = $9;
      break L3;
     }
     $11 = ((($$01823)) + 1|0);
     $12 = ((($$024)) + 1|0);
     $13 = load1($11);
     $14 = ($13<<24>>24)==(0);
     if ($14) {
      $$0$lcssa = $12;$$lcssa = 0;
      break;
     } else {
      $$01823 = $11;$$01925$in = $$01925;$$024 = $12;$9 = $13;
     }
    }
   }
  } while(0);
  $15 = $$lcssa&255;
  $16 = load1($$0$lcssa);
  $17 = $16&255;
  $18 = (($15) - ($17))|0;
  $$020 = $18;
 }
 return ($$020|0);
}
function _isdigit($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -48)|0;
 $2 = ($1>>>0)<(10);
 $3 = $2&1;
 return ($3|0);
}
function _vsnprintf($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$014 = 0, $$015 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0;
 $4 = sp + 144|0;
 $5 = sp;
 _memcpy(($5|0),(7168|0),144)|0;
 $6 = (($1) + -1)|0;
 $7 = ($6>>>0)>(2147483646);
 if ($7) {
  $8 = ($1|0)==(0);
  if ($8) {
   $$014 = $4;$$015 = 1;
   label = 4;
  } else {
   $9 = (___errno_location()|0);
   store4($9,75);
   $$0 = -1;
  }
 } else {
  $$014 = $0;$$015 = $1;
  label = 4;
 }
 if ((label|0) == 4) {
  $10 = $$014;
  $11 = (-2 - ($10))|0;
  $12 = ($$015>>>0)>($11>>>0);
  $spec$select = $12 ? $11 : $$015;
  $13 = ((($5)) + 48|0);
  store4($13,$spec$select);
  $14 = ((($5)) + 20|0);
  store4($14,$$014);
  $15 = ((($5)) + 44|0);
  store4($15,$$014);
  $16 = (($$014) + ($spec$select)|0);
  $17 = ((($5)) + 16|0);
  store4($17,$16);
  $18 = ((($5)) + 28|0);
  store4($18,$16);
  $19 = (_vfprintf($5,$2,$3)|0);
  $20 = ($spec$select|0)==(0);
  if ($20) {
   $$0 = $19;
  } else {
   $21 = load4($14);
   $22 = load4($17);
   $23 = ($21|0)==($22|0);
   $24 = $23 << 31 >> 31;
   $25 = (($21) + ($24)|0);
   store1($25,0);
   $$0 = $19;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _vfprintf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (___vfprintf_internal($0,$1,$2,1,10)|0);
 return ($3|0);
}
function _fmt_fp($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = +$1;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$ = 0, $$0 = 0, $$0463$lcssa = 0, $$0463588 = 0, $$0464599 = 0, $$0471 = 0.0, $$0479 = 0, $$0487657 = 0, $$0488 = 0, $$0488669 = 0, $$0488671 = 0, $$0497670 = 0, $$0498 = 0, $$0511586 = 0.0, $$0512 = 0, $$0513 = 0, $$0516652 = 0, $$0522 = 0, $$0523 = 0, $$0525 = 0;
 var $$0527 = 0, $$0529 = 0, $$0529$in646 = 0, $$0532651 = 0, $$1465 = 0, $$1467 = 0.0, $$1469 = 0.0, $$1472 = 0.0, $$1480 = 0, $$1482$lcssa = 0, $$1482683 = 0, $$1489656 = 0, $$1499 = 0, $$1510587 = 0, $$1514$lcssa = 0, $$1514614 = 0, $$1517 = 0, $$1526 = 0, $$1528 = 0, $$1530621 = 0;
 var $$1533$lcssa = 0, $$1533645 = 0, $$1604 = 0, $$2 = 0, $$2473 = 0.0, $$2476 = 0, $$2483 = 0, $$2490$lcssa = 0, $$2490638 = 0, $$2500$lcssa = 0, $$2500682 = 0, $$2515 = 0, $$2518634 = 0, $$2531 = 0, $$2534633 = 0, $$3 = 0.0, $$3477 = 0, $$3484$lcssa = 0, $$3484663 = 0, $$3501$lcssa = 0;
 var $$3501676 = 0, $$3535620 = 0, $$4 = 0.0, $$4478$lcssa = 0, $$4478594 = 0, $$4492 = 0, $$4502$lcssa = 0, $$4502662 = 0, $$4520 = 0, $$5$lcssa = 0, $$5486$lcssa = 0, $$5486639 = 0, $$5493603 = 0, $$5503 = 0, $$5521 = 0, $$560 = 0, $$5609 = 0, $$6 = 0, $$6494593 = 0, $$7495608 = 0;
 var $$8 = 0, $$8506 = 0, $$9 = 0, $$9507$lcssa = 0, $$9507625 = 0, $$lcssa583 = 0, $$lobit = 0, $$neg = 0, $$neg571 = 0, $$not = 0, $$pn = 0, $$pr = 0, $$pr564 = 0, $$pre = 0, $$pre$phi717Z2D = 0, $$pre$phi718Z2D = 0, $$pre$phiZ2D = i64(), $$pre715 = i64(), $$pre720 = 0, $$sink757 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0.0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = i64(), $120 = 0, $121 = 0.0, $122 = 0.0, $123 = 0.0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = i64(), $132 = 0, $133 = i64(), $134 = i64(), $135 = i64();
 var $136 = i64(), $137 = i64(), $138 = i64(), $139 = i64(), $14 = 0.0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = i64(), $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0.0, $24 = 0, $240 = 0.0, $241 = 0, $242 = 0.0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0.0, $310 = i64(), $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0.0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = i64(), $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = i64(), $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = i64(), $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0.0, $48 = 0, $49 = 0, $50 = 0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = i64();
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $not$ = 0, $or$cond = 0, $or$cond3$not = 0, $or$cond543 = 0, $or$cond546 = 0, $or$cond556 = 0, $or$cond559 = 0, $or$cond6 = 0, $scevgep711 = 0, $scevgep711712 = 0, $spec$select = 0, $spec$select539 = 0, $spec$select540 = 0, $spec$select540722 = 0, $spec$select540723 = 0, $spec$select541 = 0, $spec$select544 = 0.0, $spec$select547 = 0, $spec$select548 = 0;
 var $spec$select549 = 0, $spec$select551 = 0, $spec$select554 = 0, $spec$select557 = 0, $spec$select561 = 0.0, $spec$select562 = 0, $spec$select563 = 0, $spec$select565 = 0, $spec$select566 = 0, $spec$select567 = 0.0, $spec$select568 = 0.0, $spec$select569 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560|0;
 $6 = sp + 32|0;
 $7 = sp + 536|0;
 $8 = sp;
 $9 = $8;
 $10 = sp + 540|0;
 store4($7,0);
 $11 = ((($10)) + 12|0);
 $12 = (i64(___DOUBLE_BITS_662($1)));
 $13 = i64_slt($12,i64_const(0,0));
 if ($13) {
  $14 = - $1;
  $$pre715 = (i64(___DOUBLE_BITS_662($14)));
  $$0471 = $14;$$0522 = 1;$$0523 = 16025;$$pre$phiZ2D = $$pre715;
 } else {
  $15 = $4 & 2048;
  $16 = ($15|0)==(0);
  $17 = $4 & 1;
  $18 = ($17|0)==(0);
  $$ = $18 ? (16026) : (16031);
  $spec$select565 = $16 ? $$ : (16028);
  $19 = $4 & 2049;
  $20 = ($19|0)!=(0);
  $spec$select566 = $20&1;
  $$0471 = $1;$$0522 = $spec$select566;$$0523 = $spec$select565;$$pre$phiZ2D = $12;
 }
 $21 = i64_and($$pre$phiZ2D,i64_const(0,2146435072));
 $22 = i64_eq($21,i64_const(0,2146435072));
 do {
  if ($22) {
   $23 = $5 & 32;
   $24 = ($23|0)!=(0);
   $25 = $24 ? 16044 : 16048;
   $26 = ($$0471 != $$0471) | (0.0 != 0.0);
   $27 = $24 ? 16065 : 16052;
   $$0512 = $26 ? $27 : $25;
   $28 = (($$0522) + 3)|0;
   $29 = $4 & -65537;
   _pad_659($0,32,$2,$28,$29);
   _out($0,$$0523,$$0522);
   _out($0,$$0512,3);
   $30 = $4 ^ 8192;
   _pad_659($0,32,$2,$28,$30);
   $$sink757 = $28;
  } else {
   $31 = (+_frexp($$0471,$7));
   $32 = $31 * 2.0;
   $33 = $32 != 0.0;
   if ($33) {
    $34 = load4($7);
    $35 = (($34) + -1)|0;
    store4($7,$35);
   }
   $36 = $5 | 32;
   $37 = ($36|0)==(97);
   if ($37) {
    $38 = $5 & 32;
    $39 = ($38|0)==(0);
    $40 = ((($$0523)) + 9|0);
    $spec$select = $39 ? $$0523 : $40;
    $41 = $$0522 | 2;
    $42 = ($3>>>0)>(11);
    $43 = (12 - ($3))|0;
    $44 = ($43|0)==(0);
    $45 = $42 | $44;
    do {
     if ($45) {
      $$1472 = $32;
     } else {
      $$0511586 = 8.0;$$1510587 = $43;
      while(1) {
       $46 = (($$1510587) + -1)|0;
       $47 = $$0511586 * 16.0;
       $48 = ($46|0)==(0);
       if ($48) {
        break;
       } else {
        $$0511586 = $47;$$1510587 = $46;
       }
      }
      $49 = load1($spec$select);
      $50 = ($49<<24>>24)==(45);
      if ($50) {
       $51 = - $32;
       $52 = $51 - $47;
       $53 = $47 + $52;
       $54 = - $53;
       $$1472 = $54;
       break;
      } else {
       $55 = $32 + $47;
       $56 = $55 - $47;
       $$1472 = $56;
       break;
      }
     }
    } while(0);
    $57 = load4($7);
    $58 = ($57|0)<(0);
    $59 = (0 - ($57))|0;
    $60 = $58 ? $59 : $57;
    $61 = i64_sext($60);
    $62 = (_fmt_u($61,$11)|0);
    $63 = ($62|0)==($11|0);
    if ($63) {
     $64 = ((($10)) + 11|0);
     store1($64,48);
     $$0513 = $64;
    } else {
     $$0513 = $62;
    }
    $65 = $57 >> 31;
    $66 = $65 & 2;
    $67 = (($66) + 43)|0;
    $68 = $67&255;
    $69 = ((($$0513)) + -1|0);
    store1($69,$68);
    $70 = (($5) + 15)|0;
    $71 = $70&255;
    $72 = ((($$0513)) + -2|0);
    store1($72,$71);
    $73 = ($3|0)<(1);
    $74 = $4 & 8;
    $75 = ($74|0)==(0);
    $$0525 = $8;$$2473 = $$1472;
    while(1) {
     $76 = (~~(($$2473)));
     $77 = (4112 + ($76)|0);
     $78 = load1($77);
     $79 = $78&255;
     $80 = $38 | $79;
     $81 = $80&255;
     $82 = ((($$0525)) + 1|0);
     store1($$0525,$81);
     $83 = (+($76|0));
     $84 = $$2473 - $83;
     $85 = $84 * 16.0;
     $86 = $82;
     $87 = (($86) - ($9))|0;
     $88 = ($87|0)==(1);
     if ($88) {
      $89 = $85 == 0.0;
      $or$cond3$not = $73 & $89;
      $or$cond = $75 & $or$cond3$not;
      if ($or$cond) {
       $$1526 = $82;
      } else {
       $90 = ((($$0525)) + 2|0);
       store1($82,46);
       $$1526 = $90;
      }
     } else {
      $$1526 = $82;
     }
     $91 = $85 != 0.0;
     if ($91) {
      $$0525 = $$1526;$$2473 = $85;
     } else {
      break;
     }
    }
    $92 = ($3|0)==(0);
    $$pre720 = $$1526;
    if ($92) {
     label = 25;
    } else {
     $93 = (-2 - ($9))|0;
     $94 = (($93) + ($$pre720))|0;
     $95 = ($94|0)<($3|0);
     if ($95) {
      $96 = $11;
      $97 = $72;
      $98 = (($3) + 2)|0;
      $99 = (($98) + ($96))|0;
      $100 = (($99) - ($97))|0;
      $$0527 = $100;$$pre$phi717Z2D = $96;$$pre$phi718Z2D = $97;
     } else {
      label = 25;
     }
    }
    if ((label|0) == 25) {
     $101 = $11;
     $102 = $72;
     $103 = (($101) - ($9))|0;
     $104 = (($103) - ($102))|0;
     $105 = (($104) + ($$pre720))|0;
     $$0527 = $105;$$pre$phi717Z2D = $101;$$pre$phi718Z2D = $102;
    }
    $106 = (($$0527) + ($41))|0;
    _pad_659($0,32,$2,$106,$4);
    _out($0,$spec$select,$41);
    $107 = $4 ^ 65536;
    _pad_659($0,48,$2,$106,$107);
    $108 = (($$pre720) - ($9))|0;
    _out($0,$8,$108);
    $109 = (($$pre$phi717Z2D) - ($$pre$phi718Z2D))|0;
    $110 = (($108) + ($109))|0;
    $111 = (($$0527) - ($110))|0;
    _pad_659($0,48,$111,0,0);
    _out($0,$72,$109);
    $112 = $4 ^ 8192;
    _pad_659($0,32,$2,$106,$112);
    $$sink757 = $106;
    break;
   }
   $113 = ($3|0)<(0);
   $spec$select539 = $113 ? 6 : $3;
   if ($33) {
    $114 = $32 * 268435456.0;
    $115 = load4($7);
    $116 = (($115) + -28)|0;
    store4($7,$116);
    $$3 = $114;$$pr = $116;
   } else {
    $$pre = load4($7);
    $$3 = $32;$$pr = $$pre;
   }
   $117 = ($$pr|0)<(0);
   $118 = ((($6)) + 288|0);
   $$0498 = $117 ? $6 : $118;
   $$1499 = $$0498;$$4 = $$3;
   while(1) {
    $119 = (~~(($$4))>>>0);
    store4($$1499,$119);
    $120 = ((($$1499)) + 4|0);
    $121 = (+($119>>>0));
    $122 = $$4 - $121;
    $123 = $122 * 1.0E+9;
    $124 = $123 != 0.0;
    if ($124) {
     $$1499 = $120;$$4 = $123;
    } else {
     break;
    }
   }
   $125 = $$0498;
   $126 = ($$pr|0)>(0);
   if ($126) {
    $$1482683 = $$0498;$$2500682 = $120;$127 = $$pr;
    while(1) {
     $128 = ($127|0)<(29);
     $129 = $128 ? $127 : 29;
     $$0488669 = ((($$2500682)) + -4|0);
     $130 = ($$0488669>>>0)<($$1482683>>>0);
     if ($130) {
      $$2483 = $$1482683;
     } else {
      $131 = i64_zext($129>>>0);
      $$0488671 = $$0488669;$$0497670 = 0;
      while(1) {
       $132 = load4($$0488671);
       $133 = i64_zext($132>>>0);
       $134 = i64_shl($133,$131);
       $135 = i64_zext($$0497670>>>0);
       $136 = i64_add($134,$135);
       $137 = i64_udiv($136,i64_const(1000000000,0));
       $138 = i64_mul($137,i64_const(1000000000,0));
       $139 = i64_sub($136,$138);
       $140 = i64_trunc($139);
       store4($$0488671,$140);
       $141 = i64_trunc($137);
       $$0488 = ((($$0488671)) + -4|0);
       $142 = ($$0488>>>0)<($$1482683>>>0);
       if ($142) {
        break;
       } else {
        $$0488671 = $$0488;$$0497670 = $141;
       }
      }
      $143 = ($141|0)==(0);
      if ($143) {
       $$2483 = $$1482683;
      } else {
       $144 = ((($$1482683)) + -4|0);
       store4($144,$141);
       $$2483 = $144;
      }
     }
     $145 = ($$2500682>>>0)>($$2483>>>0);
     L57: do {
      if ($145) {
       $$3501676 = $$2500682;
       while(1) {
        $146 = ((($$3501676)) + -4|0);
        $148 = load4($146);
        $149 = ($148|0)==(0);
        if (!($149)) {
         $$3501$lcssa = $$3501676;
         break L57;
        }
        $147 = ($146>>>0)>($$2483>>>0);
        if ($147) {
         $$3501676 = $146;
        } else {
         $$3501$lcssa = $146;
         break;
        }
       }
      } else {
       $$3501$lcssa = $$2500682;
      }
     } while(0);
     $150 = load4($7);
     $151 = (($150) - ($129))|0;
     store4($7,$151);
     $152 = ($151|0)>(0);
     if ($152) {
      $$1482683 = $$2483;$$2500682 = $$3501$lcssa;$127 = $151;
     } else {
      $$1482$lcssa = $$2483;$$2500$lcssa = $$3501$lcssa;$$pr564 = $151;
      break;
     }
    }
   } else {
    $$1482$lcssa = $$0498;$$2500$lcssa = $120;$$pr564 = $$pr;
   }
   $153 = ($$pr564|0)<(0);
   if ($153) {
    $154 = (($spec$select539) + 25)|0;
    $155 = (($154|0) / 9)&-1;
    $156 = (($155) + 1)|0;
    $157 = ($36|0)==(102);
    $$3484663 = $$1482$lcssa;$$4502662 = $$2500$lcssa;$159 = $$pr564;
    while(1) {
     $158 = (0 - ($159))|0;
     $160 = ($158|0)<(9);
     $161 = $160 ? $158 : 9;
     $162 = ($$3484663>>>0)<($$4502662>>>0);
     if ($162) {
      $166 = 1 << $161;
      $167 = (($166) + -1)|0;
      $168 = 1000000000 >>> $161;
      $$0487657 = 0;$$1489656 = $$3484663;
      while(1) {
       $169 = load4($$1489656);
       $170 = $169 & $167;
       $171 = $169 >>> $161;
       $172 = (($171) + ($$0487657))|0;
       store4($$1489656,$172);
       $173 = Math_imul($170, $168)|0;
       $174 = ((($$1489656)) + 4|0);
       $175 = ($174>>>0)<($$4502662>>>0);
       if ($175) {
        $$0487657 = $173;$$1489656 = $174;
       } else {
        break;
       }
      }
      $176 = load4($$3484663);
      $177 = ($176|0)==(0);
      $178 = ((($$3484663)) + 4|0);
      $spec$select540 = $177 ? $178 : $$3484663;
      $179 = ($173|0)==(0);
      if ($179) {
       $$5503 = $$4502662;$spec$select540723 = $spec$select540;
      } else {
       $180 = ((($$4502662)) + 4|0);
       store4($$4502662,$173);
       $$5503 = $180;$spec$select540723 = $spec$select540;
      }
     } else {
      $163 = load4($$3484663);
      $164 = ($163|0)==(0);
      $165 = ((($$3484663)) + 4|0);
      $spec$select540722 = $164 ? $165 : $$3484663;
      $$5503 = $$4502662;$spec$select540723 = $spec$select540722;
     }
     $181 = $157 ? $$0498 : $spec$select540723;
     $182 = $$5503;
     $183 = $181;
     $184 = (($182) - ($183))|0;
     $185 = $184 >> 2;
     $186 = ($185|0)>($156|0);
     $187 = (($181) + ($156<<2)|0);
     $spec$select541 = $186 ? $187 : $$5503;
     $188 = load4($7);
     $189 = (($188) + ($161))|0;
     store4($7,$189);
     $190 = ($189|0)<(0);
     if ($190) {
      $$3484663 = $spec$select540723;$$4502662 = $spec$select541;$159 = $189;
     } else {
      $$3484$lcssa = $spec$select540723;$$4502$lcssa = $spec$select541;
      break;
     }
    }
   } else {
    $$3484$lcssa = $$1482$lcssa;$$4502$lcssa = $$2500$lcssa;
   }
   $191 = ($$3484$lcssa>>>0)<($$4502$lcssa>>>0);
   if ($191) {
    $192 = $$3484$lcssa;
    $193 = (($125) - ($192))|0;
    $194 = $193 >> 2;
    $195 = ($194*9)|0;
    $196 = load4($$3484$lcssa);
    $197 = ($196>>>0)<(10);
    if ($197) {
     $$1517 = $195;
    } else {
     $$0516652 = $195;$$0532651 = 10;
     while(1) {
      $198 = ($$0532651*10)|0;
      $199 = (($$0516652) + 1)|0;
      $200 = ($196>>>0)<($198>>>0);
      if ($200) {
       $$1517 = $199;
       break;
      } else {
       $$0516652 = $199;$$0532651 = $198;
      }
     }
    }
   } else {
    $$1517 = 0;
   }
   $201 = ($36|0)==(102);
   $202 = $201 ? 0 : $$1517;
   $203 = (($spec$select539) - ($202))|0;
   $204 = ($36|0)==(103);
   $205 = ($spec$select539|0)!=(0);
   $206 = $205 & $204;
   $$neg = $206 << 31 >> 31;
   $207 = (($203) + ($$neg))|0;
   $208 = $$4502$lcssa;
   $209 = (($208) - ($125))|0;
   $210 = $209 >> 2;
   $211 = ($210*9)|0;
   $212 = (($211) + -9)|0;
   $213 = ($207|0)<($212|0);
   if ($213) {
    $214 = ((($$0498)) + 4|0);
    $215 = (($207) + 9216)|0;
    $216 = (($215|0) / 9)&-1;
    $217 = (($216) + -1024)|0;
    $218 = (($214) + ($217<<2)|0);
    $219 = ($216*9)|0;
    $220 = (($215) - ($219))|0;
    $221 = ($220|0)<(8);
    if ($221) {
     $$0529$in646 = $220;$$1533645 = 10;
     while(1) {
      $$0529 = (($$0529$in646) + 1)|0;
      $222 = ($$1533645*10)|0;
      $223 = ($$0529$in646|0)<(7);
      if ($223) {
       $$0529$in646 = $$0529;$$1533645 = $222;
      } else {
       $$1533$lcssa = $222;
       break;
      }
     }
    } else {
     $$1533$lcssa = 10;
    }
    $224 = load4($218);
    $225 = (($224>>>0) / ($$1533$lcssa>>>0))&-1;
    $226 = Math_imul($225, $$1533$lcssa)|0;
    $227 = (($224) - ($226))|0;
    $228 = ($227|0)==(0);
    $229 = ((($218)) + 4|0);
    $230 = ($229|0)==($$4502$lcssa|0);
    $or$cond543 = $230 & $228;
    if ($or$cond543) {
     $$4492 = $218;$$4520 = $$1517;$$8 = $$3484$lcssa;
    } else {
     $231 = $225 & 1;
     $232 = ($231|0)==(0);
     $spec$select544 = $232 ? 9007199254740992.0 : 9007199254740994.0;
     $233 = $$1533$lcssa >>> 1;
     $234 = ($227>>>0)<($233>>>0);
     $235 = ($227|0)==($233|0);
     $or$cond546 = $230 & $235;
     $spec$select561 = $or$cond546 ? 1.0 : 1.5;
     $spec$select567 = $234 ? 0.5 : $spec$select561;
     $236 = ($$0522|0)==(0);
     if ($236) {
      $$1467 = $spec$select567;$$1469 = $spec$select544;
     } else {
      $237 = load1($$0523);
      $238 = ($237<<24>>24)==(45);
      $239 = - $spec$select544;
      $240 = - $spec$select567;
      $spec$select568 = $238 ? $239 : $spec$select544;
      $spec$select569 = $238 ? $240 : $spec$select567;
      $$1467 = $spec$select569;$$1469 = $spec$select568;
     }
     $241 = (($224) - ($227))|0;
     store4($218,$241);
     $242 = $$1469 + $$1467;
     $243 = $242 != $$1469;
     if ($243) {
      $244 = (($241) + ($$1533$lcssa))|0;
      store4($218,$244);
      $245 = ($244>>>0)>(999999999);
      if ($245) {
       $$2490638 = $218;$$5486639 = $$3484$lcssa;
       while(1) {
        $246 = ((($$2490638)) + -4|0);
        store4($$2490638,0);
        $247 = ($246>>>0)<($$5486639>>>0);
        if ($247) {
         $248 = ((($$5486639)) + -4|0);
         store4($248,0);
         $$6 = $248;
        } else {
         $$6 = $$5486639;
        }
        $249 = load4($246);
        $250 = (($249) + 1)|0;
        store4($246,$250);
        $251 = ($250>>>0)>(999999999);
        if ($251) {
         $$2490638 = $246;$$5486639 = $$6;
        } else {
         $$2490$lcssa = $246;$$5486$lcssa = $$6;
         break;
        }
       }
      } else {
       $$2490$lcssa = $218;$$5486$lcssa = $$3484$lcssa;
      }
      $252 = $$5486$lcssa;
      $253 = (($125) - ($252))|0;
      $254 = $253 >> 2;
      $255 = ($254*9)|0;
      $256 = load4($$5486$lcssa);
      $257 = ($256>>>0)<(10);
      if ($257) {
       $$4492 = $$2490$lcssa;$$4520 = $255;$$8 = $$5486$lcssa;
      } else {
       $$2518634 = $255;$$2534633 = 10;
       while(1) {
        $258 = ($$2534633*10)|0;
        $259 = (($$2518634) + 1)|0;
        $260 = ($256>>>0)<($258>>>0);
        if ($260) {
         $$4492 = $$2490$lcssa;$$4520 = $259;$$8 = $$5486$lcssa;
         break;
        } else {
         $$2518634 = $259;$$2534633 = $258;
        }
       }
      }
     } else {
      $$4492 = $218;$$4520 = $$1517;$$8 = $$3484$lcssa;
     }
    }
    $261 = ((($$4492)) + 4|0);
    $262 = ($$4502$lcssa>>>0)>($261>>>0);
    $spec$select547 = $262 ? $261 : $$4502$lcssa;
    $$5521 = $$4520;$$8506 = $spec$select547;$$9 = $$8;
   } else {
    $$5521 = $$1517;$$8506 = $$4502$lcssa;$$9 = $$3484$lcssa;
   }
   $263 = (0 - ($$5521))|0;
   $264 = ($$8506>>>0)>($$9>>>0);
   L109: do {
    if ($264) {
     $$9507625 = $$8506;
     while(1) {
      $265 = ((($$9507625)) + -4|0);
      $267 = load4($265);
      $268 = ($267|0)==(0);
      if (!($268)) {
       $$9507$lcssa = $$9507625;$$lcssa583 = 1;
       break L109;
      }
      $266 = ($265>>>0)>($$9>>>0);
      if ($266) {
       $$9507625 = $265;
      } else {
       $$9507$lcssa = $265;$$lcssa583 = 0;
       break;
      }
     }
    } else {
     $$9507$lcssa = $$8506;$$lcssa583 = 0;
    }
   } while(0);
   do {
    if ($204) {
     $not$ = $205 ^ 1;
     $269 = $not$&1;
     $spec$select548 = (($spec$select539) + ($269))|0;
     $270 = ($spec$select548|0)>($$5521|0);
     $271 = ($$5521|0)>(-5);
     $or$cond6 = $270 & $271;
     if ($or$cond6) {
      $272 = (($5) + -1)|0;
      $$neg571 = (($spec$select548) + -1)|0;
      $273 = (($$neg571) - ($$5521))|0;
      $$0479 = $272;$$2476 = $273;
     } else {
      $274 = (($5) + -2)|0;
      $275 = (($spec$select548) + -1)|0;
      $$0479 = $274;$$2476 = $275;
     }
     $276 = $4 & 8;
     $277 = ($276|0)==(0);
     if ($277) {
      if ($$lcssa583) {
       $278 = ((($$9507$lcssa)) + -4|0);
       $279 = load4($278);
       $280 = ($279|0)==(0);
       if ($280) {
        $$2531 = 9;
       } else {
        $281 = (($279>>>0) % 10)&-1;
        $282 = ($281|0)==(0);
        if ($282) {
         $$1530621 = 0;$$3535620 = 10;
         while(1) {
          $283 = ($$3535620*10)|0;
          $284 = (($$1530621) + 1)|0;
          $285 = (($279>>>0) % ($283>>>0))&-1;
          $286 = ($285|0)==(0);
          if ($286) {
           $$1530621 = $284;$$3535620 = $283;
          } else {
           $$2531 = $284;
           break;
          }
         }
        } else {
         $$2531 = 0;
        }
       }
      } else {
       $$2531 = 9;
      }
      $287 = $$0479 | 32;
      $288 = ($287|0)==(102);
      $289 = $$9507$lcssa;
      $290 = (($289) - ($125))|0;
      $291 = $290 >> 2;
      $292 = ($291*9)|0;
      $293 = (($292) + -9)|0;
      if ($288) {
       $294 = (($293) - ($$2531))|0;
       $295 = ($294|0)>(0);
       $spec$select549 = $295 ? $294 : 0;
       $296 = ($$2476|0)<($spec$select549|0);
       $spec$select562 = $296 ? $$2476 : $spec$select549;
       $$1480 = $$0479;$$3477 = $spec$select562;
       break;
      } else {
       $297 = (($293) + ($$5521))|0;
       $298 = (($297) - ($$2531))|0;
       $299 = ($298|0)>(0);
       $spec$select551 = $299 ? $298 : 0;
       $300 = ($$2476|0)<($spec$select551|0);
       $spec$select563 = $300 ? $$2476 : $spec$select551;
       $$1480 = $$0479;$$3477 = $spec$select563;
       break;
      }
     } else {
      $$1480 = $$0479;$$3477 = $$2476;
     }
    } else {
     $$1480 = $5;$$3477 = $spec$select539;
    }
   } while(0);
   $301 = ($$3477|0)!=(0);
   $302 = $4 >>> 3;
   $$lobit = $302 & 1;
   $303 = $301 ? 1 : $$lobit;
   $304 = $$1480 | 32;
   $305 = ($304|0)==(102);
   if ($305) {
    $306 = ($$5521|0)>(0);
    $307 = $306 ? $$5521 : 0;
    $$2515 = 0;$$pn = $307;
   } else {
    $308 = ($$5521|0)<(0);
    $309 = $308 ? $263 : $$5521;
    $310 = i64_sext($309);
    $311 = (_fmt_u($310,$11)|0);
    $312 = $11;
    $313 = $311;
    $314 = (($312) - ($313))|0;
    $315 = ($314|0)<(2);
    if ($315) {
     $$1514614 = $311;
     while(1) {
      $316 = ((($$1514614)) + -1|0);
      store1($316,48);
      $317 = $316;
      $318 = (($312) - ($317))|0;
      $319 = ($318|0)<(2);
      if ($319) {
       $$1514614 = $316;
      } else {
       $$1514$lcssa = $316;
       break;
      }
     }
    } else {
     $$1514$lcssa = $311;
    }
    $320 = $$5521 >> 31;
    $321 = $320 & 2;
    $322 = (($321) + 43)|0;
    $323 = $322&255;
    $324 = ((($$1514$lcssa)) + -1|0);
    store1($324,$323);
    $325 = $$1480&255;
    $326 = ((($$1514$lcssa)) + -2|0);
    store1($326,$325);
    $327 = $326;
    $328 = (($312) - ($327))|0;
    $$2515 = $326;$$pn = $328;
   }
   $329 = (($$0522) + 1)|0;
   $330 = (($329) + ($$3477))|0;
   $$1528 = (($330) + ($303))|0;
   $331 = (($$1528) + ($$pn))|0;
   _pad_659($0,32,$2,$331,$4);
   _out($0,$$0523,$$0522);
   $332 = $4 ^ 65536;
   _pad_659($0,48,$2,$331,$332);
   if ($305) {
    $333 = ($$9>>>0)>($$0498>>>0);
    $spec$select554 = $333 ? $$0498 : $$9;
    $334 = ((($8)) + 9|0);
    $335 = $334;
    $336 = ((($8)) + 8|0);
    $$5493603 = $spec$select554;
    while(1) {
     $337 = load4($$5493603);
     $338 = i64_zext($337>>>0);
     $339 = (_fmt_u($338,$334)|0);
     $340 = ($$5493603|0)==($spec$select554|0);
     if ($340) {
      $346 = ($339|0)==($334|0);
      if ($346) {
       store1($336,48);
       $$1465 = $336;
      } else {
       $$1465 = $339;
      }
     } else {
      $341 = ($339>>>0)>($8>>>0);
      if ($341) {
       $342 = $339;
       $343 = (($342) - ($9))|0;
       _memset(($8|0),48,($343|0))|0;
       $$0464599 = $339;
       while(1) {
        $344 = ((($$0464599)) + -1|0);
        $345 = ($344>>>0)>($8>>>0);
        if ($345) {
         $$0464599 = $344;
        } else {
         $$1465 = $344;
         break;
        }
       }
      } else {
       $$1465 = $339;
      }
     }
     $347 = $$1465;
     $348 = (($335) - ($347))|0;
     _out($0,$$1465,$348);
     $349 = ((($$5493603)) + 4|0);
     $350 = ($349>>>0)>($$0498>>>0);
     if ($350) {
      break;
     } else {
      $$5493603 = $349;
     }
    }
    $$not = $301 ^ 1;
    $351 = $4 & 8;
    $352 = ($351|0)==(0);
    $or$cond556 = $352 & $$not;
    if (!($or$cond556)) {
     _out($0,16069,1);
    }
    $353 = ($349>>>0)<($$9507$lcssa>>>0);
    $354 = ($$3477|0)>(0);
    $355 = $353 & $354;
    if ($355) {
     $$4478594 = $$3477;$$6494593 = $349;
     while(1) {
      $356 = load4($$6494593);
      $357 = i64_zext($356>>>0);
      $358 = (_fmt_u($357,$334)|0);
      $359 = ($358>>>0)>($8>>>0);
      if ($359) {
       $360 = $358;
       $361 = (($360) - ($9))|0;
       _memset(($8|0),48,($361|0))|0;
       $$0463588 = $358;
       while(1) {
        $362 = ((($$0463588)) + -1|0);
        $363 = ($362>>>0)>($8>>>0);
        if ($363) {
         $$0463588 = $362;
        } else {
         $$0463$lcssa = $362;
         break;
        }
       }
      } else {
       $$0463$lcssa = $358;
      }
      $364 = ($$4478594|0)<(9);
      $365 = $364 ? $$4478594 : 9;
      _out($0,$$0463$lcssa,$365);
      $366 = ((($$6494593)) + 4|0);
      $367 = (($$4478594) + -9)|0;
      $368 = ($366>>>0)<($$9507$lcssa>>>0);
      $369 = ($$4478594|0)>(9);
      $370 = $368 & $369;
      if ($370) {
       $$4478594 = $367;$$6494593 = $366;
      } else {
       $$4478$lcssa = $367;
       break;
      }
     }
    } else {
     $$4478$lcssa = $$3477;
    }
    $371 = (($$4478$lcssa) + 9)|0;
    _pad_659($0,48,$371,9,0);
   } else {
    $372 = ((($$9)) + 4|0);
    $spec$select557 = $$lcssa583 ? $$9507$lcssa : $372;
    $373 = ($$9>>>0)<($spec$select557>>>0);
    $374 = ($$3477|0)>(-1);
    $375 = $373 & $374;
    if ($375) {
     $376 = ((($8)) + 9|0);
     $377 = $4 & 8;
     $378 = ($377|0)==(0);
     $379 = $376;
     $380 = (0 - ($9))|0;
     $381 = ((($8)) + 8|0);
     $$5609 = $$3477;$$7495608 = $$9;
     while(1) {
      $382 = load4($$7495608);
      $383 = i64_zext($382>>>0);
      $384 = (_fmt_u($383,$376)|0);
      $385 = ($384|0)==($376|0);
      if ($385) {
       store1($381,48);
       $$0 = $381;
      } else {
       $$0 = $384;
      }
      $386 = ($$7495608|0)==($$9|0);
      do {
       if ($386) {
        $390 = ((($$0)) + 1|0);
        _out($0,$$0,1);
        $391 = ($$5609|0)<(1);
        $or$cond559 = $378 & $391;
        if ($or$cond559) {
         $$2 = $390;
         break;
        }
        _out($0,16069,1);
        $$2 = $390;
       } else {
        $387 = ($$0>>>0)>($8>>>0);
        if (!($387)) {
         $$2 = $$0;
         break;
        }
        $scevgep711 = (($$0) + ($380)|0);
        $scevgep711712 = $scevgep711;
        _memset(($8|0),48,($scevgep711712|0))|0;
        $$1604 = $$0;
        while(1) {
         $388 = ((($$1604)) + -1|0);
         $389 = ($388>>>0)>($8>>>0);
         if ($389) {
          $$1604 = $388;
         } else {
          $$2 = $388;
          break;
         }
        }
       }
      } while(0);
      $392 = $$2;
      $393 = (($379) - ($392))|0;
      $394 = ($$5609|0)>($393|0);
      $395 = $394 ? $393 : $$5609;
      _out($0,$$2,$395);
      $396 = (($$5609) - ($393))|0;
      $397 = ((($$7495608)) + 4|0);
      $398 = ($397>>>0)<($spec$select557>>>0);
      $399 = ($396|0)>(-1);
      $400 = $398 & $399;
      if ($400) {
       $$5609 = $396;$$7495608 = $397;
      } else {
       $$5$lcssa = $396;
       break;
      }
     }
    } else {
     $$5$lcssa = $$3477;
    }
    $401 = (($$5$lcssa) + 18)|0;
    _pad_659($0,48,$401,18,0);
    $402 = $11;
    $403 = $$2515;
    $404 = (($402) - ($403))|0;
    _out($0,$$2515,$404);
   }
   $405 = $4 ^ 8192;
   _pad_659($0,32,$2,$331,$405);
   $$sink757 = $331;
  }
 } while(0);
 $406 = ($$sink757|0)<($2|0);
 $$560 = $406 ? $2 : $$sink757;
 STACKTOP = sp;return ($$560|0);
}
function _pop_arg_long_double($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $arglist_current = 0, $arglist_next = 0, $expanded = 0, $expanded1 = 0, $expanded2 = 0, $expanded3 = 0, $expanded4 = 0, $expanded5 = 0, $expanded6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $arglist_current = load4($1);
 $2 = $arglist_current;
 $expanded2 = ((0) + 8|0);
 $expanded1 = $expanded2;
 $expanded = (($expanded1) - 1)|0;
 $3 = (($2) + ($expanded))|0;
 $expanded6 = ((0) + 8|0);
 $expanded5 = $expanded6;
 $expanded4 = (($expanded5) - 1)|0;
 $expanded3 = $expanded4 ^ -1;
 $4 = $3 & $expanded3;
 $5 = $4;
 $6 = loadd($5);
 $arglist_next = ((($5)) + 8|0);
 store4($1,$arglist_next);
 stored($0,$6);
 return;
}
function ___vfprintf_internal($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $spec$select = 0, $spec$select45 = 0, $vacopy_currentptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $5 = sp + 208|0;
 $6 = sp + 160|0;
 $7 = sp + 80|0;
 $8 = sp;
 ; store8($6,i64_const(0,0),8); store8($6+8|0,i64_const(0,0),8); store8($6+16|0,i64_const(0,0),8); store8($6+24|0,i64_const(0,0),8); store8($6+32|0,i64_const(0,0),8);
 $vacopy_currentptr = load4($2);
 store4($5,$vacopy_currentptr);
 $9 = (_printf_core(0,$1,$5,$7,$6,$3,$4)|0);
 $10 = ($9|0)<(0);
 if ($10) {
  $$0 = -1;
 } else {
  $11 = ((($0)) + 76|0);
  $12 = load4($11);
  $13 = ($12|0)>(-1);
  if ($13) {
   $14 = (___lockfile($0)|0);
   $41 = $14;
  } else {
   $41 = 0;
  }
  $15 = load4($0);
  $16 = $15 & 32;
  $17 = ((($0)) + 74|0);
  $18 = load1($17);
  $19 = ($18<<24>>24)<(1);
  if ($19) {
   $20 = $15 & -33;
   store4($0,$20);
  }
  $21 = ((($0)) + 48|0);
  $22 = load4($21);
  $23 = ($22|0)==(0);
  if ($23) {
   $25 = ((($0)) + 44|0);
   $26 = load4($25);
   store4($25,$8);
   $27 = ((($0)) + 28|0);
   store4($27,$8);
   $28 = ((($0)) + 20|0);
   store4($28,$8);
   store4($21,80);
   $29 = ((($8)) + 80|0);
   $30 = ((($0)) + 16|0);
   store4($30,$29);
   $31 = (_printf_core($0,$1,$5,$7,$6,$3,$4)|0);
   $32 = ($26|0)==(0|0);
   if ($32) {
    $$1 = $31;
   } else {
    $33 = ((($0)) + 36|0);
    $34 = load4($33);
    (FUNCTION_TABLE_iiii[$34 & 15]($0,0,0)|0);
    $35 = load4($28);
    $36 = ($35|0)==(0|0);
    $spec$select = $36 ? -1 : $31;
    store4($25,$26);
    store4($21,0);
    store4($30,0);
    store4($27,0);
    store4($28,0);
    $$1 = $spec$select;
   }
  } else {
   $24 = (_printf_core($0,$1,$5,$7,$6,$3,$4)|0);
   $$1 = $24;
  }
  $37 = load4($0);
  $38 = $37 & 32;
  $39 = ($38|0)==(0);
  $spec$select45 = $39 ? $$1 : -1;
  $40 = $37 | $16;
  store4($0,$40);
  $42 = ($41|0)==(0);
  if (!($42)) {
   ___unlockfile($0);
  }
  $$0 = $spec$select45;
 }
 STACKTOP = sp;return ($$0|0);
}
function _printf_core($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$ = 0, $$0 = 0, $$0231 = 0, $$0232336 = 0, $$0234 = 0, $$0237 = 0, $$0239 = 0, $$0242315 = 0, $$0242315373 = 0, $$0242335 = 0, $$0245 = 0, $$0245$ph = 0, $$0245$ph$be = 0, $$0249 = 0, $$0249$ph = 0, $$0251$lcssa = 0, $$0251323 = 0, $$0254 = 0, $$0255 = 0, $$0256 = 0;
 var $$0261 = 0, $$0264$lcssa = 0, $$0264330 = 0, $$0271$ph = 0, $$1 = 0, $$1233342 = 0, $$1235 = 0, $$1238 = 0, $$1240 = 0, $$1243341 = 0, $$1250 = 0, $$1252 = 0, $$1257 = 0, $$1262 = 0, $$1265 = 0, $$1272 = 0, $$2236 = 0, $$2241 = 0, $$2244322 = 0, $$2258 = 0;
 var $$2258$ = 0, $$2263 = 0, $$2273 = 0, $$3259 = 0, $$3267 = 0, $$3274 = 0, $$3319 = 0, $$4260372 = 0, $$4268 = 0, $$5 = 0, $$6270 = 0, $$lcssa310 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre362 = 0, $$pre364 = 0, $$pre365 = 0, $$pre365$pre = 0, $$pre366 = 0, $$pre368 = i64();
 var $$pre370 = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = i64(), $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = i64(), $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = i64(), $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = i64(), $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = i64();
 var $189 = 0, $19 = 0, $190 = 0, $191 = i64(), $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = i64(), $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = i64();
 var $207 = 0, $208 = i64(), $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = i64(), $216 = 0, $217 = 0, $218 = 0, $219 = i64(), $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = i64(), $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = i64(), $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0.0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = i64(), $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0, $brmerge = 0, $brmerge328 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded12 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded16 = 0, $expanded4 = 0, $expanded5 = 0, $expanded6 = 0;
 var $expanded7 = 0, $expanded8 = 0, $expanded9 = 0, $or$cond = 0, $or$cond278 = 0, $or$cond280 = 0, $or$cond285 = 0, $spec$select = 0, $spec$select283 = 0, $spec$select286 = 0, $spec$select293 = 0, $spec$select294 = 0, $spec$select295 = 0, $spec$select296 = 0, $spec$select297 = 0, $spec$select298 = 0, $spec$select299 = 0, $spec$select300 = 0, $spec$select301 = 0, $storemerge275$lcssa = 0;
 var $storemerge275329 = 0, $storemerge276 = 0, $trunc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $7 = sp + 56|0;
 $8 = sp + 40|0;
 $9 = sp;
 $10 = sp + 48|0;
 $11 = sp + 60|0;
 store4($7,$1);
 $12 = ($0|0)!=(0|0);
 $13 = ((($9)) + 40|0);
 $14 = $13;
 $15 = ((($9)) + 39|0);
 $16 = ((($10)) + 4|0);
 $$0245$ph = 0;$$0249$ph = 0;$$0271$ph = 0;
 L1: while(1) {
  $$0245 = $$0245$ph;$$0249 = $$0249$ph;
  while(1) {
   $17 = ($$0249|0)>(-1);
   do {
    if ($17) {
     $18 = (2147483647 - ($$0249))|0;
     $19 = ($$0245|0)>($18|0);
     if ($19) {
      $20 = (___errno_location()|0);
      store4($20,75);
      $$1250 = -1;
      break;
     } else {
      $21 = (($$0245) + ($$0249))|0;
      $$1250 = $21;
      break;
     }
    } else {
     $$1250 = $$0249;
    }
   } while(0);
   $22 = load4($7);
   $23 = load1($22);
   $24 = ($23<<24>>24)==(0);
   if ($24) {
    label = 92;
    break L1;
   }
   $25 = $23;$27 = $22;
   L12: while(1) {
    switch ($25<<24>>24) {
    case 37:  {
     label = 10;
     break L12;
     break;
    }
    case 0:  {
     $$0251$lcssa = $27;
     break L12;
     break;
    }
    default: {
    }
    }
    $26 = ((($27)) + 1|0);
    store4($7,$26);
    $$pre = load1($26);
    $25 = $$pre;$27 = $26;
   }
   L15: do {
    if ((label|0) == 10) {
     label = 0;
     $$0251323 = $27;$29 = $27;
     while(1) {
      $28 = ((($29)) + 1|0);
      $30 = load1($28);
      $31 = ($30<<24>>24)==(37);
      if (!($31)) {
       $$0251$lcssa = $$0251323;
       break L15;
      }
      $32 = ((($$0251323)) + 1|0);
      $33 = ((($29)) + 2|0);
      store4($7,$33);
      $34 = load1($33);
      $35 = ($34<<24>>24)==(37);
      if ($35) {
       $$0251323 = $32;$29 = $33;
      } else {
       $$0251$lcssa = $32;
       break;
      }
     }
    }
   } while(0);
   $36 = $$0251$lcssa;
   $37 = $22;
   $38 = (($36) - ($37))|0;
   if ($12) {
    _out($0,$22,$38);
   }
   $39 = ($38|0)==(0);
   if ($39) {
    break;
   } else {
    $$0245 = $38;$$0249 = $$1250;
   }
  }
  $40 = load4($7);
  $41 = ((($40)) + 1|0);
  $42 = load1($41);
  $43 = $42 << 24 >> 24;
  $44 = (_isdigit($43)|0);
  $45 = ($44|0)==(0);
  $$pre362 = load4($7);
  if ($45) {
   $$0255 = -1;$$1272 = $$0271$ph;$$sink = 1;
  } else {
   $46 = ((($$pre362)) + 2|0);
   $47 = load1($46);
   $48 = ($47<<24>>24)==(36);
   if ($48) {
    $49 = ((($$pre362)) + 1|0);
    $50 = load1($49);
    $51 = $50 << 24 >> 24;
    $52 = (($51) + -48)|0;
    $$0255 = $52;$$1272 = 1;$$sink = 3;
   } else {
    $$0255 = -1;$$1272 = $$0271$ph;$$sink = 1;
   }
  }
  $53 = (($$pre362) + ($$sink)|0);
  store4($7,$53);
  $54 = load1($53);
  $55 = $54 << 24 >> 24;
  $56 = (($55) + -32)|0;
  $57 = ($56>>>0)>(31);
  $58 = 1 << $56;
  $59 = $58 & 75913;
  $60 = ($59|0)==(0);
  $brmerge328 = $57 | $60;
  if ($brmerge328) {
   $$0264$lcssa = 0;$$lcssa310 = $54;$storemerge275$lcssa = $53;
  } else {
   $$0264330 = 0;$62 = $56;$storemerge275329 = $53;
   while(1) {
    $61 = 1 << $62;
    $63 = $61 | $$0264330;
    $64 = ((($storemerge275329)) + 1|0);
    store4($7,$64);
    $65 = load1($64);
    $66 = $65 << 24 >> 24;
    $67 = (($66) + -32)|0;
    $68 = ($67>>>0)>(31);
    $69 = 1 << $67;
    $70 = $69 & 75913;
    $71 = ($70|0)==(0);
    $brmerge = $68 | $71;
    if ($brmerge) {
     $$0264$lcssa = $63;$$lcssa310 = $65;$storemerge275$lcssa = $64;
     break;
    } else {
     $$0264330 = $63;$62 = $67;$storemerge275329 = $64;
    }
   }
  }
  $72 = ($$lcssa310<<24>>24)==(42);
  if ($72) {
   $73 = ((($storemerge275$lcssa)) + 1|0);
   $74 = load1($73);
   $75 = $74 << 24 >> 24;
   $76 = (_isdigit($75)|0);
   $77 = ($76|0)==(0);
   if ($77) {
    label = 27;
   } else {
    $78 = load4($7);
    $79 = ((($78)) + 2|0);
    $80 = load1($79);
    $81 = ($80<<24>>24)==(36);
    if ($81) {
     $82 = ((($78)) + 1|0);
     $83 = load1($82);
     $84 = $83 << 24 >> 24;
     $85 = (($84) + -48)|0;
     $86 = (($4) + ($85<<2)|0);
     store4($86,10);
     $87 = load1($82);
     $88 = $87 << 24 >> 24;
     $89 = (($88) + -48)|0;
     $90 = (($3) + ($89<<3)|0);
     $91 = load8($90);
     $92 = i64_trunc($91);
     $93 = ((($78)) + 3|0);
     $$0261 = $92;$$2273 = 1;$storemerge276 = $93;
    } else {
     label = 27;
    }
   }
   if ((label|0) == 27) {
    label = 0;
    $94 = ($$1272|0)==(0);
    if (!($94)) {
     $$0 = -1;
     break;
    }
    if ($12) {
     $arglist_current = load4($2);
     $95 = $arglist_current;
     $expanded5 = ((0) + 4|0);
     $expanded4 = $expanded5;
     $expanded = (($expanded4) - 1)|0;
     $96 = (($95) + ($expanded))|0;
     $expanded9 = ((0) + 4|0);
     $expanded8 = $expanded9;
     $expanded7 = (($expanded8) - 1)|0;
     $expanded6 = $expanded7 ^ -1;
     $97 = $96 & $expanded6;
     $98 = $97;
     $99 = load4($98);
     $arglist_next = ((($98)) + 4|0);
     store4($2,$arglist_next);
     $286 = $99;
    } else {
     $286 = 0;
    }
    $100 = load4($7);
    $101 = ((($100)) + 1|0);
    $$0261 = $286;$$2273 = 0;$storemerge276 = $101;
   }
   store4($7,$storemerge276);
   $102 = ($$0261|0)<(0);
   $103 = $$0264$lcssa | 8192;
   $104 = (0 - ($$0261))|0;
   $spec$select293 = $102 ? $103 : $$0264$lcssa;
   $spec$select294 = $102 ? $104 : $$0261;
   $$1262 = $spec$select294;$$1265 = $spec$select293;$$3274 = $$2273;$108 = $storemerge276;
  } else {
   $105 = (_getint($7)|0);
   $106 = ($105|0)<(0);
   if ($106) {
    $$0 = -1;
    break;
   }
   $$pre364 = load4($7);
   $$1262 = $105;$$1265 = $$0264$lcssa;$$3274 = $$1272;$108 = $$pre364;
  }
  $107 = load1($108);
  $109 = ($107<<24>>24)==(46);
  do {
   if ($109) {
    $110 = ((($108)) + 1|0);
    $111 = load1($110);
    $112 = ($111<<24>>24)==(42);
    if (!($112)) {
     store4($7,$110);
     $142 = (_getint($7)|0);
     $$pre365$pre = load4($7);
     $$0256 = $142;$$pre365 = $$pre365$pre;
     break;
    }
    $113 = ((($108)) + 2|0);
    $114 = load1($113);
    $115 = $114 << 24 >> 24;
    $116 = (_isdigit($115)|0);
    $117 = ($116|0)==(0);
    if (!($117)) {
     $118 = load4($7);
     $119 = ((($118)) + 3|0);
     $120 = load1($119);
     $121 = ($120<<24>>24)==(36);
     if ($121) {
      $122 = ((($118)) + 2|0);
      $123 = load1($122);
      $124 = $123 << 24 >> 24;
      $125 = (($124) + -48)|0;
      $126 = (($4) + ($125<<2)|0);
      store4($126,10);
      $127 = load1($122);
      $128 = $127 << 24 >> 24;
      $129 = (($128) + -48)|0;
      $130 = (($3) + ($129<<3)|0);
      $131 = load8($130);
      $132 = i64_trunc($131);
      $133 = ((($118)) + 4|0);
      store4($7,$133);
      $$0256 = $132;$$pre365 = $133;
      break;
     }
    }
    $134 = ($$3274|0)==(0);
    if (!($134)) {
     $$0 = -1;
     break L1;
    }
    if ($12) {
     $arglist_current2 = load4($2);
     $135 = $arglist_current2;
     $expanded12 = ((0) + 4|0);
     $expanded11 = $expanded12;
     $expanded10 = (($expanded11) - 1)|0;
     $136 = (($135) + ($expanded10))|0;
     $expanded16 = ((0) + 4|0);
     $expanded15 = $expanded16;
     $expanded14 = (($expanded15) - 1)|0;
     $expanded13 = $expanded14 ^ -1;
     $137 = $136 & $expanded13;
     $138 = $137;
     $139 = load4($138);
     $arglist_next3 = ((($138)) + 4|0);
     store4($2,$arglist_next3);
     $287 = $139;
    } else {
     $287 = 0;
    }
    $140 = load4($7);
    $141 = ((($140)) + 2|0);
    store4($7,$141);
    $$0256 = $287;$$pre365 = $141;
   } else {
    $$0256 = -1;$$pre365 = $108;
   }
  } while(0);
  $$0254 = 0;$144 = $$pre365;
  while(1) {
   $143 = load1($144);
   $145 = $143 << 24 >> 24;
   $146 = (($145) + -65)|0;
   $147 = ($146>>>0)>(57);
   if ($147) {
    $$0 = -1;
    break L1;
   }
   $148 = ((($144)) + 1|0);
   store4($7,$148);
   $149 = load1($144);
   $150 = $149 << 24 >> 24;
   $151 = (($150) + -65)|0;
   $152 = ((3648 + (($$0254*58)|0)|0) + ($151)|0);
   $153 = load1($152);
   $154 = $153&255;
   $155 = (($154) + -1)|0;
   $156 = ($155>>>0)<(8);
   if ($156) {
    $$0254 = $154;$144 = $148;
   } else {
    break;
   }
  }
  $157 = ($153<<24>>24)==(0);
  if ($157) {
   $$0 = -1;
   break;
  }
  $158 = ($153<<24>>24)==(19);
  $159 = ($$0255|0)>(-1);
  do {
   if ($158) {
    if ($159) {
     $$0 = -1;
     break L1;
    } else {
     label = 54;
    }
   } else {
    if ($159) {
     $160 = (($4) + ($$0255<<2)|0);
     store4($160,$154);
     $161 = (($3) + ($$0255<<3)|0);
     $162 = load8($161);
     store8($8,$162);
     label = 54;
     break;
    }
    if (!($12)) {
     $$0 = 0;
     break L1;
    }
    _pop_arg($8,$154,$2,$6);
    $$pre366 = load4($7);
    $164 = $$pre366;
    label = 55;
   }
  } while(0);
  if ((label|0) == 54) {
   label = 0;
   if ($12) {
    $164 = $148;
    label = 55;
   } else {
    $$0245$ph$be = 0;
   }
  }
  L77: do {
   if ((label|0) == 55) {
    label = 0;
    $163 = ((($164)) + -1|0);
    $165 = load1($163);
    $166 = $165 << 24 >> 24;
    $167 = ($$0254|0)!=(0);
    $168 = $166 & 15;
    $169 = ($168|0)==(3);
    $or$cond278 = $167 & $169;
    $170 = $166 & -33;
    $$0237 = $or$cond278 ? $170 : $166;
    $171 = $$1265 & 8192;
    $172 = ($171|0)==(0);
    $173 = $$1265 & -65537;
    $spec$select = $172 ? $$1265 : $173;
    L79: do {
     switch ($$0237|0) {
     case 110:  {
      $trunc = $$0254&255;
      switch ($trunc<<24>>24) {
      case 0:  {
       $174 = load4($8);
       store4($174,$$1250);
       $$0245$ph$be = 0;
       break L77;
       break;
      }
      case 1:  {
       $175 = load4($8);
       store4($175,$$1250);
       $$0245$ph$be = 0;
       break L77;
       break;
      }
      case 2:  {
       $176 = i64_sext($$1250);
       $177 = load4($8);
       store8($177,$176);
       $$0245$ph$be = 0;
       break L77;
       break;
      }
      case 3:  {
       $178 = $$1250&65535;
       $179 = load4($8);
       store2($179,$178);
       $$0245$ph$be = 0;
       break L77;
       break;
      }
      case 4:  {
       $180 = $$1250&255;
       $181 = load4($8);
       store1($181,$180);
       $$0245$ph$be = 0;
       break L77;
       break;
      }
      case 6:  {
       $182 = load4($8);
       store4($182,$$1250);
       $$0245$ph$be = 0;
       break L77;
       break;
      }
      case 7:  {
       $183 = i64_sext($$1250);
       $184 = load4($8);
       store8($184,$183);
       $$0245$ph$be = 0;
       break L77;
       break;
      }
      default: {
       $$0245$ph$be = 0;
       break L77;
      }
      }
      break;
     }
     case 112:  {
      $185 = ($$0256>>>0)>(8);
      $186 = $185 ? $$0256 : 8;
      $187 = $spec$select | 8;
      $$1238 = 120;$$1257 = $186;$$3267 = $187;
      label = 67;
      break;
     }
     case 88: case 120:  {
      $$1238 = $$0237;$$1257 = $$0256;$$3267 = $spec$select;
      label = 67;
      break;
     }
     case 111:  {
      $197 = load8($8);
      $198 = (_fmt_o($197,$13)|0);
      $199 = $spec$select & 8;
      $200 = ($199|0)==(0);
      $201 = $198;
      $202 = (($14) - ($201))|0;
      $203 = ($$0256|0)>($202|0);
      $204 = (($202) + 1)|0;
      $205 = $200 | $203;
      $spec$select297 = $205 ? $$0256 : $204;
      $$0231 = $198;$$1235 = 0;$$1240 = 16008;$$2258 = $spec$select297;$$4268 = $spec$select;
      label = 73;
      break;
     }
     case 105: case 100:  {
      $206 = load8($8);
      $207 = i64_slt($206,i64_const(0,0));
      if ($207) {
       $208 = i64_sub(i64_const(0,0),$206);
       store8($8,$208);
       $$0234 = 1;$$0239 = 16008;$215 = $208;
       label = 72;
       break L79;
      } else {
       $209 = $spec$select & 2048;
       $210 = ($209|0)==(0);
       $211 = $spec$select & 1;
       $212 = ($211|0)==(0);
       $$ = $212 ? 16008 : (16010);
       $spec$select298 = $210 ? $$ : (16009);
       $213 = $spec$select & 2049;
       $214 = ($213|0)!=(0);
       $spec$select299 = $214&1;
       $$0234 = $spec$select299;$$0239 = $spec$select298;$215 = $206;
       label = 72;
       break L79;
      }
      break;
     }
     case 117:  {
      $$pre368 = load8($8);
      $$0234 = 0;$$0239 = 16008;$215 = $$pre368;
      label = 72;
      break;
     }
     case 99:  {
      $228 = load8($8);
      $229 = i64_trunc($228)&255;
      store1($15,$229);
      $$1 = $15;$$2236 = 0;$$2241 = 16008;$$5 = 1;$$6270 = $173;$$pre$phiZ2D = $14;
      break;
     }
     case 115:  {
      $230 = load4($8);
      $231 = ($230|0)==(0|0);
      $232 = $231 ? 16018 : $230;
      $233 = (_memchr($232,0,$$0256)|0);
      $234 = ($233|0)==(0|0);
      $235 = $233;
      $236 = $232;
      $237 = (($235) - ($236))|0;
      $238 = (($232) + ($$0256)|0);
      $$3259 = $234 ? $$0256 : $237;
      $$1252 = $234 ? $238 : $233;
      $$pre370 = $$1252;
      $$1 = $232;$$2236 = 0;$$2241 = 16008;$$5 = $$3259;$$6270 = $173;$$pre$phiZ2D = $$pre370;
      break;
     }
     case 67:  {
      $239 = load8($8);
      $240 = i64_trunc($239);
      store4($10,$240);
      store4($16,0);
      store4($8,$10);
      $$4260372 = -1;
      label = 79;
      break;
     }
     case 83:  {
      $241 = ($$0256|0)==(0);
      if ($241) {
       _pad_659($0,32,$$1262,0,$spec$select);
       $$0242315373 = 0;
       label = 89;
      } else {
       $$4260372 = $$0256;
       label = 79;
      }
      break;
     }
     case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
      $264 = loadd($8);
      $265 = (FUNCTION_TABLE_iidiiii[$5 & 1]($0,$264,$$1262,$$0256,$spec$select,$$0237)|0);
      $$0245$ph$be = $265;
      break L77;
      break;
     }
     default: {
      $$1 = $22;$$2236 = 0;$$2241 = 16008;$$5 = $$0256;$$6270 = $spec$select;$$pre$phiZ2D = $14;
     }
     }
    } while(0);
    L102: do {
     if ((label|0) == 67) {
      label = 0;
      $188 = load8($8);
      $189 = $$1238 & 32;
      $190 = (_fmt_x($188,$13,$189)|0);
      $191 = load8($8);
      $192 = i64_eq($191,i64_const(0,0));
      $193 = $$3267 & 8;
      $194 = ($193|0)==(0);
      $or$cond280 = $194 | $192;
      $195 = $$1238 >>> 4;
      $196 = (16008 + ($195)|0);
      $spec$select295 = $or$cond280 ? 16008 : $196;
      $spec$select296 = $or$cond280 ? 0 : 2;
      $$0231 = $190;$$1235 = $spec$select296;$$1240 = $spec$select295;$$2258 = $$1257;$$4268 = $$3267;
      label = 73;
     }
     else if ((label|0) == 72) {
      label = 0;
      $216 = (_fmt_u($215,$13)|0);
      $$0231 = $216;$$1235 = $$0234;$$1240 = $$0239;$$2258 = $$0256;$$4268 = $spec$select;
      label = 73;
     }
     else if ((label|0) == 79) {
      label = 0;
      $242 = load4($8);
      $$0232336 = $242;$$0242335 = 0;
      while(1) {
       $243 = load4($$0232336);
       $244 = ($243|0)==(0);
       if ($244) {
        $$0242315 = $$0242335;
        break;
       }
       $245 = (_wctomb($11,$243)|0);
       $246 = ($245|0)<(0);
       $247 = (($$4260372) - ($$0242335))|0;
       $248 = ($245>>>0)>($247>>>0);
       $or$cond285 = $246 | $248;
       if ($or$cond285) {
        label = 83;
        break;
       }
       $249 = ((($$0232336)) + 4|0);
       $250 = (($245) + ($$0242335))|0;
       $251 = ($$4260372>>>0)>($250>>>0);
       if ($251) {
        $$0232336 = $249;$$0242335 = $250;
       } else {
        $$0242315 = $250;
        break;
       }
      }
      if ((label|0) == 83) {
       label = 0;
       if ($246) {
        $$0 = -1;
        break L1;
       } else {
        $$0242315 = $$0242335;
       }
      }
      _pad_659($0,32,$$1262,$$0242315,$spec$select);
      $252 = ($$0242315|0)==(0);
      if ($252) {
       $$0242315373 = 0;
       label = 89;
      } else {
       $253 = load4($8);
       $$1233342 = $253;$$1243341 = 0;
       while(1) {
        $254 = load4($$1233342);
        $255 = ($254|0)==(0);
        if ($255) {
         $$0242315373 = $$0242315;
         label = 89;
         break L102;
        }
        $256 = (_wctomb($11,$254)|0);
        $257 = (($256) + ($$1243341))|0;
        $258 = ($257|0)>($$0242315|0);
        if ($258) {
         $$0242315373 = $$0242315;
         label = 89;
         break L102;
        }
        $259 = ((($$1233342)) + 4|0);
        _out($0,$11,$256);
        $260 = ($257>>>0)<($$0242315>>>0);
        if ($260) {
         $$1233342 = $259;$$1243341 = $257;
        } else {
         $$0242315373 = $$0242315;
         label = 89;
         break;
        }
       }
      }
     }
    } while(0);
    if ((label|0) == 73) {
     label = 0;
     $217 = ($$2258|0)>(-1);
     $218 = $$4268 & -65537;
     $spec$select283 = $217 ? $218 : $$4268;
     $219 = load8($8);
     $220 = i64_ne($219,i64_const(0,0));
     $221 = ($$2258|0)!=(0);
     $or$cond = $221 | $220;
     $222 = $$0231;
     $223 = (($14) - ($222))|0;
     $224 = $220 ^ 1;
     $225 = $224&1;
     $226 = (($223) + ($225))|0;
     $227 = ($$2258|0)>($226|0);
     $$2258$ = $227 ? $$2258 : $226;
     $spec$select300 = $or$cond ? $$2258$ : 0;
     $spec$select301 = $or$cond ? $$0231 : $13;
     $$1 = $spec$select301;$$2236 = $$1235;$$2241 = $$1240;$$5 = $spec$select300;$$6270 = $spec$select283;$$pre$phiZ2D = $14;
    }
    else if ((label|0) == 89) {
     label = 0;
     $261 = $spec$select ^ 8192;
     _pad_659($0,32,$$1262,$$0242315373,$261);
     $262 = ($$1262|0)>($$0242315373|0);
     $263 = $262 ? $$1262 : $$0242315373;
     $$0245$ph$be = $263;
     break;
    }
    $266 = $$1;
    $267 = (($$pre$phiZ2D) - ($266))|0;
    $268 = ($$5|0)<($267|0);
    $spec$select286 = $268 ? $267 : $$5;
    $269 = (($spec$select286) + ($$2236))|0;
    $270 = ($$1262|0)<($269|0);
    $$2263 = $270 ? $269 : $$1262;
    _pad_659($0,32,$$2263,$269,$$6270);
    _out($0,$$2241,$$2236);
    $271 = $$6270 ^ 65536;
    _pad_659($0,48,$$2263,$269,$271);
    _pad_659($0,48,$spec$select286,$267,0);
    _out($0,$$1,$267);
    $272 = $$6270 ^ 8192;
    _pad_659($0,32,$$2263,$269,$272);
    $$0245$ph$be = $$2263;
   }
  } while(0);
  $$0245$ph = $$0245$ph$be;$$0249$ph = $$1250;$$0271$ph = $$3274;
 }
 L123: do {
  if ((label|0) == 92) {
   $273 = ($0|0)==(0|0);
   if ($273) {
    $274 = ($$0271$ph|0)==(0);
    if ($274) {
     $$0 = 0;
    } else {
     $$2244322 = 1;
     while(1) {
      $275 = (($4) + ($$2244322<<2)|0);
      $276 = load4($275);
      $277 = ($276|0)==(0);
      if ($277) {
       break;
      }
      $278 = (($3) + ($$2244322<<3)|0);
      _pop_arg($278,$276,$2,$6);
      $279 = (($$2244322) + 1)|0;
      $280 = ($279>>>0)<(10);
      if ($280) {
       $$2244322 = $279;
      } else {
       $$0 = 1;
       break L123;
      }
     }
     $$3319 = $$2244322;
     while(1) {
      $283 = (($4) + ($$3319<<2)|0);
      $284 = load4($283);
      $285 = ($284|0)==(0);
      $281 = (($$3319) + 1)|0;
      if (!($285)) {
       $$0 = -1;
       break L123;
      }
      $282 = ($281>>>0)<(10);
      if ($282) {
       $$3319 = $281;
      } else {
       $$0 = 1;
       break;
      }
     }
    }
   } else {
    $$0 = $$1250;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function ___lockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function ___unlockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _out($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = load4($0);
 $4 = $3 & 32;
 $5 = ($4|0)==(0);
 if ($5) {
  (___fwritex($1,$2,$0)|0);
 }
 return;
}
function _getint($0) {
 $0 = $0|0;
 var $$0$lcssa = 0, $$04 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = load4($0);
 $2 = load1($1);
 $3 = $2 << 24 >> 24;
 $4 = (_isdigit($3)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  $$0$lcssa = 0;
 } else {
  $$04 = 0;
  while(1) {
   $6 = ($$04*10)|0;
   $7 = load4($0);
   $8 = load1($7);
   $9 = $8 << 24 >> 24;
   $10 = (($6) + -48)|0;
   $11 = (($10) + ($9))|0;
   $12 = ((($7)) + 1|0);
   store4($0,$12);
   $13 = load1($12);
   $14 = $13 << 24 >> 24;
   $15 = (_isdigit($14)|0);
   $16 = ($15|0)==(0);
   if ($16) {
    $$0$lcssa = $11;
    break;
   } else {
    $$04 = $11;
   }
  }
 }
 return ($$0$lcssa|0);
}
function _pop_arg($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$mask = 0, $$mask31 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = i64(), $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = i64(), $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = i64(), $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = i64(), $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = i64(), $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = i64();
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = i64(), $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0.0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0;
 var $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded25 = 0, $expanded26 = 0, $expanded27 = 0, $expanded28 = 0, $expanded29 = 0;
 var $expanded30 = 0, $expanded31 = 0, $expanded32 = 0, $expanded33 = 0, $expanded34 = 0, $expanded35 = 0, $expanded36 = 0, $expanded37 = 0, $expanded38 = 0, $expanded39 = 0, $expanded40 = 0, $expanded41 = 0, $expanded42 = 0, $expanded43 = 0, $expanded44 = 0, $expanded45 = 0, $expanded46 = 0, $expanded47 = 0, $expanded48 = 0, $expanded49 = 0;
 var $expanded50 = 0, $expanded51 = 0, $expanded52 = 0, $expanded53 = 0, $expanded54 = 0, $expanded55 = 0, $expanded56 = 0, $expanded57 = 0, $expanded58 = 0, $expanded59 = 0, $expanded60 = 0, $expanded61 = 0, $expanded62 = 0, $expanded63 = 0, $expanded64 = 0, $expanded65 = 0, $expanded66 = 0, $expanded67 = 0, $expanded68 = 0, $expanded69 = 0;
 var $expanded70 = 0, $expanded71 = 0, $expanded72 = 0, $expanded73 = 0, $expanded74 = 0, $expanded75 = 0, $expanded76 = 0, $expanded77 = 0, $expanded78 = 0, $expanded79 = 0, $expanded80 = 0, $expanded81 = 0, $expanded82 = 0, $expanded83 = 0, $expanded84 = 0, $expanded85 = 0, $expanded86 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($1>>>0)>(20);
 L1: do {
  if (!($4)) {
   do {
    switch ($1|0) {
    case 9:  {
     $arglist_current = load4($2);
     $5 = $arglist_current;
     $expanded26 = ((0) + 4|0);
     $expanded25 = $expanded26;
     $expanded = (($expanded25) - 1)|0;
     $6 = (($5) + ($expanded))|0;
     $expanded30 = ((0) + 4|0);
     $expanded29 = $expanded30;
     $expanded28 = (($expanded29) - 1)|0;
     $expanded27 = $expanded28 ^ -1;
     $7 = $6 & $expanded27;
     $8 = $7;
     $9 = load4($8);
     $arglist_next = ((($8)) + 4|0);
     store4($2,$arglist_next);
     store4($0,$9);
     break L1;
     break;
    }
    case 10:  {
     $arglist_current2 = load4($2);
     $10 = $arglist_current2;
     $expanded33 = ((0) + 4|0);
     $expanded32 = $expanded33;
     $expanded31 = (($expanded32) - 1)|0;
     $11 = (($10) + ($expanded31))|0;
     $expanded37 = ((0) + 4|0);
     $expanded36 = $expanded37;
     $expanded35 = (($expanded36) - 1)|0;
     $expanded34 = $expanded35 ^ -1;
     $12 = $11 & $expanded34;
     $13 = $12;
     $14 = load4($13);
     $arglist_next3 = ((($13)) + 4|0);
     store4($2,$arglist_next3);
     $15 = i64_sext($14);
     store8($0,$15);
     break L1;
     break;
    }
    case 11:  {
     $arglist_current5 = load4($2);
     $16 = $arglist_current5;
     $expanded40 = ((0) + 4|0);
     $expanded39 = $expanded40;
     $expanded38 = (($expanded39) - 1)|0;
     $17 = (($16) + ($expanded38))|0;
     $expanded44 = ((0) + 4|0);
     $expanded43 = $expanded44;
     $expanded42 = (($expanded43) - 1)|0;
     $expanded41 = $expanded42 ^ -1;
     $18 = $17 & $expanded41;
     $19 = $18;
     $20 = load4($19);
     $arglist_next6 = ((($19)) + 4|0);
     store4($2,$arglist_next6);
     $21 = i64_zext($20>>>0);
     store8($0,$21);
     break L1;
     break;
    }
    case 12:  {
     $arglist_current8 = load4($2);
     $22 = $arglist_current8;
     $expanded47 = ((0) + 8|0);
     $expanded46 = $expanded47;
     $expanded45 = (($expanded46) - 1)|0;
     $23 = (($22) + ($expanded45))|0;
     $expanded51 = ((0) + 8|0);
     $expanded50 = $expanded51;
     $expanded49 = (($expanded50) - 1)|0;
     $expanded48 = $expanded49 ^ -1;
     $24 = $23 & $expanded48;
     $25 = $24;
     $26 = load8($25);
     $arglist_next9 = ((($25)) + 8|0);
     store4($2,$arglist_next9);
     store8($0,$26);
     break L1;
     break;
    }
    case 13:  {
     $arglist_current11 = load4($2);
     $27 = $arglist_current11;
     $expanded54 = ((0) + 4|0);
     $expanded53 = $expanded54;
     $expanded52 = (($expanded53) - 1)|0;
     $28 = (($27) + ($expanded52))|0;
     $expanded58 = ((0) + 4|0);
     $expanded57 = $expanded58;
     $expanded56 = (($expanded57) - 1)|0;
     $expanded55 = $expanded56 ^ -1;
     $29 = $28 & $expanded55;
     $30 = $29;
     $31 = load4($30);
     $arglist_next12 = ((($30)) + 4|0);
     store4($2,$arglist_next12);
     $32 = $31&65535;
     $33 = i64_sext($32 << 16 >> 16);
     store8($0,$33);
     break L1;
     break;
    }
    case 14:  {
     $arglist_current14 = load4($2);
     $34 = $arglist_current14;
     $expanded61 = ((0) + 4|0);
     $expanded60 = $expanded61;
     $expanded59 = (($expanded60) - 1)|0;
     $35 = (($34) + ($expanded59))|0;
     $expanded65 = ((0) + 4|0);
     $expanded64 = $expanded65;
     $expanded63 = (($expanded64) - 1)|0;
     $expanded62 = $expanded63 ^ -1;
     $36 = $35 & $expanded62;
     $37 = $36;
     $38 = load4($37);
     $arglist_next15 = ((($37)) + 4|0);
     store4($2,$arglist_next15);
     $$mask31 = $38 & 65535;
     $39 = i64_zext($$mask31>>>0);
     store8($0,$39);
     break L1;
     break;
    }
    case 15:  {
     $arglist_current17 = load4($2);
     $40 = $arglist_current17;
     $expanded68 = ((0) + 4|0);
     $expanded67 = $expanded68;
     $expanded66 = (($expanded67) - 1)|0;
     $41 = (($40) + ($expanded66))|0;
     $expanded72 = ((0) + 4|0);
     $expanded71 = $expanded72;
     $expanded70 = (($expanded71) - 1)|0;
     $expanded69 = $expanded70 ^ -1;
     $42 = $41 & $expanded69;
     $43 = $42;
     $44 = load4($43);
     $arglist_next18 = ((($43)) + 4|0);
     store4($2,$arglist_next18);
     $45 = $44&255;
     $46 = i64_sext($45 << 24 >> 24);
     store8($0,$46);
     break L1;
     break;
    }
    case 16:  {
     $arglist_current20 = load4($2);
     $47 = $arglist_current20;
     $expanded75 = ((0) + 4|0);
     $expanded74 = $expanded75;
     $expanded73 = (($expanded74) - 1)|0;
     $48 = (($47) + ($expanded73))|0;
     $expanded79 = ((0) + 4|0);
     $expanded78 = $expanded79;
     $expanded77 = (($expanded78) - 1)|0;
     $expanded76 = $expanded77 ^ -1;
     $49 = $48 & $expanded76;
     $50 = $49;
     $51 = load4($50);
     $arglist_next21 = ((($50)) + 4|0);
     store4($2,$arglist_next21);
     $$mask = $51 & 255;
     $52 = i64_zext($$mask>>>0);
     store8($0,$52);
     break L1;
     break;
    }
    case 17:  {
     $arglist_current23 = load4($2);
     $53 = $arglist_current23;
     $expanded82 = ((0) + 8|0);
     $expanded81 = $expanded82;
     $expanded80 = (($expanded81) - 1)|0;
     $54 = (($53) + ($expanded80))|0;
     $expanded86 = ((0) + 8|0);
     $expanded85 = $expanded86;
     $expanded84 = (($expanded85) - 1)|0;
     $expanded83 = $expanded84 ^ -1;
     $55 = $54 & $expanded83;
     $56 = $55;
     $57 = loadd($56);
     $arglist_next24 = ((($56)) + 8|0);
     store4($2,$arglist_next24);
     stored($0,$57);
     break L1;
     break;
    }
    case 18:  {
     FUNCTION_TABLE_vii[$3 & 15]($0,$2);
     break L1;
     break;
    }
    default: {
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 return;
}
function _fmt_x($0,$1,$2) {
 $0 = i64($0);
 $1 = $1|0;
 $2 = $2|0;
 var $$05$lcssa = 0, $$056 = 0, $$07 = i64(), $10 = 0, $11 = 0, $12 = i64(), $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = i64_eq($0,i64_const(0,0));
 if ($3) {
  $$05$lcssa = $1;
 } else {
  $$056 = $1;$$07 = $0;
  while(1) {
   $4 = i64_trunc($$07);
   $5 = $4 & 15;
   $6 = (4112 + ($5)|0);
   $7 = load1($6);
   $8 = $7&255;
   $9 = $8 | $2;
   $10 = $9&255;
   $11 = ((($$056)) + -1|0);
   store1($11,$10);
   $12 = i64_lshr($$07,i64_const(4,0));
   $13 = i64_eq($12,i64_const(0,0));
   if ($13) {
    $$05$lcssa = $11;
    break;
   } else {
    $$056 = $11;$$07 = $12;
   }
  }
 }
 return ($$05$lcssa|0);
}
function _fmt_o($0,$1) {
 $0 = i64($0);
 $1 = $1|0;
 var $$0$lcssa = 0, $$045 = i64(), $$06 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = i64(), $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = i64_eq($0,i64_const(0,0));
 if ($2) {
  $$0$lcssa = $1;
 } else {
  $$045 = $0;$$06 = $1;
  while(1) {
   $3 = i64_trunc($$045)&255;
   $4 = $3 & 7;
   $5 = $4 | 48;
   $6 = ((($$06)) + -1|0);
   store1($6,$5);
   $7 = i64_lshr($$045,i64_const(3,0));
   $8 = i64_eq($7,i64_const(0,0));
   if ($8) {
    $$0$lcssa = $6;
    break;
   } else {
    $$045 = $7;$$06 = $6;
   }
  }
 }
 return ($$0$lcssa|0);
}
function _fmt_u($0,$1) {
 $0 = i64($0);
 $1 = $1|0;
 var $$010$lcssa$off0 = 0, $$01013 = i64(), $$012 = 0, $$09$lcssa = 0, $$0914 = 0, $$1$lcssa = 0, $$111 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = i64(), $4 = i64(), $5 = i64(), $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $extract$t = 0, $extract$t20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = i64_ugt($0,i64_const(4294967295,0));
 $extract$t = i64_trunc($0);
 if ($2) {
  $$01013 = $0;$$0914 = $1;
  while(1) {
   $3 = i64_udiv($$01013,i64_const(10,0));
   $4 = i64_mul($3,i64_const(10,0));
   $5 = i64_sub($$01013,$4);
   $6 = i64_trunc($5)&255;
   $7 = $6 | 48;
   $8 = ((($$0914)) + -1|0);
   store1($8,$7);
   $9 = i64_ugt($$01013,i64_const(4294967295,9));
   if ($9) {
    $$01013 = $3;$$0914 = $8;
   } else {
    break;
   }
  }
  $extract$t20 = i64_trunc($3);
  $$010$lcssa$off0 = $extract$t20;$$09$lcssa = $8;
 } else {
  $$010$lcssa$off0 = $extract$t;$$09$lcssa = $1;
 }
 $10 = ($$010$lcssa$off0|0)==(0);
 if ($10) {
  $$1$lcssa = $$09$lcssa;
 } else {
  $$012 = $$010$lcssa$off0;$$111 = $$09$lcssa;
  while(1) {
   $11 = (($$012>>>0) / 10)&-1;
   $12 = ($11*10)|0;
   $13 = (($$012) - ($12))|0;
   $14 = $13 | 48;
   $15 = $14&255;
   $16 = ((($$111)) + -1|0);
   store1($16,$15);
   $17 = ($$012>>>0)<(10);
   if ($17) {
    $$1$lcssa = $16;
    break;
   } else {
    $$012 = $11;$$111 = $16;
   }
  }
 }
 return ($$1$lcssa|0);
}
function _memchr($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$035$lcssa = 0, $$035$lcssa65 = 0, $$03555 = 0, $$036$lcssa = 0, $$036$lcssa64 = 0, $$03654 = 0, $$046 = 0, $$137$lcssa = 0, $$137$lcssa66 = 0, $$13745 = 0, $$140 = 0, $$23839 = 0, $$in = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond53 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1 & 255;
 $4 = $0;
 $5 = $4 & 3;
 $6 = ($5|0)!=(0);
 $7 = ($2|0)!=(0);
 $or$cond53 = $7 & $6;
 L1: do {
  if ($or$cond53) {
   $8 = $1&255;
   $$03555 = $0;$$03654 = $2;
   while(1) {
    $9 = load1($$03555);
    $10 = ($9<<24>>24)==($8<<24>>24);
    if ($10) {
     $$035$lcssa65 = $$03555;$$036$lcssa64 = $$03654;
     label = 6;
     break L1;
    }
    $11 = ((($$03555)) + 1|0);
    $12 = (($$03654) + -1)|0;
    $13 = $11;
    $14 = $13 & 3;
    $15 = ($14|0)!=(0);
    $16 = ($12|0)!=(0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$03555 = $11;$$03654 = $12;
    } else {
     $$035$lcssa = $11;$$036$lcssa = $12;$$lcssa = $16;
     label = 5;
     break;
    }
   }
  } else {
   $$035$lcssa = $0;$$036$lcssa = $2;$$lcssa = $7;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$035$lcssa65 = $$035$lcssa;$$036$lcssa64 = $$036$lcssa;
   label = 6;
  } else {
   label = 16;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $17 = load1($$035$lcssa65);
   $18 = $1&255;
   $19 = ($17<<24>>24)==($18<<24>>24);
   if ($19) {
    $38 = ($$036$lcssa64|0)==(0);
    if ($38) {
     label = 16;
     break;
    } else {
     $39 = $$035$lcssa65;
     break;
    }
   }
   $20 = Math_imul($3, 16843009)|0;
   $21 = ($$036$lcssa64>>>0)>(3);
   L13: do {
    if ($21) {
     $$046 = $$035$lcssa65;$$13745 = $$036$lcssa64;
     while(1) {
      $22 = load4($$046);
      $23 = $22 ^ $20;
      $24 = (($23) + -16843009)|0;
      $25 = $23 & -2139062144;
      $26 = $25 ^ -2139062144;
      $27 = $26 & $24;
      $28 = ($27|0)==(0);
      if (!($28)) {
       $$137$lcssa66 = $$13745;$$in = $$046;
       break L13;
      }
      $29 = ((($$046)) + 4|0);
      $30 = (($$13745) + -4)|0;
      $31 = ($30>>>0)>(3);
      if ($31) {
       $$046 = $29;$$13745 = $30;
      } else {
       $$0$lcssa = $29;$$137$lcssa = $30;
       label = 11;
       break;
      }
     }
    } else {
     $$0$lcssa = $$035$lcssa65;$$137$lcssa = $$036$lcssa64;
     label = 11;
    }
   } while(0);
   if ((label|0) == 11) {
    $32 = ($$137$lcssa|0)==(0);
    if ($32) {
     label = 16;
     break;
    } else {
     $$137$lcssa66 = $$137$lcssa;$$in = $$0$lcssa;
    }
   }
   $$140 = $$in;$$23839 = $$137$lcssa66;
   while(1) {
    $33 = load1($$140);
    $34 = ($33<<24>>24)==($18<<24>>24);
    if ($34) {
     $39 = $$140;
     break L8;
    }
    $35 = ((($$140)) + 1|0);
    $36 = (($$23839) + -1)|0;
    $37 = ($36|0)==(0);
    if ($37) {
     label = 16;
     break;
    } else {
     $$140 = $35;$$23839 = $36;
    }
   }
  }
 } while(0);
 if ((label|0) == 16) {
  $39 = 0;
 }
 return ($39|0);
}
function _pad_659($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$lcssa = 0, $$011 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0;
 $5 = sp;
 $6 = $4 & 73728;
 $7 = ($6|0)==(0);
 $8 = ($2|0)>($3|0);
 $or$cond = $8 & $7;
 if ($or$cond) {
  $9 = (($2) - ($3))|0;
  $10 = $1 << 24 >> 24;
  $11 = ($9>>>0)<(256);
  $12 = $11 ? $9 : 256;
  (_memset(($5|0),($10|0),($12|0))|0);
  $13 = ($9>>>0)>(255);
  if ($13) {
   $14 = (($2) - ($3))|0;
   $$011 = $9;
   while(1) {
    _out($0,$5,256);
    $15 = (($$011) + -256)|0;
    $16 = ($15>>>0)>(255);
    if ($16) {
     $$011 = $15;
    } else {
     break;
    }
   }
   $17 = $14 & 255;
   $$0$lcssa = $17;
  } else {
   $$0$lcssa = $9;
  }
  _out($0,$5,$$0$lcssa);
 }
 STACKTOP = sp;return;
}
function _wctomb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = (_wcrtomb($0,$1,0)|0);
  $$0 = $3;
 }
 return ($$0|0);
}
function _wcrtomb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 do {
  if ($3) {
   $$0 = 1;
  } else {
   $4 = ($1>>>0)<(128);
   if ($4) {
    $5 = $1&255;
    store1($0,$5);
    $$0 = 1;
    break;
   }
   $6 = (___pthread_self_440()|0);
   $7 = ((($6)) + 188|0);
   $8 = load4($7);
   $9 = load4($8);
   $10 = ($9|0)==(0|0);
   if ($10) {
    $11 = $1 & -128;
    $12 = ($11|0)==(57216);
    if ($12) {
     $14 = $1&255;
     store1($0,$14);
     $$0 = 1;
     break;
    } else {
     $13 = (___errno_location()|0);
     store4($13,84);
     $$0 = -1;
     break;
    }
   }
   $15 = ($1>>>0)<(2048);
   if ($15) {
    $16 = $1 >>> 6;
    $17 = $16 | 192;
    $18 = $17&255;
    $19 = ((($0)) + 1|0);
    store1($0,$18);
    $20 = $1 & 63;
    $21 = $20 | 128;
    $22 = $21&255;
    store1($19,$22);
    $$0 = 2;
    break;
   }
   $23 = ($1>>>0)<(55296);
   $24 = $1 & -8192;
   $25 = ($24|0)==(57344);
   $or$cond = $23 | $25;
   if ($or$cond) {
    $26 = $1 >>> 12;
    $27 = $26 | 224;
    $28 = $27&255;
    $29 = ((($0)) + 1|0);
    store1($0,$28);
    $30 = $1 >>> 6;
    $31 = $30 & 63;
    $32 = $31 | 128;
    $33 = $32&255;
    $34 = ((($0)) + 2|0);
    store1($29,$33);
    $35 = $1 & 63;
    $36 = $35 | 128;
    $37 = $36&255;
    store1($34,$37);
    $$0 = 3;
    break;
   }
   $38 = (($1) + -65536)|0;
   $39 = ($38>>>0)<(1048576);
   if ($39) {
    $40 = $1 >>> 18;
    $41 = $40 | 240;
    $42 = $41&255;
    $43 = ((($0)) + 1|0);
    store1($0,$42);
    $44 = $1 >>> 12;
    $45 = $44 & 63;
    $46 = $45 | 128;
    $47 = $46&255;
    $48 = ((($0)) + 2|0);
    store1($43,$47);
    $49 = $1 >>> 6;
    $50 = $49 & 63;
    $51 = $50 | 128;
    $52 = $51&255;
    $53 = ((($0)) + 3|0);
    store1($48,$52);
    $54 = $1 & 63;
    $55 = $54 | 128;
    $56 = $55&255;
    store1($53,$56);
    $$0 = 4;
    break;
   } else {
    $57 = (___errno_location()|0);
    store4($57,84);
    $$0 = -1;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___pthread_self_440() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function _pthread_self() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7380|0);
}
function ___fwritex($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$03846 = 0, $$042 = 0, $$1 = 0, $$139 = 0, $$141 = 0, $$143 = 0, $$pre = 0, $$pre48 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 16|0);
 $4 = load4($3);
 $5 = ($4|0)==(0|0);
 if ($5) {
  $7 = (___towrite($2)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $$pre = load4($3);
   $12 = $$pre;
   label = 5;
  } else {
   $$1 = 0;
  }
 } else {
  $6 = $4;
  $12 = $6;
  label = 5;
 }
 L5: do {
  if ((label|0) == 5) {
   $9 = ((($2)) + 20|0);
   $10 = load4($9);
   $11 = (($12) - ($10))|0;
   $13 = ($11>>>0)<($1>>>0);
   $14 = $10;
   if ($13) {
    $15 = ((($2)) + 36|0);
    $16 = load4($15);
    $17 = (FUNCTION_TABLE_iiii[$16 & 15]($2,$0,$1)|0);
    $$1 = $17;
    break;
   }
   $18 = ((($2)) + 75|0);
   $19 = load1($18);
   $20 = ($19<<24>>24)<(0);
   $21 = ($1|0)==(0);
   $or$cond = $20 | $21;
   L10: do {
    if ($or$cond) {
     $$139 = 0;$$141 = $0;$$143 = $1;$32 = $14;
    } else {
     $$03846 = $1;
     while(1) {
      $22 = (($$03846) + -1)|0;
      $24 = (($0) + ($22)|0);
      $25 = load1($24);
      $26 = ($25<<24>>24)==(10);
      if ($26) {
       break;
      }
      $23 = ($22|0)==(0);
      if ($23) {
       $$139 = 0;$$141 = $0;$$143 = $1;$32 = $14;
       break L10;
      } else {
       $$03846 = $22;
      }
     }
     $27 = ((($2)) + 36|0);
     $28 = load4($27);
     $29 = (FUNCTION_TABLE_iiii[$28 & 15]($2,$0,$$03846)|0);
     $30 = ($29>>>0)<($$03846>>>0);
     if ($30) {
      $$1 = $29;
      break L5;
     }
     $31 = (($0) + ($$03846)|0);
     $$042 = (($1) - ($$03846))|0;
     $$pre48 = load4($9);
     $$139 = $$03846;$$141 = $31;$$143 = $$042;$32 = $$pre48;
    }
   } while(0);
   (_memcpy(($32|0),($$141|0),($$143|0))|0);
   $33 = load4($9);
   $34 = (($33) + ($$143)|0);
   store4($9,$34);
   $35 = (($$139) + ($$143))|0;
   $$1 = $35;
  }
 } while(0);
 return ($$1|0);
}
function ___towrite($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 74|0);
 $2 = load1($1);
 $3 = $2 << 24 >> 24;
 $4 = (($3) + 255)|0;
 $5 = $4 | $3;
 $6 = $5&255;
 store1($1,$6);
 $7 = load4($0);
 $8 = $7 & 8;
 $9 = ($8|0)==(0);
 if ($9) {
  $11 = ((($0)) + 8|0);
  store4($11,0);
  $12 = ((($0)) + 4|0);
  store4($12,0);
  $13 = ((($0)) + 44|0);
  $14 = load4($13);
  $15 = ((($0)) + 28|0);
  store4($15,$14);
  $16 = ((($0)) + 20|0);
  store4($16,$14);
  $17 = $14;
  $18 = ((($0)) + 48|0);
  $19 = load4($18);
  $20 = (($17) + ($19)|0);
  $21 = ((($0)) + 16|0);
  store4($21,$20);
  $$0 = 0;
 } else {
  $10 = $7 | 32;
  store4($0,$10);
  $$0 = -1;
 }
 return ($$0|0);
}
function ___DOUBLE_BITS_662($0) {
 $0 = +$0;
 var $1 = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $1 = i64_bc2i($0);
 return (i64($1));
}
function _frexp($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$0 = 0.0, $$016 = 0.0, $10 = 0, $11 = 0, $12 = i64(), $13 = i64(), $14 = 0.0, $2 = i64(), $3 = i64(), $4 = 0, $5 = 0.0, $6 = 0.0, $7 = 0, $8 = 0, $9 = 0, $storemerge = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = i64_bc2i($0);
 $3 = i64_lshr($2,i64_const(52,0));
 $trunc = i64_trunc($3)&65535;
 $trunc$clear = $trunc & 2047;
 switch ($trunc$clear<<16>>16) {
 case 0:  {
  $4 = $0 != 0.0;
  if ($4) {
   $5 = $0 * 1.8446744073709552E+19;
   $6 = (+_frexp($5,$1));
   $7 = load4($1);
   $8 = (($7) + -64)|0;
   $$016 = $6;$storemerge = $8;
  } else {
   $$016 = $0;$storemerge = 0;
  }
  store4($1,$storemerge);
  $$0 = $$016;
  break;
 }
 case 2047:  {
  $$0 = $0;
  break;
 }
 default: {
  $9 = i64_trunc($3);
  $10 = $9 & 2047;
  $11 = (($10) + -1022)|0;
  store4($1,$11);
  $12 = i64_and($2,i64_const(4294967295,2148532223));
  $13 = i64_or($12,i64_const(0,1071644672));
  $14 = i64_bc2d($13);
  $$0 = $14;
 }
 }
 return (+$$0);
}
function _sn_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$cast = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 16|0);
 $4 = load4($3);
 $5 = ((($0)) + 20|0);
 $6 = load4($5);
 $7 = (($4) - ($6))|0;
 $8 = ($7>>>0)>($2>>>0);
 $spec$select = $8 ? $2 : $7;
 $$cast = $6;
 (_memcpy(($$cast|0),($1|0),($spec$select|0))|0);
 $9 = load4($5);
 $10 = (($9) + ($spec$select)|0);
 store4($5,$10);
 return ($2|0);
}
function _isalnum($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_isalpha($0)|0);
 $2 = ($1|0)==(0);
 if ($2) {
  $3 = (_isdigit($0)|0);
  $4 = ($3|0)!=(0);
  $phitmp = $4&1;
  $5 = $phitmp;
 } else {
  $5 = 1;
 }
 return ($5|0);
}
function _isalpha($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0 | 32;
 $2 = (($1) + -97)|0;
 $3 = ($2>>>0)<(26);
 $4 = $3&1;
 return ($4|0);
}
function _iscntrl($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)<(32);
 $2 = ($0|0)==(127);
 $3 = $1 | $2;
 $4 = $3&1;
 return ($4|0);
}
function _isgraph($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -33)|0;
 $2 = ($1>>>0)<(94);
 $3 = $2&1;
 return ($3|0);
}
function _ispunct($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_isgraph($0)|0);
 $2 = ($1|0)==(0);
 if ($2) {
  $5 = 0;
 } else {
  $3 = (_isalnum($0)|0);
  $4 = ($3|0)==(0);
  $phitmp = $4&1;
  $5 = $phitmp;
 }
 return ($5|0);
}
function _isxdigit($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $narrow = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_isdigit($0)|0);
 $2 = ($1|0)!=(0);
 $3 = $0 | 32;
 $4 = (($3) + -97)|0;
 $5 = ($4>>>0)<(6);
 $narrow = $5 | $2;
 $spec$select = $narrow&1;
 return ($spec$select|0);
}
function _strcoll($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (___pthread_self_212()|0);
 $2 = (___strcoll_l($0,$1,0)|0);
 return ($2|0);
}
function ___pthread_self_212() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function ___strcoll_l($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_strcmp($0,$1)|0);
 return ($3|0);
}
function ___strerror_l($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$012$lcssa = 0, $$01214 = 0, $$016 = 0, $$113 = 0, $$115 = 0, $$115$ph = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$016 = 0;
 while(1) {
  $2 = (4128 + ($$016)|0);
  $3 = load1($2);
  $4 = $3&255;
  $5 = ($4|0)==($0|0);
  if ($5) {
   label = 4;
   break;
  }
  $6 = (($$016) + 1)|0;
  $7 = ($6|0)==(87);
  if ($7) {
   $$115$ph = 87;
   label = 5;
   break;
  } else {
   $$016 = $6;
  }
 }
 if ((label|0) == 4) {
  $8 = ($$016|0)==(0);
  if ($8) {
   $$012$lcssa = 4224;
  } else {
   $$115$ph = $$016;
   label = 5;
  }
 }
 if ((label|0) == 5) {
  $$01214 = 4224;$$115 = $$115$ph;
  while(1) {
   $$113 = $$01214;
   while(1) {
    $9 = load1($$113);
    $10 = ($9<<24>>24)==(0);
    $11 = ((($$113)) + 1|0);
    if ($10) {
     break;
    } else {
     $$113 = $11;
    }
   }
   $12 = (($$115) + -1)|0;
   $13 = ($12|0)==(0);
   if ($13) {
    $$012$lcssa = $11;
    break;
   } else {
    $$01214 = $11;$$115 = $12;
   }
  }
 }
 $14 = ((($1)) + 20|0);
 $15 = load4($14);
 $16 = (___lctrans($$012$lcssa,$15)|0);
 return ($16|0);
}
function ___lctrans($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (___lctrans_impl($0,$1)|0);
 return ($2|0);
}
function ___lctrans_impl($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = load4($1);
  $4 = ((($1)) + 4|0);
  $5 = load4($4);
  $6 = (___mo_lookup($3,$5,$0)|0);
  $$0 = $6;
 }
 $7 = ($$0|0)==(0|0);
 $8 = $7 ? $0 : $$0;
 return ($8|0);
}
function ___mo_lookup($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$090 = 0, $$094 = 0, $$191 = 0, $$195 = 0, $$4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond102 = 0, $or$cond104 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = load4($0);
 $4 = (($3) + 1794895138)|0;
 $5 = ((($0)) + 8|0);
 $6 = load4($5);
 $7 = (_swapc($6,$4)|0);
 $8 = ((($0)) + 12|0);
 $9 = load4($8);
 $10 = (_swapc($9,$4)|0);
 $11 = ((($0)) + 16|0);
 $12 = load4($11);
 $13 = (_swapc($12,$4)|0);
 $14 = $1 >>> 2;
 $15 = ($7>>>0)<($14>>>0);
 L1: do {
  if ($15) {
   $16 = $7 << 2;
   $17 = (($1) - ($16))|0;
   $18 = ($10>>>0)<($17>>>0);
   $19 = ($13>>>0)<($17>>>0);
   $or$cond = $18 & $19;
   if ($or$cond) {
    $20 = $13 | $10;
    $21 = $20 & 3;
    $22 = ($21|0)==(0);
    if ($22) {
     $23 = $10 >>> 2;
     $24 = $13 >>> 2;
     $$090 = 0;$$094 = $7;
     while(1) {
      $25 = $$094 >>> 1;
      $26 = (($$090) + ($25))|0;
      $27 = $26 << 1;
      $28 = (($27) + ($23))|0;
      $29 = (($0) + ($28<<2)|0);
      $30 = load4($29);
      $31 = (_swapc($30,$4)|0);
      $32 = (($28) + 1)|0;
      $33 = (($0) + ($32<<2)|0);
      $34 = load4($33);
      $35 = (_swapc($34,$4)|0);
      $36 = ($35>>>0)<($1>>>0);
      $37 = (($1) - ($35))|0;
      $38 = ($31>>>0)<($37>>>0);
      $or$cond102 = $36 & $38;
      if (!($or$cond102)) {
       $$4 = 0;
       break L1;
      }
      $39 = (($35) + ($31))|0;
      $40 = (($0) + ($39)|0);
      $41 = load1($40);
      $42 = ($41<<24>>24)==(0);
      if (!($42)) {
       $$4 = 0;
       break L1;
      }
      $43 = (($0) + ($35)|0);
      $44 = (_strcmp($2,$43)|0);
      $45 = ($44|0)==(0);
      if ($45) {
       break;
      }
      $62 = ($$094|0)==(1);
      $63 = ($44|0)<(0);
      if ($62) {
       $$4 = 0;
       break L1;
      }
      $$191 = $63 ? $$090 : $26;
      $64 = (($$094) - ($25))|0;
      $$195 = $63 ? $25 : $64;
      $$090 = $$191;$$094 = $$195;
     }
     $46 = (($27) + ($24))|0;
     $47 = (($0) + ($46<<2)|0);
     $48 = load4($47);
     $49 = (_swapc($48,$4)|0);
     $50 = (($46) + 1)|0;
     $51 = (($0) + ($50<<2)|0);
     $52 = load4($51);
     $53 = (_swapc($52,$4)|0);
     $54 = ($53>>>0)<($1>>>0);
     $55 = (($1) - ($53))|0;
     $56 = ($49>>>0)<($55>>>0);
     $or$cond104 = $54 & $56;
     if ($or$cond104) {
      $57 = (($0) + ($53)|0);
      $58 = (($53) + ($49))|0;
      $59 = (($0) + ($58)|0);
      $60 = load1($59);
      $61 = ($60<<24>>24)==(0);
      $spec$select = $61 ? $57 : 0;
      $$4 = $spec$select;
     } else {
      $$4 = 0;
     }
    } else {
     $$4 = 0;
    }
   } else {
    $$4 = 0;
   }
  } else {
   $$4 = 0;
  }
 } while(0);
 return ($$4|0);
}
function _swapc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0);
 $3 = (_llvm_bswap_i32(($0|0))|0);
 $spec$select = $2 ? $0 : $3;
 return ($spec$select|0);
}
function _strerror($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (___pthread_self_107()|0);
 $2 = ((($1)) + 188|0);
 $3 = load4($2);
 $4 = (___strerror_l($0,$3)|0);
 return ($4|0);
}
function ___pthread_self_107() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function ___floatscan($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0102 = 0, $$0103 = 0, $$0104122 = 0, $$0110 = 0, $$0111 = 0.0, $$1$lcssa = 0, $$1105118 = 0, $$1123 = 0, $$2 = 0, $$2106120 = 0, $$3107 = 0, $$3121 = 0, $$4 = 0, $$4108 = 0, $$5 = 0, $$6 = 0, $$in = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0.0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0.0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = Math_fround(0), $55 = Math_fround(0), $56 = 0.0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond124 = 0, $or$cond5 = 0, $or$cond7 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 switch ($1|0) {
 case 0:  {
  $$0102 = -149;$$0103 = 24;
  label = 4;
  break;
 }
 case 1:  {
  $$0102 = -1074;$$0103 = 53;
  label = 4;
  break;
 }
 case 2:  {
  $$0102 = -1074;$$0103 = 53;
  label = 4;
  break;
 }
 default: {
  $$0111 = 0.0;
 }
 }
 L4: do {
  if ((label|0) == 4) {
   $3 = ((($0)) + 4|0);
   $4 = ((($0)) + 104|0);
   while(1) {
    $5 = load4($3);
    $6 = load4($4);
    $7 = ($5>>>0)<($6>>>0);
    if ($7) {
     $8 = ((($5)) + 1|0);
     store4($3,$8);
     $9 = load1($5);
     $10 = $9&255;
     $12 = $10;
    } else {
     $11 = (___shgetc($0)|0);
     $12 = $11;
    }
    $13 = (_isspace($12)|0);
    $14 = ($13|0)==(0);
    if ($14) {
     break;
    }
   }
   L13: do {
    switch ($12|0) {
    case 43: case 45:  {
     $15 = ($12|0)==(45);
     $16 = $15&1;
     $17 = $16 << 1;
     $18 = (1 - ($17))|0;
     $19 = load4($3);
     $20 = load4($4);
     $21 = ($19>>>0)<($20>>>0);
     if ($21) {
      $22 = ((($19)) + 1|0);
      store4($3,$22);
      $23 = load1($19);
      $24 = $23&255;
      $$0 = $24;$$0110 = $18;
      break L13;
     } else {
      $25 = (___shgetc($0)|0);
      $$0 = $25;$$0110 = $18;
      break L13;
     }
     break;
    }
    default: {
     $$0 = $12;$$0110 = 1;
    }
    }
   } while(0);
   $$0104122 = 0;$$1123 = $$0;
   while(1) {
    $26 = $$1123 | 32;
    $27 = (16056 + ($$0104122)|0);
    $28 = load1($27);
    $29 = $28 << 24 >> 24;
    $30 = ($26|0)==($29|0);
    if (!($30)) {
     $$1$lcssa = $$1123;$trunc = $$0104122;
     break;
    }
    $31 = ($$0104122>>>0)<(7);
    do {
     if ($31) {
      $32 = load4($3);
      $33 = load4($4);
      $34 = ($32>>>0)<($33>>>0);
      if ($34) {
       $35 = ((($32)) + 1|0);
       store4($3,$35);
       $36 = load1($32);
       $37 = $36&255;
       $$2 = $37;
       break;
      } else {
       $38 = (___shgetc($0)|0);
       $$2 = $38;
       break;
      }
     } else {
      $$2 = $$1123;
     }
    } while(0);
    $39 = (($$0104122) + 1)|0;
    $40 = ($39>>>0)<(8);
    if ($40) {
     $$0104122 = $39;$$1123 = $$2;
    } else {
     $$1$lcssa = $$2;$trunc = 8;
     break;
    }
   }
   $trunc$clear = $trunc & 2147483647;
   L29: do {
    switch ($trunc$clear|0) {
    case 8:  {
     break;
    }
    case 3:  {
     label = 23;
     break;
    }
    default: {
     $41 = ($trunc>>>0)>(3);
     $42 = ($2|0)!=(0);
     $or$cond5 = $42 & $41;
     if ($or$cond5) {
      $43 = ($trunc|0)==(8);
      if ($43) {
       break L29;
      } else {
       label = 23;
       break L29;
      }
     }
     $57 = ($trunc|0)==(0);
     L34: do {
      if ($57) {
       $$2106120 = 0;$$3121 = $$1$lcssa;
       while(1) {
        $58 = $$3121 | 32;
        $59 = (16065 + ($$2106120)|0);
        $60 = load1($59);
        $61 = $60 << 24 >> 24;
        $62 = ($58|0)==($61|0);
        if (!($62)) {
         $$3107 = $$2106120;$$5 = $$3121;
         break L34;
        }
        $63 = ($$2106120>>>0)<(2);
        do {
         if ($63) {
          $64 = load4($3);
          $65 = load4($4);
          $66 = ($64>>>0)<($65>>>0);
          if ($66) {
           $67 = ((($64)) + 1|0);
           store4($3,$67);
           $68 = load1($64);
           $69 = $68&255;
           $$4 = $69;
           break;
          } else {
           $70 = (___shgetc($0)|0);
           $$4 = $70;
           break;
          }
         } else {
          $$4 = $$3121;
         }
        } while(0);
        $71 = (($$2106120) + 1)|0;
        $72 = ($71>>>0)<(3);
        if ($72) {
         $$2106120 = $71;$$3121 = $$4;
        } else {
         $$3107 = 3;$$5 = $$4;
         break;
        }
       }
      } else {
       $$3107 = $trunc;$$5 = $$1$lcssa;
      }
     } while(0);
     switch ($$3107|0) {
     case 3:  {
      $73 = load4($3);
      $74 = load4($4);
      $75 = ($73>>>0)<($74>>>0);
      if ($75) {
       $76 = ((($73)) + 1|0);
       store4($3,$76);
       $77 = load1($73);
       $78 = $77&255;
       $80 = $78;
      } else {
       $79 = (___shgetc($0)|0);
       $80 = $79;
      }
      $81 = ($80|0)==(40);
      if (!($81)) {
       $82 = load4($4);
       $83 = ($82|0)==(0|0);
       if ($83) {
        $$0111 = nan;
        break L4;
       }
       $84 = load4($3);
       $85 = ((($84)) + -1|0);
       store4($3,$85);
       $$0111 = nan;
       break L4;
      }
      $$4108 = 1;
      while(1) {
       $86 = load4($3);
       $87 = load4($4);
       $88 = ($86>>>0)<($87>>>0);
       if ($88) {
        $89 = ((($86)) + 1|0);
        store4($3,$89);
        $90 = load1($86);
        $91 = $90&255;
        $94 = $91;
       } else {
        $92 = (___shgetc($0)|0);
        $94 = $92;
       }
       $93 = (($94) + -48)|0;
       $95 = ($93>>>0)<(10);
       $96 = (($94) + -65)|0;
       $97 = ($96>>>0)<(26);
       $or$cond = $95 | $97;
       if (!($or$cond)) {
        $98 = (($94) + -97)|0;
        $99 = ($98>>>0)<(26);
        $100 = ($94|0)==(95);
        $or$cond7 = $100 | $99;
        if (!($or$cond7)) {
         break;
        }
       }
       $112 = (($$4108) + 1)|0;
       $$4108 = $112;
      }
      $101 = ($94|0)==(41);
      if ($101) {
       $$0111 = nan;
       break L4;
      }
      $102 = load4($4);
      $103 = ($102|0)==(0|0);
      if (!($103)) {
       $104 = load4($3);
       $105 = ((($104)) + -1|0);
       store4($3,$105);
      }
      if (!($42)) {
       $106 = (___errno_location()|0);
       store4($106,22);
       ___shlim($0,i64_const(0,0));
       $$0111 = 0.0;
       break L4;
      }
      $107 = ($$4108|0)==(0);
      if ($107) {
       $$0111 = nan;
       break L4;
      }
      $$in = $$4108;
      while(1) {
       $108 = (($$in) + -1)|0;
       if (!($103)) {
        $109 = load4($3);
        $110 = ((($109)) + -1|0);
        store4($3,$110);
       }
       $111 = ($108|0)==(0);
       if ($111) {
        $$0111 = nan;
        break L4;
       } else {
        $$in = $108;
       }
      }
      break;
     }
     case 0:  {
      $118 = ($$5|0)==(48);
      if ($118) {
       $119 = load4($3);
       $120 = load4($4);
       $121 = ($119>>>0)<($120>>>0);
       if ($121) {
        $122 = ((($119)) + 1|0);
        store4($3,$122);
        $123 = load1($119);
        $124 = $123&255;
        $127 = $124;
       } else {
        $125 = (___shgetc($0)|0);
        $127 = $125;
       }
       $126 = $127 | 32;
       $128 = ($126|0)==(120);
       if ($128) {
        $129 = (+_hexfloat($0,$$0103,$$0102,$$0110,$2));
        $$0111 = $129;
        break L4;
       }
       $130 = load4($4);
       $131 = ($130|0)==(0|0);
       if ($131) {
        $$6 = 48;
       } else {
        $132 = load4($3);
        $133 = ((($132)) + -1|0);
        store4($3,$133);
        $$6 = 48;
       }
      } else {
       $$6 = $$5;
      }
      $134 = (+_decfloat($0,$$6,$$0103,$$0102,$$0110,$2));
      $$0111 = $134;
      break L4;
      break;
     }
     default: {
      $113 = load4($4);
      $114 = ($113|0)==(0|0);
      if (!($114)) {
       $115 = load4($3);
       $116 = ((($115)) + -1|0);
       store4($3,$116);
      }
      $117 = (___errno_location()|0);
      store4($117,22);
      ___shlim($0,i64_const(0,0));
      $$0111 = 0.0;
      break L4;
     }
     }
    }
    }
   } while(0);
   if ((label|0) == 23) {
    $44 = load4($4);
    $45 = ($44|0)==(0|0);
    if (!($45)) {
     $46 = load4($3);
     $47 = ((($46)) + -1|0);
     store4($3,$47);
    }
    $48 = ($2|0)!=(0);
    $49 = ($trunc>>>0)>(3);
    $or$cond124 = $48 & $49;
    if ($or$cond124) {
     $$1105118 = $trunc;
     while(1) {
      if (!($45)) {
       $50 = load4($3);
       $51 = ((($50)) + -1|0);
       store4($3,$51);
      }
      $52 = (($$1105118) + -1)|0;
      $53 = ($52>>>0)>(3);
      if ($53) {
       $$1105118 = $52;
      } else {
       break;
      }
     }
    }
   }
   $54 = (Math_fround(($$0110|0)));
   $55 = Math_fround($54 * Math_fround(inf));
   $56 = +$55;
   $$0111 = $56;
  }
 } while(0);
 return (+$$0111);
}
function _hexfloat($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$0$be = 0, $$0$ph = 0, $$0133 = 0, $$0134 = i64(), $$0136 = i64(), $$0139191 = i64(), $$0143 = 0, $$0151 = 0, $$0154 = 0.0, $$0155 = 0.0, $$0158 = 0.0, $$0163 = 0, $$0169 = 0.0, $$0170 = 0, $$0170173 = 0, $$0170174 = 0, $$1135$lcssa = i64(), $$1135182 = i64(), $$1137 = i64();
 var $$1149 = 0, $$1149$ph = 0, $$1152 = 0, $$1156 = 0.0, $$1159 = 0.0, $$1164 = 0, $$2138186 = i64(), $$2141 = i64(), $$2141$ph = i64(), $$2150 = 0, $$2153 = 0, $$2157 = 0.0, $$2160 = 0.0, $$2165 = 0, $$3 = 0, $$3$be = 0, $$3$lcssa = 0, $$3$ph = 0, $$3142 = i64(), $$3146 = 0;
 var $$3146$ph = 0, $$3161$lcssa = 0.0, $$3161181 = 0.0, $$3166$lcssa = 0, $$3166185 = 0, $$4147 = 0, $$4162 = 0.0, $$4167$lcssa = 0, $$4167180 = 0, $$5 = 0.0, $$5168 = 0, $$6 = 0, $$pn = 0.0, $$pre = 0, $$pre$phi204Z2D = 0.0, $$pre203 = 0.0, $10 = 0, $100 = i64(), $101 = i64(), $102 = 0;
 var $103 = 0.0, $104 = 0.0, $105 = 0, $106 = i64(), $107 = 0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0, $113 = i64(), $114 = 0, $115 = 0, $116 = 0.0, $117 = 0.0, $118 = 0.0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0.0, $123 = 0, $124 = i64(), $125 = 0, $126 = i64(), $127 = i64(), $128 = i64(), $129 = i64(), $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0.0, $136 = 0, $137 = 0.0, $138 = 0.0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0.0, $149 = 0.0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0.0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = i64(), $38 = 0, $39 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0, $57 = 0, $58 = 0.0;
 var $59 = 0.0, $6 = 0, $60 = i64(), $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0, $82 = 0, $83 = 0, $84 = i64(), $85 = 0, $86 = 0, $87 = 0, $88 = i64(), $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = i64(), $brmerge = 0, $not$ = 0, $or$cond = 0, $or$cond172 = 0, $or$cond4 = 0, $or$cond6 = 0, $spec$select = i64(), $spec$select175 = 0.0, $spec$select176 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($0)) + 4|0);
 $6 = load4($5);
 $7 = ((($0)) + 104|0);
 $8 = load4($7);
 $9 = ($6>>>0)<($8>>>0);
 if ($9) {
  $10 = ((($6)) + 1|0);
  store4($5,$10);
  $11 = load1($6);
  $12 = $11&255;
  $$0$ph = $12;
 } else {
  $13 = (___shgetc($0)|0);
  $$0$ph = $13;
 }
 $$0 = $$0$ph;$$0143 = 0;
 L5: while(1) {
  switch ($$0|0) {
  case 46:  {
   label = 10;
   break L5;
   break;
  }
  case 48:  {
   break;
  }
  default: {
   $$1149$ph = 0;$$2141$ph = i64_const(0,0);$$3$ph = $$0;$$3146$ph = $$0143;
   break L5;
  }
  }
  $14 = load4($5);
  $15 = load4($7);
  $16 = ($14>>>0)<($15>>>0);
  if ($16) {
   $17 = ((($14)) + 1|0);
   store4($5,$17);
   $18 = load1($14);
   $19 = $18&255;
   $$0$be = $19;
  } else {
   $20 = (___shgetc($0)|0);
   $$0$be = $20;
  }
  $$0 = $$0$be;$$0143 = 1;
 }
 if ((label|0) == 10) {
  $21 = load4($5);
  $22 = load4($7);
  $23 = ($21>>>0)<($22>>>0);
  if ($23) {
   $24 = ((($21)) + 1|0);
   store4($5,$24);
   $25 = load1($21);
   $26 = $25&255;
   $28 = $26;
  } else {
   $27 = (___shgetc($0)|0);
   $28 = $27;
  }
  $29 = ($28|0)==(48);
  if ($29) {
   $$0139191 = i64_const(0,0);
   while(1) {
    $30 = load4($5);
    $31 = load4($7);
    $32 = ($30>>>0)<($31>>>0);
    if ($32) {
     $33 = ((($30)) + 1|0);
     store4($5,$33);
     $34 = load1($30);
     $35 = $34&255;
     $38 = $35;
    } else {
     $36 = (___shgetc($0)|0);
     $38 = $36;
    }
    $37 = i64_add($$0139191,i64_const(4294967295,4294967295));
    $39 = ($38|0)==(48);
    if ($39) {
     $$0139191 = $37;
    } else {
     $$1149$ph = 1;$$2141$ph = $37;$$3$ph = $38;$$3146$ph = 1;
     break;
    }
   }
  } else {
   $$1149$ph = 1;$$2141$ph = i64_const(0,0);$$3$ph = $28;$$3146$ph = $$0143;
  }
 }
 $$0136 = i64_const(0,0);$$0151 = 0;$$0155 = 1.0;$$0158 = 0.0;$$0163 = 0;$$1149 = $$1149$ph;$$2141 = $$2141$ph;$$3 = $$3$ph;$$3146 = $$3146$ph;
 while(1) {
  $40 = (($$3) + -48)|0;
  $41 = ($40>>>0)<(10);
  $$pre = $$3 | 32;
  if ($41) {
   label = 24;
  } else {
   $42 = (($$pre) + -97)|0;
   $43 = ($42>>>0)<(6);
   $44 = ($$3|0)==(46);
   $or$cond6 = $44 | $43;
   if (!($or$cond6)) {
    $$3$lcssa = $$3;
    break;
   }
   if ($44) {
    $45 = ($$1149|0)==(0);
    if ($45) {
     $$1137 = $$0136;$$2150 = 1;$$2153 = $$0151;$$2157 = $$0155;$$2160 = $$0158;$$2165 = $$0163;$$3142 = $$0136;$$4147 = $$3146;
    } else {
     $$3$lcssa = 46;
     break;
    }
   } else {
    label = 24;
   }
  }
  if ((label|0) == 24) {
   label = 0;
   $46 = ($$3|0)>(57);
   $47 = (($$pre) + -87)|0;
   $$0133 = $46 ? $47 : $40;
   $48 = i64_slt($$0136,i64_const(8,0));
   do {
    if ($48) {
     $49 = $$0163 << 4;
     $50 = (($$0133) + ($49))|0;
     $$1152 = $$0151;$$1156 = $$0155;$$1159 = $$0158;$$1164 = $50;
    } else {
     $51 = i64_slt($$0136,i64_const(14,0));
     if ($51) {
      $52 = (+($$0133|0));
      $53 = $$0155 * 0.0625;
      $54 = $53 * $52;
      $55 = $$0158 + $54;
      $$1152 = $$0151;$$1156 = $53;$$1159 = $55;$$1164 = $$0163;
      break;
     } else {
      $56 = ($$0133|0)==(0);
      $57 = ($$0151|0)!=(0);
      $or$cond = $57 | $56;
      $58 = $$0155 * 0.5;
      $59 = $$0158 + $58;
      $spec$select175 = $or$cond ? $$0158 : $59;
      $spec$select176 = $or$cond ? $$0151 : 1;
      $$1152 = $spec$select176;$$1156 = $$0155;$$1159 = $spec$select175;$$1164 = $$0163;
      break;
     }
    }
   } while(0);
   $60 = i64_add($$0136,i64_const(1,0));
   $$1137 = $60;$$2150 = $$1149;$$2153 = $$1152;$$2157 = $$1156;$$2160 = $$1159;$$2165 = $$1164;$$3142 = $$2141;$$4147 = 1;
  }
  $61 = load4($5);
  $62 = load4($7);
  $63 = ($61>>>0)<($62>>>0);
  if ($63) {
   $64 = ((($61)) + 1|0);
   store4($5,$64);
   $65 = load1($61);
   $66 = $65&255;
   $$3$be = $66;
  } else {
   $67 = (___shgetc($0)|0);
   $$3$be = $67;
  }
  $$0136 = $$1137;$$0151 = $$2153;$$0155 = $$2157;$$0158 = $$2160;$$0163 = $$2165;$$1149 = $$2150;$$2141 = $$3142;$$3 = $$3$be;$$3146 = $$4147;
 }
 $68 = ($$3146|0)==(0);
 do {
  if ($68) {
   $69 = load4($7);
   $70 = ($69|0)==(0|0);
   if (!($70)) {
    $71 = load4($5);
    $72 = ((($71)) + -1|0);
    store4($5,$72);
   }
   $73 = ($4|0)==(0);
   if ($73) {
    ___shlim($0,i64_const(0,0));
   } else {
    if (!($70)) {
     $74 = load4($5);
     $75 = ((($74)) + -1|0);
     store4($5,$75);
     $76 = ($$1149|0)==(0);
     $brmerge = $76 | $70;
     if (!($brmerge)) {
      $77 = load4($5);
      $78 = ((($77)) + -1|0);
      store4($5,$78);
     }
    }
   }
   $79 = (+($3|0));
   $80 = $79 * 0.0;
   $$0169 = $80;
  } else {
   $81 = ($$1149|0)==(0);
   $spec$select = $81 ? $$0136 : $$2141;
   $82 = i64_slt($$0136,i64_const(8,0));
   if ($82) {
    $$2138186 = $$0136;$$3166185 = $$0163;
    while(1) {
     $83 = $$3166185 << 4;
     $84 = i64_add($$2138186,i64_const(1,0));
     $85 = i64_slt($$2138186,i64_const(7,0));
     if ($85) {
      $$2138186 = $84;$$3166185 = $83;
     } else {
      $$3166$lcssa = $83;
      break;
     }
    }
   } else {
    $$3166$lcssa = $$0163;
   }
   $86 = $$3$lcssa | 32;
   $87 = ($86|0)==(112);
   if ($87) {
    $88 = (i64(_scanexp($0,$4)));
    $89 = i64_eq($88,i64_const(0,2147483648));
    if ($89) {
     $90 = ($4|0)==(0);
     if ($90) {
      ___shlim($0,i64_const(0,0));
      $$0169 = 0.0;
      break;
     }
     $91 = load4($7);
     $92 = ($91|0)==(0|0);
     if ($92) {
      $$0134 = i64_const(0,0);
     } else {
      $93 = load4($5);
      $94 = ((($93)) + -1|0);
      store4($5,$94);
      $$0134 = i64_const(0,0);
     }
    } else {
     $$0134 = $88;
    }
   } else {
    $95 = load4($7);
    $96 = ($95|0)==(0|0);
    if ($96) {
     $$0134 = i64_const(0,0);
    } else {
     $97 = load4($5);
     $98 = ((($97)) + -1|0);
     store4($5,$98);
     $$0134 = i64_const(0,0);
    }
   }
   $99 = i64_shl($spec$select,i64_const(2,0));
   $100 = i64_add($99,i64_const(4294967264,4294967295));
   $101 = i64_add($100,$$0134);
   $102 = ($$3166$lcssa|0)==(0);
   if ($102) {
    $103 = (+($3|0));
    $104 = $103 * 0.0;
    $$0169 = $104;
    break;
   }
   $105 = (0 - ($2))|0;
   $106 = i64_sext($105);
   $107 = i64_sgt($101,$106);
   if ($107) {
    $108 = (___errno_location()|0);
    store4($108,34);
    $109 = (+($3|0));
    $110 = $109 * 1.7976931348623157E+308;
    $111 = $110 * 1.7976931348623157E+308;
    $$0169 = $111;
    break;
   }
   $112 = (($2) + -106)|0;
   $113 = i64_sext($112);
   $114 = i64_slt($101,$113);
   if ($114) {
    $115 = (___errno_location()|0);
    store4($115,34);
    $116 = (+($3|0));
    $117 = $116 * 2.2250738585072014E-308;
    $118 = $117 * 2.2250738585072014E-308;
    $$0169 = $118;
    break;
   }
   $119 = ($$3166$lcssa|0)>(-1);
   if ($119) {
    $$1135182 = $101;$$3161181 = $$0158;$$4167180 = $$3166$lcssa;
    while(1) {
     $120 = !($$3161181 >= 0.5);
     $121 = $$4167180 << 1;
     $122 = $$3161181 + -1.0;
     $not$ = $120 ^ 1;
     $123 = $not$&1;
     $$5168 = $121 | $123;
     $$pn = $120 ? $$3161181 : $122;
     $$4162 = $$3161181 + $$pn;
     $124 = i64_add($$1135182,i64_const(4294967295,4294967295));
     $125 = ($$5168|0)>(-1);
     if ($125) {
      $$1135182 = $124;$$3161181 = $$4162;$$4167180 = $$5168;
     } else {
      $$1135$lcssa = $124;$$3161$lcssa = $$4162;$$4167$lcssa = $$5168;
      break;
     }
    }
   } else {
    $$1135$lcssa = $101;$$3161$lcssa = $$0158;$$4167$lcssa = $$3166$lcssa;
   }
   $126 = i64_sext($1);
   $127 = i64_sext($2);
   $128 = i64_sub(i64_const(32,0),$127);
   $129 = i64_add($128,$$1135$lcssa);
   $130 = i64_slt($129,$126);
   if ($130) {
    $131 = i64_trunc($129);
    $132 = ($131|0)>(0);
    if ($132) {
     $$0170 = $131;
     label = 65;
    } else {
     $$0170174 = 0;$136 = 84;
     label = 67;
    }
   } else {
    $$0170 = $1;
    label = 65;
   }
   if ((label|0) == 65) {
    $133 = ($$0170|0)<(53);
    $134 = (84 - ($$0170))|0;
    if ($133) {
     $$0170174 = $$0170;$136 = $134;
     label = 67;
    } else {
     $$pre203 = (+($3|0));
     $$0154 = 0.0;$$0170173 = $$0170;$$pre$phi204Z2D = $$pre203;
    }
   }
   if ((label|0) == 67) {
    $135 = (+($3|0));
    $137 = (+_scalbn(1.0,$136));
    $138 = (+_copysignl($137,$135));
    $$0154 = $138;$$0170173 = $$0170174;$$pre$phi204Z2D = $135;
   }
   $139 = ($$0170173|0)<(32);
   $140 = $$3161$lcssa != 0.0;
   $or$cond4 = $140 & $139;
   $141 = $$4167$lcssa & 1;
   $142 = ($141|0)==(0);
   $or$cond172 = $142 & $or$cond4;
   $143 = $or$cond172&1;
   $$6 = (($$4167$lcssa) + ($143))|0;
   $$5 = $or$cond172 ? 0.0 : $$3161$lcssa;
   $144 = (+($$6>>>0));
   $145 = $$pre$phi204Z2D * $144;
   $146 = $$0154 + $145;
   $147 = $$5 * $$pre$phi204Z2D;
   $148 = $147 + $146;
   $149 = $148 - $$0154;
   $150 = $149 != 0.0;
   if (!($150)) {
    $151 = (___errno_location()|0);
    store4($151,34);
   }
   $152 = i64_trunc($$1135$lcssa);
   $153 = (+_scalbnl($149,$152));
   $$0169 = $153;
  }
 } while(0);
 return (+$$0169);
}
function _decfloat($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0324 = 0, $$0324$be = 0, $$0327480 = 0, $$0328 = 0, $$0329 = 0, $$0331476 = 0, $$0335486 = 0, $$0336$lcssa = 0, $$0336453 = 0, $$0336454 = 0, $$0336455 = 0, $$0336503 = 0, $$0340$lcssa = 0, $$0340457 = 0, $$0340458 = 0, $$0340459 = 0, $$0340502 = 0, $$0345$lcssa540 = 0, $$0345484 = 0, $$0355 = 0.0;
 var $$0356 = 0.0, $$0360474 = 0.0, $$0367 = 0, $$0376 = 0, $$0376$ph = 0, $$0381$lcssa539 = 0, $$0381483 = 0, $$0390 = 0, $$0393 = 0, $$0398$lcssa = 0, $$0398463 = 0, $$0398464 = 0, $$0398465 = 0, $$0398499 = 0, $$0401 = i64(), $$0402$lcssa = i64(), $$0402467 = i64(), $$0402468 = i64(), $$0402469 = i64(), $$0402498 = i64();
 var $$0404516 = i64(), $$1 = 0.0, $$10473 = 0, $$11 = 0, $$1330 = 0, $$1357 = 0.0, $$1361 = 0.0, $$1377 = 0, $$1377$ph = 0, $$1377$ph$ph = 0, $$1391$lcssa = 0, $$1391501 = 0, $$1403 = i64(), $$1405 = i64(), $$2 = 0, $$2338 = 0, $$2342 = 0, $$2362 = 0.0, $$2366$v = 0, $$2369 = 0;
 var $$2369$ph = 0, $$2369$ph579 = 0, $$2392 = 0, $$2395 = 0, $$2400 = 0, $$2406$lcssa = i64(), $$2406497 = i64(), $$3$lcssa = 0, $$3339493 = 0, $$3343 = 0, $$3348$ph = 0, $$3348$ph580 = 0, $$3359 = 0.0, $$3363 = 0.0, $$3370 = 0, $$3379 = 0, $$3384$ph = 0, $$3384$ph578 = 0, $$3396$lcssa = 0, $$3396500 = 0;
 var $$3407 = i64(), $$3504 = 0, $$4344485 = 0, $$4380 = 0, $$4397 = 0, $$4408424426 = i64(), $$4475 = 0, $$5 = 0, $$5$in = 0, $$5350 = 0, $$5350$ph = 0, $$5350$ph$ph = 0, $$5372 = 0, $$5386$ph = 0, $$5386$ph576 = 0, $$5386$ph576$ph = 0, $$5409 = i64(), $$5409427 = i64(), $$6351478 = 0, $$6387477 = 0;
 var $$6479 = 0, $$7374$ph$ph = 0, $$neg447 = 0, $$neg448 = 0, $$pre = 0, $$promoted = 0, $$sink$off0 = 0, $10 = 0, $100 = 0, $101 = i64(), $102 = 0, $103 = 0, $104 = 0.0, $105 = 0.0, $106 = 0.0, $107 = 0, $108 = i64(), $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0.0, $112 = 0.0, $113 = 0.0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0.0, $128 = 0, $129 = 0.0;
 var $13 = 0, $130 = 0.0, $131 = 0, $132 = 0.0, $133 = 0, $134 = 0.0, $135 = 0.0, $136 = 0, $137 = 0, $138 = 0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0.0, $146 = 0.0, $147 = 0.0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0.0, $152 = 0.0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = i64(), $191 = i64(), $192 = i64(), $193 = i64(), $194 = 0, $195 = i64(), $196 = 0, $197 = i64(), $198 = i64(), $199 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = i64(), $270 = 0.0, $271 = 0, $272 = 0, $273 = 0.0, $274 = 0.0;
 var $275 = 0, $276 = 0.0, $277 = 0.0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0.0, $285 = 0.0, $286 = 0, $287 = 0.0, $288 = 0.0, $289 = 0.0, $29 = 0, $290 = 0.0, $291 = 0, $292 = 0;
 var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0.0, $302 = 0.0, $303 = 0, $304 = 0.0, $305 = 0.0, $306 = 0, $307 = 0, $308 = 0, $309 = 0.0, $31 = 0, $310 = 0.0;
 var $311 = 0.0, $312 = 0.0, $313 = 0, $314 = 0, $315 = 0.0, $316 = 0, $317 = 0.0, $318 = 0.0, $319 = 0.0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0.0, $324 = 0, $325 = 0.0, $326 = 0, $327 = 0, $328 = 0, $329 = 0;
 var $33 = 0, $330 = 0, $331 = 0, $332 = 0.0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = i64(), $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = i64(), $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = i64(), $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $cond = 0, $exitcond = 0;
 var $extract$t = 0, $extract$t575 = 0, $narrow = 0, $not$ = 0, $or$cond = 0, $or$cond3 = 0, $or$cond414 = 0, $or$cond416 = 0, $or$cond417 = 0, $or$cond418 = 0, $or$cond421 = 0, $or$cond559 = 0, $or$cond9 = 0, $spec$select = 0, $spec$select410 = 0, $spec$select411 = 0, $spec$select412 = i64(), $spec$select419 = 0, $spec$select420 = 0, $spec$select439 = 0;
 var $spec$select440 = 0, $spec$select441 = 0, $spec$select442 = 0, $spec$select443 = 0, $spec$store$select = 0, $storemerge446 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $6 = sp;
 $7 = (($3) + ($2))|0;
 $8 = (0 - ($7))|0;
 $9 = ((($0)) + 4|0);
 $10 = ((($0)) + 104|0);
 $$0324 = $1;$$0393 = 0;
 L1: while(1) {
  switch ($$0324|0) {
  case 46:  {
   label = 7;
   break L1;
   break;
  }
  case 48:  {
   break;
  }
  default: {
   $$0390 = 0;$$1405 = i64_const(0,0);$$2 = $$0324;$$2395 = $$0393;
   break L1;
  }
  }
  $11 = load4($9);
  $12 = load4($10);
  $13 = ($11>>>0)<($12>>>0);
  if ($13) {
   $14 = ((($11)) + 1|0);
   store4($9,$14);
   $15 = load1($11);
   $16 = $15&255;
   $$0324$be = $16;
  } else {
   $17 = (___shgetc($0)|0);
   $$0324$be = $17;
  }
  $$0324 = $$0324$be;$$0393 = 1;
 }
 if ((label|0) == 7) {
  $18 = load4($9);
  $19 = load4($10);
  $20 = ($18>>>0)<($19>>>0);
  if ($20) {
   $21 = ((($18)) + 1|0);
   store4($9,$21);
   $22 = load1($18);
   $23 = $22&255;
   $25 = $23;
  } else {
   $24 = (___shgetc($0)|0);
   $25 = $24;
  }
  $26 = ($25|0)==(48);
  if ($26) {
   $$0404516 = i64_const(0,0);
   while(1) {
    $27 = i64_add($$0404516,i64_const(4294967295,4294967295));
    $28 = load4($9);
    $29 = load4($10);
    $30 = ($28>>>0)<($29>>>0);
    if ($30) {
     $31 = ((($28)) + 1|0);
     store4($9,$31);
     $32 = load1($28);
     $33 = $32&255;
     $35 = $33;
    } else {
     $34 = (___shgetc($0)|0);
     $35 = $34;
    }
    $36 = ($35|0)==(48);
    if ($36) {
     $$0404516 = $27;
    } else {
     $$0390 = 1;$$1405 = $27;$$2 = $35;$$2395 = 1;
     break;
    }
   }
  } else {
   $$0390 = 1;$$1405 = i64_const(0,0);$$2 = $25;$$2395 = $$0393;
  }
 }
 store4($6,0);
 $37 = (($$2) + -48)|0;
 $38 = ($37>>>0)<(10);
 $39 = ($$2|0)==(46);
 $40 = $39 | $38;
 L22: do {
  if ($40) {
   $41 = ((($6)) + 496|0);
   $$0336503 = 0;$$0340502 = 0;$$0398499 = 0;$$0402498 = i64_const(0,0);$$1391501 = $$0390;$$2406497 = $$1405;$$3396500 = $$2395;$$3504 = $$2;$333 = $39;$334 = $37;
   L24: while(1) {
    do {
     if ($333) {
      $cond = ($$1391501|0)==(0);
      if ($cond) {
       $$1403 = $$0402498;$$2338 = $$0336503;$$2342 = $$0340502;$$2392 = 1;$$2400 = $$0398499;$$3407 = $$0402498;$$4397 = $$3396500;
      } else {
       break L24;
      }
     } else {
      $43 = ($$0340502|0)<(125);
      $44 = i64_add($$0402498,i64_const(1,0));
      $45 = ($$3504|0)!=(48);
      if (!($43)) {
       if (!($45)) {
        $$1403 = $44;$$2338 = $$0336503;$$2342 = $$0340502;$$2392 = $$1391501;$$2400 = $$0398499;$$3407 = $$2406497;$$4397 = $$3396500;
        break;
       }
       $56 = load4($41);
       $57 = $56 | 1;
       store4($41,$57);
       $$1403 = $44;$$2338 = $$0336503;$$2342 = $$0340502;$$2392 = $$1391501;$$2400 = $$0398499;$$3407 = $$2406497;$$4397 = $$3396500;
       break;
      }
      $46 = i64_trunc($44);
      $spec$select = $45 ? $46 : $$0398499;
      $47 = ($$0336503|0)==(0);
      $48 = (($6) + ($$0340502<<2)|0);
      if ($47) {
       $storemerge446 = $334;
      } else {
       $49 = load4($48);
       $50 = ($49*10)|0;
       $51 = (($$3504) + -48)|0;
       $52 = (($51) + ($50))|0;
       $storemerge446 = $52;
      }
      store4($48,$storemerge446);
      $53 = (($$0336503) + 1)|0;
      $54 = ($53|0)==(9);
      $55 = $54&1;
      $spec$select410 = (($$0340502) + ($55))|0;
      $spec$select411 = $54 ? 0 : $53;
      $$1403 = $44;$$2338 = $spec$select411;$$2342 = $spec$select410;$$2392 = $$1391501;$$2400 = $spec$select;$$3407 = $$2406497;$$4397 = 1;
     }
    } while(0);
    $58 = load4($9);
    $59 = load4($10);
    $60 = ($58>>>0)<($59>>>0);
    if ($60) {
     $61 = ((($58)) + 1|0);
     store4($9,$61);
     $62 = load1($58);
     $63 = $62&255;
     $66 = $63;
    } else {
     $64 = (___shgetc($0)|0);
     $66 = $64;
    }
    $65 = (($66) + -48)|0;
    $67 = ($65>>>0)<(10);
    $68 = ($66|0)==(46);
    $69 = $68 | $67;
    if ($69) {
     $$0336503 = $$2338;$$0340502 = $$2342;$$0398499 = $$2400;$$0402498 = $$1403;$$1391501 = $$2392;$$2406497 = $$3407;$$3396500 = $$4397;$$3504 = $66;$333 = $68;$334 = $65;
    } else {
     $$0336$lcssa = $$2338;$$0340$lcssa = $$2342;$$0398$lcssa = $$2400;$$0402$lcssa = $$1403;$$1391$lcssa = $$2392;$$2406$lcssa = $$3407;$$3$lcssa = $66;$$3396$lcssa = $$4397;
     label = 31;
     break L22;
    }
   }
   $42 = ($$3396500|0)!=(0);
   $$0336455 = $$0336503;$$0340459 = $$0340502;$$0398465 = $$0398499;$$0402469 = $$0402498;$$4408424426 = $$2406497;$335 = $42;
   label = 39;
  } else {
   $$0336$lcssa = 0;$$0340$lcssa = 0;$$0398$lcssa = 0;$$0402$lcssa = i64_const(0,0);$$1391$lcssa = $$0390;$$2406$lcssa = $$1405;$$3$lcssa = $$2;$$3396$lcssa = $$2395;
   label = 31;
  }
 } while(0);
 do {
  if ((label|0) == 31) {
   $70 = ($$1391$lcssa|0)==(0);
   $spec$select412 = $70 ? $$0402$lcssa : $$2406$lcssa;
   $71 = ($$3396$lcssa|0)!=(0);
   $72 = $$3$lcssa | 32;
   $73 = ($72|0)==(101);
   $or$cond414 = $71 & $73;
   if (!($or$cond414)) {
    $82 = ($$3$lcssa|0)>(-1);
    if ($82) {
     $$0336455 = $$0336$lcssa;$$0340459 = $$0340$lcssa;$$0398465 = $$0398$lcssa;$$0402469 = $$0402$lcssa;$$4408424426 = $spec$select412;$335 = $71;
     label = 39;
     break;
    } else {
     $$0336454 = $$0336$lcssa;$$0340458 = $$0340$lcssa;$$0398464 = $$0398$lcssa;$$0402468 = $$0402$lcssa;$$5409 = $spec$select412;$336 = $71;
     label = 41;
     break;
    }
   }
   $74 = (i64(_scanexp($0,$5)));
   $75 = i64_eq($74,i64_const(0,2147483648));
   if ($75) {
    $76 = ($5|0)==(0);
    if ($76) {
     ___shlim($0,i64_const(0,0));
     $$1 = 0.0;
     break;
    }
    $77 = load4($10);
    $78 = ($77|0)==(0|0);
    if ($78) {
     $$0401 = i64_const(0,0);
    } else {
     $79 = load4($9);
     $80 = ((($79)) + -1|0);
     store4($9,$80);
     $$0401 = i64_const(0,0);
    }
   } else {
    $$0401 = $74;
   }
   $81 = i64_add($$0401,$spec$select412);
   $$0336453 = $$0336$lcssa;$$0340457 = $$0340$lcssa;$$0398463 = $$0398$lcssa;$$0402467 = $$0402$lcssa;$$5409427 = $81;
   label = 43;
  }
 } while(0);
 if ((label|0) == 39) {
  $83 = load4($10);
  $84 = ($83|0)==(0|0);
  if ($84) {
   $$0336454 = $$0336455;$$0340458 = $$0340459;$$0398464 = $$0398465;$$0402468 = $$0402469;$$5409 = $$4408424426;$336 = $335;
   label = 41;
  } else {
   $85 = load4($9);
   $86 = ((($85)) + -1|0);
   store4($9,$86);
   if ($335) {
    $$0336453 = $$0336455;$$0340457 = $$0340459;$$0398463 = $$0398465;$$0402467 = $$0402469;$$5409427 = $$4408424426;
    label = 43;
   } else {
    label = 42;
   }
  }
 }
 if ((label|0) == 41) {
  if ($336) {
   $$0336453 = $$0336454;$$0340457 = $$0340458;$$0398463 = $$0398464;$$0402467 = $$0402468;$$5409427 = $$5409;
   label = 43;
  } else {
   label = 42;
  }
 }
 do {
  if ((label|0) == 42) {
   $87 = (___errno_location()|0);
   store4($87,22);
   ___shlim($0,i64_const(0,0));
   $$1 = 0.0;
  }
  else if ((label|0) == 43) {
   $88 = load4($6);
   $89 = ($88|0)==(0);
   if ($89) {
    $90 = (+($4|0));
    $91 = $90 * 0.0;
    $$1 = $91;
    break;
   }
   $92 = i64_eq($$5409427,$$0402467);
   $93 = i64_slt($$0402467,i64_const(10,0));
   $or$cond = $93 & $92;
   if ($or$cond) {
    $94 = ($2|0)>(30);
    $95 = $88 >>> $2;
    $96 = ($95|0)==(0);
    $or$cond416 = $94 | $96;
    if ($or$cond416) {
     $97 = (+($4|0));
     $98 = (+($88>>>0));
     $99 = $97 * $98;
     $$1 = $99;
     break;
    }
   }
   $100 = (($3|0) / -2)&-1;
   $101 = i64_sext($100);
   $102 = i64_sgt($$5409427,$101);
   if ($102) {
    $103 = (___errno_location()|0);
    store4($103,34);
    $104 = (+($4|0));
    $105 = $104 * 1.7976931348623157E+308;
    $106 = $105 * 1.7976931348623157E+308;
    $$1 = $106;
    break;
   }
   $107 = (($3) + -106)|0;
   $108 = i64_sext($107);
   $109 = i64_slt($$5409427,$108);
   if ($109) {
    $110 = (___errno_location()|0);
    store4($110,34);
    $111 = (+($4|0));
    $112 = $111 * 2.2250738585072014E-308;
    $113 = $112 * 2.2250738585072014E-308;
    $$1 = $113;
    break;
   }
   $114 = ($$0336453|0)==(0);
   if ($114) {
    $$3343 = $$0340457;
   } else {
    $115 = ($$0336453|0)<(9);
    if ($115) {
     $116 = (($6) + ($$0340457<<2)|0);
     $$promoted = load4($116);
     $$3339493 = $$0336453;$118 = $$promoted;
     while(1) {
      $117 = ($118*10)|0;
      $119 = (($$3339493) + 1)|0;
      $120 = ($$3339493|0)<(8);
      if ($120) {
       $$3339493 = $119;$118 = $117;
      } else {
       break;
      }
     }
     store4($116,$117);
    }
    $121 = (($$0340457) + 1)|0;
    $$3343 = $121;
   }
   $122 = i64_trunc($$5409427);
   $123 = ($$0398463|0)<(9);
   if ($123) {
    $124 = ($$0398463|0)<=($122|0);
    $125 = ($122|0)<(18);
    $or$cond3 = $124 & $125;
    if ($or$cond3) {
     $126 = ($122|0)==(9);
     if ($126) {
      $127 = (+($4|0));
      $128 = load4($6);
      $129 = (+($128>>>0));
      $130 = $127 * $129;
      $$1 = $130;
      break;
     }
     $131 = ($122|0)<(9);
     if ($131) {
      $132 = (+($4|0));
      $133 = load4($6);
      $134 = (+($133>>>0));
      $135 = $132 * $134;
      $136 = (8 - ($122))|0;
      $137 = (6032 + ($136<<2)|0);
      $138 = load4($137);
      $139 = (+($138|0));
      $140 = $135 / $139;
      $$1 = $140;
      break;
     }
     $$neg447 = Math_imul($122, -3)|0;
     $$neg448 = (($2) + 27)|0;
     $141 = (($$neg448) + ($$neg447))|0;
     $142 = ($141|0)>(30);
     $$pre = load4($6);
     $143 = $$pre >>> $141;
     $144 = ($143|0)==(0);
     $or$cond559 = $142 | $144;
     if ($or$cond559) {
      $145 = (+($4|0));
      $146 = (+($$pre>>>0));
      $147 = $145 * $146;
      $148 = (($122) + -10)|0;
      $149 = (6032 + ($148<<2)|0);
      $150 = load4($149);
      $151 = (+($150|0));
      $152 = $147 * $151;
      $$1 = $152;
      break;
     }
    }
   }
   $153 = (($122|0) % 9)&-1;
   $154 = ($153|0)==(0);
   if ($154) {
    $$2369$ph = $$3343;$$3348$ph = 0;$$3384$ph = $122;
   } else {
    $155 = ($122|0)>(-1);
    $156 = (($153) + 9)|0;
    $157 = $155 ? $153 : $156;
    $158 = (8 - ($157))|0;
    $159 = (6032 + ($158<<2)|0);
    $160 = load4($159);
    $161 = ($$3343|0)==(0);
    if ($161) {
     $$0345$lcssa540 = 0;$$0367 = 0;$$0381$lcssa539 = $122;
    } else {
     $162 = (1000000000 / ($160|0))&-1;
     $$0335486 = 0;$$0345484 = 0;$$0381483 = $122;$$4344485 = 0;
     while(1) {
      $163 = (($6) + ($$4344485<<2)|0);
      $164 = load4($163);
      $165 = (($164>>>0) / ($160>>>0))&-1;
      $166 = Math_imul($165, $160)|0;
      $167 = (($164) - ($166))|0;
      $168 = (($165) + ($$0335486))|0;
      store4($163,$168);
      $169 = Math_imul($162, $167)|0;
      $170 = ($$4344485|0)==($$0345484|0);
      $171 = ($168|0)==(0);
      $or$cond417 = $170 & $171;
      $172 = (($$0345484) + 1)|0;
      $173 = $172 & 127;
      $174 = (($$0381483) + -9)|0;
      $spec$select439 = $or$cond417 ? $174 : $$0381483;
      $spec$select440 = $or$cond417 ? $173 : $$0345484;
      $175 = (($$4344485) + 1)|0;
      $176 = ($175|0)==($$3343|0);
      if ($176) {
       break;
      } else {
       $$0335486 = $169;$$0345484 = $spec$select440;$$0381483 = $spec$select439;$$4344485 = $175;
      }
     }
     $177 = ($169|0)==(0);
     if ($177) {
      $$0345$lcssa540 = $spec$select440;$$0367 = $$3343;$$0381$lcssa539 = $spec$select439;
     } else {
      $178 = (($6) + ($$3343<<2)|0);
      $179 = (($$3343) + 1)|0;
      store4($178,$169);
      $$0345$lcssa540 = $spec$select440;$$0367 = $179;$$0381$lcssa539 = $spec$select439;
     }
    }
    $180 = (9 - ($157))|0;
    $181 = (($180) + ($$0381$lcssa539))|0;
    $$2369$ph = $$0367;$$3348$ph = $$0345$lcssa540;$$3384$ph = $181;
   }
   $$0376$ph = 0;$$2369$ph579 = $$2369$ph;$$3348$ph580 = $$3348$ph;$$3384$ph578 = $$3384$ph;
   L104: while(1) {
    $182 = ($$3384$ph578|0)<(18);
    $183 = ($$3384$ph578|0)==(18);
    $184 = (($6) + ($$3348$ph580<<2)|0);
    $$0376 = $$0376$ph;$$2369 = $$2369$ph579;
    while(1) {
     if (!($182)) {
      if (!($183)) {
       $$5386$ph = $$3384$ph578;
       break L104;
      }
      $185 = load4($184);
      $186 = ($185>>>0)<(9007199);
      if (!($186)) {
       $$5386$ph = 18;
       break L104;
      }
     }
     $187 = (($$2369) + 127)|0;
     $$0329 = 0;$$3370 = $$2369;$$5$in = $187;
     while(1) {
      $$5 = $$5$in & 127;
      $188 = (($6) + ($$5<<2)|0);
      $189 = load4($188);
      $190 = i64_zext($189>>>0);
      $191 = i64_shl($190,i64_const(29,0));
      $192 = i64_zext($$0329>>>0);
      $193 = i64_add($191,$192);
      $194 = i64_ugt($193,i64_const(1000000000,0));
      $extract$t575 = i64_trunc($193);
      if ($194) {
       $195 = i64_udiv($193,i64_const(1000000000,0));
       $196 = i64_trunc($195);
       $197 = i64_mul($195,i64_const(1000000000,0));
       $198 = i64_sub($193,$197);
       $extract$t = i64_trunc($198);
       $$1330 = $196;$$sink$off0 = $extract$t;
      } else {
       $$1330 = 0;$$sink$off0 = $extract$t575;
      }
      store4($188,$$sink$off0);
      $199 = (($$3370) + 127)|0;
      $200 = $199 & 127;
      $201 = ($$5|0)!=($200|0);
      $202 = ($$5|0)==($$3348$ph580|0);
      $or$cond418 = $201 | $202;
      $203 = ($$sink$off0|0)==(0);
      $spec$select419 = $203 ? $$5 : $$3370;
      $spec$select441 = $or$cond418 ? $$3370 : $spec$select419;
      $204 = (($$5) + -1)|0;
      if ($202) {
       break;
      } else {
       $$0329 = $$1330;$$3370 = $spec$select441;$$5$in = $204;
      }
     }
     $205 = (($$0376) + -29)|0;
     $206 = ($$1330|0)==(0);
     if ($206) {
      $$0376 = $205;$$2369 = $$3370;
     } else {
      break;
     }
    }
    $207 = (($$3384$ph578) + 9)|0;
    $208 = (($$3348$ph580) + 127)|0;
    $209 = $208 & 127;
    $210 = ($209|0)==($spec$select441|0);
    $211 = (($spec$select441) + 127)|0;
    $212 = $211 & 127;
    $213 = (($spec$select441) + 126)|0;
    $214 = $213 & 127;
    $215 = (($6) + ($214<<2)|0);
    if ($210) {
     $216 = (($6) + ($212<<2)|0);
     $217 = load4($216);
     $218 = load4($215);
     $219 = $218 | $217;
     store4($215,$219);
     $$5372 = $212;
    } else {
     $$5372 = $$3370;
    }
    $220 = (($6) + ($209<<2)|0);
    store4($220,$$1330);
    $$0376$ph = $205;$$2369$ph579 = $$5372;$$3348$ph580 = $209;$$3384$ph578 = $207;
   }
   $$1377$ph$ph = $$0376;$$5350$ph$ph = $$3348$ph580;$$5386$ph576$ph = $$5386$ph;$$7374$ph$ph = $$2369;
   L123: while(1) {
    $257 = (($$7374$ph$ph) + 1)|0;
    $254 = $257 & 127;
    $258 = (($$7374$ph$ph) + 127)|0;
    $259 = $258 & 127;
    $260 = (($6) + ($259<<2)|0);
    $$1377$ph = $$1377$ph$ph;$$5350$ph = $$5350$ph$ph;$$5386$ph576 = $$5386$ph576$ph;
    while(1) {
     $252 = ($$5386$ph576|0)==(18);
     $253 = ($$5386$ph576|0)>(27);
     $spec$select420 = $253 ? 9 : 1;
     $$1377 = $$1377$ph;$$5350 = $$5350$ph;
     while(1) {
      $$0331476 = 0;
      while(1) {
       $221 = (($$0331476) + ($$5350))|0;
       $222 = $221 & 127;
       $223 = ($222|0)==($$7374$ph$ph|0);
       if ($223) {
        label = 92;
        break;
       }
       $224 = (($6) + ($222<<2)|0);
       $225 = load4($224);
       $226 = (7624 + ($$0331476<<2)|0);
       $227 = load4($226);
       $228 = ($225>>>0)<($227>>>0);
       if ($228) {
        label = 92;
        break;
       }
       $229 = ($225>>>0)>($227>>>0);
       if ($229) {
        break;
       }
       $230 = (($$0331476) + 1)|0;
       $231 = ($230>>>0)<(2);
       if ($231) {
        $$0331476 = 1;
       } else {
        label = 92;
        break;
       }
      }
      if ((label|0) == 92) {
       label = 0;
       if ($252) {
        break L123;
       }
      }
      $232 = (($spec$select420) + ($$1377))|0;
      $233 = ($$5350|0)==($$7374$ph$ph|0);
      if ($233) {
       $$1377 = $232;$$5350 = $$7374$ph$ph;
      } else {
       break;
      }
     }
     $234 = 1 << $spec$select420;
     $235 = (($234) + -1)|0;
     $236 = 1000000000 >>> $spec$select420;
     $$0327480 = 0;$$6351478 = $$5350;$$6387477 = $$5386$ph576;$$6479 = $$5350;
     while(1) {
      $237 = (($6) + ($$6479<<2)|0);
      $238 = load4($237);
      $239 = $238 & $235;
      $240 = $238 >>> $spec$select420;
      $241 = (($240) + ($$0327480))|0;
      store4($237,$241);
      $242 = Math_imul($239, $236)|0;
      $243 = ($$6479|0)==($$6351478|0);
      $244 = ($241|0)==(0);
      $or$cond421 = $243 & $244;
      $245 = (($$6351478) + 1)|0;
      $246 = $245 & 127;
      $247 = (($$6387477) + -9)|0;
      $spec$select442 = $or$cond421 ? $247 : $$6387477;
      $spec$select443 = $or$cond421 ? $246 : $$6351478;
      $248 = (($$6479) + 1)|0;
      $249 = $248 & 127;
      $250 = ($249|0)==($$7374$ph$ph|0);
      if ($250) {
       break;
      } else {
       $$0327480 = $242;$$6351478 = $spec$select443;$$6387477 = $spec$select442;$$6479 = $249;
      }
     }
     $251 = ($242|0)==(0);
     if (!($251)) {
      $255 = ($254|0)==($spec$select443|0);
      if (!($255)) {
       break;
      }
      $261 = load4($260);
      $262 = $261 | 1;
      store4($260,$262);
     }
     $$1377$ph = $232;$$5350$ph = $spec$select443;$$5386$ph576 = $spec$select442;
    }
    $256 = (($6) + ($$7374$ph$ph<<2)|0);
    store4($256,$242);
    $$1377$ph$ph = $232;$$5350$ph$ph = $spec$select443;$$5386$ph576$ph = $spec$select442;$$7374$ph$ph = $254;
   }
   $$0360474 = 0.0;$$10473 = $$7374$ph$ph;$$4475 = 0;
   while(1) {
    $263 = (($$4475) + ($$5350))|0;
    $264 = $263 & 127;
    $265 = ($264|0)==($$10473|0);
    $266 = (($$10473) + 1)|0;
    $267 = $266 & 127;
    if ($265) {
     $268 = (($267) + -1)|0;
     $269 = (($6) + ($268<<2)|0);
     store4($269,0);
     $$11 = $267;
    } else {
     $$11 = $$10473;
    }
    $270 = $$0360474 * 1.0E+9;
    $271 = (($6) + ($264<<2)|0);
    $272 = load4($271);
    $273 = (+($272>>>0));
    $274 = $270 + $273;
    $275 = (($$4475) + 1)|0;
    $exitcond = ($275|0)==(2);
    if ($exitcond) {
     break;
    } else {
     $$0360474 = $274;$$10473 = $$11;$$4475 = $275;
    }
   }
   $276 = (+($4|0));
   $277 = $274 * $276;
   $278 = (($$1377) + 53)|0;
   $279 = (($278) - ($3))|0;
   $280 = ($279|0)<($2|0);
   $281 = ($279|0)>(0);
   $spec$store$select = $281 ? $279 : 0;
   $$0328 = $280 ? $spec$store$select : $2;
   $282 = ($$0328|0)<(53);
   if ($282) {
    $283 = (105 - ($$0328))|0;
    $284 = (+_scalbn(1.0,$283));
    $285 = (+_copysignl($284,$277));
    $286 = (53 - ($$0328))|0;
    $287 = (+_scalbn(1.0,$286));
    $288 = (+_fmodl($277,$287));
    $289 = $277 - $288;
    $290 = $285 + $289;
    $$0355 = $285;$$0356 = $288;$$1361 = $290;
   } else {
    $$0355 = 0.0;$$0356 = 0.0;$$1361 = $277;
   }
   $291 = (($$5350) + 2)|0;
   $292 = $291 & 127;
   $293 = ($292|0)==($$11|0);
   if ($293) {
    $$3359 = $$0356;
   } else {
    $294 = (($6) + ($292<<2)|0);
    $295 = load4($294);
    $296 = ($295>>>0)<(500000000);
    do {
     if ($296) {
      $297 = ($295|0)==(0);
      if ($297) {
       $298 = (($$5350) + 3)|0;
       $299 = $298 & 127;
       $300 = ($299|0)==($$11|0);
       if ($300) {
        $$1357 = $$0356;
        break;
       }
      }
      $301 = $276 * 0.25;
      $302 = $301 + $$0356;
      $$1357 = $302;
     } else {
      $303 = ($295|0)==(500000000);
      if (!($303)) {
       $304 = $276 * 0.75;
       $305 = $304 + $$0356;
       $$1357 = $305;
       break;
      }
      $306 = (($$5350) + 3)|0;
      $307 = $306 & 127;
      $308 = ($307|0)==($$11|0);
      if ($308) {
       $309 = $276 * 0.5;
       $310 = $309 + $$0356;
       $$1357 = $310;
       break;
      } else {
       $311 = $276 * 0.75;
       $312 = $311 + $$0356;
       $$1357 = $312;
       break;
      }
     }
    } while(0);
    $313 = (53 - ($$0328))|0;
    $314 = ($313|0)>(1);
    if ($314) {
     $315 = (+_fmodl($$1357,1.0));
     $316 = $315 != 0.0;
     if ($316) {
      $$3359 = $$1357;
     } else {
      $317 = $$1357 + 1.0;
      $$3359 = $317;
     }
    } else {
     $$3359 = $$1357;
    }
   }
   $318 = $$1361 + $$3359;
   $319 = $318 - $$0355;
   $320 = $278 & 2147483647;
   $321 = (-2 - ($7))|0;
   $322 = ($320|0)>($321|0);
   do {
    if ($322) {
     $323 = (+Math_abs((+$319)));
     $324 = !($323 >= 9007199254740992.0);
     $325 = $319 * 0.5;
     $not$ = $324 ^ 1;
     $326 = $not$&1;
     $$3379 = (($$1377) + ($326))|0;
     $$2362 = $324 ? $319 : $325;
     $327 = (($$3379) + 50)|0;
     $328 = ($327|0)>($8|0);
     if (!($328)) {
      $329 = ($$0328|0)!=($279|0);
      $narrow = $329 | $324;
      $$2366$v = $280 & $narrow;
      $330 = $$3359 != 0.0;
      $or$cond9 = $330 & $$2366$v;
      if (!($or$cond9)) {
       $$3363 = $$2362;$$4380 = $$3379;
       break;
      }
     }
     $331 = (___errno_location()|0);
     store4($331,34);
     $$3363 = $$2362;$$4380 = $$3379;
    } else {
     $$3363 = $319;$$4380 = $$1377;
    }
   } while(0);
   $332 = (+_scalbnl($$3363,$$4380));
   $$1 = $332;
  }
 } while(0);
 STACKTOP = sp;return (+$$1);
}
function _scanexp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$047$lcssa70 = i64(), $$04752 = i64(), $$04858 = 0, $$049 = 0, $$050 = i64(), $$157 = 0, $$251 = 0, $$pr = 0, $$pre = 0, $$pre$phi69Z2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = i64(), $5 = 0, $50 = i64(), $51 = i64(), $52 = i64(), $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = i64(), $82 = i64(), $9 = 0, $or$cond3 = 0, $phitmp = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = load4($2);
 $4 = ((($0)) + 104|0);
 $5 = load4($4);
 $6 = ($3>>>0)<($5>>>0);
 if ($6) {
  $7 = ((($3)) + 1|0);
  store4($2,$7);
  $8 = load1($3);
  $9 = $8&255;
  $11 = $9;
 } else {
  $10 = (___shgetc($0)|0);
  $11 = $10;
 }
 switch ($11|0) {
 case 43: case 45:  {
  $12 = ($11|0)==(45);
  $13 = $12&1;
  $14 = load4($2);
  $15 = load4($4);
  $16 = ($14>>>0)<($15>>>0);
  if ($16) {
   $17 = ((($14)) + 1|0);
   store4($2,$17);
   $18 = load1($14);
   $19 = $18&255;
   $22 = $19;
  } else {
   $20 = (___shgetc($0)|0);
   $22 = $20;
  }
  $21 = (($22) + -48)|0;
  $23 = ($21>>>0)>(9);
  $24 = ($1|0)!=(0);
  $or$cond3 = $24 & $23;
  if ($or$cond3) {
   $25 = load4($4);
   $26 = ($25|0)==(0|0);
   if ($26) {
    $$050 = i64_const(0,2147483648);
   } else {
    $27 = load4($2);
    $28 = ((($27)) + -1|0);
    store4($2,$28);
    label = 14;
   }
  } else {
   $$0 = $13;$$049 = $22;$$pre$phi69Z2D = $21;
   label = 12;
  }
  break;
 }
 default: {
  $$pre = (($11) + -48)|0;
  $$0 = 0;$$049 = $11;$$pre$phi69Z2D = $$pre;
  label = 12;
 }
 }
 if ((label|0) == 12) {
  $29 = ($$pre$phi69Z2D>>>0)>(9);
  if ($29) {
   label = 14;
  } else {
   $$04858 = 0;$$157 = $$049;
   while(1) {
    $33 = ($$04858*10)|0;
    $34 = (($$157) + -48)|0;
    $35 = (($34) + ($33))|0;
    $36 = load4($2);
    $37 = load4($4);
    $38 = ($36>>>0)<($37>>>0);
    if ($38) {
     $39 = ((($36)) + 1|0);
     store4($2,$39);
     $40 = load1($36);
     $41 = $40&255;
     $44 = $41;
    } else {
     $42 = (___shgetc($0)|0);
     $44 = $42;
    }
    $43 = (($44) + -48)|0;
    $45 = ($43>>>0)<(10);
    $46 = ($35|0)<(214748364);
    $47 = $45 & $46;
    if ($47) {
     $$04858 = $35;$$157 = $44;
    } else {
     break;
    }
   }
   $phitmp = i64_sext($35);
   $48 = ($43>>>0)<(10);
   if ($48) {
    $$04752 = $phitmp;$$251 = $44;
    while(1) {
     $49 = i64_mul($$04752,i64_const(10,0));
     $50 = i64_sext($$251);
     $51 = i64_add($50,i64_const(4294967248,4294967295));
     $52 = i64_add($51,$49);
     $53 = load4($2);
     $54 = load4($4);
     $55 = ($53>>>0)<($54>>>0);
     if ($55) {
      $56 = ((($53)) + 1|0);
      store4($2,$56);
      $57 = load1($53);
      $58 = $57&255;
      $61 = $58;
     } else {
      $59 = (___shgetc($0)|0);
      $61 = $59;
     }
     $60 = (($61) + -48)|0;
     $62 = ($60>>>0)<(10);
     $63 = i64_slt($52,i64_const(2061584302,21474836));
     $64 = $62 & $63;
     if ($64) {
      $$04752 = $52;$$251 = $61;
     } else {
      break;
     }
    }
    $65 = ($60>>>0)<(10);
    if ($65) {
     while(1) {
      $66 = load4($2);
      $67 = load4($4);
      $68 = ($66>>>0)<($67>>>0);
      if ($68) {
       $69 = ((($66)) + 1|0);
       store4($2,$69);
       $70 = load1($66);
       $71 = $70&255;
       $74 = $71;
      } else {
       $72 = (___shgetc($0)|0);
       $74 = $72;
      }
      $73 = (($74) + -48)|0;
      $75 = ($73>>>0)<(10);
      if (!($75)) {
       $$047$lcssa70 = $52;
       break;
      }
     }
    } else {
     $$047$lcssa70 = $52;
    }
   } else {
    $$047$lcssa70 = $phitmp;
   }
   $76 = load4($4);
   $77 = ($76|0)==(0|0);
   if (!($77)) {
    $78 = load4($2);
    $79 = ((($78)) + -1|0);
    store4($2,$79);
   }
   $80 = ($$0|0)==(0);
   $81 = i64_sub(i64_const(0,0),$$047$lcssa70);
   $82 = $80 ? $$047$lcssa70 : $81;
   $$050 = $82;
  }
 }
 if ((label|0) == 14) {
  $$pr = load4($4);
  $30 = ($$pr|0)==(0|0);
  if ($30) {
   $$050 = i64_const(0,2147483648);
  } else {
   $31 = load4($2);
   $32 = ((($31)) + -1|0);
   store4($2,$32);
   $$050 = i64_const(0,2147483648);
  }
 }
 return (i64($$050));
}
function _scalbn($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$0 = 0.0, $$020 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = i64(), $18 = i64(), $19 = 0.0, $2 = 0, $20 = 0.0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0, $8 = 0;
 var $9 = 0, $spec$select = 0, $spec$select21 = 0.0, $spec$select22 = 0, $spec$select23 = 0.0, $spec$store$select = 0, $spec$store$select1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)>(1023);
 if ($2) {
  $3 = $0 * 8.9884656743115795E+307;
  $4 = (($1) + -1023)|0;
  $5 = ($1|0)>(2046);
  $6 = $3 * 8.9884656743115795E+307;
  $7 = (($1) + -2046)|0;
  $8 = ($7|0)<(1023);
  $spec$store$select = $8 ? $7 : 1023;
  $spec$select = $5 ? $spec$store$select : $4;
  $spec$select21 = $5 ? $6 : $3;
  $$0 = $spec$select21;$$020 = $spec$select;
 } else {
  $9 = ($1|0)<(-1022);
  if ($9) {
   $10 = $0 * 2.2250738585072014E-308;
   $11 = (($1) + 1022)|0;
   $12 = ($1|0)<(-2044);
   $13 = $10 * 2.2250738585072014E-308;
   $14 = (($1) + 2044)|0;
   $15 = ($14|0)>(-1022);
   $spec$store$select1 = $15 ? $14 : -1022;
   $spec$select22 = $12 ? $spec$store$select1 : $11;
   $spec$select23 = $12 ? $13 : $10;
   $$0 = $spec$select23;$$020 = $spec$select22;
  } else {
   $$0 = $0;$$020 = $1;
  }
 }
 $16 = (($$020) + 1023)|0;
 $17 = i64_zext($16>>>0);
 $18 = i64_shl($17,i64_const(52,0));
 $19 = i64_bc2d($18);
 $20 = $$0 * $19;
 return (+$20);
}
function _copysignl($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_copysign($0,$1));
 return (+$2);
}
function _fmodl($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_fmod($0,$1));
 return (+$2);
}
function _scalbnl($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_scalbn($0,$1));
 return (+$2);
}
function _fmod($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $$0 = i64(), $$068101 = i64(), $$070 = 0.0, $$071$lcssa = 0, $$07194 = 0, $$073$lcssa = 0, $$073100 = 0, $$1$lcssa = i64(), $$16995 = i64(), $$172 = 0, $$174 = 0, $$186 = i64(), $$2 = i64(), $$275$lcssa = 0, $$27585 = 0, $$3 = i64(), $$376$lcssa = 0, $$37682 = 0, $$4$lcssa = i64(), $$483 = i64();
 var $$5 = i64(), $$lcssa = 0, $$lcssa78 = i64(), $$sroa$0$0 = i64(), $10 = i64(), $11 = i64(), $12 = 0, $13 = i64(), $14 = i64(), $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = i64(), $2 = i64(), $20 = 0, $21 = 0, $22 = 0.0, $23 = 0, $24 = i64();
 var $25 = 0, $26 = 0, $27 = i64(), $28 = 0, $29 = 0, $3 = i64(), $30 = i64(), $31 = i64(), $32 = i64(), $33 = i64(), $34 = 0, $35 = i64(), $36 = 0, $37 = 0, $38 = i64(), $39 = 0, $4 = i64(), $40 = 0, $41 = i64(), $42 = i64();
 var $43 = i64(), $44 = i64(), $45 = 0, $46 = i64(), $47 = 0, $48 = 0, $49 = i64(), $5 = 0, $50 = 0.0, $51 = i64(), $52 = 0, $53 = 0, $54 = i64(), $55 = 0, $56 = 0, $57 = 0.0, $58 = 0, $59 = i64(), $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = i64(), $64 = i64(), $65 = i64(), $66 = i64(), $67 = 0, $68 = i64(), $69 = i64(), $7 = i64(), $70 = i64(), $71 = 0.0, $72 = 0, $8 = 0, $9 = 0, $or$cond = 0, $spec$select = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = i64_bc2i($0);
 $3 = i64_bc2i($1);
 $4 = i64_lshr($2,i64_const(52,0));
 $5 = i64_trunc($4);
 $6 = $5 & 2047;
 $7 = i64_lshr($3,i64_const(52,0));
 $8 = i64_trunc($7);
 $9 = $8 & 2047;
 $10 = i64_and($2,i64_const(0,2147483648));
 $11 = i64_shl($3,i64_const(1,0));
 $12 = i64_eq($11,i64_const(0,0));
 L1: do {
  if ($12) {
   label = 3;
  } else {
   $13 = (i64(___DOUBLE_BITS_273($1)));
   $14 = i64_and($13,i64_const(4294967295,2147483647));
   $15 = i64_ugt($14,i64_const(0,2146435072));
   $16 = ($6|0)==(2047);
   $or$cond = $16 | $15;
   if ($or$cond) {
    label = 3;
   } else {
    $19 = i64_shl($2,i64_const(1,0));
    $20 = i64_ugt($19,$11);
    if (!($20)) {
     $21 = i64_eq($19,$11);
     $22 = $0 * 0.0;
     $spec$select = $21 ? $22 : $0;
     return (+$spec$select);
    }
    $23 = ($6|0)==(0);
    if ($23) {
     $24 = i64_shl($2,i64_const(12,0));
     $25 = i64_sgt($24,i64_const(4294967295,4294967295));
     if ($25) {
      $$068101 = $24;$$073100 = 0;
      while(1) {
       $26 = (($$073100) + -1)|0;
       $27 = i64_shl($$068101,i64_const(1,0));
       $28 = i64_sgt($27,i64_const(4294967295,4294967295));
       if ($28) {
        $$068101 = $27;$$073100 = $26;
       } else {
        $$073$lcssa = $26;
        break;
       }
      }
     } else {
      $$073$lcssa = 0;
     }
     $29 = (1 - ($$073$lcssa))|0;
     $30 = i64_zext($29>>>0);
     $31 = i64_shl($2,$30);
     $$0 = $31;$$174 = $$073$lcssa;
    } else {
     $32 = i64_and($2,i64_const(4294967295,1048575));
     $33 = i64_or($32,i64_const(0,1048576));
     $$0 = $33;$$174 = $6;
    }
    $34 = ($9|0)==(0);
    if ($34) {
     $35 = i64_shl($3,i64_const(12,0));
     $36 = i64_sgt($35,i64_const(4294967295,4294967295));
     if ($36) {
      $$07194 = 0;$$16995 = $35;
      while(1) {
       $37 = (($$07194) + -1)|0;
       $38 = i64_shl($$16995,i64_const(1,0));
       $39 = i64_sgt($38,i64_const(4294967295,4294967295));
       if ($39) {
        $$07194 = $37;$$16995 = $38;
       } else {
        $$071$lcssa = $37;
        break;
       }
      }
     } else {
      $$071$lcssa = 0;
     }
     $40 = (1 - ($$071$lcssa))|0;
     $41 = i64_zext($40>>>0);
     $42 = i64_shl($3,$41);
     $$172 = $$071$lcssa;$$sroa$0$0 = $42;
    } else {
     $43 = i64_and($3,i64_const(4294967295,1048575));
     $44 = i64_or($43,i64_const(0,1048576));
     $$172 = $9;$$sroa$0$0 = $44;
    }
    $45 = ($$174|0)>($$172|0);
    $46 = i64_sub($$0,$$sroa$0$0);
    $47 = i64_sgt($46,i64_const(4294967295,4294967295));
    L25: do {
     if ($45) {
      $$186 = $$0;$$27585 = $$174;$49 = $46;$72 = $47;
      while(1) {
       if ($72) {
        $48 = i64_eq($49,i64_const(0,0));
        if ($48) {
         break;
        } else {
         $$2 = $49;
        }
       } else {
        $$2 = $$186;
       }
       $51 = i64_shl($$2,i64_const(1,0));
       $52 = (($$27585) + -1)|0;
       $53 = ($52|0)>($$172|0);
       $54 = i64_sub($51,$$sroa$0$0);
       $55 = i64_sgt($54,i64_const(4294967295,4294967295));
       if ($53) {
        $$186 = $51;$$27585 = $52;$49 = $54;$72 = $55;
       } else {
        $$1$lcssa = $51;$$275$lcssa = $52;$$lcssa = $55;$$lcssa78 = $54;
        break L25;
       }
      }
      $50 = $0 * 0.0;
      $$070 = $50;
      break L1;
     } else {
      $$1$lcssa = $$0;$$275$lcssa = $$174;$$lcssa = $47;$$lcssa78 = $46;
     }
    } while(0);
    if ($$lcssa) {
     $56 = i64_eq($$lcssa78,i64_const(0,0));
     if ($56) {
      $57 = $0 * 0.0;
      $$070 = $57;
      break;
     } else {
      $$3 = $$lcssa78;
     }
    } else {
     $$3 = $$1$lcssa;
    }
    $58 = i64_ult($$3,i64_const(0,1048576));
    if ($58) {
     $$37682 = $$275$lcssa;$$483 = $$3;
     while(1) {
      $59 = i64_shl($$483,i64_const(1,0));
      $60 = (($$37682) + -1)|0;
      $61 = i64_ult($59,i64_const(0,1048576));
      if ($61) {
       $$37682 = $60;$$483 = $59;
      } else {
       $$376$lcssa = $60;$$4$lcssa = $59;
       break;
      }
     }
    } else {
     $$376$lcssa = $$275$lcssa;$$4$lcssa = $$3;
    }
    $62 = ($$376$lcssa|0)>(0);
    if ($62) {
     $63 = i64_add($$4$lcssa,i64_const(0,4293918720));
     $64 = i64_zext($$376$lcssa>>>0);
     $65 = i64_shl($64,i64_const(52,0));
     $66 = i64_or($63,$65);
     $$5 = $66;
    } else {
     $67 = (1 - ($$376$lcssa))|0;
     $68 = i64_zext($67>>>0);
     $69 = i64_lshr($$4$lcssa,$68);
     $$5 = $69;
    }
    $70 = i64_or($$5,$10);
    $71 = i64_bc2d($70);
    $$070 = $71;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $17 = $0 * $1;
  $18 = $17 / $17;
  $$070 = $18;
 }
 return (+$$070);
}
function ___DOUBLE_BITS_273($0) {
 $0 = +$0;
 var $1 = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $1 = i64_bc2i($0);
 return (i64($1));
}
function _strlen($0) {
 $0 = $0|0;
 var $$0 = 0, $$014 = 0, $$015$lcssa = 0, $$01518 = 0, $$1$lcssa = 0, $$pn = 0, $$pn29 = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0;
 $2 = $1 & 3;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $$015$lcssa = $0;
   label = 5;
  } else {
   $$01518 = $0;$22 = $1;
   while(1) {
    $4 = load1($$01518);
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $$pn = $22;
     break L1;
    }
    $6 = ((($$01518)) + 1|0);
    $7 = $6;
    $8 = $7 & 3;
    $9 = ($8|0)==(0);
    if ($9) {
     $$015$lcssa = $6;
     label = 5;
     break;
    } else {
     $$01518 = $6;$22 = $7;
    }
   }
  }
 } while(0);
 if ((label|0) == 5) {
  $$0 = $$015$lcssa;
  while(1) {
   $10 = load4($$0);
   $11 = (($10) + -16843009)|0;
   $12 = $10 & -2139062144;
   $13 = $12 ^ -2139062144;
   $14 = $13 & $11;
   $15 = ($14|0)==(0);
   $16 = ((($$0)) + 4|0);
   if ($15) {
    $$0 = $16;
   } else {
    break;
   }
  }
  $17 = $10&255;
  $18 = ($17<<24>>24)==(0);
  if ($18) {
   $$1$lcssa = $$0;
  } else {
   $$pn29 = $$0;
   while(1) {
    $19 = ((($$pn29)) + 1|0);
    $$pre = load1($19);
    $20 = ($$pre<<24>>24)==(0);
    if ($20) {
     $$1$lcssa = $19;
     break;
    } else {
     $$pn29 = $19;
    }
   }
  }
  $21 = $$1$lcssa;
  $$pn = $21;
 }
 $$014 = (($$pn) - ($1))|0;
 return ($$014|0);
}
function ___munmap($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = $0;
 store4($vararg_buffer,$2);
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 store4($vararg_ptr1,$1);
 $3 = (___syscall91(91,($vararg_buffer|0))|0);
 $4 = (___syscall_ret($3)|0);
 STACKTOP = sp;return ($4|0);
}
function _strchr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (___strchrnul($0,$1)|0);
 $3 = load1($2);
 $4 = $1&255;
 $5 = ($3<<24>>24)==($4<<24>>24);
 $6 = $5 ? $2 : 0;
 return ($6|0);
}
function ___strchrnul($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$029$lcssa = 0, $$02936 = 0, $$030$lcssa = 0, $$03039 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond33 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1 & 255;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $4 = (_strlen($0)|0);
   $5 = (($0) + ($4)|0);
   $$0 = $5;
  } else {
   $6 = $0;
   $7 = $6 & 3;
   $8 = ($7|0)==(0);
   if ($8) {
    $$030$lcssa = $0;
   } else {
    $9 = $1&255;
    $$03039 = $0;
    while(1) {
     $10 = load1($$03039);
     $11 = ($10<<24>>24)==(0);
     $12 = ($10<<24>>24)==($9<<24>>24);
     $or$cond = $11 | $12;
     if ($or$cond) {
      $$0 = $$03039;
      break L1;
     }
     $13 = ((($$03039)) + 1|0);
     $14 = $13;
     $15 = $14 & 3;
     $16 = ($15|0)==(0);
     if ($16) {
      $$030$lcssa = $13;
      break;
     } else {
      $$03039 = $13;
     }
    }
   }
   $17 = Math_imul($2, 16843009)|0;
   $18 = load4($$030$lcssa);
   $19 = (($18) + -16843009)|0;
   $20 = $18 & -2139062144;
   $21 = $20 ^ -2139062144;
   $22 = $21 & $19;
   $23 = ($22|0)==(0);
   L10: do {
    if ($23) {
     $$02936 = $$030$lcssa;$25 = $18;
     while(1) {
      $24 = $25 ^ $17;
      $26 = (($24) + -16843009)|0;
      $27 = $24 & -2139062144;
      $28 = $27 ^ -2139062144;
      $29 = $28 & $26;
      $30 = ($29|0)==(0);
      if (!($30)) {
       $$029$lcssa = $$02936;
       break L10;
      }
      $31 = ((($$02936)) + 4|0);
      $32 = load4($31);
      $33 = (($32) + -16843009)|0;
      $34 = $32 & -2139062144;
      $35 = $34 ^ -2139062144;
      $36 = $35 & $33;
      $37 = ($36|0)==(0);
      if ($37) {
       $$02936 = $31;$25 = $32;
      } else {
       $$029$lcssa = $31;
       break;
      }
     }
    } else {
     $$029$lcssa = $$030$lcssa;
    }
   } while(0);
   $38 = $1&255;
   $$1 = $$029$lcssa;
   while(1) {
    $39 = load1($$1);
    $40 = ($39<<24>>24)==(0);
    $41 = ($39<<24>>24)==($38<<24>>24);
    $or$cond33 = $40 | $41;
    $42 = ((($$1)) + 1|0);
    if ($or$cond33) {
     $$0 = $$1;
     break;
    } else {
     $$1 = $42;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function _dummy() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _localeconv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7632|0);
}
function ___get_locale($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$093$lcssa = 0, $$093118 = 0, $$094114 = 0, $$1 = 0, $$1100111 = 0, $$195112 = 0, $$2122 = 0, $$2123 = 0, $$2124 = 0, $$4 = 0, $$neg = 0, $$pre121 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0;
 $2 = sp;
 $3 = sp + 256|0;
 $4 = load1($1);
 $5 = ($4<<24>>24)==(0);
 do {
  if ($5) {
   $6 = (_getenv((16071|0))|0);
   $7 = ($6|0)==(0|0);
   if (!($7)) {
    $8 = load1($6);
    $9 = ($8<<24>>24)==(0);
    if (!($9)) {
     $$1 = $6;
     break;
    }
   }
   $10 = (6064 + (($0*12)|0)|0);
   $11 = (_getenv(($10|0))|0);
   $12 = ($11|0)==(0|0);
   if (!($12)) {
    $13 = load1($11);
    $14 = ($13<<24>>24)==(0);
    if (!($14)) {
     $$1 = $11;
     break;
    }
   }
   $15 = (_getenv((16078|0))|0);
   $16 = ($15|0)==(0|0);
   if (!($16)) {
    $17 = load1($15);
    $18 = ($17<<24>>24)==(0);
    if (!($18)) {
     $$1 = $15;
     break;
    }
   }
   $$1 = 16083;
  } else {
   $$1 = $1;
  }
 } while(0);
 $$093118 = 0;
 L13: while(1) {
  $19 = (($$1) + ($$093118)|0);
  $20 = load1($19);
  switch ($20<<24>>24) {
  case 47: case 0:  {
   $$093$lcssa = $$093118;
   break L13;
   break;
  }
  default: {
  }
  }
  $21 = (($$093118) + 1)|0;
  $22 = ($21>>>0)<(15);
  if ($22) {
   $$093118 = $21;
  } else {
   $$093$lcssa = 15;
   break;
  }
 }
 $23 = load1($$1);
 $24 = ($23<<24>>24)==(46);
 if ($24) {
  $$2122 = 16083;
  label = 15;
 } else {
  $25 = (($$1) + ($$093$lcssa)|0);
  $26 = load1($25);
  $27 = ($26<<24>>24)==(0);
  if ($27) {
   $28 = ($23<<24>>24)==(67);
   if ($28) {
    $$2122 = $$1;
    label = 15;
   } else {
    $$2123 = $$1;
    label = 16;
   }
  } else {
   $$2122 = 16083;
   label = 15;
  }
 }
 if ((label|0) == 15) {
  $29 = ((($$2122)) + 1|0);
  $30 = load1($29);
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   $$2124 = $$2122;
   label = 18;
  } else {
   $$2123 = $$2122;
   label = 16;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $32 = (_strcmp($$2123,16083)|0);
   $33 = ($32|0)==(0);
   if ($33) {
    $$2124 = $$2123;
    label = 18;
   } else {
    $34 = (_strcmp($$2123,16091)|0);
    $35 = ($34|0)==(0);
    if ($35) {
     $$2124 = $$2123;
     label = 18;
    } else {
     $40 = load4(18972);
     $41 = ($40|0)==(0|0);
     if (!($41)) {
      $$094114 = $40;
      while(1) {
       $42 = ((($$094114)) + 8|0);
       $43 = (_strcmp($$2123,$42)|0);
       $44 = ($43|0)==(0);
       if ($44) {
        $$0 = $$094114;
        break L22;
       }
       $45 = ((($$094114)) + 24|0);
       $46 = load4($45);
       $47 = ($46|0)==(0|0);
       if ($47) {
        break;
       } else {
        $$094114 = $46;
       }
      }
     }
     ___lock((18976|0));
     $48 = load4(18972);
     $49 = ($48|0)==(0|0);
     L32: do {
      if (!($49)) {
       $$195112 = $48;
       while(1) {
        $50 = ((($$195112)) + 8|0);
        $51 = (_strcmp($$2123,$50)|0);
        $52 = ($51|0)==(0);
        if ($52) {
         break;
        }
        $53 = ((($$195112)) + 24|0);
        $54 = load4($53);
        $55 = ($54|0)==(0|0);
        if ($55) {
         break L32;
        } else {
         $$195112 = $54;
        }
       }
       ___unlock((18976|0));
       $$0 = $$195112;
       break L22;
      }
     } while(0);
     $56 = load4((18912));
     $57 = ($56|0)==(0);
     L39: do {
      if ($57) {
       $58 = (_getenv((16097|0))|0);
       $59 = ($58|0)==(0|0);
       if ($59) {
        label = 41;
       } else {
        $60 = load1($58);
        $61 = ($60<<24>>24)==(0);
        if ($61) {
         label = 41;
        } else {
         $62 = (254 - ($$093$lcssa))|0;
         $63 = (($$093$lcssa) + 1)|0;
         $$1100111 = $58;
         while(1) {
          $64 = (___strchrnul($$1100111,58)|0);
          $65 = $64;
          $66 = $$1100111;
          $67 = (($65) - ($66))|0;
          $68 = load1($64);
          $69 = ($68<<24>>24)!=(0);
          $$neg = $69 << 31 >> 31;
          $70 = (($67) + ($$neg))|0;
          $71 = ($70>>>0)<($62>>>0);
          if ($71) {
           (_memcpy(($2|0),($$1100111|0),($70|0))|0);
           $72 = (($2) + ($70)|0);
           store1($72,47);
           $73 = ((($72)) + 1|0);
           (_memcpy(($73|0),($$2123|0),($$093$lcssa|0))|0);
           $74 = (($63) + ($70))|0;
           $75 = (($2) + ($74)|0);
           store1($75,0);
           $76 = (___map_file(($2|0),($3|0))|0);
           $77 = ($76|0)==(0|0);
           if (!($77)) {
            break;
           }
           $$pre121 = load1($64);
           $86 = $$pre121;
          } else {
           $86 = $68;
          }
          $87 = ($86<<24>>24)!=(0);
          $88 = $87&1;
          $89 = (($64) + ($88)|0);
          $90 = load1($89);
          $91 = ($90<<24>>24)==(0);
          if ($91) {
           label = 41;
           break L39;
          } else {
           $$1100111 = $89;
          }
         }
         $78 = (_malloc(28)|0);
         $79 = ($78|0)==(0|0);
         if ($79) {
          $92 = load4($3);
          (___munmap($76,$92)|0);
          label = 41;
          break;
         } else {
          store4($78,$76);
          $80 = load4($3);
          $81 = ((($78)) + 4|0);
          store4($81,$80);
          $82 = ((($78)) + 8|0);
          (_memcpy(($82|0),($$2123|0),($$093$lcssa|0))|0);
          $83 = (($82) + ($$093$lcssa)|0);
          store1($83,0);
          $84 = load4(18972);
          $85 = ((($78)) + 24|0);
          store4($85,$84);
          store4(18972,$78);
          $$4 = $78;
          break;
         }
        }
       }
      } else {
       label = 41;
      }
     } while(0);
     if ((label|0) == 41) {
      $93 = (_malloc(28)|0);
      $94 = ($93|0)==(0|0);
      if ($94) {
       $$4 = $93;
      } else {
       $95 = load4(7336);
       store4($93,$95);
       $96 = load4((7340));
       $97 = ((($93)) + 4|0);
       store4($97,$96);
       $98 = ((($93)) + 8|0);
       (_memcpy(($98|0),($$2123|0),($$093$lcssa|0))|0);
       $99 = (($98) + ($$093$lcssa)|0);
       store1($99,0);
       $100 = load4(18972);
       $101 = ((($93)) + 24|0);
       store4($101,$100);
       store4(18972,$93);
       $$4 = $93;
      }
     }
     $102 = ($$4|0)==(0|0);
     $103 = ($0|0)==(0);
     $or$cond = $103 & $102;
     $spec$select = $or$cond ? 7336 : $$4;
     ___unlock((18976|0));
     $$0 = $spec$select;
    }
   }
  }
 } while(0);
 do {
  if ((label|0) == 18) {
   $36 = ($0|0)==(0);
   if ($36) {
    $37 = ((($$2124)) + 1|0);
    $38 = load1($37);
    $39 = ($38<<24>>24)==(46);
    if ($39) {
     $$0 = 7336;
     break;
    }
   }
   $$0 = 0;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _setlocale($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$04956 = 0, $$05055 = 0, $$05253 = 0, $$151 = 0, $$154 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond57 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = ($0>>>0)>(6);
 do {
  if ($3) {
   $$0 = 0;
  } else {
   ___lock((18984|0));
   $4 = ($0|0)==(6);
   if (!($4)) {
    $27 = (_setlocale_one_unlocked($0,$1)|0);
    ___unlock((18984|0));
    $$0 = $27;
    break;
   }
   $5 = ($1|0)==(0|0);
   if (!($5)) {
    ; store8($2,load8(6144,8),8); store8($2+8 | 0,load8(6144+8 | 0,8),8);
    $$04956 = 0;$$05055 = $1;
    while(1) {
     $6 = (___strchrnul($$05055,59)|0);
     $7 = $6;
     $8 = $$05055;
     $9 = (($7) - ($8))|0;
     $10 = ($9|0)<(16);
     if ($10) {
      (_memcpy(($2|0),($$05055|0),($9|0))|0);
      $11 = (($2) + ($9)|0);
      store1($11,0);
      $12 = load1($6);
      $13 = ($12<<24>>24)==(0);
      $14 = ((($6)) + 1|0);
      $spec$select = $13 ? $$05055 : $14;
      $$151 = $spec$select;
     } else {
      $$151 = $$05055;
     }
     (_setlocale_one_unlocked($$04956,$2)|0);
     $15 = (($$04956) + 1)|0;
     $exitcond57 = ($15|0)==(6);
     if ($exitcond57) {
      break;
     } else {
      $$04956 = $15;$$05055 = $$151;
     }
    }
   }
   $$05253 = 18208;$$154 = 0;
   while(1) {
    $16 = (18944 + ($$154<<2)|0);
    $17 = load4($16);
    $18 = ($17|0)==(0|0);
    $19 = ((($17)) + 8|0);
    $20 = $18 ? 16110 : $19;
    $21 = (_strlen($20)|0);
    (_memcpy(($$05253|0),($20|0),($21|0))|0);
    $22 = (($$05253) + ($21)|0);
    store1($22,59);
    $23 = (($21) + 1)|0;
    $24 = (($$05253) + ($23)|0);
    $25 = (($$154) + 1)|0;
    $exitcond = ($25|0)==(6);
    if ($exitcond) {
     break;
    } else {
     $$05253 = $24;$$154 = $25;
    }
   }
   $26 = (($$05253) + ($21)|0);
   store1($26,0);
   ___unlock((18984|0));
   $$0 = 18208;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _setlocale_one_unlocked($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $5 = (18944 + ($0<<2)|0);
  $6 = load4($5);
  $$0 = $6;
 } else {
  $3 = (___get_locale($0,$1)|0);
  $4 = (18944 + ($0<<2)|0);
  store4($4,$3);
  $$0 = $3;
 }
 $7 = ($$0|0)==(0|0);
 $8 = ((($$0)) + 8|0);
 $9 = $7 ? 16110 : $8;
 return ($9|0);
}
function _snprintf($0,$1,$2,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $varargs = $varargs|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 store4($3,$varargs);
 $4 = (_vsnprintf($0,$1,$2,$3)|0);
 STACKTOP = sp;return ($4|0);
}
function _strcpy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___stpcpy($0,$1)|0);
 return ($0|0);
}
function ___stpcpy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$lcssa = 0, $$025$lcssa = 0, $$02536 = 0, $$026$lcssa = 0, $$02642 = 0, $$027$lcssa = 0, $$02741 = 0, $$030 = 0, $$037 = 0, $$1 = 0, $$128 = 0, $$22934 = 0, $$235 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1;
 $3 = $0;
 $4 = $2 ^ $3;
 $5 = $4 & 3;
 $6 = ($5|0)==(0);
 L1: do {
  if ($6) {
   $7 = $2 & 3;
   $8 = ($7|0)==(0);
   if ($8) {
    $$026$lcssa = $1;$$027$lcssa = $0;
   } else {
    $$02642 = $1;$$02741 = $0;
    while(1) {
     $9 = load1($$02642);
     store1($$02741,$9);
     $10 = ($9<<24>>24)==(0);
     if ($10) {
      $$030 = $$02741;
      break L1;
     }
     $11 = ((($$02642)) + 1|0);
     $12 = ((($$02741)) + 1|0);
     $13 = $11;
     $14 = $13 & 3;
     $15 = ($14|0)==(0);
     if ($15) {
      $$026$lcssa = $11;$$027$lcssa = $12;
      break;
     } else {
      $$02642 = $11;$$02741 = $12;
     }
    }
   }
   $16 = load4($$026$lcssa);
   $17 = (($16) + -16843009)|0;
   $18 = $16 & -2139062144;
   $19 = $18 ^ -2139062144;
   $20 = $19 & $17;
   $21 = ($20|0)==(0);
   if ($21) {
    $$02536 = $$027$lcssa;$$037 = $$026$lcssa;$24 = $16;
    while(1) {
     $22 = ((($$037)) + 4|0);
     $23 = ((($$02536)) + 4|0);
     store4($$02536,$24);
     $25 = load4($22);
     $26 = (($25) + -16843009)|0;
     $27 = $25 & -2139062144;
     $28 = $27 ^ -2139062144;
     $29 = $28 & $26;
     $30 = ($29|0)==(0);
     if ($30) {
      $$02536 = $23;$$037 = $22;$24 = $25;
     } else {
      $$0$lcssa = $22;$$025$lcssa = $23;
      break;
     }
    }
   } else {
    $$0$lcssa = $$026$lcssa;$$025$lcssa = $$027$lcssa;
   }
   $$1 = $$0$lcssa;$$128 = $$025$lcssa;
   label = 10;
  } else {
   $$1 = $1;$$128 = $0;
   label = 10;
  }
 } while(0);
 if ((label|0) == 10) {
  $31 = load1($$1);
  store1($$128,$31);
  $32 = ($31<<24>>24)==(0);
  if ($32) {
   $$030 = $$128;
  } else {
   $$22934 = $$128;$$235 = $$1;
   while(1) {
    $33 = ((($$235)) + 1|0);
    $34 = ((($$22934)) + 1|0);
    $35 = load1($33);
    store1($34,$35);
    $36 = ($35<<24>>24)==(0);
    if ($36) {
     $$030 = $34;
     break;
    } else {
     $$22934 = $34;$$235 = $33;
    }
   }
  }
 }
 return ($$030|0);
}
function _ldexp($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_scalbn($0,$1));
 return (+$2);
}
function ___sin($0,$1,$2) {
 $0 = +$0;
 $1 = +$1;
 $2 = $2|0;
 var $$0 = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $3 = 0.0;
 var $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $0 * $0;
 $4 = $3 * $3;
 $5 = $3 * 2.7557313707070068E-6;
 $6 = $5 + -1.9841269829857949E-4;
 $7 = $3 * $6;
 $8 = $7 + 0.0083333333333224895;
 $9 = $3 * $4;
 $10 = $3 * 1.5896909952115501E-10;
 $11 = $10 + -2.5050760253406863E-8;
 $12 = $9 * $11;
 $13 = $12 + $8;
 $14 = $3 * $0;
 $15 = ($2|0)==(0);
 if ($15) {
  $16 = $3 * $13;
  $17 = $16 + -0.16666666666666632;
  $18 = $14 * $17;
  $19 = $18 + $0;
  $$0 = $19;
 } else {
  $20 = $1 * 0.5;
  $21 = $14 * $13;
  $22 = $20 - $21;
  $23 = $3 * $22;
  $24 = $23 - $1;
  $25 = $14 * 0.16666666666666632;
  $26 = $25 + $24;
  $27 = $0 - $26;
  $$0 = $27;
 }
 return (+$$0);
}
function ___cos($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $3 = 0.0, $4 = 0.0, $5 = 0.0, $6 = 0.0;
 var $7 = 0.0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $0 * $0;
 $3 = $2 * $2;
 $4 = $2 * 2.4801587289476729E-5;
 $5 = $4 + -0.001388888888887411;
 $6 = $2 * $5;
 $7 = $6 + 0.041666666666666602;
 $8 = $2 * $7;
 $9 = $3 * $3;
 $10 = $2 * 1.1359647557788195E-11;
 $11 = 2.0875723212981748E-9 - $10;
 $12 = $2 * $11;
 $13 = $12 + -2.7557314351390663E-7;
 $14 = $9 * $13;
 $15 = $8 + $14;
 $16 = $2 * 0.5;
 $17 = 1.0 - $16;
 $18 = 1.0 - $17;
 $19 = $18 - $16;
 $20 = $2 * $15;
 $21 = $0 * $1;
 $22 = $20 - $21;
 $23 = $19 + $22;
 $24 = $17 + $23;
 return (+$24);
}
function ___rem_pio2($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$0144 = 0, $$0145148 = 0.0, $$0146 = 0.0, $$0147 = 0.0, $$0149 = 0, $$1$lcssa = 0, $$phi$trans$insert = 0, $$pre = 0.0, $10 = 0, $100 = 0, $101 = 0, $102 = 0.0, $103 = 0, $104 = i64(), $105 = i64(), $106 = 0.0, $107 = 0, $108 = 0.0, $109 = 0, $11 = 0;
 var $110 = 0.0, $111 = 0.0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0.0, $125 = 0, $126 = 0.0, $127 = 0.0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0.0, $132 = 0, $14 = 0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0, $2 = 0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0.0;
 var $28 = 0.0, $29 = 0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0.0, $4 = i64(), $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0.0, $45 = 0.0;
 var $46 = 0.0, $47 = 0.0, $48 = 0, $49 = 0, $5 = i64(), $50 = 0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0, $62 = 0.0, $63 = 0.0;
 var $64 = 0.0, $65 = 0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = i64(), $70 = i64(), $71 = i64(), $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0.0;
 var $82 = 0.0, $83 = 0.0, $84 = i64(), $85 = i64(), $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $exitcond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $2 = sp + 16|0;
 $3 = sp;
 $4 = i64_bc2i($0);
 $5 = i64_lshr($4,i64_const(63,0));
 $6 = i64_trunc($5);
 $7 = i64_lshr($4,i64_const(32,0));
 $8 = i64_trunc($7);
 $9 = $8 & 2147483647;
 $10 = ($9>>>0)<(1074752123);
 do {
  if ($10) {
   $11 = $8 & 1048575;
   $12 = ($11|0)==(598523);
   if ($12) {
    label = 21;
   } else {
    $13 = ($9>>>0)<(1073928573);
    $14 = ($6|0)!=(0);
    if ($13) {
     if ($14) {
      $20 = $0 + 1.5707963267341256;
      $21 = $20 + 6.0771005065061922E-11;
      stored($1,$21);
      $22 = $20 - $21;
      $23 = $22 + 6.0771005065061922E-11;
      $24 = ((($1)) + 8|0);
      stored($24,$23);
      $$0144 = -1;
      break;
     } else {
      $15 = $0 + -1.5707963267341256;
      $16 = $15 + -6.0771005065061922E-11;
      stored($1,$16);
      $17 = $15 - $16;
      $18 = $17 + -6.0771005065061922E-11;
      $19 = ((($1)) + 8|0);
      stored($19,$18);
      $$0144 = 1;
      break;
     }
    } else {
     if ($14) {
      $30 = $0 + 3.1415926534682512;
      $31 = $30 + 1.2154201013012384E-10;
      stored($1,$31);
      $32 = $30 - $31;
      $33 = $32 + 1.2154201013012384E-10;
      $34 = ((($1)) + 8|0);
      stored($34,$33);
      $$0144 = -2;
      break;
     } else {
      $25 = $0 + -3.1415926534682512;
      $26 = $25 + -1.2154201013012384E-10;
      stored($1,$26);
      $27 = $25 - $26;
      $28 = $27 + -1.2154201013012384E-10;
      $29 = ((($1)) + 8|0);
      stored($29,$28);
      $$0144 = 2;
      break;
     }
    }
   }
  } else {
   $35 = ($9>>>0)<(1075594812);
   if ($35) {
    $36 = ($9>>>0)<(1075183037);
    if ($36) {
     $37 = ($9|0)==(1074977148);
     if ($37) {
      label = 21;
      break;
     }
     $38 = ($6|0)==(0);
     if ($38) {
      $39 = $0 + -4.7123889802023768;
      $40 = $39 + -1.8231301519518578E-10;
      stored($1,$40);
      $41 = $39 - $40;
      $42 = $41 + -1.8231301519518578E-10;
      $43 = ((($1)) + 8|0);
      stored($43,$42);
      $$0144 = 3;
      break;
     } else {
      $44 = $0 + 4.7123889802023768;
      $45 = $44 + 1.8231301519518578E-10;
      stored($1,$45);
      $46 = $44 - $45;
      $47 = $46 + 1.8231301519518578E-10;
      $48 = ((($1)) + 8|0);
      stored($48,$47);
      $$0144 = -3;
      break;
     }
    } else {
     $49 = ($9|0)==(1075388923);
     if ($49) {
      label = 21;
      break;
     }
     $50 = ($6|0)==(0);
     if ($50) {
      $51 = $0 + -6.2831853069365025;
      $52 = $51 + -2.4308402026024769E-10;
      stored($1,$52);
      $53 = $51 - $52;
      $54 = $53 + -2.4308402026024769E-10;
      $55 = ((($1)) + 8|0);
      stored($55,$54);
      $$0144 = 4;
      break;
     } else {
      $56 = $0 + 6.2831853069365025;
      $57 = $56 + 2.4308402026024769E-10;
      stored($1,$57);
      $58 = $56 - $57;
      $59 = $58 + 2.4308402026024769E-10;
      $60 = ((($1)) + 8|0);
      stored($60,$59);
      $$0144 = -4;
      break;
     }
    }
   }
   $61 = ($9>>>0)<(1094263291);
   if ($61) {
    label = 21;
   } else {
    $101 = ($9>>>0)>(2146435071);
    if ($101) {
     $102 = $0 - $0;
     $103 = ((($1)) + 8|0);
     stored($103,$102);
     stored($1,$102);
     $$0144 = 0;
     break;
    }
    $104 = i64_and($4,i64_const(4294967295,1048575));
    $105 = i64_or($104,i64_const(0,1096810496));
    $106 = i64_bc2d($105);
    $$0145148 = $106;$$0149 = 0;
    while(1) {
     $107 = (~~(($$0145148)));
     $108 = (+($107|0));
     $109 = (($2) + ($$0149<<3)|0);
     stored($109,$108);
     $110 = $$0145148 - $108;
     $111 = $110 * 16777216.0;
     $112 = (($$0149) + 1)|0;
     $exitcond = ($112|0)==(2);
     if ($exitcond) {
      break;
     } else {
      $$0145148 = $111;$$0149 = $112;
     }
    }
    $113 = ((($2)) + 16|0);
    stored($113,$111);
    $114 = $111 == 0.0;
    if ($114) {
     $115 = 1;
     while(1) {
      $$phi$trans$insert = (($2) + ($115<<3)|0);
      $$pre = loadd($$phi$trans$insert);
      $116 = $$pre == 0.0;
      $117 = (($115) + -1)|0;
      if ($116) {
       $115 = $117;
      } else {
       $$1$lcssa = $115;
       break;
      }
     }
    } else {
     $$1$lcssa = 2;
    }
    $118 = $9 >>> 20;
    $119 = (($118) + -1046)|0;
    $120 = (($$1$lcssa) + 1)|0;
    $121 = (___rem_pio2_large($2,$3,$119,$120,1)|0);
    $122 = ($6|0)==(0);
    $123 = loadd($3);
    if ($122) {
     stored($1,$123);
     $130 = ((($3)) + 8|0);
     $131 = loadd($130);
     $132 = ((($1)) + 8|0);
     stored($132,$131);
     $$0144 = $121;
     break;
    } else {
     $124 = - $123;
     stored($1,$124);
     $125 = ((($3)) + 8|0);
     $126 = loadd($125);
     $127 = - $126;
     $128 = ((($1)) + 8|0);
     stored($128,$127);
     $129 = (0 - ($121))|0;
     $$0144 = $129;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 21) {
  $62 = $0 * 0.63661977236758138;
  $63 = $62 + 6755399441055744.0;
  $64 = $63 + -6755399441055744.0;
  $65 = (~~(($64)));
  $66 = $64 * 1.5707963267341256;
  $67 = $0 - $66;
  $68 = $64 * 6.0771005065061922E-11;
  $69 = $67 - $68;
  stored($1,$69);
  $70 = i64_bc2i($69);
  $71 = i64_lshr($70,i64_const(52,0));
  $72 = i64_trunc($71);
  $73 = $72 & 2047;
  $74 = $9 >>> 20;
  $75 = (($74) - ($73))|0;
  $76 = ($75|0)>(16);
  if ($76) {
   $77 = $64 * 6.077100506303966E-11;
   $78 = $67 - $77;
   $79 = $64 * 2.0222662487959506E-21;
   $80 = $67 - $78;
   $81 = $80 - $77;
   $82 = $79 - $81;
   $83 = $78 - $82;
   stored($1,$83);
   $84 = i64_bc2i($83);
   $85 = i64_lshr($84,i64_const(52,0));
   $86 = i64_trunc($85);
   $87 = $86 & 2047;
   $88 = (($74) - ($87))|0;
   $89 = ($88|0)>(49);
   $90 = $64 * 2.0222662487111665E-21;
   $91 = $78 - $90;
   $92 = $64 * 8.4784276603688995E-32;
   $93 = $78 - $91;
   $94 = $93 - $90;
   $95 = $92 - $94;
   if ($89) {
    $96 = $91 - $95;
    stored($1,$96);
    $$0146 = $95;$$0147 = $91;$98 = $96;
   } else {
    $$0146 = $82;$$0147 = $78;$98 = $83;
   }
  } else {
   $$0146 = $68;$$0147 = $67;$98 = $69;
  }
  $97 = $$0147 - $98;
  $99 = $97 - $$0146;
  $100 = ((($1)) + 8|0);
  stored($100,$99);
  $$0144 = $65;
 }
 STACKTOP = sp;return ($$0144|0);
}
function ___rem_pio2_large($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$lcssa = 0.0, $$0248$lcssa = 0.0, $$0248336 = 0.0, $$0250 = 0, $$0250278 = 0, $$0250279 = 0, $$0251 = 0, $$0251$in = 0, $$0253 = 0, $$0256 = 0, $$0258373 = 0, $$0263372 = 0, $$0271 = 0, $$0271277 = 0, $$0273$lcssa = 0, $$0273341 = 0, $$0363 = 0.0, $$1$lcssa = 0.0, $$10291 = 0, $$11313 = 0;
 var $$12309 = 0, $$1249 = 0.0, $$1252 = 0, $$1252$ph = 0, $$1254 = 0, $$1254$in = 0, $$1257318 = 0, $$1259362 = 0, $$1264368 = 0, $$1272 = 0, $$1274 = 0, $$1274$ph = 0, $$13303 = 0, $$1354 = 0.0, $$2255 = 0, $$2260335 = 0, $$2265334 = 0, $$2330 = 0.0, $$3261347 = 0, $$3266342 = 0;
 var $$3319 = 0.0, $$4$lcssa = 0.0, $$4262353 = 0, $$4267348 = 0, $$4267348$in = 0, $$4290 = 0.0, $$5$lcssa = 0.0, $$5268361 = 0, $$5268361$in = 0, $$5298 = 0.0, $$6$lcssa = 0.0, $$6269329 = 0, $$6292 = 0.0, $$7$lcssa = 0.0, $$7270324 = 0, $$7304 = 0.0, $$8289 = 0, $$9297 = 0, $$neg = 0, $$neg281 = 0;
 var $$phi$trans$insert = 0, $$phi$trans$insert395 = 0, $$pre = 0.0, $$pre396 = 0.0, $$sink = 0, $$sink425 = 0, $$sink427 = 0, $10 = 0, $100 = 0.0, $101 = 0, $102 = 0.0, $103 = 0.0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0.0, $121 = 0, $122 = 0, $123 = 0, $124 = 0.0, $125 = 0, $126 = 0, $127 = 0.0, $128 = 0.0, $129 = 0.0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0.0, $138 = 0, $139 = 0.0, $14 = 0, $140 = 0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0.0, $151 = 0, $152 = 0, $153 = 0, $154 = 0.0, $155 = 0.0, $156 = 0, $157 = 0.0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0.0, $163 = 0, $164 = 0, $165 = 0.0;
 var $166 = 0.0, $167 = 0.0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0.0, $176 = 0.0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0.0, $181 = 0.0, $182 = 0, $183 = 0.0;
 var $184 = 0.0, $185 = 0, $186 = 0, $187 = 0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0.0, $191 = 0.0, $192 = 0, $193 = 0, $194 = 0.0, $195 = 0.0, $196 = 0, $197 = 0.0, $198 = 0.0, $199 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0.0, $204 = 0, $205 = 0.0, $206 = 0.0, $207 = 0.0, $208 = 0.0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0.0, $214 = 0, $215 = 0.0, $216 = 0.0, $217 = 0.0, $218 = 0.0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0.0, $222 = 0.0, $223 = 0, $224 = 0, $225 = 0, $226 = 0.0, $227 = 0, $228 = 0.0, $229 = 0, $23 = 0.0, $230 = 0, $231 = 0.0, $232 = 0, $233 = 0.0, $234 = 0.0, $235 = 0, $236 = 0.0, $237 = 0, $238 = 0;
 var $24 = 0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0.0, $48 = 0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $exitcond = 0, $exitcond391 = 0, $exitcond392 = 0, $exitcond393 = 0, $exitcond394 = 0, $or$cond = 0, $spec$store$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560|0;
 $5 = sp + 480|0;
 $6 = sp + 320|0;
 $7 = sp + 160|0;
 $8 = sp;
 $9 = (6160 + ($4<<2)|0);
 $10 = load4($9);
 $11 = (($3) + -1)|0;
 $12 = (($2) + -3)|0;
 $13 = (($12|0) / 24)&-1;
 $14 = ($13|0)>(0);
 $spec$store$select = $14 ? $13 : 0;
 $$neg = Math_imul($spec$store$select, -24)|0;
 $$neg281 = (($2) + -24)|0;
 $15 = (($$neg281) + ($$neg))|0;
 $16 = (($10) + ($11))|0;
 $17 = ($16|0)<(0);
 if (!($17)) {
  $18 = (($spec$store$select) - ($11))|0;
  $19 = (($10) + ($3))|0;
  $$0258373 = $18;$$0263372 = 0;
  while(1) {
   $20 = ($$0258373|0)<(0);
   if ($20) {
    $25 = 0.0;
   } else {
    $21 = (6176 + ($$0258373<<2)|0);
    $22 = load4($21);
    $23 = (+($22|0));
    $25 = $23;
   }
   $24 = (($6) + ($$0263372<<3)|0);
   stored($24,$25);
   $26 = (($$0263372) + 1)|0;
   $27 = (($$0258373) + 1)|0;
   $exitcond394 = ($26|0)==($19|0);
   if ($exitcond394) {
    break;
   } else {
    $$0258373 = $27;$$0263372 = $26;
   }
  }
 }
 $28 = ($3|0)>(0);
 $$1264368 = 0;
 while(1) {
  if ($28) {
   $29 = (($$1264368) + ($11))|0;
   $$0363 = 0.0;$$1259362 = 0;
   while(1) {
    $30 = (($0) + ($$1259362<<3)|0);
    $31 = loadd($30);
    $32 = (($29) - ($$1259362))|0;
    $33 = (($6) + ($32<<3)|0);
    $34 = loadd($33);
    $35 = $31 * $34;
    $36 = $$0363 + $35;
    $37 = (($$1259362) + 1)|0;
    $exitcond393 = ($37|0)==($3|0);
    if ($exitcond393) {
     $$0$lcssa = $36;
     break;
    } else {
     $$0363 = $36;$$1259362 = $37;
    }
   }
  } else {
   $$0$lcssa = 0.0;
  }
  $38 = (($8) + ($$1264368<<3)|0);
  stored($38,$$0$lcssa);
  $39 = (($$1264368) + 1)|0;
  $40 = ($$1264368|0)<($10|0);
  if ($40) {
   $$1264368 = $39;
  } else {
   break;
  }
 }
 $41 = ($15|0)>(0);
 $42 = (24 - ($15))|0;
 $43 = (23 - ($15))|0;
 $44 = ($15|0)==(0);
 $45 = ($3|0)>(0);
 $$0253 = $10;
 while(1) {
  $46 = (($8) + ($$0253<<3)|0);
  $47 = loadd($46);
  $48 = ($$0253|0)>(0);
  if ($48) {
   $$0248336 = $47;$$2260335 = $$0253;$$2265334 = 0;
   while(1) {
    $49 = $$0248336 * 5.9604644775390625E-8;
    $50 = (~~(($49)));
    $51 = (+($50|0));
    $52 = $51 * 16777216.0;
    $53 = $$0248336 - $52;
    $54 = (~~(($53)));
    $55 = (($5) + ($$2265334<<2)|0);
    store4($55,$54);
    $56 = (($$2260335) + -1)|0;
    $57 = (($8) + ($56<<3)|0);
    $58 = loadd($57);
    $59 = $58 + $51;
    $60 = (($$2265334) + 1)|0;
    $61 = ($$2260335|0)>(1);
    if ($61) {
     $$0248336 = $59;$$2260335 = $56;$$2265334 = $60;
    } else {
     $$0248$lcssa = $59;
     break;
    }
   }
  } else {
   $$0248$lcssa = $47;
  }
  $62 = (+_scalbn($$0248$lcssa,$15));
  $63 = $62 * 0.125;
  $64 = (+Math_floor((+$63)));
  $65 = $64 * 8.0;
  $66 = $62 - $65;
  $67 = (~~(($66)));
  $68 = (+($67|0));
  $69 = $66 - $68;
  do {
   if ($41) {
    $70 = (($$0253) + -1)|0;
    $71 = (($5) + ($70<<2)|0);
    $72 = load4($71);
    $73 = $72 >> $42;
    $74 = (($73) + ($67))|0;
    $75 = $73 << $42;
    $76 = (($72) - ($75))|0;
    store4($71,$76);
    $77 = $76 >> $43;
    $$0250 = $77;$$0271 = $74;
    label = 21;
   } else {
    if ($44) {
     $78 = (($$0253) + -1)|0;
     $79 = (($5) + ($78<<2)|0);
     $80 = load4($79);
     $81 = $80 >> 23;
     $$0250 = $81;$$0271 = $67;
     label = 21;
     break;
    } else {
     $82 = !($69 >= 0.5);
     if ($82) {
      $$0250279 = 0;$$1249 = $69;$$1272 = $67;
      break;
     } else {
      $$0250278 = 2;$$0271277 = $67;
      label = 22;
      break;
     }
    }
   }
  } while(0);
  if ((label|0) == 21) {
   label = 0;
   $83 = ($$0250|0)>(0);
   if ($83) {
    $$0250278 = $$0250;$$0271277 = $$0271;
    label = 22;
   } else {
    $$0250279 = $$0250;$$1249 = $69;$$1272 = $$0271;
   }
  }
  if ((label|0) == 22) {
   label = 0;
   $84 = (($$0271277) + 1)|0;
   if ($48) {
    $$0273341 = 0;$$3266342 = 0;
    while(1) {
     $85 = (($5) + ($$3266342<<2)|0);
     $86 = load4($85);
     $87 = ($$0273341|0)==(0);
     if ($87) {
      $88 = ($86|0)==(0);
      if ($88) {
       $$1274 = 0;
      } else {
       $$1274$ph = 1;$$sink425 = 16777216;
       label = 26;
      }
     } else {
      $$1274$ph = $$0273341;$$sink425 = 16777215;
      label = 26;
     }
     if ((label|0) == 26) {
      label = 0;
      $89 = (($$sink425) - ($86))|0;
      store4($85,$89);
      $$1274 = $$1274$ph;
     }
     $90 = (($$3266342) + 1)|0;
     $exitcond391 = ($90|0)==($$0253|0);
     if ($exitcond391) {
      $$0273$lcssa = $$1274;
      break;
     } else {
      $$0273341 = $$1274;$$3266342 = $90;
     }
    }
   } else {
    $$0273$lcssa = 0;
   }
   L44: do {
    if ($41) {
     switch ($15|0) {
     case 1:  {
      $91 = (($$0253) + -1)|0;
      $92 = (($5) + ($91<<2)|0);
      $93 = load4($92);
      $94 = $93 & 8388607;
      store4($92,$94);
      break L44;
      break;
     }
     case 2:  {
      $95 = (($$0253) + -1)|0;
      $96 = (($5) + ($95<<2)|0);
      $97 = load4($96);
      $98 = $97 & 4194303;
      store4($96,$98);
      break L44;
      break;
     }
     default: {
      break L44;
     }
     }
    }
   } while(0);
   $99 = ($$0250278|0)==(2);
   if ($99) {
    $100 = 1.0 - $69;
    $101 = ($$0273$lcssa|0)==(0);
    if ($101) {
     $$0250279 = 2;$$1249 = $100;$$1272 = $84;
    } else {
     $102 = (+_scalbn(1.0,$15));
     $103 = $100 - $102;
     $$0250279 = 2;$$1249 = $103;$$1272 = $84;
    }
   } else {
    $$0250279 = $$0250278;$$1249 = $69;$$1272 = $84;
   }
  }
  $104 = $$1249 == 0.0;
  if (!($104)) {
   label = 49;
   break;
  }
  $105 = ($$0253|0)>($10|0);
  if ($105) {
   $$3261347 = 0;$$4267348$in = $$0253;
   while(1) {
    $$4267348 = (($$4267348$in) + -1)|0;
    $106 = (($5) + ($$4267348<<2)|0);
    $107 = load4($106);
    $108 = $107 | $$3261347;
    $109 = ($$4267348|0)>($10|0);
    if ($109) {
     $$3261347 = $108;$$4267348$in = $$4267348;
    } else {
     break;
    }
   }
   $110 = ($108|0)==(0);
   if (!($110)) {
    label = 41;
    break;
   }
  }
  $$0256 = 1;
  while(1) {
   $111 = (($10) - ($$0256))|0;
   $112 = (($5) + ($111<<2)|0);
   $113 = load4($112);
   $114 = ($113|0)==(0);
   $115 = (($$0256) + 1)|0;
   if ($114) {
    $$0256 = $115;
   } else {
    break;
   }
  }
  $116 = (($$0256) + ($$0253))|0;
  $$5268361$in = $$0253;
  while(1) {
   $$5268361 = (($$5268361$in) + 1)|0;
   $117 = (($$5268361) + ($spec$store$select))|0;
   $118 = (6176 + ($117<<2)|0);
   $119 = load4($118);
   $120 = (+($119|0));
   $121 = (($$5268361$in) + ($3))|0;
   $122 = (($6) + ($121<<3)|0);
   stored($122,$120);
   if ($45) {
    $$1354 = 0.0;$$4262353 = 0;
    while(1) {
     $123 = (($0) + ($$4262353<<3)|0);
     $124 = loadd($123);
     $125 = (($121) - ($$4262353))|0;
     $126 = (($6) + ($125<<3)|0);
     $127 = loadd($126);
     $128 = $124 * $127;
     $129 = $$1354 + $128;
     $130 = (($$4262353) + 1)|0;
     $exitcond392 = ($130|0)==($3|0);
     if ($exitcond392) {
      $$1$lcssa = $129;
      break;
     } else {
      $$1354 = $129;$$4262353 = $130;
     }
    }
   } else {
    $$1$lcssa = 0.0;
   }
   $131 = (($8) + ($$5268361<<3)|0);
   stored($131,$$1$lcssa);
   $132 = ($$5268361|0)<($116|0);
   if ($132) {
    $$5268361$in = $$5268361;
   } else {
    break;
   }
  }
  $$0253 = $116;
 }
 if ((label|0) == 41) {
  $$0251$in = $15;$$1254$in = $$0253;
  while(1) {
   $$0251 = (($$0251$in) + -24)|0;
   $$1254 = (($$1254$in) + -1)|0;
   $133 = (($5) + ($$1254<<2)|0);
   $134 = load4($133);
   $135 = ($134|0)==(0);
   if ($135) {
    $$0251$in = $$0251;$$1254$in = $$1254;
   } else {
    $$1252 = $$0251;$$2255 = $$1254;
    break;
   }
  }
 }
 else if ((label|0) == 49) {
  $136 = (0 - ($15))|0;
  $137 = (+_scalbn($$1249,$136));
  $138 = !($137 >= 16777216.0);
  if ($138) {
   $148 = (~~(($137)));
   $$1252$ph = $15;$$sink = $148;$$sink427 = $$0253;
  } else {
   $139 = $137 * 5.9604644775390625E-8;
   $140 = (~~(($139)));
   $141 = (+($140|0));
   $142 = $141 * 16777216.0;
   $143 = $137 - $142;
   $144 = (~~(($143)));
   $145 = (($5) + ($$0253<<2)|0);
   store4($145,$144);
   $146 = (($$0253) + 1)|0;
   $147 = (($$neg) + ($2))|0;
   $$1252$ph = $147;$$sink = $140;$$sink427 = $146;
  }
  $149 = (($5) + ($$sink427<<2)|0);
  store4($149,$$sink);
  $$1252 = $$1252$ph;$$2255 = $$sink427;
 }
 $150 = (+_scalbn(1.0,$$1252));
 $151 = ($$2255|0)>(-1);
 if ($151) {
  $$2330 = $150;$$6269329 = $$2255;
  while(1) {
   $152 = (($5) + ($$6269329<<2)|0);
   $153 = load4($152);
   $154 = (+($153|0));
   $155 = $$2330 * $154;
   $156 = (($8) + ($$6269329<<3)|0);
   stored($156,$155);
   $157 = $$2330 * 5.9604644775390625E-8;
   $158 = (($$6269329) + -1)|0;
   $159 = ($$6269329|0)>(0);
   if ($159) {
    $$2330 = $157;$$6269329 = $158;
   } else {
    break;
   }
  }
  if ($151) {
   $$7270324 = $$2255;
   while(1) {
    $160 = (($$2255) - ($$7270324))|0;
    $$1257318 = 0;$$3319 = 0.0;
    while(1) {
     $161 = (6448 + ($$1257318<<3)|0);
     $162 = loadd($161);
     $163 = (($$1257318) + ($$7270324))|0;
     $164 = (($8) + ($163<<3)|0);
     $165 = loadd($164);
     $166 = $162 * $165;
     $167 = $$3319 + $166;
     $168 = (($$1257318) + 1)|0;
     $169 = ($$1257318|0)>=($10|0);
     $170 = ($$1257318>>>0)>=($160>>>0);
     $or$cond = $169 | $170;
     if ($or$cond) {
      break;
     } else {
      $$1257318 = $168;$$3319 = $167;
     }
    }
    $171 = (($7) + ($160<<3)|0);
    stored($171,$167);
    $172 = (($$7270324) + -1)|0;
    $173 = ($$7270324|0)>(0);
    if ($173) {
     $$7270324 = $172;
    } else {
     break;
    }
   }
  }
 }
 L93: do {
  switch ($4|0) {
  case 0:  {
   if ($151) {
    $$4290 = 0.0;$$8289 = $$2255;
    while(1) {
     $174 = (($7) + ($$8289<<3)|0);
     $175 = loadd($174);
     $176 = $$4290 + $175;
     $177 = (($$8289) + -1)|0;
     $178 = ($$8289|0)>(0);
     if ($178) {
      $$4290 = $176;$$8289 = $177;
     } else {
      $$4$lcssa = $176;
      break;
     }
    }
   } else {
    $$4$lcssa = 0.0;
   }
   $179 = ($$0250279|0)==(0);
   $180 = - $$4$lcssa;
   $181 = $179 ? $$4$lcssa : $180;
   stored($1,$181);
   break;
  }
  case 2: case 1:  {
   if ($151) {
    $$5298 = 0.0;$$9297 = $$2255;
    while(1) {
     $182 = (($7) + ($$9297<<3)|0);
     $183 = loadd($182);
     $184 = $$5298 + $183;
     $185 = (($$9297) + -1)|0;
     $186 = ($$9297|0)>(0);
     if ($186) {
      $$5298 = $184;$$9297 = $185;
     } else {
      $$5$lcssa = $184;
      break;
     }
    }
   } else {
    $$5$lcssa = 0.0;
   }
   $187 = ($$0250279|0)==(0);
   $188 = - $$5$lcssa;
   $189 = $187 ? $$5$lcssa : $188;
   stored($1,$189);
   $190 = loadd($7);
   $191 = $190 - $$5$lcssa;
   $192 = ($$2255|0)<(1);
   if ($192) {
    $$6$lcssa = $191;
   } else {
    $$10291 = 1;$$6292 = $191;
    while(1) {
     $193 = (($7) + ($$10291<<3)|0);
     $194 = loadd($193);
     $195 = $$6292 + $194;
     $196 = (($$10291) + 1)|0;
     $exitcond = ($$10291|0)==($$2255|0);
     if ($exitcond) {
      $$6$lcssa = $195;
      break;
     } else {
      $$10291 = $196;$$6292 = $195;
     }
    }
   }
   $197 = - $$6$lcssa;
   $198 = $187 ? $$6$lcssa : $197;
   $199 = ((($1)) + 8|0);
   stored($199,$198);
   break;
  }
  case 3:  {
   $200 = ($$2255|0)>(0);
   if ($200) {
    $$phi$trans$insert = (($7) + ($$2255<<3)|0);
    $$pre = loadd($$phi$trans$insert);
    $$11313 = $$2255;$206 = $$pre;
    while(1) {
     $201 = (($$11313) + -1)|0;
     $202 = (($7) + ($201<<3)|0);
     $203 = loadd($202);
     $204 = (($7) + ($$11313<<3)|0);
     $205 = $203 + $206;
     $207 = $203 - $205;
     $208 = $206 + $207;
     stored($204,$208);
     stored($202,$205);
     $209 = ($$11313|0)>(1);
     if ($209) {
      $$11313 = $201;$206 = $205;
     } else {
      break;
     }
    }
    $210 = ($$2255|0)>(1);
    if ($210) {
     $$phi$trans$insert395 = (($7) + ($$2255<<3)|0);
     $$pre396 = loadd($$phi$trans$insert395);
     $$12309 = $$2255;$216 = $$pre396;
     while(1) {
      $211 = (($$12309) + -1)|0;
      $212 = (($7) + ($211<<3)|0);
      $213 = loadd($212);
      $214 = (($7) + ($$12309<<3)|0);
      $215 = $213 + $216;
      $217 = $213 - $215;
      $218 = $216 + $217;
      stored($214,$218);
      stored($212,$215);
      $219 = ($$12309|0)>(2);
      if ($219) {
       $$12309 = $211;$216 = $215;
      } else {
       break;
      }
     }
     if ($210) {
      $$13303 = $$2255;$$7304 = 0.0;
      while(1) {
       $220 = (($7) + ($$13303<<3)|0);
       $221 = loadd($220);
       $222 = $$7304 + $221;
       $223 = (($$13303) + -1)|0;
       $224 = ($$13303|0)>(2);
       if ($224) {
        $$13303 = $223;$$7304 = $222;
       } else {
        $$7$lcssa = $222;
        break;
       }
      }
     } else {
      $$7$lcssa = 0.0;
     }
    } else {
     $$7$lcssa = 0.0;
    }
   } else {
    $$7$lcssa = 0.0;
   }
   $225 = ($$0250279|0)==(0);
   $226 = loadd($7);
   if ($225) {
    stored($1,$226);
    $227 = ((($7)) + 8|0);
    $228 = loadd($227);
    $229 = ((($1)) + 8|0);
    stored($229,$228);
    $230 = ((($1)) + 16|0);
    stored($230,$$7$lcssa);
    break L93;
   } else {
    $231 = - $226;
    stored($1,$231);
    $232 = ((($7)) + 8|0);
    $233 = loadd($232);
    $234 = - $233;
    $235 = ((($1)) + 8|0);
    stored($235,$234);
    $236 = - $$7$lcssa;
    $237 = ((($1)) + 16|0);
    stored($237,$236);
    break L93;
   }
   break;
  }
  default: {
  }
  }
 } while(0);
 $238 = $$1272 & 7;
 STACKTOP = sp;return ($238|0);
}
function _tanh($0) {
 $0 = +$0;
 var $$0 = 0.0, $1 = i64(), $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = i64(), $20 = 0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0;
 var $27 = 0.0, $28 = 0.0, $3 = 0.0, $4 = i64(), $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = i64_bc2i($0);
 $2 = i64_and($1,i64_const(4294967295,2147483647));
 $3 = i64_bc2d($2);
 $4 = i64_lshr($2,i64_const(32,0));
 $5 = i64_trunc($4);
 $6 = ($5>>>0)>(1071748074);
 do {
  if ($6) {
   $7 = ($5>>>0)>(1077149696);
   if ($7) {
    $8 = 0.0 / $3;
    $9 = 1.0 - $8;
    $$0 = $9;
    break;
   } else {
    $10 = $3 * 2.0;
    $11 = (+_expm1($10));
    $12 = $11 + 2.0;
    $13 = 2.0 / $12;
    $14 = 1.0 - $13;
    $$0 = $14;
    break;
   }
  } else {
   $15 = ($5>>>0)>(1070618798);
   if ($15) {
    $16 = $3 * 2.0;
    $17 = (+_expm1($16));
    $18 = $17 + 2.0;
    $19 = $17 / $18;
    $$0 = $19;
    break;
   }
   $20 = ($5>>>0)>(1048575);
   if ($20) {
    $21 = $3 * -2.0;
    $22 = (+_expm1($21));
    $23 = - $22;
    $24 = $22 + 2.0;
    $25 = $23 / $24;
    $$0 = $25;
   } else {
    $$0 = $3;
   }
  }
 } while(0);
 $26 = i64_slt($1,i64_const(0,0));
 $27 = - $$0;
 $28 = $26 ? $27 : $$0;
 return (+$28);
}
function ___tan($0,$1,$2) {
 $0 = +$0;
 $1 = +$1;
 $2 = $2|0;
 var $$0 = 0.0, $$087 = 0.0, $$088 = 0.0, $$090 = 0, $$1 = 0.0, $$189 = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0;
 var $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = i64(), $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = i64(), $40 = 0.0, $41 = 0.0;
 var $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0, $47 = 0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0, $57 = 0.0, $58 = 0.0, $59 = 0, $6 = i64();
 var $60 = i64(), $61 = i64(), $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = i64(), $67 = i64(), $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0.0, $74 = 0.0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = i64_bc2i($0);
 $4 = i64_and($3,i64_const(0,2147483640));
 $5 = i64_ugt($4,i64_const(0,1072010279));
 if ($5) {
  $6 = i64_lshr($3,i64_const(63,0));
  $7 = i64_trunc($6);
  $8 = ($7|0)==(0);
  $9 = - $0;
  $10 = - $1;
  $$088 = $8 ? $1 : $10;
  $$087 = $8 ? $0 : $9;
  $11 = 0.78539816339744828 - $$087;
  $12 = 3.061616997868383E-17 - $$088;
  $13 = $11 + $12;
  $$090 = $7;$$1 = $13;$$189 = 0.0;
 } else {
  $$090 = 0;$$1 = $0;$$189 = $1;
 }
 $14 = $$1 * $$1;
 $15 = $14 * $14;
 $16 = $15 * 1.8558637485527546E-5;
 $17 = 7.8179444293955709E-5 - $16;
 $18 = $15 * $17;
 $19 = $18 + 5.880412408202641E-4;
 $20 = $15 * $19;
 $21 = $20 + 0.0035920791075913124;
 $22 = $15 * $21;
 $23 = $22 + 0.021869488294859542;
 $24 = $15 * $23;
 $25 = $24 + 0.13333333333320124;
 $26 = $15 * 2.5907305186363371E-5;
 $27 = $26 + 7.1407249138260819E-5;
 $28 = $15 * $27;
 $29 = $28 + 2.4646313481846991E-4;
 $30 = $15 * $29;
 $31 = $30 + 0.0014562094543252903;
 $32 = $15 * $31;
 $33 = $32 + 0.0088632398235993;
 $34 = $15 * $33;
 $35 = $34 + 0.053968253976226052;
 $36 = $14 * $35;
 $37 = $$1 * $14;
 $38 = $25 + $36;
 $39 = $37 * $38;
 $40 = $$189 + $39;
 $41 = $14 * $40;
 $42 = $$189 + $41;
 $43 = $37 * 0.33333333333333409;
 $44 = $43 + $42;
 $45 = $$1 + $44;
 if ($5) {
  $46 = $2 << 1;
  $47 = (1 - ($46))|0;
  $48 = (+($47|0));
  $49 = $45 * $45;
  $50 = $45 + $48;
  $51 = $49 / $50;
  $52 = $44 - $51;
  $53 = $$1 + $52;
  $54 = $53 * 2.0;
  $55 = $48 - $54;
  $56 = ($$090|0)==(0);
  $57 = - $55;
  $58 = $56 ? $55 : $57;
  $$0 = $58;
 } else {
  $59 = ($2|0)==(0);
  if ($59) {
   $$0 = $45;
  } else {
   $60 = i64_bc2i($45);
   $61 = i64_and($60,i64_const(0,4294967295));
   $62 = i64_bc2d($61);
   $63 = $62 - $$1;
   $64 = $44 - $63;
   $65 = -1.0 / $45;
   $66 = i64_bc2i($65);
   $67 = i64_and($66,i64_const(0,4294967295));
   $68 = i64_bc2d($67);
   $69 = $62 * $68;
   $70 = $69 + 1.0;
   $71 = $64 * $68;
   $72 = $70 + $71;
   $73 = $65 * $72;
   $74 = $73 + $68;
   $$0 = $74;
  }
 }
 return (+$$0);
}
function _fwrite($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = Math_imul($2, $1)|0;
 $5 = ($1|0)==(0);
 $spec$select = $5 ? 0 : $2;
 $6 = ((($3)) + 76|0);
 $7 = load4($6);
 $8 = ($7|0)>(-1);
 if ($8) {
  $10 = (___lockfile($3)|0);
  $phitmp = ($10|0)==(0);
  $11 = (___fwritex($0,$4,$3)|0);
  if ($phitmp) {
   $12 = $11;
  } else {
   ___unlockfile($3);
   $12 = $11;
  }
 } else {
  $9 = (___fwritex($0,$4,$3)|0);
  $12 = $9;
 }
 $13 = ($12|0)==($4|0);
 if ($13) {
  $15 = $spec$select;
 } else {
  $14 = (($12>>>0) / ($1>>>0))&-1;
  $15 = $14;
 }
 return ($15|0);
}
function ___unlist_locked_file($0) {
 $0 = $0|0;
 var $$pre = 0, $$sink = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 68|0);
 $2 = load4($1);
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = ((($0)) + 132|0);
  $5 = load4($4);
  $6 = ($5|0)==(0|0);
  $7 = $5;
  $$pre = ((($0)) + 128|0);
  if (!($6)) {
   $8 = load4($$pre);
   $9 = ((($5)) + 128|0);
   store4($9,$8);
  }
  $10 = load4($$pre);
  $11 = ($10|0)==(0|0);
  if ($11) {
   $13 = (___pthread_self_599()|0);
   $14 = ((($13)) + 232|0);
   $$sink = $14;
  } else {
   $12 = ((($10)) + 132|0);
   $$sink = $12;
  }
  store4($$sink,$7);
 }
 return;
}
function ___pthread_self_599() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function ___overflow($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = $1&255;
 store1($2,$3);
 $4 = ((($0)) + 16|0);
 $5 = load4($4);
 $6 = ($5|0)==(0|0);
 if ($6) {
  $7 = (___towrite($0)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $$pre = load4($4);
   $12 = $$pre;
   label = 4;
  } else {
   $$0 = -1;
  }
 } else {
  $12 = $5;
  label = 4;
 }
 do {
  if ((label|0) == 4) {
   $9 = ((($0)) + 20|0);
   $10 = load4($9);
   $11 = ($10>>>0)<($12>>>0);
   if ($11) {
    $13 = $1 & 255;
    $14 = ((($0)) + 75|0);
    $15 = load1($14);
    $16 = $15 << 24 >> 24;
    $17 = ($13|0)==($16|0);
    if (!($17)) {
     $18 = ((($10)) + 1|0);
     store4($9,$18);
     store1($10,$3);
     $$0 = $13;
     break;
    }
   }
   $19 = ((($0)) + 36|0);
   $20 = load4($19);
   $21 = (FUNCTION_TABLE_iiii[$20 & 15]($0,$2,1)|0);
   $22 = ($21|0)==(1);
   if ($22) {
    $23 = load1($2);
    $24 = $23&255;
    $$0 = $24;
   } else {
    $$0 = -1;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _fopen($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_buffer8 = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer8 = sp + 32|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $2 = load1($1);
 $3 = $2 << 24 >> 24;
 $4 = (_strchr(16112,$3)|0);
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = (___errno_location()|0);
  store4($6,22);
  $$0 = 0;
 } else {
  $7 = (___fmodeflags($1)|0);
  $8 = $0;
  $9 = $7 | 32768;
  store4($vararg_buffer,$8);
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  store4($vararg_ptr1,$9);
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  store4($vararg_ptr2,438);
  $10 = (___syscall5(5,($vararg_buffer|0))|0);
  $11 = (___syscall_ret($10)|0);
  $12 = ($11|0)<(0);
  if ($12) {
   $$0 = 0;
  } else {
   $13 = $7 & 524288;
   $14 = ($13|0)==(0);
   if (!($14)) {
    store4($vararg_buffer3,$11);
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    store4($vararg_ptr6,2);
    $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
    store4($vararg_ptr7,1);
    (___syscall221(221,($vararg_buffer3|0))|0);
   }
   $15 = (___fdopen($11,$1)|0);
   $16 = ($15|0)==(0|0);
   if ($16) {
    store4($vararg_buffer8,$11);
    (___syscall6(6,($vararg_buffer8|0))|0);
    $$0 = 0;
   } else {
    $$0 = $15;
   }
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___fmodeflags($0) {
 $0 = $0|0;
 var $$ = 0, $$0 = 0, $$2 = 0, $$4 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $spec$select = 0, $spec$select13 = 0, $spec$select14 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_strchr($0,43)|0);
 $2 = ($1|0)==(0|0);
 $3 = load1($0);
 $4 = ($3<<24>>24)!=(114);
 $$ = $4&1;
 $$0 = $2 ? $$ : 2;
 $5 = (_strchr($0,120)|0);
 $6 = ($5|0)==(0|0);
 $7 = $$0 | 128;
 $spec$select = $6 ? $$0 : $7;
 $8 = (_strchr($0,101)|0);
 $9 = ($8|0)==(0|0);
 $10 = $spec$select | 524288;
 $$2 = $9 ? $spec$select : $10;
 $11 = ($3<<24>>24)==(114);
 $12 = $$2 | 64;
 $spec$select13 = $11 ? $$2 : $12;
 $13 = ($3<<24>>24)==(119);
 $14 = $spec$select13 | 512;
 $$4 = $13 ? $14 : $spec$select13;
 $15 = ($3<<24>>24)==(97);
 $16 = $$4 | 1024;
 $spec$select14 = $15 ? $16 : $$4;
 return ($spec$select14|0);
}
function ___fdopen($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr15 = 0, $vararg_ptr16 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $vararg_buffer12 = sp + 40|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $2 = sp + 56|0;
 $3 = load1($1);
 $4 = $3 << 24 >> 24;
 $5 = (_strchr(16112,$4)|0);
 $6 = ($5|0)==(0|0);
 if ($6) {
  $7 = (___errno_location()|0);
  store4($7,22);
  $$0 = 0;
 } else {
  $8 = (_malloc(1176)|0);
  $9 = ($8|0)==(0|0);
  if ($9) {
   $$0 = 0;
  } else {
   (_memset(($8|0),0,144)|0);
   $10 = (_strchr($1,43)|0);
   $11 = ($10|0)==(0|0);
   if ($11) {
    $12 = load1($1);
    $13 = ($12<<24>>24)==(114);
    $14 = $13 ? 8 : 4;
    store4($8,$14);
   }
   $15 = (_strchr($1,101)|0);
   $16 = ($15|0)==(0|0);
   if (!($16)) {
    store4($vararg_buffer,$0);
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    store4($vararg_ptr1,2);
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    store4($vararg_ptr2,1);
    (___syscall221(221,($vararg_buffer|0))|0);
   }
   $17 = load1($1);
   $18 = ($17<<24>>24)==(97);
   if ($18) {
    store4($vararg_buffer3,$0);
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    store4($vararg_ptr6,3);
    $19 = (___syscall221(221,($vararg_buffer3|0))|0);
    $20 = $19 & 1024;
    $21 = ($20|0)==(0);
    if ($21) {
     $22 = $19 | 1024;
     store4($vararg_buffer7,$0);
     $vararg_ptr10 = ((($vararg_buffer7)) + 4|0);
     store4($vararg_ptr10,4);
     $vararg_ptr11 = ((($vararg_buffer7)) + 8|0);
     store4($vararg_ptr11,$22);
     (___syscall221(221,($vararg_buffer7|0))|0);
    }
    $23 = load4($8);
    $24 = $23 | 128;
    store4($8,$24);
    $31 = $24;
   } else {
    $$pre = load4($8);
    $31 = $$pre;
   }
   $25 = ((($8)) + 60|0);
   store4($25,$0);
   $26 = ((($8)) + 152|0);
   $27 = ((($8)) + 44|0);
   store4($27,$26);
   $28 = ((($8)) + 48|0);
   store4($28,1024);
   $29 = ((($8)) + 75|0);
   store1($29,-1);
   $30 = $31 & 8;
   $32 = ($30|0)==(0);
   if ($32) {
    $33 = $2;
    store4($vararg_buffer12,$0);
    $vararg_ptr15 = ((($vararg_buffer12)) + 4|0);
    store4($vararg_ptr15,21523);
    $vararg_ptr16 = ((($vararg_buffer12)) + 8|0);
    store4($vararg_ptr16,$33);
    $34 = (___syscall54(54,($vararg_buffer12|0))|0);
    $35 = ($34|0)==(0);
    if ($35) {
     store1($29,10);
    }
   }
   $36 = ((($8)) + 32|0);
   store4($36,2);
   $37 = ((($8)) + 36|0);
   store4($37,1);
   $38 = ((($8)) + 40|0);
   store4($38,1);
   $39 = ((($8)) + 12|0);
   store4($39,151);
   $40 = load4((18908));
   $41 = ($40|0)==(0);
   if ($41) {
    $42 = ((($8)) + 76|0);
    store4($42,-1);
   }
   $43 = (___ofl_add($8)|0);
   $$0 = $8;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___ofl_add($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (___ofl_lock()|0);
 $2 = load4($1);
 $3 = ((($0)) + 56|0);
 store4($3,$2);
 $4 = load4($1);
 $5 = ($4|0)==(0|0);
 if (!($5)) {
  $6 = ((($4)) + 52|0);
  store4($6,$0);
 }
 store4($1,$0);
 ___ofl_unlock();
 return ($0|0);
}
function ___ofl_lock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___lock((18992|0));
 return (19000|0);
}
function ___ofl_unlock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___unlock((18992|0));
 return;
}
function _fclose($0) {
 $0 = $0|0;
 var $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 76|0);
 $2 = load4($1);
 $3 = ($2|0)>(-1);
 if ($3) {
  $4 = (___lockfile($0)|0);
  $29 = $4;
 } else {
  $29 = 0;
 }
 ___unlist_locked_file($0);
 $5 = load4($0);
 $6 = $5 & 1;
 $7 = ($6|0)!=(0);
 if (!($7)) {
  $8 = (___ofl_lock()|0);
  $9 = ((($0)) + 52|0);
  $10 = load4($9);
  $11 = ($10|0)==(0|0);
  $12 = $10;
  $$pre = ((($0)) + 56|0);
  if (!($11)) {
   $13 = load4($$pre);
   $14 = ((($10)) + 56|0);
   store4($14,$13);
  }
  $15 = load4($$pre);
  $16 = ($15|0)==(0|0);
  $17 = $15;
  if (!($16)) {
   $18 = ((($15)) + 52|0);
   store4($18,$12);
  }
  $19 = load4($8);
  $20 = ($19|0)==($0|0);
  if ($20) {
   store4($8,$17);
  }
  ___ofl_unlock();
 }
 $21 = (_fflush($0)|0);
 $22 = ((($0)) + 12|0);
 $23 = load4($22);
 $24 = (FUNCTION_TABLE_ii[$23 & 255]($0)|0);
 $25 = $24 | $21;
 $26 = ((($0)) + 96|0);
 $27 = load4($26);
 $28 = ($27|0)==(0|0);
 if (!($28)) {
  _free($27);
 }
 if ($7) {
  $30 = ($29|0)==(0);
  if (!($30)) {
   ___unlockfile($0);
  }
 } else {
  _free($0);
 }
 return ($25|0);
}
function _fflush($0) {
 $0 = $0|0;
 var $$0 = 0, $$023 = 0, $$02325 = 0, $$02327 = 0, $$024$lcssa = 0, $$02426 = 0, $$1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $8 = load4(7376);
   $9 = ($8|0)==(0|0);
   if ($9) {
    $29 = 0;
   } else {
    $10 = load4(7376);
    $11 = (_fflush($10)|0);
    $29 = $11;
   }
   $12 = (___ofl_lock()|0);
   $$02325 = load4($12);
   $13 = ($$02325|0)==(0|0);
   if ($13) {
    $$024$lcssa = $29;
   } else {
    $$02327 = $$02325;$$02426 = $29;
    while(1) {
     $14 = ((($$02327)) + 76|0);
     $15 = load4($14);
     $16 = ($15|0)>(-1);
     if ($16) {
      $17 = (___lockfile($$02327)|0);
      $25 = $17;
     } else {
      $25 = 0;
     }
     $18 = ((($$02327)) + 20|0);
     $19 = load4($18);
     $20 = ((($$02327)) + 28|0);
     $21 = load4($20);
     $22 = ($19>>>0)>($21>>>0);
     if ($22) {
      $23 = (___fflush_unlocked($$02327)|0);
      $24 = $23 | $$02426;
      $$1 = $24;
     } else {
      $$1 = $$02426;
     }
     $26 = ($25|0)==(0);
     if (!($26)) {
      ___unlockfile($$02327);
     }
     $27 = ((($$02327)) + 56|0);
     $$023 = load4($27);
     $28 = ($$023|0)==(0|0);
     if ($28) {
      $$024$lcssa = $$1;
      break;
     } else {
      $$02327 = $$023;$$02426 = $$1;
     }
    }
   }
   ___ofl_unlock();
   $$0 = $$024$lcssa;
  } else {
   $2 = ((($0)) + 76|0);
   $3 = load4($2);
   $4 = ($3|0)>(-1);
   if (!($4)) {
    $5 = (___fflush_unlocked($0)|0);
    $$0 = $5;
    break;
   }
   $6 = (___lockfile($0)|0);
   $phitmp = ($6|0)==(0);
   $7 = (___fflush_unlocked($0)|0);
   if ($phitmp) {
    $$0 = $7;
   } else {
    ___unlockfile($0);
    $$0 = $7;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___fflush_unlocked($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = i64(), $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = load4($1);
 $3 = ((($0)) + 28|0);
 $4 = load4($3);
 $5 = ($2>>>0)>($4>>>0);
 if ($5) {
  $6 = ((($0)) + 36|0);
  $7 = load4($6);
  (FUNCTION_TABLE_iiii[$7 & 15]($0,0,0)|0);
  $8 = load4($1);
  $9 = ($8|0)==(0|0);
  if ($9) {
   $$0 = -1;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $10 = ((($0)) + 4|0);
  $11 = load4($10);
  $12 = ((($0)) + 8|0);
  $13 = load4($12);
  $14 = ($11>>>0)<($13>>>0);
  if ($14) {
   $15 = $11;
   $16 = $13;
   $17 = (($15) - ($16))|0;
   $18 = i64_sext($17);
   $19 = ((($0)) + 40|0);
   $20 = load4($19);
   (i64(FUNCTION_TABLE_jiji[$20 & 1]($0,$18,1)));
  }
  $21 = ((($0)) + 16|0);
  store4($21,0);
  store4($3,0);
  store4($1,0);
  store4($12,0);
  store4($10,0);
  $$0 = 0;
 }
 return ($$0|0);
}
function _fgets($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$05963 = 0, $$06065 = 0, $$06164 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var $or$cond72 = 0, $sext$mask = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 76|0);
 $4 = load4($3);
 $5 = ($4|0)>(-1);
 if ($5) {
  $6 = (___lockfile($2)|0);
  $15 = $6;
 } else {
  $15 = 0;
 }
 $7 = (($1) + -1)|0;
 $8 = ($1|0)<(2);
 if ($8) {
  $9 = ((($2)) + 74|0);
  $10 = load1($9);
  $11 = $10 << 24 >> 24;
  $12 = (($11) + 255)|0;
  $13 = $12 | $11;
  $14 = $13&255;
  store1($9,$14);
  $16 = ($15|0)==(0);
  if (!($16)) {
   ___unlockfile($2);
  }
  $17 = ($7|0)==(0);
  if ($17) {
   store1($0,0);
   $$0 = $0;
  } else {
   $$0 = 0;
  }
 } else {
  $18 = ($7|0)==(0);
  L11: do {
   if ($18) {
    $$1 = $0;
    label = 17;
   } else {
    $19 = ((($2)) + 4|0);
    $20 = ((($2)) + 8|0);
    $$06065 = $7;$$06164 = $0;
    while(1) {
     $21 = load4($19);
     $22 = load4($20);
     $23 = $21;
     $24 = (($22) - ($23))|0;
     $25 = (_memchr($21,10,$24)|0);
     $26 = ($25|0)==(0|0);
     $27 = $25;
     $28 = (1 - ($23))|0;
     $29 = (($28) + ($27))|0;
     $30 = $26 ? $24 : $29;
     $31 = ($30>>>0)<($$06065>>>0);
     $32 = $31 ? $30 : $$06065;
     (_memcpy(($$06164|0),($21|0),($32|0))|0);
     $33 = load4($19);
     $34 = (($33) + ($32)|0);
     store4($19,$34);
     $35 = (($$06164) + ($32)|0);
     $36 = (($$06065) - ($32))|0;
     $37 = ($36|0)!=(0);
     $or$cond = $26 & $37;
     if (!($or$cond)) {
      $$1 = $35;
      label = 17;
      break L11;
     }
     $38 = load4($20);
     $39 = ($34>>>0)<($38>>>0);
     if ($39) {
      $40 = ((($34)) + 1|0);
      store4($19,$40);
      $41 = load1($34);
      $42 = $41&255;
      $50 = $42;
     } else {
      $43 = (___uflow($2)|0);
      $44 = ($43|0)<(0);
      if ($44) {
       break;
      } else {
       $50 = $43;
      }
     }
     $49 = $50&255;
     $51 = ((($35)) + 1|0);
     store1($35,$49);
     $sext$mask = $50 & 255;
     $52 = ($sext$mask|0)==(10);
     $53 = (($36) + -1)|0;
     $54 = ($53|0)==(0);
     $or$cond72 = $52 | $54;
     if ($or$cond72) {
      $$1 = $51;
      label = 17;
      break L11;
     } else {
      $$06065 = $53;$$06164 = $51;
     }
    }
    $45 = ($35|0)==($0|0);
    if ($45) {
     $$05963 = 0;
    } else {
     $46 = load4($2);
     $47 = $46 & 16;
     $48 = ($47|0)==(0);
     if ($48) {
      $$05963 = 0;
     } else {
      $$1 = $35;
      label = 17;
     }
    }
   }
  } while(0);
  if ((label|0) == 17) {
   $55 = ($0|0)==(0|0);
   if ($55) {
    $$05963 = 0;
   } else {
    store1($$1,0);
    $$05963 = $0;
   }
  }
  $56 = ($15|0)==(0);
  if ($56) {
   $$0 = $$05963;
  } else {
   ___unlockfile($2);
   $$0 = $$05963;
  }
 }
 return ($$0|0);
}
function _feof($0) {
 $0 = $0|0;
 var $$lobit = 0, $$lobit8 = 0, $$lobit9 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 76|0);
 $2 = load4($1);
 $3 = ($2|0)>(-1);
 if ($3) {
  $6 = (___lockfile($0)|0);
  $phitmp = ($6|0)==(0);
  $7 = load4($0);
  $8 = $7 >>> 4;
  $$lobit = $8 & 1;
  if ($phitmp) {
   $$lobit9 = $$lobit;
  } else {
   ___unlockfile($0);
   $$lobit9 = $$lobit;
  }
 } else {
  $4 = load4($0);
  $5 = $4 >>> 4;
  $$lobit8 = $5 & 1;
  $$lobit9 = $$lobit8;
 }
 return ($$lobit9|0);
}
function _ferror($0) {
 $0 = $0|0;
 var $$lobit = 0, $$lobit8 = 0, $$lobit9 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 76|0);
 $2 = load4($1);
 $3 = ($2|0)>(-1);
 if ($3) {
  $6 = (___lockfile($0)|0);
  $phitmp = ($6|0)==(0);
  $7 = load4($0);
  $8 = $7 >>> 5;
  $$lobit = $8 & 1;
  if ($phitmp) {
   $$lobit9 = $$lobit;
  } else {
   ___unlockfile($0);
   $$lobit9 = $$lobit;
  }
 } else {
  $4 = load4($0);
  $5 = $4 >>> 5;
  $$lobit8 = $5 & 1;
  $$lobit9 = $$lobit8;
 }
 return ($$lobit9|0);
}
function _fseek($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = i64(), $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = i64_sext($1);
 $4 = (___fseeko($0,$3,$2)|0);
 return ($4|0);
}
function _fprintf($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 store4($2,$varargs);
 $3 = (_vfprintf($0,$1,$2)|0);
 STACKTOP = sp;return ($3|0);
}
function ___fseeko($0,$1,$2) {
 $0 = $0|0;
 $1 = i64($1);
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 76|0);
 $4 = load4($3);
 $5 = ($4|0)>(-1);
 if ($5) {
  $7 = (___lockfile($0)|0);
  $phitmp = ($7|0)==(0);
  $8 = (___fseeko_unlocked($0,$1,$2)|0);
  if ($phitmp) {
   $9 = $8;
  } else {
   ___unlockfile($0);
   $9 = $8;
  }
 } else {
  $6 = (___fseeko_unlocked($0,$1,$2)|0);
  $9 = $6;
 }
 return ($9|0);
}
function ___fseeko_unlocked($0,$1,$2) {
 $0 = $0|0;
 $1 = i64($1);
 $2 = $2|0;
 var $$0 = 0, $$019 = i64(), $10 = i64(), $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = i64(), $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(1);
 if ($3) {
  $4 = ((($0)) + 8|0);
  $5 = load4($4);
  $6 = ((($0)) + 4|0);
  $7 = load4($6);
  $8 = (($5) - ($7))|0;
  $9 = i64_sext($8);
  $10 = i64_sub($1,$9);
  $$019 = $10;
 } else {
  $$019 = $1;
 }
 $11 = ((($0)) + 20|0);
 $12 = load4($11);
 $13 = ((($0)) + 28|0);
 $14 = load4($13);
 $15 = ($12>>>0)>($14>>>0);
 if ($15) {
  $16 = ((($0)) + 36|0);
  $17 = load4($16);
  (FUNCTION_TABLE_iiii[$17 & 15]($0,0,0)|0);
  $18 = load4($11);
  $19 = ($18|0)==(0|0);
  if ($19) {
   $$0 = -1;
  } else {
   label = 5;
  }
 } else {
  label = 5;
 }
 if ((label|0) == 5) {
  $20 = ((($0)) + 16|0);
  store4($20,0);
  store4($13,0);
  store4($11,0);
  $21 = ((($0)) + 40|0);
  $22 = load4($21);
  $23 = (i64(FUNCTION_TABLE_jiji[$22 & 1]($0,$$019,$2)));
  $24 = i64_slt($23,i64_const(0,0));
  if ($24) {
   $$0 = -1;
  } else {
   $25 = ((($0)) + 8|0);
   store4($25,0);
   $26 = ((($0)) + 4|0);
   store4($26,0);
   $27 = load4($0);
   $28 = $27 & -17;
   store4($0,$28);
   $$0 = 0;
  }
 }
 return ($$0|0);
}
function _strstr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = load1($1);
 $3 = ($2<<24>>24)==(0);
 do {
  if ($3) {
   $$0 = $0;
  } else {
   $4 = $2 << 24 >> 24;
   $5 = (_strchr($0,$4)|0);
   $6 = ($5|0)==(0|0);
   if ($6) {
    $$0 = 0;
   } else {
    $7 = ((($1)) + 1|0);
    $8 = load1($7);
    $9 = ($8<<24>>24)==(0);
    if ($9) {
     $$0 = $5;
    } else {
     $10 = ((($5)) + 1|0);
     $11 = load1($10);
     $12 = ($11<<24>>24)==(0);
     if ($12) {
      $$0 = 0;
     } else {
      $13 = ((($1)) + 2|0);
      $14 = load1($13);
      $15 = ($14<<24>>24)==(0);
      if ($15) {
       $16 = (_twobyte_strstr($5,$1)|0);
       $$0 = $16;
       break;
      }
      $17 = ((($5)) + 2|0);
      $18 = load1($17);
      $19 = ($18<<24>>24)==(0);
      if ($19) {
       $$0 = 0;
      } else {
       $20 = ((($1)) + 3|0);
       $21 = load1($20);
       $22 = ($21<<24>>24)==(0);
       if ($22) {
        $23 = (_threebyte_strstr($5,$1)|0);
        $$0 = $23;
        break;
       }
       $24 = ((($5)) + 3|0);
       $25 = load1($24);
       $26 = ($25<<24>>24)==(0);
       if ($26) {
        $$0 = 0;
       } else {
        $27 = ((($1)) + 4|0);
        $28 = load1($27);
        $29 = ($28<<24>>24)==(0);
        if ($29) {
         $30 = (_fourbyte_strstr($5,$1)|0);
         $$0 = $30;
         break;
        } else {
         $31 = (_twoway_strstr($5,$1)|0);
         $$0 = $31;
         break;
        }
       }
      }
     }
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function _twobyte_strstr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$in16 = 0, $$01415 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = load1($1);
 $3 = $2&255;
 $4 = $3 << 8;
 $5 = ((($1)) + 1|0);
 $6 = load1($5);
 $7 = $6&255;
 $8 = $4 | $7;
 $9 = ((($0)) + 1|0);
 $10 = load1($9);
 $11 = ($10<<24>>24)==(0);
 L1: do {
  if ($11) {
   $26 = 0;
  } else {
   $12 = load1($0);
   $13 = $12&255;
   $14 = $13 << 8;
   $15 = $10&255;
   $16 = $14 | $15;
   $$0$in16 = $16;$$01415 = $9;
   while(1) {
    $17 = $$0$in16 & 65535;
    $18 = ($17|0)==($8|0);
    if ($18) {
     break;
    }
    $19 = $17 << 8;
    $20 = ((($$01415)) + 1|0);
    $21 = load1($20);
    $22 = $21&255;
    $23 = $19 | $22;
    $24 = ($21<<24>>24)==(0);
    if ($24) {
     $26 = 0;
     break L1;
    } else {
     $$0$in16 = $23;$$01415 = $20;
    }
   }
   $25 = ((($$01415)) + -1|0);
   $26 = $25;
  }
 } while(0);
 return ($26|0);
}
function _threebyte_strstr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$016$lcssa = 0, $$01618 = 0, $$019 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, $or$cond17 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = load1($1);
 $3 = $2&255;
 $4 = $3 << 24;
 $5 = ((($1)) + 1|0);
 $6 = load1($5);
 $7 = $6&255;
 $8 = $7 << 16;
 $9 = $8 | $4;
 $10 = ((($1)) + 2|0);
 $11 = load1($10);
 $12 = $11&255;
 $13 = $12 << 8;
 $14 = $9 | $13;
 $15 = load1($0);
 $16 = $15&255;
 $17 = $16 << 24;
 $18 = ((($0)) + 1|0);
 $19 = load1($18);
 $20 = $19&255;
 $21 = $20 << 16;
 $22 = $21 | $17;
 $23 = ((($0)) + 2|0);
 $24 = load1($23);
 $25 = $24&255;
 $26 = $25 << 8;
 $27 = $22 | $26;
 $28 = ($24<<24>>24)==(0);
 $29 = ($27|0)==($14|0);
 $or$cond17 = $29 | $28;
 if ($or$cond17) {
  $$016$lcssa = $23;$$lcssa = $28;
 } else {
  $$01618 = $23;$$019 = $27;
  while(1) {
   $30 = ((($$01618)) + 1|0);
   $31 = load1($30);
   $32 = $31&255;
   $33 = $$019 | $32;
   $34 = $33 << 8;
   $35 = ($31<<24>>24)==(0);
   $36 = ($34|0)==($14|0);
   $or$cond = $36 | $35;
   if ($or$cond) {
    $$016$lcssa = $30;$$lcssa = $35;
    break;
   } else {
    $$01618 = $30;$$019 = $34;
   }
  }
 }
 $37 = ((($$016$lcssa)) + -2|0);
 $38 = $$lcssa ? 0 : $37;
 return ($38|0);
}
function _fourbyte_strstr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$018$lcssa = 0, $$01820 = 0, $$021 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = load1($1);
 $3 = $2&255;
 $4 = $3 << 24;
 $5 = ((($1)) + 1|0);
 $6 = load1($5);
 $7 = $6&255;
 $8 = $7 << 16;
 $9 = $8 | $4;
 $10 = ((($1)) + 2|0);
 $11 = load1($10);
 $12 = $11&255;
 $13 = $12 << 8;
 $14 = $9 | $13;
 $15 = ((($1)) + 3|0);
 $16 = load1($15);
 $17 = $16&255;
 $18 = $14 | $17;
 $19 = load1($0);
 $20 = $19&255;
 $21 = $20 << 24;
 $22 = ((($0)) + 1|0);
 $23 = load1($22);
 $24 = $23&255;
 $25 = $24 << 16;
 $26 = $25 | $21;
 $27 = ((($0)) + 2|0);
 $28 = load1($27);
 $29 = $28&255;
 $30 = $29 << 8;
 $31 = $26 | $30;
 $32 = ((($0)) + 3|0);
 $33 = load1($32);
 $34 = $33&255;
 $35 = $31 | $34;
 $36 = ($33<<24>>24)==(0);
 $37 = ($35|0)==($18|0);
 $or$cond19 = $37 | $36;
 if ($or$cond19) {
  $$018$lcssa = $32;$$lcssa = $36;
 } else {
  $$01820 = $32;$$021 = $35;
  while(1) {
   $38 = $$021 << 8;
   $39 = ((($$01820)) + 1|0);
   $40 = load1($39);
   $41 = $40&255;
   $42 = $38 | $41;
   $43 = ($40<<24>>24)==(0);
   $44 = ($42|0)==($18|0);
   $or$cond = $44 | $43;
   if ($or$cond) {
    $$018$lcssa = $39;$$lcssa = $43;
    break;
   } else {
    $$01820 = $39;$$021 = $42;
   }
  }
 }
 $45 = ((($$018$lcssa)) + -3|0);
 $46 = $$lcssa ? 0 : $45;
 return ($46|0);
}
function _twoway_strstr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0166 = 0, $$0168 = 0, $$0169 = 0, $$0169$be = 0, $$0170 = 0, $$0175$lcssa237 = 0, $$0175219 = 0, $$0179218 = 0, $$0185217 = 0, $$0189$lcssa236 = 0, $$0189216 = 0, $$0193$lcssa234235 = 0, $$0193225 = 0, $$1176 = 0, $$1180 = 0, $$1186 = 0, $$1190 = 0, $$2177$$0175 = 0, $$2177$lcssa = 0, $$2177210 = 0;
 var $$2181209 = 0, $$2187208 = 0, $$2191$$0189 = 0, $$2191$$0189$ = 0, $$2191$lcssa = 0, $$2191207 = 0, $$3 = 0, $$3173 = 0, $$3178 = 0, $$3182 = 0, $$3188 = 0, $$3192 = 0, $$4183 = 0, $$4183$sink = 0, $$5 = 0, $$5184201 = 0, $$6202 = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond194 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1056|0;
 $2 = sp + 1024|0;
 $3 = sp;
 ; store8($2,i64_const(0,0),8); store8($2+8|0,i64_const(0,0),8); store8($2+16|0,i64_const(0,0),8); store8($2+24|0,i64_const(0,0),8);
 $4 = load1($1);
 $5 = ($4<<24>>24)==(0);
 L1: do {
  if ($5) {
   $$0175$lcssa237 = 1;$$0189$lcssa236 = -1;$$0193$lcssa234235 = 0;$$2177$lcssa = 1;$$2191$lcssa = -1;
   label = 25;
  } else {
   $$0193225 = 0;$10 = $4;
   while(1) {
    $6 = (($0) + ($$0193225)|0);
    $7 = load1($6);
    $8 = ($7<<24>>24)==(0);
    if ($8) {
     $$3 = 0;
     break L1;
    }
    $9 = $10&255;
    $11 = $9 & 31;
    $12 = 1 << $11;
    $13 = $9 >>> 5;
    $14 = (($2) + ($13<<2)|0);
    $15 = load4($14);
    $16 = $15 | $12;
    store4($14,$16);
    $17 = (($$0193225) + 1)|0;
    $18 = (($3) + ($9<<2)|0);
    store4($18,$17);
    $19 = (($1) + ($17)|0);
    $20 = load1($19);
    $21 = ($20<<24>>24)==(0);
    if ($21) {
     break;
    } else {
     $$0193225 = $17;$10 = $20;
    }
   }
   $22 = ($17>>>0)>(1);
   if ($22) {
    $$0175219 = 1;$$0179218 = 1;$$0185217 = 0;$$0189216 = -1;$27 = 1;
    while(1) {
     $23 = (($$0179218) + ($$0189216))|0;
     $24 = (($1) + ($23)|0);
     $25 = load1($24);
     $26 = (($1) + ($27)|0);
     $28 = load1($26);
     $29 = ($25<<24>>24)==($28<<24>>24);
     do {
      if ($29) {
       $30 = ($$0179218|0)==($$0175219|0);
       if ($30) {
        $31 = (($$0175219) + ($$0185217))|0;
        $$1176 = $$0175219;$$1180 = 1;$$1186 = $31;$$1190 = $$0189216;
        break;
       } else {
        $32 = (($$0179218) + 1)|0;
        $$1176 = $$0175219;$$1180 = $32;$$1186 = $$0185217;$$1190 = $$0189216;
        break;
       }
      } else {
       $33 = ($25&255)>($28&255);
       if ($33) {
        $34 = (($27) - ($$0189216))|0;
        $$1176 = $34;$$1180 = 1;$$1186 = $27;$$1190 = $$0189216;
        break;
       } else {
        $35 = (($$0185217) + 1)|0;
        $$1176 = 1;$$1180 = 1;$$1186 = $35;$$1190 = $$0185217;
        break;
       }
      }
     } while(0);
     $36 = (($$1180) + ($$1186))|0;
     $37 = ($36>>>0)<($17>>>0);
     if ($37) {
      $$0175219 = $$1176;$$0179218 = $$1180;$$0185217 = $$1186;$$0189216 = $$1190;$27 = $36;
     } else {
      break;
     }
    }
    if ($22) {
     $$2177210 = 1;$$2181209 = 1;$$2187208 = 0;$$2191207 = -1;$42 = 1;
     while(1) {
      $38 = (($$2181209) + ($$2191207))|0;
      $39 = (($1) + ($38)|0);
      $40 = load1($39);
      $41 = (($1) + ($42)|0);
      $43 = load1($41);
      $44 = ($40<<24>>24)==($43<<24>>24);
      do {
       if ($44) {
        $45 = ($$2181209|0)==($$2177210|0);
        if ($45) {
         $46 = (($$2177210) + ($$2187208))|0;
         $$3178 = $$2177210;$$3182 = 1;$$3188 = $46;$$3192 = $$2191207;
         break;
        } else {
         $47 = (($$2181209) + 1)|0;
         $$3178 = $$2177210;$$3182 = $47;$$3188 = $$2187208;$$3192 = $$2191207;
         break;
        }
       } else {
        $48 = ($40&255)<($43&255);
        if ($48) {
         $49 = (($42) - ($$2191207))|0;
         $$3178 = $49;$$3182 = 1;$$3188 = $42;$$3192 = $$2191207;
         break;
        } else {
         $50 = (($$2187208) + 1)|0;
         $$3178 = 1;$$3182 = 1;$$3188 = $50;$$3192 = $$2187208;
         break;
        }
       }
      } while(0);
      $51 = (($$3182) + ($$3188))|0;
      $52 = ($51>>>0)<($17>>>0);
      if ($52) {
       $$2177210 = $$3178;$$2181209 = $$3182;$$2187208 = $$3188;$$2191207 = $$3192;$42 = $51;
      } else {
       $$0175$lcssa237 = $$1176;$$0189$lcssa236 = $$1190;$$0193$lcssa234235 = $17;$$2177$lcssa = $$3178;$$2191$lcssa = $$3192;
       label = 25;
       break;
      }
     }
    } else {
     $$0175$lcssa237 = $$1176;$$0189$lcssa236 = $$1190;$$0193$lcssa234235 = $17;$$2177$lcssa = 1;$$2191$lcssa = -1;
     label = 25;
    }
   } else {
    $$0175$lcssa237 = 1;$$0189$lcssa236 = -1;$$0193$lcssa234235 = $17;$$2177$lcssa = 1;$$2191$lcssa = -1;
    label = 25;
   }
  }
 } while(0);
 L34: do {
  if ((label|0) == 25) {
   $53 = (($$2191$lcssa) + 1)|0;
   $54 = (($$0189$lcssa236) + 1)|0;
   $55 = ($53>>>0)>($54>>>0);
   $$2177$$0175 = $55 ? $$2177$lcssa : $$0175$lcssa237;
   $$2191$$0189 = $55 ? $$2191$lcssa : $$0189$lcssa236;
   $56 = (($1) + ($$2177$$0175)|0);
   $57 = (($$2191$$0189) + 1)|0;
   $58 = (_memcmp($1,$56,$57)|0);
   $59 = ($58|0)==(0);
   if ($59) {
    $64 = (($$0193$lcssa234235) - ($$2177$$0175))|0;
    $$0168 = $64;$$5 = $$2177$$0175;$$pre$phiZ2D = $64;
   } else {
    $60 = (($$0193$lcssa234235) - ($$2191$$0189))|0;
    $61 = (($60) + -1)|0;
    $62 = ($$2191$$0189>>>0)>($61>>>0);
    $$2191$$0189$ = $62 ? $$2191$$0189 : $61;
    $63 = (($$2191$$0189$) + 1)|0;
    $$pre = (($$0193$lcssa234235) - ($63))|0;
    $$0168 = 0;$$5 = $63;$$pre$phiZ2D = $$pre;
   }
   $65 = $$0193$lcssa234235 | 63;
   $66 = (($$0193$lcssa234235) + -1)|0;
   $67 = ($$0168|0)!=(0);
   $$0166 = $0;$$0169 = 0;$$0170 = $0;
   while(1) {
    $68 = $$0170;
    $69 = $$0166;
    $70 = (($68) - ($69))|0;
    $71 = ($70>>>0)<($$0193$lcssa234235>>>0);
    do {
     if ($71) {
      $72 = (_memchr($$0170,0,$65)|0);
      $73 = ($72|0)==(0|0);
      if ($73) {
       $77 = (($$0170) + ($65)|0);
       $$3173 = $77;
       break;
      } else {
       $74 = $72;
       $75 = (($74) - ($69))|0;
       $76 = ($75>>>0)<($$0193$lcssa234235>>>0);
       if ($76) {
        $$3 = 0;
        break L34;
       } else {
        $$3173 = $72;
        break;
       }
      }
     } else {
      $$3173 = $$0170;
     }
    } while(0);
    $78 = (($$0166) + ($66)|0);
    $79 = load1($78);
    $80 = $79&255;
    $81 = $80 >>> 5;
    $82 = (($2) + ($81<<2)|0);
    $83 = load4($82);
    $84 = $80 & 31;
    $85 = 1 << $84;
    $86 = $85 & $83;
    $87 = ($86|0)==(0);
    L48: do {
     if ($87) {
      $$0169$be = 0;$$4183$sink = $$0193$lcssa234235;
     } else {
      $88 = (($3) + ($80<<2)|0);
      $89 = load4($88);
      $90 = (($$0193$lcssa234235) - ($89))|0;
      $91 = ($90|0)==(0);
      if (!($91)) {
       $92 = ($$0169|0)!=(0);
       $or$cond = $67 & $92;
       $93 = ($90>>>0)<($$5>>>0);
       $or$cond194 = $or$cond & $93;
       $$4183 = $or$cond194 ? $$pre$phiZ2D : $90;
       $$0169$be = 0;$$4183$sink = $$4183;
       break;
      }
      $95 = ($57>>>0)>($$0169>>>0);
      $96 = $95 ? $57 : $$0169;
      $97 = (($1) + ($96)|0);
      $98 = load1($97);
      $99 = ($98<<24>>24)==(0);
      L53: do {
       if (!($99)) {
        $$5184201 = $96;$102 = $98;
        while(1) {
         $100 = (($$0166) + ($$5184201)|0);
         $101 = load1($100);
         $103 = ($102<<24>>24)==($101<<24>>24);
         if (!($103)) {
          break;
         }
         $104 = (($$5184201) + 1)|0;
         $105 = (($1) + ($104)|0);
         $106 = load1($105);
         $107 = ($106<<24>>24)==(0);
         if ($107) {
          break L53;
         } else {
          $$5184201 = $104;$102 = $106;
         }
        }
        $108 = (($$5184201) - ($$2191$$0189))|0;
        $$0169$be = 0;$$4183$sink = $108;
        break L48;
       }
      } while(0);
      if (!($95)) {
       $$3 = $$0166;
       break L34;
      }
      $$6202 = $57;
      while(1) {
       $109 = (($$6202) + -1)|0;
       $111 = (($1) + ($109)|0);
       $112 = load1($111);
       $113 = (($$0166) + ($109)|0);
       $114 = load1($113);
       $115 = ($112<<24>>24)==($114<<24>>24);
       if (!($115)) {
        $$0169$be = $$0168;$$4183$sink = $$5;
        break L48;
       }
       $110 = ($109>>>0)>($$0169>>>0);
       if ($110) {
        $$6202 = $109;
       } else {
        $$3 = $$0166;
        break L34;
       }
      }
     }
    } while(0);
    $94 = (($$0166) + ($$4183$sink)|0);
    $$0166 = $94;$$0169 = $$0169$be;$$0170 = $$3173;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$3|0);
}
function _strspn($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$01924 = 0, $$020 = 0, $$1$lcssa = 0, $$121 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $2 = sp;
 ; store8($2,i64_const(0,0),8); store8($2+8|0,i64_const(0,0),8); store8($2+16|0,i64_const(0,0),8); store8($2+24|0,i64_const(0,0),8);
 $3 = load1($1);
 $4 = ($3<<24>>24)==(0);
 do {
  if ($4) {
   $$0 = 0;
  } else {
   $5 = ((($1)) + 1|0);
   $6 = load1($5);
   $7 = ($6<<24>>24)==(0);
   if ($7) {
    $$020 = $0;
    while(1) {
     $8 = load1($$020);
     $9 = ($8<<24>>24)==($3<<24>>24);
     $10 = ((($$020)) + 1|0);
     if ($9) {
      $$020 = $10;
     } else {
      break;
     }
    }
    $11 = $$020;
    $12 = $0;
    $13 = (($11) - ($12))|0;
    $$0 = $13;
    break;
   }
   $$01924 = $1;$15 = $3;
   while(1) {
    $14 = $15&255;
    $16 = $14 & 31;
    $17 = 1 << $16;
    $18 = $14 >>> 5;
    $19 = (($2) + ($18<<2)|0);
    $20 = load4($19);
    $21 = $20 | $17;
    store4($19,$21);
    $22 = ((($$01924)) + 1|0);
    $23 = load1($22);
    $24 = ($23<<24>>24)==(0);
    if ($24) {
     break;
    } else {
     $$01924 = $22;$15 = $23;
    }
   }
   $25 = load1($0);
   $26 = ($25<<24>>24)==(0);
   L12: do {
    if ($26) {
     $$1$lcssa = $0;
    } else {
     $$121 = $0;$28 = $25;
     while(1) {
      $27 = $28&255;
      $29 = $27 >>> 5;
      $30 = (($2) + ($29<<2)|0);
      $31 = load4($30);
      $32 = $27 & 31;
      $33 = 1 << $32;
      $34 = $31 & $33;
      $35 = ($34|0)==(0);
      if ($35) {
       $$1$lcssa = $$121;
       break L12;
      }
      $36 = ((($$121)) + 1|0);
      $37 = load1($36);
      $38 = ($37<<24>>24)==(0);
      if ($38) {
       $$1$lcssa = $36;
       break;
      } else {
       $$121 = $36;$28 = $37;
      }
     }
    }
   } while(0);
   $39 = $$1$lcssa;
   $40 = $0;
   $41 = (($39) - ($40))|0;
   $$0 = $41;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _getc($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 76|0);
 $2 = load4($1);
 $3 = ($2|0)<(0);
 if ($3) {
  label = 3;
 } else {
  $4 = (___lockfile($0)|0);
  $5 = ($4|0)==(0);
  if ($5) {
   label = 3;
  } else {
   $15 = ((($0)) + 4|0);
   $16 = load4($15);
   $17 = ((($0)) + 8|0);
   $18 = load4($17);
   $19 = ($16>>>0)<($18>>>0);
   if ($19) {
    $20 = ((($16)) + 1|0);
    store4($15,$20);
    $21 = load1($16);
    $22 = $21&255;
    $24 = $22;
   } else {
    $23 = (___uflow($0)|0);
    $24 = $23;
   }
   ___unlockfile($0);
   $$0 = $24;
  }
 }
 do {
  if ((label|0) == 3) {
   $6 = ((($0)) + 4|0);
   $7 = load4($6);
   $8 = ((($0)) + 8|0);
   $9 = load4($8);
   $10 = ($7>>>0)<($9>>>0);
   if ($10) {
    $11 = ((($7)) + 1|0);
    store4($6,$11);
    $12 = load1($7);
    $13 = $12&255;
    $$0 = $13;
    break;
   } else {
    $14 = (___uflow($0)|0);
    $$0 = $14;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function _srand($0) {
 $0 = $0|0;
 var $1 = 0, $2 = i64(), label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -1)|0;
 $2 = i64_zext($1>>>0);
 store8(18384,$2);
 return;
}
function _rand() {
 var $0 = i64(), $1 = i64(), $2 = i64(), $3 = i64(), $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = load8(18384);
 $1 = i64_mul($0,i64_const(1284865837,1481765933));
 $2 = i64_add($1,i64_const(1,0));
 store8(18384,$2);
 $3 = i64_lshr($2,i64_const(33,0));
 $4 = i64_trunc($3);
 return ($4|0);
}
function _clearerr($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 76|0);
 $2 = load4($1);
 $3 = ($2|0)>(-1);
 if ($3) {
  $4 = (___lockfile($0)|0);
  $phitmp = ($4|0)==(0);
  $5 = load4($0);
  $6 = $5 & -49;
  store4($0,$6);
  if (!($phitmp)) {
   ___unlockfile($0);
  }
 } else {
  $7 = load4($0);
  $8 = $7 & -49;
  store4($0,$8);
 }
 return;
}
function _ungetc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $$pr = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(-1);
 do {
  if ($2) {
   $$1 = -1;
  } else {
   $3 = ((($1)) + 76|0);
   $4 = load4($3);
   $5 = ($4|0)>(-1);
   if ($5) {
    $6 = (___lockfile($1)|0);
    $16 = $6;
   } else {
    $16 = 0;
   }
   $7 = ((($1)) + 4|0);
   $8 = load4($7);
   $9 = ($8|0)==(0|0);
   if ($9) {
    (___toread($1)|0);
    $$pr = load4($7);
    $10 = ($$pr|0)==(0|0);
    if (!($10)) {
     $14 = $$pr;
     label = 6;
    }
   } else {
    $14 = $8;
    label = 6;
   }
   if ((label|0) == 6) {
    $11 = ((($1)) + 44|0);
    $12 = load4($11);
    $13 = ((($12)) + -8|0);
    $15 = ($14>>>0)>($13>>>0);
    if ($15) {
     $18 = $0&255;
     $19 = ((($14)) + -1|0);
     store4($7,$19);
     store1($19,$18);
     $20 = load4($1);
     $21 = $20 & -17;
     store4($1,$21);
     $22 = ($16|0)==(0);
     if ($22) {
      $$1 = $0;
      break;
     }
     ___unlockfile($1);
     $$1 = $0;
     break;
    }
   }
   $17 = ($16|0)==(0);
   if ($17) {
    $$1 = -1;
   } else {
    ___unlockfile($1);
    $$1 = -1;
   }
  }
 } while(0);
 return ($$1|0);
}
function ___ftello($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = i64(), $5 = 0, $6 = i64(), $7 = i64(), $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 76|0);
 $2 = load4($1);
 $3 = ($2|0)>(-1);
 if ($3) {
  $5 = (___lockfile($0)|0);
  $phitmp = ($5|0)==(0);
  $6 = (i64(___ftello_unlocked($0)));
  if ($phitmp) {
   $7 = $6;
  } else {
   ___unlockfile($0);
   $7 = $6;
  }
 } else {
  $4 = (i64(___ftello_unlocked($0)));
  $7 = $4;
 }
 return (i64($7));
}
function ___ftello_unlocked($0) {
 $0 = $0|0;
 var $$0 = i64(), $1 = 0, $10 = 0, $11 = 0, $12 = i64(), $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = i64(), $2 = 0, $20 = i64(), $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = i64();
 var $27 = i64(), $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 40|0);
 $2 = load4($1);
 $3 = load4($0);
 $4 = $3 & 128;
 $5 = ($4|0)==(0);
 if ($5) {
  $11 = 1;
 } else {
  $6 = ((($0)) + 20|0);
  $7 = load4($6);
  $8 = ((($0)) + 28|0);
  $9 = load4($8);
  $10 = ($7>>>0)>($9>>>0);
  $phitmp = $10 ? 2 : 1;
  $11 = $phitmp;
 }
 $12 = (i64(FUNCTION_TABLE_jiji[$2 & 1]($0,i64_const(0,0),$11)));
 $13 = i64_slt($12,i64_const(0,0));
 if ($13) {
  $$0 = $12;
 } else {
  $14 = ((($0)) + 8|0);
  $15 = load4($14);
  $16 = ((($0)) + 4|0);
  $17 = load4($16);
  $18 = (($15) - ($17))|0;
  $19 = i64_sext($18);
  $20 = i64_sub($12,$19);
  $21 = ((($0)) + 20|0);
  $22 = load4($21);
  $23 = ((($0)) + 28|0);
  $24 = load4($23);
  $25 = (($22) - ($24))|0;
  $26 = i64_sext($25);
  $27 = i64_add($20,$26);
  $$0 = $27;
 }
 return (i64($$0));
}
function _fputc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 76|0);
 $3 = load4($2);
 $4 = ($3|0)<(0);
 if ($4) {
  label = 3;
 } else {
  $5 = (___lockfile($1)|0);
  $6 = ($5|0)==(0);
  if ($6) {
   label = 3;
  } else {
   $20 = $0&255;
   $21 = $0 & 255;
   $22 = ((($1)) + 75|0);
   $23 = load1($22);
   $24 = $23 << 24 >> 24;
   $25 = ($21|0)==($24|0);
   if ($25) {
    label = 10;
   } else {
    $26 = ((($1)) + 20|0);
    $27 = load4($26);
    $28 = ((($1)) + 16|0);
    $29 = load4($28);
    $30 = ($27>>>0)<($29>>>0);
    if ($30) {
     $31 = ((($27)) + 1|0);
     store4($26,$31);
     store1($27,$20);
     $33 = $21;
    } else {
     label = 10;
    }
   }
   if ((label|0) == 10) {
    $32 = (___overflow($1,$0)|0);
    $33 = $32;
   }
   ___unlockfile($1);
   $$0 = $33;
  }
 }
 do {
  if ((label|0) == 3) {
   $7 = $0&255;
   $8 = $0 & 255;
   $9 = ((($1)) + 75|0);
   $10 = load1($9);
   $11 = $10 << 24 >> 24;
   $12 = ($8|0)==($11|0);
   if (!($12)) {
    $13 = ((($1)) + 20|0);
    $14 = load4($13);
    $15 = ((($1)) + 16|0);
    $16 = load4($15);
    $17 = ($14>>>0)<($16>>>0);
    if ($17) {
     $18 = ((($14)) + 1|0);
     store4($13,$18);
     store1($14,$7);
     $$0 = $8;
     break;
    }
   }
   $19 = (___overflow($1,$0)|0);
   $$0 = $19;
  }
 } while(0);
 return ($$0|0);
}
function _fread($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$0 = 0, $$054 = 0, $$056 = 0, $$15759 = 0, $$160 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = Math_imul($2, $1)|0;
 $5 = ($1|0)==(0);
 $spec$select = $5 ? 0 : $2;
 $6 = ((($3)) + 76|0);
 $7 = load4($6);
 $8 = ($7|0)>(-1);
 if ($8) {
  $9 = (___lockfile($3)|0);
  $36 = $9;
 } else {
  $36 = 0;
 }
 $10 = ((($3)) + 74|0);
 $11 = load1($10);
 $12 = $11 << 24 >> 24;
 $13 = (($12) + 255)|0;
 $14 = $13 | $12;
 $15 = $14&255;
 store1($10,$15);
 $16 = ((($3)) + 8|0);
 $17 = load4($16);
 $18 = ((($3)) + 4|0);
 $19 = load4($18);
 $20 = (($17) - ($19))|0;
 $21 = ($20|0)>(0);
 if ($21) {
  $22 = $19;
  $23 = ($20>>>0)<($4>>>0);
  $$ = $23 ? $20 : $4;
  (_memcpy(($0|0),($22|0),($$|0))|0);
  $24 = load4($18);
  $25 = (($24) + ($$)|0);
  store4($18,$25);
  $26 = (($0) + ($$)|0);
  $27 = (($4) - ($$))|0;
  $$054 = $27;$$056 = $26;
 } else {
  $$054 = $4;$$056 = $0;
 }
 $28 = ($$054|0)==(0);
 L7: do {
  if ($28) {
   label = 13;
  } else {
   $29 = ((($3)) + 32|0);
   $$15759 = $$056;$$160 = $$054;
   while(1) {
    $30 = (___toread($3)|0);
    $31 = ($30|0)==(0);
    if (!($31)) {
     break;
    }
    $32 = load4($29);
    $33 = (FUNCTION_TABLE_iiii[$32 & 15]($3,$$15759,$$160)|0);
    $34 = (($33) + 1)|0;
    $35 = ($34>>>0)<(2);
    if ($35) {
     break;
    }
    $40 = (($$160) - ($33))|0;
    $41 = (($$15759) + ($33)|0);
    $42 = ($40|0)==(0);
    if ($42) {
     label = 13;
     break L7;
    } else {
     $$15759 = $41;$$160 = $40;
    }
   }
   $37 = ($36|0)==(0);
   if (!($37)) {
    ___unlockfile($3);
   }
   $38 = (($4) - ($$160))|0;
   $39 = (($38>>>0) / ($1>>>0))&-1;
   $$0 = $39;
  }
 } while(0);
 if ((label|0) == 13) {
  $43 = ($36|0)==(0);
  if ($43) {
   $$0 = $spec$select;
  } else {
   ___unlockfile($3);
   $$0 = $spec$select;
  }
 }
 return ($$0|0);
}
function _freopen($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $3 = (___fmodeflags($1)|0);
 $4 = ((($2)) + 76|0);
 $5 = load4($4);
 $6 = ($5|0)>(-1);
 if ($6) {
  $7 = (___lockfile($2)|0);
  $43 = $7;
 } else {
  $43 = 0;
 }
 (_fflush($2)|0);
 $8 = ($0|0)==(0|0);
 do {
  if ($8) {
   $9 = $3 & 524288;
   $10 = ($9|0)==(0);
   $$pre = ((($2)) + 60|0);
   if (!($10)) {
    $11 = load4($$pre);
    store4($vararg_buffer,$11);
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    store4($vararg_ptr1,2);
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    store4($vararg_ptr2,1);
    (___syscall221(221,($vararg_buffer|0))|0);
   }
   $12 = $3 & -524481;
   $13 = load4($$pre);
   store4($vararg_buffer3,$13);
   $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
   store4($vararg_ptr6,4);
   $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
   store4($vararg_ptr7,$12);
   $14 = (___syscall221(221,($vararg_buffer3|0))|0);
   $15 = (___syscall_ret($14)|0);
   $16 = ($15|0)<(0);
   if ($16) {
    label = 15;
   } else {
    label = 12;
   }
  } else {
   $17 = (_fopen($0,$1)|0);
   $18 = ($17|0)==(0|0);
   if ($18) {
    label = 15;
   } else {
    $19 = ((($17)) + 60|0);
    $20 = load4($19);
    $21 = ((($2)) + 60|0);
    $22 = load4($21);
    $23 = ($20|0)==($22|0);
    if ($23) {
     store4($19,-1);
    } else {
     $24 = $3 & 524288;
     $25 = (___dup3($20,$22,$24)|0);
     $26 = ($25|0)<(0);
     if ($26) {
      (_fclose($17)|0);
      label = 15;
      break;
     }
    }
    $27 = load4($2);
    $28 = $27 & 1;
    $29 = load4($17);
    $30 = $28 | $29;
    store4($2,$30);
    $31 = ((($17)) + 32|0);
    $32 = load4($31);
    $33 = ((($2)) + 32|0);
    store4($33,$32);
    $34 = ((($17)) + 36|0);
    $35 = load4($34);
    $36 = ((($2)) + 36|0);
    store4($36,$35);
    $37 = ((($17)) + 40|0);
    $38 = load4($37);
    $39 = ((($2)) + 40|0);
    store4($39,$38);
    $40 = ((($17)) + 12|0);
    $41 = load4($40);
    $42 = ((($2)) + 12|0);
    store4($42,$41);
    (_fclose($17)|0);
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 12) {
  $44 = ($43|0)==(0);
  if ($44) {
   $$0 = $2;
  } else {
   ___unlockfile($2);
   $$0 = $2;
  }
 }
 else if ((label|0) == 15) {
  (_fclose($2)|0);
  $$0 = 0;
 }
 STACKTOP = sp;return ($$0|0);
}
function ___dup3($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$sink = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $3 = ($0|0)==($1|0);
 L1: do {
  if ($3) {
   $$sink = -22;
  } else {
   $4 = $2 & 524288;
   $5 = ($4|0)!=(0);
   L3: do {
    if ($5) {
     while(1) {
      store4($vararg_buffer,$0);
      $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
      store4($vararg_ptr1,$1);
      $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
      store4($vararg_ptr2,$2);
      $6 = (___syscall330(330,($vararg_buffer|0))|0);
      switch ($6|0) {
      case -38:  {
       break L3;
       break;
      }
      case -16:  {
       break;
      }
      default: {
       $$sink = $6;
       break L1;
      }
      }
     }
    }
   } while(0);
   while(1) {
    store4($vararg_buffer3,$0);
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    store4($vararg_ptr6,$1);
    $7 = (___syscall63(63,($vararg_buffer3|0))|0);
    $8 = ($7|0)==(-16);
    if (!($8)) {
     break;
    }
   }
   if ($5) {
    store4($vararg_buffer7,$1);
    $vararg_ptr10 = ((($vararg_buffer7)) + 4|0);
    store4($vararg_ptr10,2);
    $vararg_ptr11 = ((($vararg_buffer7)) + 8|0);
    store4($vararg_ptr11,1);
    (___syscall221(221,($vararg_buffer7|0))|0);
    $$sink = $7;
   } else {
    $$sink = $7;
   }
  }
 } while(0);
 $9 = (___syscall_ret($$sink)|0);
 STACKTOP = sp;return ($9|0);
}
function _ftell($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = i64(), $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (i64(___ftello($0)));
 $2 = i64_sgt($1,i64_const(2147483647,0));
 if ($2) {
  $3 = (___errno_location()|0);
  store4($3,75);
  $$0 = -1;
 } else {
  $4 = i64_trunc($1);
  $$0 = $4;
 }
 return ($$0|0);
}
function _remove($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = $0;
 store4($vararg_buffer,$1);
 $2 = (___syscall10(10,($vararg_buffer|0))|0);
 $3 = ($2|0)==(-21);
 if ($3) {
  store4($vararg_buffer1,$1);
  $4 = (___syscall40(40,($vararg_buffer1|0))|0);
  $$0 = $4;
 } else {
  $$0 = $2;
 }
 $5 = (___syscall_ret($$0)|0);
 STACKTOP = sp;return ($5|0);
}
function _rename($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = $0;
 $3 = $1;
 store4($vararg_buffer,$2);
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 store4($vararg_ptr1,$3);
 $4 = (___syscall38(38,($vararg_buffer|0))|0);
 $5 = (___syscall_ret($4)|0);
 STACKTOP = sp;return ($5|0);
}
function _setvbuf($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 75|0);
 store1($4,-1);
 switch ($2|0) {
 case 2:  {
  $5 = ((($0)) + 48|0);
  store4($5,0);
  break;
 }
 case 1:  {
  store1($4,10);
  break;
 }
 default: {
 }
 }
 $6 = load4($0);
 $7 = $6 | 64;
 store4($0,$7);
 return 0;
}
function ___randname($0) {
 $0 = $0|0;
 var $$01112 = 0, $$013 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 (___clock_gettime(0,($1|0))|0);
 $2 = ((($1)) + 4|0);
 $3 = load4($2);
 $4 = ($3*65537)|0;
 $5 = $1;
 $6 = $5 >>> 4;
 $7 = $0;
 $8 = (($6) + ($7))|0;
 $9 = $4 ^ $8;
 $$01112 = 0;$$013 = $9;
 while(1) {
  $10 = $$013 & 15;
  $11 = (($10) + 65)|0;
  $12 = $$013 << 1;
  $13 = $12 & 32;
  $14 = $11 | $13;
  $15 = $14&255;
  $16 = (($0) + ($$01112)|0);
  store1($16,$15);
  $17 = (($$01112) + 1)|0;
  $18 = $$013 >>> 5;
  $exitcond = ($17|0)==(6);
  if ($exitcond) {
   break;
  } else {
   $$01112 = $17;$$013 = $18;
  }
 }
 STACKTOP = sp;return ($0|0);
}
function _tmpfile() {
 var $$012 = 0, $$014 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_buffer6 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $vararg_buffer6 = sp + 48|0;
 $vararg_buffer3 = sp + 40|0;
 $vararg_buffer = sp + 24|0;
 $0 = sp;
 ; store8($0,load8(6512,8),8); store8($0+8 | 0,load8(6512+8 | 0,8),8); store4($0+16 | 0,load4(6512+16 | 0,4),4);
 $1 = ((($0)) + 13|0);
 $2 = $0;
 $$014 = 0;
 while(1) {
  (___randname($1)|0);
  store4($vararg_buffer,$2);
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  store4($vararg_ptr1,32962);
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  store4($vararg_ptr2,384);
  $5 = (___syscall5(5,($vararg_buffer|0))|0);
  $6 = (___syscall_ret($5)|0);
  $7 = ($6|0)>(-1);
  $3 = (($$014) + 1)|0;
  if ($7) {
   label = 4;
   break;
  }
  $4 = ($3>>>0)<(100);
  if ($4) {
   $$014 = $3;
  } else {
   $$012 = 0;
   break;
  }
 }
 if ((label|0) == 4) {
  store4($vararg_buffer3,$2);
  (___syscall10(10,($vararg_buffer3|0))|0);
  $8 = (___fdopen($6,16116)|0);
  $9 = ($8|0)==(0|0);
  if ($9) {
   store4($vararg_buffer6,$6);
   (___syscall6(6,($vararg_buffer6|0))|0);
   $$012 = 0;
  } else {
   $$012 = $8;
  }
 }
 STACKTOP = sp;return ($$012|0);
}
function _tmpnam($0) {
 $0 = $0|0;
 var $$0 = 0, $$089 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $vararg_buffer = sp + 112|0;
 $1 = sp;
 $2 = sp + 24|0;
 ; store8($1,load8(6544,8),8); store8($1+8 | 0,load8(6544+8 | 0,8),8); store2($1+16 | 0,load2(6544+16 | 0,2),2); store1($1+18 | 0,load1(6544+18 | 0,1),1);
 $3 = ((($1)) + 12|0);
 $4 = $1;
 $5 = $2;
 $$089 = 0;
 while(1) {
  (___randname($3)|0);
  ; store8($2,i64_const(0,0),8); store8($2+8|0,i64_const(0,0),8); store8($2+16|0,i64_const(0,0),8); store8($2+24|0,i64_const(0,0),8); store8($2+32|0,i64_const(0,0),8); store8($2+40|0,i64_const(0,0),8); store8($2+48|0,i64_const(0,0),8); store8($2+56|0,i64_const(0,0),8); store8($2+64|0,i64_const(0,0),8); store8($2+72|0,i64_const(0,0),8); store8($2+80|0,i64_const(0,0),8);
  store4($vararg_buffer,$4);
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  store4($vararg_ptr1,$5);
  $8 = (___syscall196(196,($vararg_buffer|0))|0);
  $9 = ($8|0)==(-2);
  $6 = (($$089) + 1)|0;
  if ($9) {
   label = 4;
   break;
  }
  $7 = ($6>>>0)<(100);
  if ($7) {
   $$089 = $6;
  } else {
   $$0 = 0;
   break;
  }
 }
 if ((label|0) == 4) {
  $10 = ($0|0)==(0|0);
  $11 = $10 ? 18304 : $0;
  $12 = (_strcpy($11,$1)|0);
  $$0 = $11;
 }
 STACKTOP = sp;return ($$0|0);
}
function _strtod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_strtox($0,$1,1));
 return (+$2);
}
function _strtox($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = i64(), $11 = 0, $12 = 0, $13 = 0, $14 = i64(), $15 = i64(), $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $3 = sp;
 _memset(($3|0),0,144)|0;
 $4 = ((($3)) + 4|0);
 store4($4,$0);
 $5 = ((($3)) + 8|0);
 store4($5,(-1));
 $6 = ((($3)) + 44|0);
 store4($6,$0);
 $7 = ((($3)) + 76|0);
 store4($7,-1);
 ___shlim($3,i64_const(0,0));
 $8 = (+___floatscan($3,$2,1));
 $9 = ((($3)) + 120|0);
 $10 = load8($9);
 $11 = load4($4);
 $12 = load4($5);
 $13 = (($11) - ($12))|0;
 $14 = i64_sext($13);
 $15 = i64_add($10,$14);
 $16 = ($1|0)==(0|0);
 if (!($16)) {
  $17 = i64_eq($15,i64_const(0,0));
  $18 = i64_trunc($15);
  $19 = (($0) + ($18)|0);
  $20 = $17 ? $0 : $19;
  store4($1,$20);
 }
 STACKTOP = sp;return (+$8);
}
function _strcspn($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$01823 = 0, $$019$lcssa$sink = 0, $$01920 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $2 = sp;
 $3 = load1($1);
 $4 = ($3<<24>>24)==(0);
 L1: do {
  if ($4) {
   label = 3;
  } else {
   $5 = ((($1)) + 1|0);
   $6 = load1($5);
   $7 = ($6<<24>>24)==(0);
   if ($7) {
    label = 3;
   } else {
    (_memset(($2|0),0,32)|0);
    $10 = load1($1);
    $11 = ($10<<24>>24)==(0);
    if (!($11)) {
     $$01823 = $1;$13 = $10;
     while(1) {
      $12 = $13&255;
      $14 = $12 & 31;
      $15 = 1 << $14;
      $16 = $12 >>> 5;
      $17 = (($2) + ($16<<2)|0);
      $18 = load4($17);
      $19 = $18 | $15;
      store4($17,$19);
      $20 = ((($$01823)) + 1|0);
      $21 = load1($20);
      $22 = ($21<<24>>24)==(0);
      if ($22) {
       break;
      } else {
       $$01823 = $20;$13 = $21;
      }
     }
    }
    $23 = load1($0);
    $24 = ($23<<24>>24)==(0);
    if ($24) {
     $$019$lcssa$sink = $0;
    } else {
     $$01920 = $0;$26 = $23;
     while(1) {
      $25 = $26&255;
      $27 = $25 >>> 5;
      $28 = (($2) + ($27<<2)|0);
      $29 = load4($28);
      $30 = $25 & 31;
      $31 = 1 << $30;
      $32 = $29 & $31;
      $33 = ($32|0)==(0);
      if (!($33)) {
       $$019$lcssa$sink = $$01920;
       break L1;
      }
      $34 = ((($$01920)) + 1|0);
      $35 = load1($34);
      $36 = ($35<<24>>24)==(0);
      if ($36) {
       $$019$lcssa$sink = $34;
       break;
      } else {
       $$01920 = $34;$26 = $35;
      }
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $8 = $3 << 24 >> 24;
  $9 = (___strchrnul($0,$8)|0);
  $$019$lcssa$sink = $9;
 }
 $37 = $$019$lcssa$sink;
 $38 = $0;
 $39 = (($37) - ($38))|0;
 STACKTOP = sp;return ($39|0);
}
function _strpbrk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strcspn($0,$1)|0);
 $3 = (($0) + ($2)|0);
 $4 = load1($3);
 $5 = ($4<<24>>24)==(0);
 $6 = $5 ? 0 : $3;
 return ($6|0);
}
function _cos($0) {
 $0 = +$0;
 var $$0 = 0.0, $1 = 0, $10 = 0.0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0, $18 = 0.0, $19 = 0.0, $2 = i64(), $20 = 0.0, $21 = 0.0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0;
 var $27 = 0, $28 = 0.0, $29 = 0.0, $3 = i64(), $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = i64_bc2i($0);
 $3 = i64_lshr($2,i64_const(32,0));
 $4 = i64_trunc($3);
 $5 = $4 & 2147483647;
 $6 = ($5>>>0)<(1072243196);
 L1: do {
  if ($6) {
   $7 = ($5>>>0)<(1044816030);
   if ($7) {
    $$0 = 1.0;
   } else {
    $8 = (+___cos($0,0.0));
    $$0 = $8;
   }
  } else {
   $9 = ($5>>>0)>(2146435071);
   if ($9) {
    $10 = $0 - $0;
    $$0 = $10;
    break;
   }
   $11 = (___rem_pio2($0,$1)|0);
   $trunc = $11&255;
   $trunc$clear = $trunc & 3;
   switch ($trunc$clear<<24>>24) {
   case 0:  {
    $12 = loadd($1);
    $13 = ((($1)) + 8|0);
    $14 = loadd($13);
    $15 = (+___cos($12,$14));
    $$0 = $15;
    break L1;
    break;
   }
   case 1:  {
    $16 = loadd($1);
    $17 = ((($1)) + 8|0);
    $18 = loadd($17);
    $19 = (+___sin($16,$18,1));
    $20 = - $19;
    $$0 = $20;
    break L1;
    break;
   }
   case 2:  {
    $21 = loadd($1);
    $22 = ((($1)) + 8|0);
    $23 = loadd($22);
    $24 = (+___cos($21,$23));
    $25 = - $24;
    $$0 = $25;
    break L1;
    break;
   }
   default: {
    $26 = loadd($1);
    $27 = ((($1)) + 8|0);
    $28 = loadd($27);
    $29 = (+___sin($26,$28,1));
    $$0 = $29;
    break L1;
   }
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function _sin($0) {
 $0 = +$0;
 var $$0 = 0.0, $1 = 0, $10 = 0.0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0, $18 = 0.0, $19 = 0.0, $2 = i64(), $20 = 0.0, $21 = 0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0;
 var $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = i64(), $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = i64_bc2i($0);
 $3 = i64_lshr($2,i64_const(32,0));
 $4 = i64_trunc($3);
 $5 = $4 & 2147483647;
 $6 = ($5>>>0)<(1072243196);
 L1: do {
  if ($6) {
   $7 = ($5>>>0)<(1045430272);
   if ($7) {
    $$0 = $0;
   } else {
    $8 = (+___sin($0,0.0,0));
    $$0 = $8;
   }
  } else {
   $9 = ($5>>>0)>(2146435071);
   if ($9) {
    $10 = $0 - $0;
    $$0 = $10;
    break;
   }
   $11 = (___rem_pio2($0,$1)|0);
   $trunc = $11&255;
   $trunc$clear = $trunc & 3;
   switch ($trunc$clear<<24>>24) {
   case 0:  {
    $12 = loadd($1);
    $13 = ((($1)) + 8|0);
    $14 = loadd($13);
    $15 = (+___sin($12,$14,1));
    $$0 = $15;
    break L1;
    break;
   }
   case 1:  {
    $16 = loadd($1);
    $17 = ((($1)) + 8|0);
    $18 = loadd($17);
    $19 = (+___cos($16,$18));
    $$0 = $19;
    break L1;
    break;
   }
   case 2:  {
    $20 = loadd($1);
    $21 = ((($1)) + 8|0);
    $22 = loadd($21);
    $23 = (+___sin($20,$22,1));
    $24 = - $23;
    $$0 = $24;
    break L1;
    break;
   }
   default: {
    $25 = loadd($1);
    $26 = ((($1)) + 8|0);
    $27 = loadd($26);
    $28 = (+___cos($25,$27));
    $29 = - $28;
    $$0 = $29;
    break L1;
   }
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function _tan($0) {
 $0 = +$0;
 var $$0 = 0.0, $1 = 0, $10 = 0.0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0.0, $2 = i64(), $3 = i64(), $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = i64_bc2i($0);
 $3 = i64_lshr($2,i64_const(32,0));
 $4 = i64_trunc($3);
 $5 = $4 & 2147483647;
 $6 = ($5>>>0)<(1072243196);
 do {
  if ($6) {
   $7 = ($5>>>0)<(1044381696);
   if ($7) {
    $$0 = $0;
   } else {
    $8 = (+___tan($0,0.0,0));
    $$0 = $8;
   }
  } else {
   $9 = ($5>>>0)>(2146435071);
   if ($9) {
    $10 = $0 - $0;
    $$0 = $10;
    break;
   } else {
    $11 = (___rem_pio2($0,$1)|0);
    $12 = loadd($1);
    $13 = ((($1)) + 8|0);
    $14 = loadd($13);
    $15 = $11 & 1;
    $16 = (+___tan($12,$14,$15));
    $$0 = $16;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function _acos($0) {
 $0 = +$0;
 var $$ = 0.0, $$1 = 0.0, $1 = i64(), $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = i64(), $20 = 0.0, $21 = 0.0, $22 = 0.0;
 var $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0;
 var $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0;
 var $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0.0, $72 = i64(), $73 = i64(), $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0;
 var $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0.0, $95 = 0.0;
 var $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = i64_bc2i($0);
 $2 = i64_lshr($1,i64_const(32,0));
 $3 = i64_trunc($2);
 $4 = $3 & 2147483647;
 $5 = ($4>>>0)>(1072693247);
 if ($5) {
  $6 = i64_trunc($1);
  $7 = (($4) + -1072693248)|0;
  $8 = $7 | $6;
  $9 = ($8|0)==(0);
  if ($9) {
   $10 = i64_slt($1,i64_const(0,0));
   $$ = $10 ? 3.1415926535897931 : 0.0;
   $$1 = $$;
   return (+$$1);
  } else {
   $11 = $0 - $0;
   $12 = 0.0 / $11;
   $$1 = $12;
   return (+$$1);
  }
 }
 $13 = ($4>>>0)<(1071644672);
 if ($13) {
  $14 = ($4>>>0)<(1012924417);
  if ($14) {
   $$1 = 1.5707963267948966;
   return (+$$1);
  }
  $15 = $0 * $0;
  $16 = $15 * 3.4793310759602117E-5;
  $17 = $16 + 7.9153499428981453E-4;
  $18 = $15 * $17;
  $19 = $18 + -0.040055534500679411;
  $20 = $15 * $19;
  $21 = $20 + 0.20121253213486293;
  $22 = $15 * $21;
  $23 = $22 + -0.32556581862240092;
  $24 = $15 * $23;
  $25 = $24 + 0.16666666666666666;
  $26 = $15 * $25;
  $27 = $15 * 0.077038150555901935;
  $28 = $27 + -0.68828397160545329;
  $29 = $15 * $28;
  $30 = $29 + 2.0209457602335057;
  $31 = $15 * $30;
  $32 = $31 + -2.4033949117344142;
  $33 = $15 * $32;
  $34 = $33 + 1.0;
  $35 = $26 / $34;
  $36 = $35 * $0;
  $37 = 6.123233995736766E-17 - $36;
  $38 = $0 - $37;
  $39 = 1.5707963267948966 - $38;
  $$1 = $39;
  return (+$$1);
 }
 $40 = i64_slt($1,i64_const(0,0));
 if ($40) {
  $41 = $0 + 1.0;
  $42 = $41 * 0.5;
  $43 = (+Math_sqrt((+$42)));
  $44 = $42 * 3.4793310759602117E-5;
  $45 = $44 + 7.9153499428981453E-4;
  $46 = $42 * $45;
  $47 = $46 + -0.040055534500679411;
  $48 = $42 * $47;
  $49 = $48 + 0.20121253213486293;
  $50 = $42 * $49;
  $51 = $50 + -0.32556581862240092;
  $52 = $42 * $51;
  $53 = $52 + 0.16666666666666666;
  $54 = $42 * $53;
  $55 = $42 * 0.077038150555901935;
  $56 = $55 + -0.68828397160545329;
  $57 = $42 * $56;
  $58 = $57 + 2.0209457602335057;
  $59 = $42 * $58;
  $60 = $59 + -2.4033949117344142;
  $61 = $42 * $60;
  $62 = $61 + 1.0;
  $63 = $54 / $62;
  $64 = $63 * $43;
  $65 = $64 + -6.123233995736766E-17;
  $66 = $43 + $65;
  $67 = 1.5707963267948966 - $66;
  $68 = $67 * 2.0;
  $$1 = $68;
  return (+$$1);
 } else {
  $69 = 1.0 - $0;
  $70 = $69 * 0.5;
  $71 = (+Math_sqrt((+$70)));
  $72 = i64_bc2i($71);
  $73 = i64_and($72,i64_const(0,4294967295));
  $74 = i64_bc2d($73);
  $75 = $74 * $74;
  $76 = $70 - $75;
  $77 = $71 + $74;
  $78 = $76 / $77;
  $79 = $70 * 3.4793310759602117E-5;
  $80 = $79 + 7.9153499428981453E-4;
  $81 = $70 * $80;
  $82 = $81 + -0.040055534500679411;
  $83 = $70 * $82;
  $84 = $83 + 0.20121253213486293;
  $85 = $70 * $84;
  $86 = $85 + -0.32556581862240092;
  $87 = $70 * $86;
  $88 = $87 + 0.16666666666666666;
  $89 = $70 * $88;
  $90 = $70 * 0.077038150555901935;
  $91 = $90 + -0.68828397160545329;
  $92 = $70 * $91;
  $93 = $92 + 2.0209457602335057;
  $94 = $70 * $93;
  $95 = $94 + -2.4033949117344142;
  $96 = $70 * $95;
  $97 = $96 + 1.0;
  $98 = $89 / $97;
  $99 = $98 * $71;
  $100 = $99 + $78;
  $101 = $100 + $74;
  $102 = $101 * 2.0;
  $$1 = $102;
  return (+$$1);
 }
 return +(0.0);
}
function _asin($0) {
 $0 = +$0;
 var $$057 = 0.0, $$1 = 0.0, $$off = 0, $1 = i64(), $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = i64(), $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0;
 var $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0;
 var $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0.0;
 var $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = i64(), $7 = 0, $70 = i64(), $71 = 0.0, $72 = 0.0, $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0;
 var $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0, $86 = 0.0, $9 = 0, $spec$select = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = i64_bc2i($0);
 $2 = i64_lshr($1,i64_const(32,0));
 $3 = i64_trunc($2);
 $4 = $3 & 2147483647;
 $5 = ($4>>>0)>(1072693247);
 if ($5) {
  $6 = i64_trunc($1);
  $7 = (($4) + -1072693248)|0;
  $8 = $7 | $6;
  $9 = ($8|0)==(0);
  if ($9) {
   $10 = $0 * 1.5707963267948966;
   $11 = $10 + 7.5231638452626401E-37;
   $$1 = $11;
   return (+$$1);
  } else {
   $12 = $0 - $0;
   $13 = 0.0 / $12;
   $$1 = $13;
   return (+$$1);
  }
 }
 $14 = ($4>>>0)<(1071644672);
 if ($14) {
  $$off = (($4) + -1048576)|0;
  $15 = ($$off>>>0)<(1044381696);
  if ($15) {
   $$1 = $0;
   return (+$$1);
  }
  $16 = $0 * $0;
  $17 = $16 * 3.4793310759602117E-5;
  $18 = $17 + 7.9153499428981453E-4;
  $19 = $16 * $18;
  $20 = $19 + -0.040055534500679411;
  $21 = $16 * $20;
  $22 = $21 + 0.20121253213486293;
  $23 = $16 * $22;
  $24 = $23 + -0.32556581862240092;
  $25 = $16 * $24;
  $26 = $25 + 0.16666666666666666;
  $27 = $16 * $26;
  $28 = $16 * 0.077038150555901935;
  $29 = $28 + -0.68828397160545329;
  $30 = $16 * $29;
  $31 = $30 + 2.0209457602335057;
  $32 = $16 * $31;
  $33 = $32 + -2.4033949117344142;
  $34 = $16 * $33;
  $35 = $34 + 1.0;
  $36 = $27 / $35;
  $37 = $36 * $0;
  $38 = $37 + $0;
  $$1 = $38;
  return (+$$1);
 }
 $39 = (+Math_abs((+$0)));
 $40 = 1.0 - $39;
 $41 = $40 * 0.5;
 $42 = (+Math_sqrt((+$41)));
 $43 = $41 * 3.4793310759602117E-5;
 $44 = $43 + 7.9153499428981453E-4;
 $45 = $41 * $44;
 $46 = $45 + -0.040055534500679411;
 $47 = $41 * $46;
 $48 = $47 + 0.20121253213486293;
 $49 = $41 * $48;
 $50 = $49 + -0.32556581862240092;
 $51 = $41 * $50;
 $52 = $51 + 0.16666666666666666;
 $53 = $41 * $52;
 $54 = $41 * 0.077038150555901935;
 $55 = $54 + -0.68828397160545329;
 $56 = $41 * $55;
 $57 = $56 + 2.0209457602335057;
 $58 = $41 * $57;
 $59 = $58 + -2.4033949117344142;
 $60 = $41 * $59;
 $61 = $60 + 1.0;
 $62 = $53 / $61;
 $63 = ($4>>>0)>(1072640818);
 if ($63) {
  $64 = $42 * $62;
  $65 = $42 + $64;
  $66 = $65 * 2.0;
  $67 = $66 + -6.123233995736766E-17;
  $68 = 1.5707963267948966 - $67;
  $$057 = $68;
  $85 = i64_slt($1,i64_const(0,0));
  $86 = - $$057;
  $spec$select = $85 ? $86 : $$057;
  return (+$spec$select);
 } else {
  $69 = i64_bc2i($42);
  $70 = i64_and($69,i64_const(0,4294967295));
  $71 = i64_bc2d($70);
  $72 = $71 * $71;
  $73 = $41 - $72;
  $74 = $42 + $71;
  $75 = $73 / $74;
  $76 = $42 * 2.0;
  $77 = $76 * $62;
  $78 = $75 * 2.0;
  $79 = 6.123233995736766E-17 - $78;
  $80 = $77 - $79;
  $81 = $71 * 2.0;
  $82 = 0.78539816339744828 - $81;
  $83 = $80 - $82;
  $84 = 0.78539816339744828 - $83;
  $$057 = $84;
  $85 = i64_slt($1,i64_const(0,0));
  $86 = - $$057;
  $spec$select = $85 ? $86 : $$057;
  return (+$spec$select);
 }
 return +(0.0);
}
function _atan($0) {
 $0 = +$0;
 var $$0 = 0.0, $$064 = 0, $$065 = 0.0, $1 = i64(), $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = i64(), $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0;
 var $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = i64(), $40 = 0.0, $41 = 0.0, $42 = 0.0;
 var $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0;
 var $61 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0, $66 = 0.0, $67 = 0.0, $7 = 0, $8 = i64(), $9 = 0, $spec$select = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = i64_bc2i($0);
 $2 = i64_lshr($1,i64_const(32,0));
 $3 = i64_trunc($2);
 $4 = i64_lshr($1,i64_const(63,0));
 $5 = i64_trunc($4);
 $6 = $3 & 2147483647;
 $7 = ($6>>>0)>(1141899263);
 if ($7) {
  $8 = i64_and($1,i64_const(4294967295,2147483647));
  $9 = i64_ugt($8,i64_const(0,2146435072));
  $10 = ($5|0)==(0);
  $11 = $10 ? 1.5707963267948966 : -1.5707963267948966;
  $spec$select = $9 ? $0 : $11;
  return (+$spec$select);
 }
 $12 = ($6>>>0)<(1071382528);
 do {
  if ($12) {
   $13 = ($6>>>0)<(1044381696);
   if ($13) {
    $$0 = $0;
    return (+$$0);
   } else {
    $$064 = -1;$$065 = $0;
   }
  } else {
   $14 = (+Math_abs((+$0)));
   $15 = ($6>>>0)<(1072889856);
   if ($15) {
    $16 = ($6>>>0)<(1072037888);
    if ($16) {
     $17 = $14 * 2.0;
     $18 = $17 + -1.0;
     $19 = $14 + 2.0;
     $20 = $18 / $19;
     $$064 = 0;$$065 = $20;
     break;
    } else {
     $21 = $14 + -1.0;
     $22 = $14 + 1.0;
     $23 = $21 / $22;
     $$064 = 1;$$065 = $23;
     break;
    }
   } else {
    $24 = ($6>>>0)<(1073971200);
    if ($24) {
     $25 = $14 + -1.5;
     $26 = $14 * 1.5;
     $27 = $26 + 1.0;
     $28 = $25 / $27;
     $$064 = 2;$$065 = $28;
     break;
    } else {
     $29 = -1.0 / $14;
     $$064 = 3;$$065 = $29;
     break;
    }
   }
  }
 } while(0);
 $30 = $$065 * $$065;
 $31 = $30 * $30;
 $32 = $31 * 0.016285820115365782;
 $33 = $32 + 0.049768779946159324;
 $34 = $31 * $33;
 $35 = $34 + 0.066610731373875312;
 $36 = $31 * $35;
 $37 = $36 + 0.090908871334365065;
 $38 = $31 * $37;
 $39 = $38 + 0.14285714272503466;
 $40 = $31 * $39;
 $41 = $40 + 0.33333333333332932;
 $42 = $30 * $41;
 $43 = $31 * 0.036531572744216916;
 $44 = -0.058335701337905735 - $43;
 $45 = $31 * $44;
 $46 = $45 + -0.0769187620504483;
 $47 = $31 * $46;
 $48 = $47 + -0.11111110405462356;
 $49 = $31 * $48;
 $50 = $49 + -0.19999999999876483;
 $51 = $31 * $50;
 $52 = ($$064|0)<(0);
 if ($52) {
  $53 = $51 + $42;
  $54 = $$065 * $53;
  $55 = $$065 - $54;
  $$0 = $55;
  return (+$$0);
 } else {
  $56 = (6576 + ($$064<<3)|0);
  $57 = loadd($56);
  $58 = $51 + $42;
  $59 = $$065 * $58;
  $60 = (6608 + ($$064<<3)|0);
  $61 = loadd($60);
  $62 = $59 - $61;
  $63 = $62 - $$065;
  $64 = $57 - $63;
  $65 = ($5|0)==(0);
  $66 = - $64;
  $67 = $65 ? $64 : $66;
  $$0 = $67;
  return (+$$0);
 }
 return +(0.0);
}
function _atan2($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $$0 = 0.0, $$053 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0.0, $16 = i64(), $17 = 0, $18 = 0, $19 = i64(), $2 = i64(), $20 = 0, $21 = i64(), $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = i64(), $30 = 0, $31 = 0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0.0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0.0;
 var $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = i64(), $50 = 0.0, $6 = i64(), $7 = 0, $8 = 0.0, $9 = i64(), $or$cond = 0, $or$cond59 = 0, $trunc = 0, $trunc$clear = 0, $trunc55 = 0, $trunc55$clear = 0, $trunc55$clear1 = 0, $trunc56 = 0, $trunc56$clear = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = i64_bc2i($1);
 $3 = i64_and($2,i64_const(4294967295,2147483647));
 $4 = i64_ugt($3,i64_const(0,2146435072));
 if (!($4)) {
  $5 = i64_bc2i($0);
  $6 = i64_and($5,i64_const(4294967295,2147483647));
  $7 = i64_ugt($6,i64_const(0,2146435072));
  if (!($7)) {
   $9 = i64_lshr($2,i64_const(32,0));
   $10 = i64_trunc($9);
   $11 = i64_trunc($2);
   $12 = (($10) + -1072693248)|0;
   $13 = $12 | $11;
   $14 = ($13|0)==(0);
   if ($14) {
    $15 = (+_atan($0));
    $$0 = $15;
    return (+$$0);
   }
   $16 = i64_lshr($5,i64_const(32,0));
   $17 = i64_trunc($16);
   $18 = i64_trunc($5);
   $19 = i64_lshr($5,i64_const(63,0));
   $20 = i64_trunc($19);
   $21 = i64_lshr($2,i64_const(62,0));
   $22 = i64_trunc($21);
   $23 = $22 & 2;
   $24 = $23 | $20;
   $25 = $10 & 2147483647;
   $26 = $17 & 2147483647;
   $27 = $26 | $18;
   $28 = ($27|0)==(0);
   if ($28) {
    $trunc56 = $24&255;
    $trunc56$clear = $trunc56 & 3;
    switch ($trunc56$clear<<24>>24) {
    case 2:  {
     $$0 = 3.1415926535897931;
     return (+$$0);
     break;
    }
    case 3:  {
     $$0 = -3.1415926535897931;
     return (+$$0);
     break;
    }
    case 1: case 0:  {
     $$0 = $0;
     return (+$$0);
     break;
    }
    default: {
     // unreachable;
    }
    }
   }
   $29 = $25 | $11;
   $30 = ($29|0)==(0);
   if ($30) {
    $31 = ($20|0)==(0);
    $32 = $31 ? 1.5707963267948966 : -1.5707963267948966;
    $$0 = $32;
    return (+$$0);
   }
   $33 = ($25|0)==(2146435072);
   if (!($33)) {
    $35 = (($25) + 67108864)|0;
    $36 = ($35>>>0)<($26>>>0);
    $37 = ($26|0)==(2146435072);
    $or$cond = $37 | $36;
    if ($or$cond) {
     $38 = ($20|0)==(0);
     $39 = $38 ? 1.5707963267948966 : -1.5707963267948966;
     $$0 = $39;
     return (+$$0);
    }
    $40 = ($23|0)!=(0);
    $41 = (($26) + 67108864)|0;
    $42 = ($41>>>0)<($25>>>0);
    $or$cond59 = $40 & $42;
    if ($or$cond59) {
     $$053 = 0.0;
    } else {
     $43 = $0 / $1;
     $44 = (+Math_abs((+$43)));
     $45 = (+_atan($44));
     $$053 = $45;
    }
    $trunc = $24&255;
    $trunc$clear = $trunc & 3;
    switch ($trunc$clear<<24>>24) {
    case 1:  {
     $46 = - $$053;
     $$0 = $46;
     return (+$$0);
     break;
    }
    case 2:  {
     $47 = $$053 + -1.2246467991473532E-16;
     $48 = 3.1415926535897931 - $47;
     $$0 = $48;
     return (+$$0);
     break;
    }
    case 0:  {
     $$0 = $$053;
     return (+$$0);
     break;
    }
    default: {
     $49 = $$053 + -1.2246467991473532E-16;
     $50 = $49 + -3.1415926535897931;
     $$0 = $50;
     return (+$$0);
    }
    }
   }
   $34 = ($26|0)==(2146435072);
   $trunc55 = $24&255;
   if ($34) {
    $trunc55$clear = $trunc55 & 3;
    switch ($trunc55$clear<<24>>24) {
    case 1:  {
     $$0 = -0.78539816339744828;
     return (+$$0);
     break;
    }
    case 2:  {
     $$0 = 2.3561944901923448;
     return (+$$0);
     break;
    }
    case 3:  {
     $$0 = -2.3561944901923448;
     return (+$$0);
     break;
    }
    case 0:  {
     $$0 = 0.78539816339744828;
     return (+$$0);
     break;
    }
    default: {
     // unreachable;
    }
    }
   } else {
    $trunc55$clear1 = $trunc55 & 3;
    switch ($trunc55$clear1<<24>>24) {
    case 1:  {
     $$0 = -0.0;
     return (+$$0);
     break;
    }
    case 2:  {
     $$0 = 3.1415926535897931;
     return (+$$0);
     break;
    }
    case 3:  {
     $$0 = -3.1415926535897931;
     return (+$$0);
     break;
    }
    case 0:  {
     $$0 = 0.0;
     return (+$$0);
     break;
    }
    default: {
     // unreachable;
    }
    }
   }
  }
 }
 $8 = $0 + $1;
 $$0 = $8;
 return (+$$0);
}
function _exp($0) {
 $0 = +$0;
 var $$0 = 0.0, $$055 = 0.0, $$056 = 0, $$057 = 0.0, $$058 = 0.0, $$1 = 0, $1 = i64(), $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0, $18 = 0.0, $19 = 0.0, $2 = i64(), $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = i64();
 var $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0, $48 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = i64(), $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = i64_bc2i($0);
 $2 = i64_lshr($1,i64_const(32,0));
 $3 = i64_trunc($2);
 $4 = i64_lshr($1,i64_const(63,0));
 $5 = i64_trunc($4);
 $6 = $3 & 2147483647;
 $7 = ($6>>>0)>(1082532650);
 do {
  if ($7) {
   $8 = i64_and($1,i64_const(4294967295,2147483647));
   $9 = i64_ugt($8,i64_const(0,2146435072));
   if ($9) {
    $$0 = $0;
    return (+$$0);
   }
   $10 = $0 > 709.78271289338397;
   if ($10) {
    $11 = $0 * 8.9884656743115795E+307;
    $$0 = $11;
    return (+$$0);
   } else {
    $12 = $0 < -708.39641853226408;
    $13 = $0 < -745.13321910194111;
    $or$cond = $12 & $13;
    if ($or$cond) {
     $$0 = 0.0;
    } else {
     label = 8;
     break;
    }
    return (+$$0);
   }
  } else {
   $14 = ($6>>>0)>(1071001154);
   if ($14) {
    $15 = ($6>>>0)>(1072734897);
    if ($15) {
     label = 8;
     break;
    }
    $21 = $5 ^ 1;
    $22 = (($21) - ($5))|0;
    $$056 = $22;
    label = 10;
    break;
   }
   $28 = ($6>>>0)>(1043333120);
   if ($28) {
    $$055 = $0;$$057 = $0;$$058 = 0.0;$$1 = 0;
   } else {
    $29 = $0 + 1.0;
    $$0 = $29;
    return (+$$0);
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $16 = $0 * 1.4426950408889634;
  $17 = (6640 + ($5<<3)|0);
  $18 = loadd($17);
  $19 = $16 + $18;
  $20 = (~~(($19)));
  $$056 = $20;
  label = 10;
 }
 if ((label|0) == 10) {
  $23 = (+($$056|0));
  $24 = $23 * 0.69314718036912382;
  $25 = $0 - $24;
  $26 = $23 * 1.9082149292705877E-10;
  $27 = $25 - $26;
  $$055 = $27;$$057 = $25;$$058 = $26;$$1 = $$056;
 }
 $30 = $$055 * $$055;
 $31 = $30 * 4.1381367970572385E-8;
 $32 = $31 + -1.6533902205465252E-6;
 $33 = $30 * $32;
 $34 = $33 + 6.6137563214379344E-5;
 $35 = $30 * $34;
 $36 = $35 + -0.0027777777777015593;
 $37 = $30 * $36;
 $38 = $37 + 0.16666666666666602;
 $39 = $30 * $38;
 $40 = $$055 - $39;
 $41 = $$055 * $40;
 $42 = 2.0 - $40;
 $43 = $41 / $42;
 $44 = $43 - $$058;
 $45 = $$057 + $44;
 $46 = $45 + 1.0;
 $47 = ($$1|0)==(0);
 if ($47) {
  $$0 = $46;
  return (+$$0);
 }
 $48 = (+_scalbn($46,$$1));
 $$0 = $48;
 return (+$$0);
}
function _log($0) {
 $0 = +$0;
 var $$0 = 0, $$071 = 0, $$072 = 0.0, $$mask = i64(), $$mask73 = i64(), $$pre = i64(), $$pre$phiZ2D = i64(), $1 = i64(), $10 = 0.0, $11 = 0.0, $12 = i64(), $13 = i64(), $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = i64(), $20 = 0;
 var $21 = 0, $22 = 0, $23 = i64(), $24 = i64(), $25 = i64(), $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0;
 var $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $6 = 0, $7 = 0.0;
 var $8 = 0.0, $9 = 0.0, $or$cond = 0, $or$cond76 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = i64_bc2i($0);
 $2 = i64_lshr($1,i64_const(32,0));
 $3 = i64_trunc($2);
 $4 = ($3>>>0)<(1048576);
 $5 = i64_slt($1,i64_const(0,0));
 $or$cond = $5 | $4;
 do {
  if ($or$cond) {
   $$mask73 = i64_and($1,i64_const(4294967295,2147483647));
   $6 = i64_eq($$mask73,i64_const(0,0));
   if ($6) {
    $7 = $0 * $0;
    $8 = -1.0 / $7;
    $$072 = $8;
    return (+$$072);
   }
   if (!($5)) {
    $11 = $0 * 18014398509481984.0;
    $12 = i64_bc2i($11);
    $13 = i64_lshr($12,i64_const(32,0));
    $14 = i64_trunc($13);
    $$pre = i64_and($12,i64_const(4294967295,0));
    $$0 = -1077;$$071 = $14;$$pre$phiZ2D = $$pre;
    break;
   }
   $9 = $0 - $0;
   $10 = $9 / 0.0;
   $$072 = $10;
   return (+$$072);
  } else {
   $15 = ($3>>>0)>(2146435071);
   if ($15) {
    $$072 = $0;
    return (+$$072);
   }
   $16 = ($3|0)==(1072693248);
   $$mask = i64_and($1,i64_const(4294967295,0));
   $17 = i64_eq($$mask,i64_const(0,0));
   $or$cond76 = $17 & $16;
   if ($or$cond76) {
    $$072 = 0.0;
    return (+$$072);
   } else {
    $$0 = -1023;$$071 = $3;$$pre$phiZ2D = $$mask;
   }
  }
 } while(0);
 $18 = (($$071) + 614242)|0;
 $19 = $18 >>> 20;
 $20 = (($$0) + ($19))|0;
 $21 = $18 & 1048575;
 $22 = (($21) + 1072079006)|0;
 $23 = i64_zext($22>>>0);
 $24 = i64_shl($23,i64_const(32,0));
 $25 = i64_or($24,$$pre$phiZ2D);
 $26 = i64_bc2d($25);
 $27 = $26 + -1.0;
 $28 = $27 * 0.5;
 $29 = $27 * $28;
 $30 = $27 + 2.0;
 $31 = $27 / $30;
 $32 = $31 * $31;
 $33 = $32 * $32;
 $34 = $33 * 0.15313837699209373;
 $35 = $34 + 0.22222198432149784;
 $36 = $33 * $35;
 $37 = $36 + 0.39999999999409419;
 $38 = $33 * $37;
 $39 = $33 * 0.14798198605116586;
 $40 = $39 + 0.1818357216161805;
 $41 = $33 * $40;
 $42 = $41 + 0.28571428743662391;
 $43 = $33 * $42;
 $44 = $43 + 0.66666666666667351;
 $45 = $32 * $44;
 $46 = $38 + $45;
 $47 = (+($20|0));
 $48 = $29 + $46;
 $49 = $31 * $48;
 $50 = $47 * 1.9082149292705877E-10;
 $51 = $50 + $49;
 $52 = $51 - $29;
 $53 = $27 + $52;
 $54 = $47 * 0.69314718036912382;
 $55 = $54 + $53;
 $$072 = $55;
 return (+$$072);
}
function _pow($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $$ = 0.0, $$0 = 0.0, $$0385 = 0.0, $$0386 = 0.0, $$0387 = 0.0, $$0388 = 0.0, $$0390 = 0.0, $$0391 = 0, $$0392 = 0, $$0392399 = 0, $$0392400 = 0, $$0396 = 0, $$12 = 0.0, $$1394 = 0, $$1397 = 0, $$2 = 0.0, $$3 = 0, $$pre = 0.0, $$pre$phi409Z2D = i64(), $$pre408 = i64();
 var $$sink = 0.0, $$sink410 = 0.0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = i64(), $106 = i64(), $107 = 0.0, $108 = 0.0, $109 = 0, $11 = 0, $110 = 0.0, $111 = i64(), $112 = i64(), $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = i64(), $124 = i64(), $125 = i64(), $126 = i64(), $127 = i64(), $128 = 0.0, $129 = 0, $13 = 0, $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0.0;
 var $134 = 0.0, $135 = i64(), $136 = i64(), $137 = 0.0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = i64(), $144 = i64(), $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0.0, $149 = 0.0, $15 = 0, $150 = 0.0, $151 = 0.0;
 var $152 = 0.0, $153 = 0.0, $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0.0, $158 = 0.0, $159 = 0.0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0.0, $163 = 0.0, $164 = 0.0, $165 = 0.0, $166 = 0.0, $167 = 0.0, $168 = 0.0, $169 = 0.0, $17 = 0;
 var $170 = 0.0, $171 = 0.0, $172 = i64(), $173 = i64(), $174 = 0.0, $175 = 0.0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0.0, $181 = 0.0, $182 = 0.0, $183 = i64(), $184 = i64(), $185 = 0.0, $186 = 0.0, $187 = 0.0, $188 = 0.0;
 var $189 = 0.0, $19 = 0, $190 = 0.0, $191 = 0.0, $192 = 0, $193 = 0.0, $194 = 0.0, $195 = 0.0, $196 = 0.0, $197 = 0, $198 = 0.0, $199 = 0.0, $2 = i64(), $20 = 0, $200 = 0.0, $201 = i64(), $202 = i64(), $203 = 0.0, $204 = 0.0, $205 = 0.0;
 var $206 = 0.0, $207 = 0.0, $208 = i64(), $209 = 0.0, $21 = 0, $210 = 0.0, $211 = 0.0, $212 = 0.0, $213 = 0.0, $214 = 0.0, $215 = 0.0, $216 = i64(), $217 = i64(), $218 = 0, $219 = 0, $22 = 0.0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0.0, $225 = 0.0, $226 = 0.0, $227 = 0.0, $228 = 0, $229 = 0.0, $23 = 0, $230 = 0.0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0.0, $237 = 0.0, $238 = 0.0, $239 = 0, $24 = 0, $240 = 0.0, $241 = 0.0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = i64(), $254 = i64(), $255 = 0.0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0.0, $263 = i64(), $264 = 0.0, $265 = 0.0, $266 = 0.0, $267 = 0.0, $268 = 0.0, $269 = 0.0, $27 = 0, $270 = 0.0, $271 = 0.0, $272 = 0.0, $273 = 0.0, $274 = 0.0, $275 = 0.0, $276 = 0.0, $277 = 0.0, $278 = 0.0;
 var $279 = 0.0, $28 = 0, $280 = 0.0, $281 = 0.0, $282 = 0.0, $283 = 0.0, $284 = 0.0, $285 = 0.0, $286 = 0.0, $287 = 0.0, $288 = 0.0, $289 = 0.0, $29 = 0, $290 = 0.0, $291 = 0.0, $292 = 0.0, $293 = i64(), $294 = i64(), $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0.0, $3 = i64(), $30 = 0, $300 = i64(), $301 = i64(), $302 = i64(), $303 = i64(), $304 = 0.0, $305 = 0.0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0, $52 = 0.0, $53 = 0, $54 = 0.0, $55 = 0, $56 = 0, $57 = 0.0;
 var $58 = 0.0, $59 = 0, $6 = i64(), $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0.0, $65 = 0, $66 = 0, $67 = 0, $68 = 0.0, $69 = 0.0, $7 = i64(), $70 = 0, $71 = 0.0, $72 = 0.0, $73 = 0.0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0, $87 = 0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0;
 var $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $not$ = 0, $or$cond = 0, $or$cond14 = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $spec$select = 0.0, $spec$select398 = 0, $spec$select402 = 0, $spec$select403 = 0, $spec$select404 = 0.0, $spec$select405 = 0, $spec$select406 = 0, $spec$select407 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = i64_bc2i($0);
 $3 = i64_lshr($2,i64_const(32,0));
 $4 = i64_trunc($3);
 $5 = i64_trunc($2);
 $6 = i64_bc2i($1);
 $7 = i64_lshr($6,i64_const(32,0));
 $8 = i64_trunc($7);
 $9 = i64_trunc($6);
 $10 = $4 & 2147483647;
 $11 = $8 & 2147483647;
 $12 = $11 | $9;
 $13 = ($12|0)==(0);
 if ($13) {
  $$0 = 1.0;
  return (+$$0);
 }
 $14 = ($4|0)==(1072693248);
 $15 = ($5|0)==(0);
 $or$cond = $15 & $14;
 if ($or$cond) {
  $$0 = 1.0;
  return (+$$0);
 }
 $16 = ($10>>>0)>(2146435072);
 if (!($16)) {
  $17 = ($10|0)==(2146435072);
  $18 = ($5|0)!=(0);
  $or$cond3 = $18 & $17;
  $19 = ($11>>>0)>(2146435072);
  $or$cond5 = $or$cond3 | $19;
  if (!($or$cond5)) {
   $20 = ($11|0)==(2146435072);
   $21 = ($9|0)!=(0);
   $or$cond7 = $21 & $20;
   if (!($or$cond7)) {
    $23 = ($4|0)<(0);
    do {
     if ($23) {
      $24 = ($11>>>0)>(1128267775);
      if ($24) {
       $$0392 = 2;
       label = 14;
      } else {
       $25 = ($11>>>0)>(1072693247);
       if ($25) {
        $26 = $11 >>> 20;
        $27 = ($11>>>0)>(1094713343);
        if ($27) {
         $28 = (1075 - ($26))|0;
         $29 = $9 >>> $28;
         $30 = $29 << $28;
         $31 = ($30|0)==($9|0);
         $32 = $29 & 1;
         $33 = (2 - ($32))|0;
         $spec$select402 = $31 ? $33 : 0;
         $$0392 = $spec$select402;
         label = 14;
         break;
        }
        $34 = ($9|0)==(0);
        if ($34) {
         $35 = (1043 - ($26))|0;
         $36 = $11 >>> $35;
         $37 = $36 << $35;
         $38 = ($37|0)==($11|0);
         $39 = $36 & 1;
         $40 = (2 - ($39))|0;
         $spec$select403 = $38 ? $40 : 0;
         $$0392400 = $spec$select403;
         label = 15;
        } else {
         $$0392399 = 0;
        }
       } else {
        $$0392 = 0;
        label = 14;
       }
      }
     } else {
      $$0392 = 0;
      label = 14;
     }
    } while(0);
    if ((label|0) == 14) {
     $41 = ($9|0)==(0);
     if ($41) {
      $$0392400 = $$0392;
      label = 15;
     } else {
      $$0392399 = $$0392;
     }
    }
    if ((label|0) == 15) {
     if ($20) {
      $42 = (($10) + -1072693248)|0;
      $43 = $42 | $5;
      $44 = ($43|0)==(0);
      if ($44) {
       $$0 = 1.0;
       return (+$$0);
      }
      $45 = ($10>>>0)>(1072693247);
      $46 = ($8|0)>(-1);
      if ($45) {
       $47 = $46 ? $1 : 0.0;
       $$0 = $47;
       return (+$$0);
      } else {
       $48 = - $1;
       $49 = $46 ? 0.0 : $48;
       $$0 = $49;
       return (+$$0);
      }
     }
     $50 = ($11|0)==(1072693248);
     if ($50) {
      $51 = ($8|0)>(-1);
      $52 = 1.0 / $0;
      $spec$select404 = $51 ? $0 : $52;
      return (+$spec$select404);
     }
     $53 = ($8|0)==(1073741824);
     if ($53) {
      $54 = $0 * $0;
      $$0 = $54;
      return (+$$0);
     }
     $55 = ($8|0)==(1071644672);
     $56 = ($4|0)>(-1);
     $or$cond14 = $56 & $55;
     if ($or$cond14) {
      $57 = (+Math_sqrt((+$0)));
      $$0 = $57;
      return (+$$0);
     } else {
      $$0392399 = $$0392400;
     }
    }
    $58 = (+Math_abs((+$0)));
    if ($15) {
     $59 = ($10|0)==(0);
     $60 = $10 | 1073741824;
     $61 = ($60|0)==(2146435072);
     $62 = $59 | $61;
     if ($62) {
      $63 = ($8|0)<(0);
      $64 = 1.0 / $58;
      $$0385 = $63 ? $64 : $58;
      if (!($23)) {
       $$0 = $$0385;
       return (+$$0);
      }
      $65 = (($10) + -1072693248)|0;
      $66 = $$0392399 | $65;
      $67 = ($66|0)==(0);
      if (!($67)) {
       $70 = ($$0392399|0)==(1);
       $71 = - $$0385;
       $spec$select = $70 ? $71 : $$0385;
       return (+$spec$select);
      }
      $68 = $$0385 - $$0385;
      $69 = $68 / $68;
      $$0 = $69;
      return (+$$0);
     }
    }
    L55: do {
     if ($23) {
      switch ($$0392399|0) {
      case 0:  {
       break;
      }
      case 1:  {
       $$0390 = -1.0;
       break L55;
       break;
      }
      default: {
       $$0390 = 1.0;
       break L55;
      }
      }
      $72 = $0 - $0;
      $73 = $72 / $72;
      $$0 = $73;
      return (+$$0);
     } else {
      $$0390 = 1.0;
     }
    } while(0);
    $74 = ($11>>>0)>(1105199104);
    do {
     if ($74) {
      $75 = ($11>>>0)>(1139802112);
      if ($75) {
       $76 = ($10>>>0)<(1072693248);
       if ($76) {
        $77 = ($8|0)<(0);
        $$ = $77 ? inf : 0.0;
        $$0 = $$;
        return (+$$0);
       } else {
        $78 = ($8|0)>(0);
        $$12 = $78 ? inf : 0.0;
        $$0 = $$12;
        return (+$$0);
       }
      }
      $79 = ($10>>>0)<(1072693247);
      if ($79) {
       $80 = ($8|0)<(0);
       $81 = $$0390 * 1.0000000000000001E+300;
       $82 = $81 * 1.0000000000000001E+300;
       $83 = $$0390 * 1.0E-300;
       $84 = $83 * 1.0E-300;
       $85 = $80 ? $82 : $84;
       $$0 = $85;
       return (+$$0);
      }
      $86 = ($10>>>0)>(1072693248);
      if (!($86)) {
       $93 = $58 + -1.0;
       $94 = $93 * $93;
       $95 = $93 * 0.25;
       $96 = 0.33333333333333331 - $95;
       $97 = $93 * $96;
       $98 = 0.5 - $97;
       $99 = $94 * $98;
       $100 = $93 * 1.4426950216293335;
       $101 = $93 * 1.9259629911266175E-8;
       $102 = $99 * 1.4426950408889634;
       $103 = $101 - $102;
       $104 = $100 + $103;
       $105 = i64_bc2i($104);
       $106 = i64_and($105,i64_const(0,4294967295));
       $107 = i64_bc2d($106);
       $108 = $107 - $100;
       $$0388 = $107;$$sink = $103;$$sink410 = $108;
       break;
      }
      $87 = ($8|0)>(0);
      $88 = $$0390 * 1.0000000000000001E+300;
      $89 = $88 * 1.0000000000000001E+300;
      $90 = $$0390 * 1.0E-300;
      $91 = $90 * 1.0E-300;
      $92 = $87 ? $89 : $91;
      $$0 = $92;
      return (+$$0);
     } else {
      $109 = ($10>>>0)<(1048576);
      $110 = $58 * 9007199254740992.0;
      $111 = i64_bc2i($110);
      $112 = i64_lshr($111,i64_const(32,0));
      $113 = i64_trunc($112);
      $$0396 = $109 ? $113 : $10;
      $$0386 = $109 ? $110 : $58;
      $114 = $$0396 >> 20;
      $115 = $109 ? -1076 : -1023;
      $116 = (($115) + ($114))|0;
      $117 = $$0396 & 1048575;
      $118 = $117 | 1072693248;
      $119 = ($117>>>0)<(235663);
      if ($119) {
       $$0391 = 0;$$1394 = $116;$$1397 = $118;
      } else {
       $120 = ($117>>>0)<(767610);
       $121 = (($118) + -1048576)|0;
       $spec$select405 = $120 ? $118 : $121;
       $not$ = $120 ^ 1;
       $122 = $not$&1;
       $spec$select406 = (($116) + ($122))|0;
       $spec$select407 = $120&1;
       $$0391 = $spec$select407;$$1394 = $spec$select406;$$1397 = $spec$select405;
      }
      $123 = i64_bc2i($$0386);
      $124 = i64_and($123,i64_const(4294967295,0));
      $125 = i64_zext($$1397>>>0);
      $126 = i64_shl($125,i64_const(32,0));
      $127 = i64_or($126,$124);
      $128 = i64_bc2d($127);
      $129 = (6656 + ($$0391<<3)|0);
      $130 = loadd($129);
      $131 = $128 - $130;
      $132 = $130 + $128;
      $133 = 1.0 / $132;
      $134 = $131 * $133;
      $135 = i64_bc2i($134);
      $136 = i64_and($135,i64_const(0,4294967295));
      $137 = i64_bc2d($136);
      $138 = $$1397 >> 1;
      $139 = $138 | 536870912;
      $140 = (($139) + 524288)|0;
      $141 = $$0391 << 18;
      $142 = (($140) + ($141))|0;
      $143 = i64_zext($142>>>0);
      $144 = i64_shl($143,i64_const(32,0));
      $145 = i64_bc2d($144);
      $146 = $145 - $130;
      $147 = $128 - $146;
      $148 = $145 * $137;
      $149 = $131 - $148;
      $150 = $147 * $137;
      $151 = $149 - $150;
      $152 = $133 * $151;
      $153 = $134 * $134;
      $154 = $153 * $153;
      $155 = $153 * 0.20697501780033842;
      $156 = $155 + 0.23066074577556175;
      $157 = $153 * $156;
      $158 = $157 + 0.27272812380853401;
      $159 = $153 * $158;
      $160 = $159 + 0.33333332981837743;
      $161 = $153 * $160;
      $162 = $161 + 0.42857142857855018;
      $163 = $153 * $162;
      $164 = $163 + 0.59999999999999465;
      $165 = $154 * $164;
      $166 = $134 + $137;
      $167 = $166 * $152;
      $168 = $167 + $165;
      $169 = $137 * $137;
      $170 = $169 + 3.0;
      $171 = $170 + $168;
      $172 = i64_bc2i($171);
      $173 = i64_and($172,i64_const(0,4294967295));
      $174 = i64_bc2d($173);
      $175 = $174 + -3.0;
      $176 = $175 - $169;
      $177 = $168 - $176;
      $178 = $137 * $174;
      $179 = $152 * $174;
      $180 = $134 * $177;
      $181 = $179 + $180;
      $182 = $178 + $181;
      $183 = i64_bc2i($182);
      $184 = i64_and($183,i64_const(0,4294967295));
      $185 = i64_bc2d($184);
      $186 = $185 - $178;
      $187 = $181 - $186;
      $188 = $185 * 0.96179670095443726;
      $189 = $185 * 7.0284616509527583E-9;
      $190 = $187 * 0.96179669392597555;
      $191 = $190 - $189;
      $192 = (6672 + ($$0391<<3)|0);
      $193 = loadd($192);
      $194 = $193 + $191;
      $195 = (+($$1394|0));
      $196 = $188 + $194;
      $197 = (6688 + ($$0391<<3)|0);
      $198 = loadd($197);
      $199 = $198 + $196;
      $200 = $199 + $195;
      $201 = i64_bc2i($200);
      $202 = i64_and($201,i64_const(0,4294967295));
      $203 = i64_bc2d($202);
      $204 = $203 - $195;
      $205 = $204 - $198;
      $206 = $205 - $188;
      $$0388 = $203;$$sink = $194;$$sink410 = $206;
     }
    } while(0);
    $207 = $$sink - $$sink410;
    $208 = i64_and($6,i64_const(0,4294967295));
    $209 = i64_bc2d($208);
    $210 = $1 - $209;
    $211 = $210 * $$0388;
    $212 = $207 * $1;
    $213 = $212 + $211;
    $214 = $$0388 * $209;
    $215 = $214 + $213;
    $216 = i64_bc2i($215);
    $217 = i64_lshr($216,i64_const(32,0));
    $218 = i64_trunc($217);
    $219 = i64_trunc($216);
    $220 = ($218|0)>(1083179007);
    if ($220) {
     $221 = (($218) + -1083179008)|0;
     $222 = $221 | $219;
     $223 = ($222|0)==(0);
     if (!($223)) {
      $224 = $$0390 * 1.0000000000000001E+300;
      $225 = $224 * 1.0000000000000001E+300;
      $$0 = $225;
      return (+$$0);
     }
     $226 = $213 + 8.0085662595372941E-17;
     $227 = $215 - $214;
     $228 = $226 > $227;
     if ($228) {
      $229 = $$0390 * 1.0000000000000001E+300;
      $230 = $229 * 1.0000000000000001E+300;
      $$0 = $230;
      return (+$$0);
     }
    } else {
     $231 = $218 & 2147482624;
     $232 = ($231>>>0)>(1083231231);
     if ($232) {
      $233 = (($218) + 1064252416)|0;
      $234 = $233 | $219;
      $235 = ($234|0)==(0);
      if (!($235)) {
       $236 = $$0390 * 1.0E-300;
       $237 = $236 * 1.0E-300;
       $$0 = $237;
       return (+$$0);
      }
      $238 = $215 - $214;
      $239 = !($213 <= $238);
      if (!($239)) {
       $240 = $$0390 * 1.0E-300;
       $241 = $240 * 1.0E-300;
       $$0 = $241;
       return (+$$0);
      }
     }
    }
    $242 = $218 & 2147483647;
    $243 = ($242>>>0)>(1071644672);
    if ($243) {
     $244 = $242 >>> 20;
     $245 = (($244) + -1022)|0;
     $246 = 1048576 >>> $245;
     $247 = (($246) + ($218))|0;
     $248 = $247 >>> 20;
     $249 = $248 & 2047;
     $250 = (($249) + -1023)|0;
     $251 = -1048576 >> $250;
     $252 = $251 & $247;
     $253 = i64_zext($252>>>0);
     $254 = i64_shl($253,i64_const(32,0));
     $255 = i64_bc2d($254);
     $256 = $247 & 1048575;
     $257 = $256 | 1048576;
     $258 = (1043 - ($249))|0;
     $259 = $257 >>> $258;
     $260 = ($218|0)<(0);
     $261 = (0 - ($259))|0;
     $spec$select398 = $260 ? $261 : $259;
     $262 = $214 - $255;
     $$pre = $213 + $262;
     $$pre408 = i64_bc2i($$pre);
     $$0387 = $262;$$3 = $spec$select398;$$pre$phi409Z2D = $$pre408;
    } else {
     $$0387 = $214;$$3 = 0;$$pre$phi409Z2D = $216;
    }
    $263 = i64_and($$pre$phi409Z2D,i64_const(0,4294967295));
    $264 = i64_bc2d($263);
    $265 = $264 * 0.69314718246459961;
    $266 = $264 - $$0387;
    $267 = $213 - $266;
    $268 = $267 * 0.69314718055994529;
    $269 = $264 * 1.904654299957768E-9;
    $270 = $268 - $269;
    $271 = $265 + $270;
    $272 = $271 - $265;
    $273 = $270 - $272;
    $274 = $271 * $271;
    $275 = $274 * 4.1381367970572385E-8;
    $276 = $275 + -1.6533902205465252E-6;
    $277 = $274 * $276;
    $278 = $277 + 6.6137563214379344E-5;
    $279 = $274 * $278;
    $280 = $279 + -0.0027777777777015593;
    $281 = $274 * $280;
    $282 = $281 + 0.16666666666666602;
    $283 = $274 * $282;
    $284 = $271 - $283;
    $285 = $271 * $284;
    $286 = $284 + -2.0;
    $287 = $285 / $286;
    $288 = $271 * $273;
    $289 = $273 + $288;
    $290 = $287 - $289;
    $291 = $290 - $271;
    $292 = 1.0 - $291;
    $293 = i64_bc2i($292);
    $294 = i64_lshr($293,i64_const(32,0));
    $295 = i64_trunc($294);
    $296 = $$3 << 20;
    $297 = (($296) + ($295))|0;
    $298 = ($297|0)<(1048576);
    if ($298) {
     $299 = (+_scalbn($292,$$3));
     $$2 = $299;
    } else {
     $300 = i64_and($293,i64_const(4294967295,0));
     $301 = i64_zext($297>>>0);
     $302 = i64_shl($301,i64_const(32,0));
     $303 = i64_or($302,$300);
     $304 = i64_bc2d($303);
     $$2 = $304;
    }
    $305 = $$0390 * $$2;
    $$0 = $305;
    return (+$$0);
   }
  }
 }
 $22 = $0 + $1;
 $$0 = $22;
 return (+$$0);
}
function ___emscripten_environ_constructor() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___buildEnvironment((19020|0));
 return;
}
function __get_tzname() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (19004|0);
}
function __get_daylight() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (19012|0);
}
function __get_timezone() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (19016|0);
}
function __get_environ() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (19020|0);
}
function _llvm_bswap_i32(x) {
    x = x|0;
    return (((x&0xff)<<24) | (((x>>8)&0xff)<<16) | (((x>>16)&0xff)<<8) | (x>>>24))|0;
}
function _saveSetjmp(env, label, table, size) {
    // Not particularly fast: slow table lookup of setjmpId to label. But setjmp
    // prevents relooping anyhow, so slowness is to be expected. And typical case
    // is 1 setjmp per invocation, or less.
    env = env|0;
    label = label|0;
    table = table|0;
    size = size|0;
    var i = 0;
    setjmpId = (setjmpId+1)|0;
    HEAP32[((env)>>2)]=setjmpId;
    while ((i|0) < (size|0)) {
      if (((HEAP32[(((table)+((i<<3)))>>2)])|0) == 0) {
        HEAP32[(((table)+((i<<3)))>>2)]=setjmpId;
        HEAP32[(((table)+((i<<3)+4))>>2)]=label;
        // prepare next slot
        HEAP32[(((table)+((i<<3)+8))>>2)]=0;
        setTempRet0((size) | 0);
        return table | 0;
      }
      i = i+1|0;
    }
    // grow the table
    size = (size*2)|0;
    table = _realloc(table|0, 8*(size+1|0)|0) | 0;
    table = _saveSetjmp(env|0, label|0, table|0, size|0) | 0;
    setTempRet0((size) | 0);
    return table | 0;
}
function _testSetjmp(id, table, size) {
    id = id|0;
    table = table|0;
    size = size|0;
    var i = 0, curr = 0;
    while ((i|0) < (size|0)) {
      curr = ((HEAP32[(((table)+((i<<3)))>>2)])|0);
      if ((curr|0) == 0) break;
      if ((curr|0) == (id|0)) {
        return ((HEAP32[(((table)+((i<<3)+4))>>2)])|0);
      }
      i = i+1|0;
    }
    return 0;
}
function _setThrew(threw, value) {
    threw = threw|0;
    value = value|0;
    if ((__THREW__|0) == 0) {
      __THREW__ = threw;
      threwValue = value;
    }
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    var aligned_dest_end = 0;
    var block_aligned_dest_end = 0;
    var dest_end = 0;
    // Test against a benchmarked cutoff limit for when HEAPU8.set() becomes faster to use.
    if ((num|0) >= 8192) {
      _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
      return dest|0;
    }

    ret = dest|0;
    dest_end = (dest + num)|0;
    if ((dest&3) == (src&3)) {
      // The initial unaligned < 4-byte front.
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      aligned_dest_end = (dest_end & -4)|0;
      block_aligned_dest_end = (aligned_dest_end - 64)|0;
      while ((dest|0) <= (block_aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        HEAP32[(((dest)+(4))>>2)]=((HEAP32[(((src)+(4))>>2)])|0);
        HEAP32[(((dest)+(8))>>2)]=((HEAP32[(((src)+(8))>>2)])|0);
        HEAP32[(((dest)+(12))>>2)]=((HEAP32[(((src)+(12))>>2)])|0);
        HEAP32[(((dest)+(16))>>2)]=((HEAP32[(((src)+(16))>>2)])|0);
        HEAP32[(((dest)+(20))>>2)]=((HEAP32[(((src)+(20))>>2)])|0);
        HEAP32[(((dest)+(24))>>2)]=((HEAP32[(((src)+(24))>>2)])|0);
        HEAP32[(((dest)+(28))>>2)]=((HEAP32[(((src)+(28))>>2)])|0);
        HEAP32[(((dest)+(32))>>2)]=((HEAP32[(((src)+(32))>>2)])|0);
        HEAP32[(((dest)+(36))>>2)]=((HEAP32[(((src)+(36))>>2)])|0);
        HEAP32[(((dest)+(40))>>2)]=((HEAP32[(((src)+(40))>>2)])|0);
        HEAP32[(((dest)+(44))>>2)]=((HEAP32[(((src)+(44))>>2)])|0);
        HEAP32[(((dest)+(48))>>2)]=((HEAP32[(((src)+(48))>>2)])|0);
        HEAP32[(((dest)+(52))>>2)]=((HEAP32[(((src)+(52))>>2)])|0);
        HEAP32[(((dest)+(56))>>2)]=((HEAP32[(((src)+(56))>>2)])|0);
        HEAP32[(((dest)+(60))>>2)]=((HEAP32[(((src)+(60))>>2)])|0);
        dest = (dest+64)|0;
        src = (src+64)|0;
      }
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    } else {
      // In the unaligned copy case, unroll a bit as well.
      aligned_dest_end = (dest_end - 4)|0;
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        HEAP8[(((dest)+(1))>>0)]=((HEAP8[(((src)+(1))>>0)])|0);
        HEAP8[(((dest)+(2))>>0)]=((HEAP8[(((src)+(2))>>0)])|0);
        HEAP8[(((dest)+(3))>>0)]=((HEAP8[(((src)+(3))>>0)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    }
    // The remaining unaligned < 4 byte tail.
    while ((dest|0) < (dest_end|0)) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
    }
    return ret|0;
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var end = 0, aligned_end = 0, block_aligned_end = 0, value4 = 0;
    end = (ptr + num)|0;

    value = value & 0xff;
    if ((num|0) >= 67 /* 64 bytes for an unrolled loop + 3 bytes for unaligned head*/) {
      while ((ptr&3) != 0) {
        HEAP8[((ptr)>>0)]=value;
        ptr = (ptr+1)|0;
      }

      aligned_end = (end & -4)|0;
      value4 = value | (value << 8) | (value << 16) | (value << 24);

      block_aligned_end = (aligned_end - 64)|0;

      while((ptr|0) <= (block_aligned_end|0)) {
        HEAP32[((ptr)>>2)]=value4;
        HEAP32[(((ptr)+(4))>>2)]=value4;
        HEAP32[(((ptr)+(8))>>2)]=value4;
        HEAP32[(((ptr)+(12))>>2)]=value4;
        HEAP32[(((ptr)+(16))>>2)]=value4;
        HEAP32[(((ptr)+(20))>>2)]=value4;
        HEAP32[(((ptr)+(24))>>2)]=value4;
        HEAP32[(((ptr)+(28))>>2)]=value4;
        HEAP32[(((ptr)+(32))>>2)]=value4;
        HEAP32[(((ptr)+(36))>>2)]=value4;
        HEAP32[(((ptr)+(40))>>2)]=value4;
        HEAP32[(((ptr)+(44))>>2)]=value4;
        HEAP32[(((ptr)+(48))>>2)]=value4;
        HEAP32[(((ptr)+(52))>>2)]=value4;
        HEAP32[(((ptr)+(56))>>2)]=value4;
        HEAP32[(((ptr)+(60))>>2)]=value4;
        ptr = (ptr + 64)|0;
      }

      while ((ptr|0) < (aligned_end|0) ) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    // The remaining bytes.
    while ((ptr|0) < (end|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (end-num)|0;
}
function _sbrk(increment) {
    increment = increment|0;
    var oldDynamicTop = 0;
    var oldDynamicTopOnChange = 0;
    var newDynamicTop = 0;
    var totalMemory = 0;
    totalMemory = _emscripten_get_heap_size()|0;

      oldDynamicTop = HEAP32[DYNAMICTOP_PTR>>2]|0;
      newDynamicTop = oldDynamicTop + increment | 0;

      if (((increment|0) > 0 & (newDynamicTop|0) < (oldDynamicTop|0)) // Detect and fail if we would wrap around signed 32-bit int.
        | (newDynamicTop|0) < 0) { // Also underflow, sbrk() should be able to be used to subtract.
        abortOnCannotGrowMemory(newDynamicTop|0)|0;
        ___setErrNo(12);
        return -1;
      }

      if ((newDynamicTop|0) > (totalMemory|0)) {
        if (_emscripten_resize_heap(newDynamicTop|0)|0) {
          // We resized the heap. Start another loop iteration if we need to.
        } else {
          // We failed to resize the heap.
          ___setErrNo(12);
          return -1;
        }
      }

      HEAP32[DYNAMICTOP_PTR>>2] = newDynamicTop|0;

    return oldDynamicTop|0;
}

  
function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&255](a1|0)|0;
}


function dynCall_iidiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=+a2; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  return FUNCTION_TABLE_iidiiii[index&1](a1|0,+a2,a3|0,a4|0,a5|0,a6|0)|0;
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&1](a1|0,a2|0)|0;
}


function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&15](a1|0,a2|0,a3|0)|0;
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&3](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_jiji(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=i64(a2); a3=a3|0;
  return i64(FUNCTION_TABLE_jiji[index&1](a1|0,i64(a2),a3|0));
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&15](a1|0,a2|0);
}

function b0(p0) {
 p0 = p0|0; abort(0);return 0;
}
function b1(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = +p1;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; abort(1);return 0;
}
function b2(p0,p1) {
 p0 = p0|0;p1 = p1|0; abort(2);return 0;
}
function b3(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; abort(3);return 0;
}
function b4(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; abort(4);return 0;
}
function b5(p0,p1,p2) {
 p0 = p0|0;p1 = i64(p1);p2 = p2|0; abort(5);return i64(0);
}
function b6(p0,p1) {
 p0 = p0|0;p1 = p1|0; abort(6);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_ii = [b0,_luaB_assert,_luaB_collectgarbage,_luaB_dofile,_luaB_error,_luaB_getmetatable,_luaB_ipairs,_luaB_loadfile,_luaB_load,_luaB_next,_luaB_pairs,_luaB_pcall,_luaB_print,_luaB_rawequal,_luaB_rawlen,_luaB_rawget,_luaB_rawset,_luaB_select,_luaB_setmetatable,_luaB_tonumber,_luaB_tostring,_luaB_type,_luaB_xpcall,_b_arshift,_b_and,_b_not,_b_or,_b_xor,_b_test
,_b_extract,_b_lrot,_b_lshift,_b_replace,_b_rrot,_b_rshift,_luaB_cocreate,_luaB_coresume,_luaB_corunning,_luaB_costatus,_luaB_cowrap,_luaB_yield,_luaB_yieldable,_db_debug,_db_getuservalue,_db_gethook,_db_getinfo,_db_getlocal,_db_getregistry,_db_getmetatable,_db_getupvalue,_db_upvaluejoin,_db_upvalueid,_db_setuservalue,_db_sethook,_db_setlocal,_db_setmetatable,_db_setupvalue,_db_traceback,_io_close
,_io_flush,_io_input,_io_lines,_io_open,_io_output,_io_popen,_io_read,_io_tmpfile,_io_type,_io_write,_f_close,_f_flush,_f_lines,_f_read,_f_seek,_f_setvbuf,_f_write,_f_gc,_f_tostring,_math_abs,_math_acos,_math_asin,_math_atan,_math_ceil,_math_cos,_math_deg,_math_exp,_math_toint,_math_floor,_math_fmod
,_math_ult,_math_log,_math_max,_math_min,_math_modf,_math_rad,_math_random,_math_randomseed,_math_sin,_math_sqrt,_math_tan,_math_type,_math_cosh,_math_sinh,_math_tanh,_math_pow,_math_frexp,_math_ldexp,_math_log10,_os_clock,_os_date,_os_difftime,_os_execute,_os_exit,_os_getenv,_os_remove,_os_rename,_os_setlocale,_os_time,_os_tmpname
,_str_byte,_str_char,_str_dump,_str_find,_str_format,_gmatch,_str_gsub,_str_len,_str_lower,_str_match,_str_rep,_str_reverse,_str_sub,_str_upper,_str_pack,_str_packsize,_str_unpack,_tconcat,_tinsert,_pack,_unpack,_tremove,_tmove,_sort,_byteoffset,_codepoint,_utfchar,_utflen,_iter_codes,_ll_loadlib
,_ll_searchpath,_ll_require,___stdio_close,_boxgc,_panic,_luaopen_base,_luaopen_package,_luaopen_coroutine,_luaopen_table,_luaopen_io,_luaopen_os,_luaopen_string,_luaopen_math,_luaopen_utf8,_luaopen_debug,_luaopen_bit32,_ipairsaux,_luaB_auxwrap,_io_noclose,_io_readline,_io_fclose,_io_pclose,_gmatch_aux,_iter_aux,_gctm,_searcher_preload,_searcher_Lua,_searcher_C,_searcher_Croot,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0];
var FUNCTION_TABLE_iidiiii = [b1,_fmt_fp];
var FUNCTION_TABLE_iii = [b2,_lua_newstate];
var FUNCTION_TABLE_iiii = [b3,___stdio_write,___stdio_read,___stdout_write,_sn_write,_getF,_getS,_dofilecont,_generic_reader,_finishpcall,b3,b3,b3,b3,b3,b3];
var FUNCTION_TABLE_iiiii = [b4,_LUA_WRITER,_l_alloc,_writer];
var FUNCTION_TABLE_jiji = [b5,___stdio_seek];
var FUNCTION_TABLE_vii = [b6,_growstack,_f_call,_resume,_unroll,_f_parser,_dothecall,_f_luaopen,_auxsetnode,_hookf,_pop_arg_long_double,b6,b6,b6,b6,b6];

  return { _LUA_COMPILE: _LUA_COMPILE, _LUA_DUMP: _LUA_DUMP, _LUA_INIT: _LUA_INIT, ___emscripten_environ_constructor: ___emscripten_environ_constructor, ___errno_location: ___errno_location, __get_daylight: __get_daylight, __get_environ: __get_environ, __get_timezone: __get_timezone, __get_tzname: __get_tzname, _free: _free, _hello: _hello, _llvm_bswap_i32: _llvm_bswap_i32, _malloc: _malloc, _memcpy: _memcpy, _memset: _memset, _realloc: _realloc, _saveSetjmp: _saveSetjmp, _sbrk: _sbrk, _setThrew: _setThrew, _testSetjmp: _testSetjmp, dynCall_ii: dynCall_ii, dynCall_iidiiii: dynCall_iidiiii, dynCall_iii: dynCall_iii, dynCall_iiii: dynCall_iiii, dynCall_iiiii: dynCall_iiiii, dynCall_jiji: dynCall_jiji, dynCall_vii: dynCall_vii, establishStackSpace: establishStackSpace, stackAlloc: stackAlloc, stackRestore: stackRestore, stackSave: stackSave };
})
// EMSCRIPTEN_END_ASM
(asmGlobalArg, asmLibraryArg, buffer);

Module["asm"] = asm;
var _LUA_COMPILE = Module["_LUA_COMPILE"] = function() {  return Module["asm"]["_LUA_COMPILE"].apply(null, arguments) };
var _LUA_DUMP = Module["_LUA_DUMP"] = function() {  return Module["asm"]["_LUA_DUMP"].apply(null, arguments) };
var _LUA_INIT = Module["_LUA_INIT"] = function() {  return Module["asm"]["_LUA_INIT"].apply(null, arguments) };
var ___emscripten_environ_constructor = Module["___emscripten_environ_constructor"] = function() {  return Module["asm"]["___emscripten_environ_constructor"].apply(null, arguments) };
var ___errno_location = Module["___errno_location"] = function() {  return Module["asm"]["___errno_location"].apply(null, arguments) };
var __get_daylight = Module["__get_daylight"] = function() {  return Module["asm"]["__get_daylight"].apply(null, arguments) };
var __get_environ = Module["__get_environ"] = function() {  return Module["asm"]["__get_environ"].apply(null, arguments) };
var __get_timezone = Module["__get_timezone"] = function() {  return Module["asm"]["__get_timezone"].apply(null, arguments) };
var __get_tzname = Module["__get_tzname"] = function() {  return Module["asm"]["__get_tzname"].apply(null, arguments) };
var _free = Module["_free"] = function() {  return Module["asm"]["_free"].apply(null, arguments) };
var _hello = Module["_hello"] = function() {  return Module["asm"]["_hello"].apply(null, arguments) };
var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = function() {  return Module["asm"]["_llvm_bswap_i32"].apply(null, arguments) };
var _malloc = Module["_malloc"] = function() {  return Module["asm"]["_malloc"].apply(null, arguments) };
var _memcpy = Module["_memcpy"] = function() {  return Module["asm"]["_memcpy"].apply(null, arguments) };
var _memset = Module["_memset"] = function() {  return Module["asm"]["_memset"].apply(null, arguments) };
var _realloc = Module["_realloc"] = function() {  return Module["asm"]["_realloc"].apply(null, arguments) };
var _saveSetjmp = Module["_saveSetjmp"] = function() {  return Module["asm"]["_saveSetjmp"].apply(null, arguments) };
var _sbrk = Module["_sbrk"] = function() {  return Module["asm"]["_sbrk"].apply(null, arguments) };
var _setThrew = Module["_setThrew"] = function() {  return Module["asm"]["_setThrew"].apply(null, arguments) };
var _testSetjmp = Module["_testSetjmp"] = function() {  return Module["asm"]["_testSetjmp"].apply(null, arguments) };
var establishStackSpace = Module["establishStackSpace"] = function() {  return Module["asm"]["establishStackSpace"].apply(null, arguments) };
var stackAlloc = Module["stackAlloc"] = function() {  return Module["asm"]["stackAlloc"].apply(null, arguments) };
var stackRestore = Module["stackRestore"] = function() {  return Module["asm"]["stackRestore"].apply(null, arguments) };
var stackSave = Module["stackSave"] = function() {  return Module["asm"]["stackSave"].apply(null, arguments) };
var dynCall_ii = Module["dynCall_ii"] = function() {  return Module["asm"]["dynCall_ii"].apply(null, arguments) };
var dynCall_iidiiii = Module["dynCall_iidiiii"] = function() {  return Module["asm"]["dynCall_iidiiii"].apply(null, arguments) };
var dynCall_iii = Module["dynCall_iii"] = function() {  return Module["asm"]["dynCall_iii"].apply(null, arguments) };
var dynCall_iiii = Module["dynCall_iiii"] = function() {  return Module["asm"]["dynCall_iiii"].apply(null, arguments) };
var dynCall_iiiii = Module["dynCall_iiiii"] = function() {  return Module["asm"]["dynCall_iiiii"].apply(null, arguments) };
var dynCall_jiji = Module["dynCall_jiji"] = function() {  return Module["asm"]["dynCall_jiji"].apply(null, arguments) };
var dynCall_vii = Module["dynCall_vii"] = function() {  return Module["asm"]["dynCall_vii"].apply(null, arguments) };
;



// === Auto-generated postamble setup entry stuff ===

Module['asm'] = asm;












































































/**
 * @constructor
 * @extends {Error}
 * @this {ExitStatus}
 */
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}





/** @type {function(Array=)} */
function run(args) {
  args = args || Module['arguments'];

  if (runDependencies > 0) {
    return;
  }


  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return;

    ensureInitRuntime();

    preMain();

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();


    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = run;


function exit(status, implicit) {

  // if this is just main exit-ing implicitly, and the status is 0, then we
  // don't need to do anything here and can just leave. if the status is
  // non-zero, though, then we need to report it.
  // (we may have warned about this earlier, if a situation justifies doing so)
  if (implicit && Module['noExitRuntime'] && status === 0) {
    return;
  }

  if (Module['noExitRuntime']) {
  } else {

    ABORT = true;
    EXITSTATUS = status;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  Module['quit'](status, new ExitStatus(status));
}

var abortDecorators = [];

function abort(what) {
  if (Module['onAbort']) {
    Module['onAbort'](what);
  }

  if (what !== undefined) {
    out(what);
    err(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  throw 'abort(' + what + '). Build with -s ASSERTIONS=1 for more info.';
}
Module['abort'] = abort;

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}


  Module["noExitRuntime"] = true;

run();





// {{MODULE_ADDITIONS}}



